var og=Object.defineProperty;var ag=(a,t,e)=>t in a?og(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var Ye=(a,t,e)=>ag(a,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();function ba(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a}function Il(a){if(Object.prototype.hasOwnProperty.call(a,"__esModule"))return a;var t=a.default;if(typeof t=="function"){var e=function n(){return this instanceof n?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(a).forEach(function(n){var i=Object.getOwnPropertyDescriptor(a,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return a[n]}})}),e}var nr={},_o={},lu;function sg(){if(lu)return _o;lu=1,_o.byteLength=r,_o.toByteArray=l,_o.fromByteArray=g;for(var a=[],t=[],e=typeof Uint8Array<"u"?Uint8Array:Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,o=n.length;i<o;++i)a[i]=n[i],t[n.charCodeAt(i)]=i;t[45]=62,t[95]=63;function s(L){var S=L.length;if(S%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var k=L.indexOf("=");k===-1&&(k=S);var E=k===S?0:4-k%4;return[k,E]}function r(L){var S=s(L),k=S[0],E=S[1];return(k+E)*3/4-E}function u(L,S,k){return(S+k)*3/4-k}function l(L){var S,k=s(L),E=k[0],G=k[1],C=new e(u(L,E,G)),N=0,J=G>0?E-4:E,j;for(j=0;j<J;j+=4)S=t[L.charCodeAt(j)]<<18|t[L.charCodeAt(j+1)]<<12|t[L.charCodeAt(j+2)]<<6|t[L.charCodeAt(j+3)],C[N++]=S>>16&255,C[N++]=S>>8&255,C[N++]=S&255;return G===2&&(S=t[L.charCodeAt(j)]<<2|t[L.charCodeAt(j+1)]>>4,C[N++]=S&255),G===1&&(S=t[L.charCodeAt(j)]<<10|t[L.charCodeAt(j+1)]<<4|t[L.charCodeAt(j+2)]>>2,C[N++]=S>>8&255,C[N++]=S&255),C}function c(L){return a[L>>18&63]+a[L>>12&63]+a[L>>6&63]+a[L&63]}function f(L,S,k){for(var E,G=[],C=S;C<k;C+=3)E=(L[C]<<16&16711680)+(L[C+1]<<8&65280)+(L[C+2]&255),G.push(c(E));return G.join("")}function g(L){for(var S,k=L.length,E=k%3,G=[],C=16383,N=0,J=k-E;N<J;N+=C)G.push(f(L,N,N+C>J?J:N+C));return E===1?(S=L[k-1],G.push(a[S>>2]+a[S<<4&63]+"==")):E===2&&(S=(L[k-2]<<8)+L[k-1],G.push(a[S>>10]+a[S>>4&63]+a[S<<2&63]+"=")),G.join("")}return _o}var Ma={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */var uu;function rg(){return uu||(uu=1,Ma.read=function(a,t,e,n,i){var o,s,r=i*8-n-1,u=(1<<r)-1,l=u>>1,c=-7,f=e?i-1:0,g=e?-1:1,L=a[t+f];for(f+=g,o=L&(1<<-c)-1,L>>=-c,c+=r;c>0;o=o*256+a[t+f],f+=g,c-=8);for(s=o&(1<<-c)-1,o>>=-c,c+=n;c>0;s=s*256+a[t+f],f+=g,c-=8);if(o===0)o=1-l;else{if(o===u)return s?NaN:(L?-1:1)*(1/0);s=s+Math.pow(2,n),o=o-l}return(L?-1:1)*s*Math.pow(2,o-n)},Ma.write=function(a,t,e,n,i,o){var s,r,u,l=o*8-i-1,c=(1<<l)-1,f=c>>1,g=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,L=n?0:o-1,S=n?1:-1,k=t<0||t===0&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(r=isNaN(t)?1:0,s=c):(s=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-s))<1&&(s--,u*=2),s+f>=1?t+=g/u:t+=g*Math.pow(2,1-f),t*u>=2&&(s++,u/=2),s+f>=c?(r=0,s=c):s+f>=1?(r=(t*u-1)*Math.pow(2,i),s=s+f):(r=t*Math.pow(2,f-1)*Math.pow(2,i),s=0));i>=8;a[e+L]=r&255,L+=S,r/=256,i-=8);for(s=s<<i|r,l+=i;l>0;a[e+L]=s&255,L+=S,s/=256,l-=8);a[e+L-S]|=k*128}),Ma}/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */var du;function El(){return du||(du=1,function(a){const t=sg(),e=rg(),n=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;a.Buffer=r,a.SlowBuffer=C,a.INSPECT_MAX_BYTES=50;const i=2147483647;a.kMaxLength=i,r.TYPED_ARRAY_SUPPORT=o(),!r.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function o(){try{const K=new Uint8Array(1),U={foo:function(){return 42}};return Object.setPrototypeOf(U,Uint8Array.prototype),Object.setPrototypeOf(K,U),K.foo()===42}catch{return!1}}Object.defineProperty(r.prototype,"parent",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.buffer}}),Object.defineProperty(r.prototype,"offset",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.byteOffset}});function s(K){if(K>i)throw new RangeError('The value "'+K+'" is invalid for option "size"');const U=new Uint8Array(K);return Object.setPrototypeOf(U,r.prototype),U}function r(K,U,D){if(typeof K=="number"){if(typeof U=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return f(K)}return u(K,U,D)}r.poolSize=8192;function u(K,U,D){if(typeof K=="string")return g(K,U);if(ArrayBuffer.isView(K))return S(K);if(K==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof K);if(Ut(K,ArrayBuffer)||K&&Ut(K.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(Ut(K,SharedArrayBuffer)||K&&Ut(K.buffer,SharedArrayBuffer)))return k(K,U,D);if(typeof K=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const ot=K.valueOf&&K.valueOf();if(ot!=null&&ot!==K)return r.from(ot,U,D);const st=E(K);if(st)return st;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof K[Symbol.toPrimitive]=="function")return r.from(K[Symbol.toPrimitive]("string"),U,D);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof K)}r.from=function(K,U,D){return u(K,U,D)},Object.setPrototypeOf(r.prototype,Uint8Array.prototype),Object.setPrototypeOf(r,Uint8Array);function l(K){if(typeof K!="number")throw new TypeError('"size" argument must be of type number');if(K<0)throw new RangeError('The value "'+K+'" is invalid for option "size"')}function c(K,U,D){return l(K),K<=0?s(K):U!==void 0?typeof D=="string"?s(K).fill(U,D):s(K).fill(U):s(K)}r.alloc=function(K,U,D){return c(K,U,D)};function f(K){return l(K),s(K<0?0:G(K)|0)}r.allocUnsafe=function(K){return f(K)},r.allocUnsafeSlow=function(K){return f(K)};function g(K,U){if((typeof U!="string"||U==="")&&(U="utf8"),!r.isEncoding(U))throw new TypeError("Unknown encoding: "+U);const D=N(K,U)|0;let ot=s(D);const st=ot.write(K,U);return st!==D&&(ot=ot.slice(0,st)),ot}function L(K){const U=K.length<0?0:G(K.length)|0,D=s(U);for(let ot=0;ot<U;ot+=1)D[ot]=K[ot]&255;return D}function S(K){if(Ut(K,Uint8Array)){const U=new Uint8Array(K);return k(U.buffer,U.byteOffset,U.byteLength)}return L(K)}function k(K,U,D){if(U<0||K.byteLength<U)throw new RangeError('"offset" is outside of buffer bounds');if(K.byteLength<U+(D||0))throw new RangeError('"length" is outside of buffer bounds');let ot;return U===void 0&&D===void 0?ot=new Uint8Array(K):D===void 0?ot=new Uint8Array(K,U):ot=new Uint8Array(K,U,D),Object.setPrototypeOf(ot,r.prototype),ot}function E(K){if(r.isBuffer(K)){const U=G(K.length)|0,D=s(U);return D.length===0||K.copy(D,0,0,U),D}if(K.length!==void 0)return typeof K.length!="number"||Dt(K.length)?s(0):L(K);if(K.type==="Buffer"&&Array.isArray(K.data))return L(K.data)}function G(K){if(K>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return K|0}function C(K){return+K!=K&&(K=0),r.alloc(+K)}r.isBuffer=function(U){return U!=null&&U._isBuffer===!0&&U!==r.prototype},r.compare=function(U,D){if(Ut(U,Uint8Array)&&(U=r.from(U,U.offset,U.byteLength)),Ut(D,Uint8Array)&&(D=r.from(D,D.offset,D.byteLength)),!r.isBuffer(U)||!r.isBuffer(D))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(U===D)return 0;let ot=U.length,st=D.length;for(let lt=0,at=Math.min(ot,st);lt<at;++lt)if(U[lt]!==D[lt]){ot=U[lt],st=D[lt];break}return ot<st?-1:st<ot?1:0},r.isEncoding=function(U){switch(String(U).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},r.concat=function(U,D){if(!Array.isArray(U))throw new TypeError('"list" argument must be an Array of Buffers');if(U.length===0)return r.alloc(0);let ot;if(D===void 0)for(D=0,ot=0;ot<U.length;++ot)D+=U[ot].length;const st=r.allocUnsafe(D);let lt=0;for(ot=0;ot<U.length;++ot){let at=U[ot];if(Ut(at,Uint8Array))lt+at.length>st.length?(r.isBuffer(at)||(at=r.from(at)),at.copy(st,lt)):Uint8Array.prototype.set.call(st,at,lt);else if(r.isBuffer(at))at.copy(st,lt);else throw new TypeError('"list" argument must be an Array of Buffers');lt+=at.length}return st};function N(K,U){if(r.isBuffer(K))return K.length;if(ArrayBuffer.isView(K)||Ut(K,ArrayBuffer))return K.byteLength;if(typeof K!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof K);const D=K.length,ot=arguments.length>2&&arguments[2]===!0;if(!ot&&D===0)return 0;let st=!1;for(;;)switch(U){case"ascii":case"latin1":case"binary":return D;case"utf8":case"utf-8":return rt(K).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return D*2;case"hex":return D>>>1;case"base64":return yt(K).length;default:if(st)return ot?-1:rt(K).length;U=(""+U).toLowerCase(),st=!0}}r.byteLength=N;function J(K,U,D){let ot=!1;if((U===void 0||U<0)&&(U=0),U>this.length||((D===void 0||D>this.length)&&(D=this.length),D<=0)||(D>>>=0,U>>>=0,D<=U))return"";for(K||(K="utf8");;)switch(K){case"hex":return tt(this,U,D);case"utf8":case"utf-8":return y(this,U,D);case"ascii":return B(this,U,D);case"latin1":case"binary":return Y(this,U,D);case"base64":return I(this,U,D);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $(this,U,D);default:if(ot)throw new TypeError("Unknown encoding: "+K);K=(K+"").toLowerCase(),ot=!0}}r.prototype._isBuffer=!0;function j(K,U,D){const ot=K[U];K[U]=K[D],K[D]=ot}r.prototype.swap16=function(){const U=this.length;if(U%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let D=0;D<U;D+=2)j(this,D,D+1);return this},r.prototype.swap32=function(){const U=this.length;if(U%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let D=0;D<U;D+=4)j(this,D,D+3),j(this,D+1,D+2);return this},r.prototype.swap64=function(){const U=this.length;if(U%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let D=0;D<U;D+=8)j(this,D,D+7),j(this,D+1,D+6),j(this,D+2,D+5),j(this,D+3,D+4);return this},r.prototype.toString=function(){const U=this.length;return U===0?"":arguments.length===0?y(this,0,U):J.apply(this,arguments)},r.prototype.toLocaleString=r.prototype.toString,r.prototype.equals=function(U){if(!r.isBuffer(U))throw new TypeError("Argument must be a Buffer");return this===U?!0:r.compare(this,U)===0},r.prototype.inspect=function(){let U="";const D=a.INSPECT_MAX_BYTES;return U=this.toString("hex",0,D).replace(/(.{2})/g,"$1 ").trim(),this.length>D&&(U+=" ... "),"<Buffer "+U+">"},n&&(r.prototype[n]=r.prototype.inspect),r.prototype.compare=function(U,D,ot,st,lt){if(Ut(U,Uint8Array)&&(U=r.from(U,U.offset,U.byteLength)),!r.isBuffer(U))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof U);if(D===void 0&&(D=0),ot===void 0&&(ot=U?U.length:0),st===void 0&&(st=0),lt===void 0&&(lt=this.length),D<0||ot>U.length||st<0||lt>this.length)throw new RangeError("out of range index");if(st>=lt&&D>=ot)return 0;if(st>=lt)return-1;if(D>=ot)return 1;if(D>>>=0,ot>>>=0,st>>>=0,lt>>>=0,this===U)return 0;let at=lt-st,x=ot-D;const q=Math.min(at,x),gt=this.slice(st,lt),mt=U.slice(D,ot);for(let ut=0;ut<q;++ut)if(gt[ut]!==mt[ut]){at=gt[ut],x=mt[ut];break}return at<x?-1:x<at?1:0};function R(K,U,D,ot,st){if(K.length===0)return-1;if(typeof D=="string"?(ot=D,D=0):D>2147483647?D=2147483647:D<-2147483648&&(D=-2147483648),D=+D,Dt(D)&&(D=st?0:K.length-1),D<0&&(D=K.length+D),D>=K.length){if(st)return-1;D=K.length-1}else if(D<0)if(st)D=0;else return-1;if(typeof U=="string"&&(U=r.from(U,ot)),r.isBuffer(U))return U.length===0?-1:b(K,U,D,ot,st);if(typeof U=="number")return U=U&255,typeof Uint8Array.prototype.indexOf=="function"?st?Uint8Array.prototype.indexOf.call(K,U,D):Uint8Array.prototype.lastIndexOf.call(K,U,D):b(K,[U],D,ot,st);throw new TypeError("val must be string, number or Buffer")}function b(K,U,D,ot,st){let lt=1,at=K.length,x=U.length;if(ot!==void 0&&(ot=String(ot).toLowerCase(),ot==="ucs2"||ot==="ucs-2"||ot==="utf16le"||ot==="utf-16le")){if(K.length<2||U.length<2)return-1;lt=2,at/=2,x/=2,D/=2}function q(mt,ut){return lt===1?mt[ut]:mt.readUInt16BE(ut*lt)}let gt;if(st){let mt=-1;for(gt=D;gt<at;gt++)if(q(K,gt)===q(U,mt===-1?0:gt-mt)){if(mt===-1&&(mt=gt),gt-mt+1===x)return mt*lt}else mt!==-1&&(gt-=gt-mt),mt=-1}else for(D+x>at&&(D=at-x),gt=D;gt>=0;gt--){let mt=!0;for(let ut=0;ut<x;ut++)if(q(K,gt+ut)!==q(U,ut)){mt=!1;break}if(mt)return gt}return-1}r.prototype.includes=function(U,D,ot){return this.indexOf(U,D,ot)!==-1},r.prototype.indexOf=function(U,D,ot){return R(this,U,D,ot,!0)},r.prototype.lastIndexOf=function(U,D,ot){return R(this,U,D,ot,!1)};function w(K,U,D,ot){D=Number(D)||0;const st=K.length-D;ot?(ot=Number(ot),ot>st&&(ot=st)):ot=st;const lt=U.length;ot>lt/2&&(ot=lt/2);let at;for(at=0;at<ot;++at){const x=parseInt(U.substr(at*2,2),16);if(Dt(x))return at;K[D+at]=x}return at}function Z(K,U,D,ot){return It(rt(U,K.length-D),K,D,ot)}function P(K,U,D,ot){return It(z(U),K,D,ot)}function V(K,U,D,ot){return It(yt(U),K,D,ot)}function nt(K,U,D,ot){return It(wt(U,K.length-D),K,D,ot)}r.prototype.write=function(U,D,ot,st){if(D===void 0)st="utf8",ot=this.length,D=0;else if(ot===void 0&&typeof D=="string")st=D,ot=this.length,D=0;else if(isFinite(D))D=D>>>0,isFinite(ot)?(ot=ot>>>0,st===void 0&&(st="utf8")):(st=ot,ot=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const lt=this.length-D;if((ot===void 0||ot>lt)&&(ot=lt),U.length>0&&(ot<0||D<0)||D>this.length)throw new RangeError("Attempt to write outside buffer bounds");st||(st="utf8");let at=!1;for(;;)switch(st){case"hex":return w(this,U,D,ot);case"utf8":case"utf-8":return Z(this,U,D,ot);case"ascii":case"latin1":case"binary":return P(this,U,D,ot);case"base64":return V(this,U,D,ot);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return nt(this,U,D,ot);default:if(at)throw new TypeError("Unknown encoding: "+st);st=(""+st).toLowerCase(),at=!0}},r.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function I(K,U,D){return U===0&&D===K.length?t.fromByteArray(K):t.fromByteArray(K.slice(U,D))}function y(K,U,D){D=Math.min(K.length,D);const ot=[];let st=U;for(;st<D;){const lt=K[st];let at=null,x=lt>239?4:lt>223?3:lt>191?2:1;if(st+x<=D){let q,gt,mt,ut;switch(x){case 1:lt<128&&(at=lt);break;case 2:q=K[st+1],(q&192)===128&&(ut=(lt&31)<<6|q&63,ut>127&&(at=ut));break;case 3:q=K[st+1],gt=K[st+2],(q&192)===128&&(gt&192)===128&&(ut=(lt&15)<<12|(q&63)<<6|gt&63,ut>2047&&(ut<55296||ut>57343)&&(at=ut));break;case 4:q=K[st+1],gt=K[st+2],mt=K[st+3],(q&192)===128&&(gt&192)===128&&(mt&192)===128&&(ut=(lt&15)<<18|(q&63)<<12|(gt&63)<<6|mt&63,ut>65535&&ut<1114112&&(at=ut))}}at===null?(at=65533,x=1):at>65535&&(at-=65536,ot.push(at>>>10&1023|55296),at=56320|at&1023),ot.push(at),st+=x}return T(ot)}const _=4096;function T(K){const U=K.length;if(U<=_)return String.fromCharCode.apply(String,K);let D="",ot=0;for(;ot<U;)D+=String.fromCharCode.apply(String,K.slice(ot,ot+=_));return D}function B(K,U,D){let ot="";D=Math.min(K.length,D);for(let st=U;st<D;++st)ot+=String.fromCharCode(K[st]&127);return ot}function Y(K,U,D){let ot="";D=Math.min(K.length,D);for(let st=U;st<D;++st)ot+=String.fromCharCode(K[st]);return ot}function tt(K,U,D){const ot=K.length;(!U||U<0)&&(U=0),(!D||D<0||D>ot)&&(D=ot);let st="";for(let lt=U;lt<D;++lt)st+=Mt[K[lt]];return st}function $(K,U,D){const ot=K.slice(U,D);let st="";for(let lt=0;lt<ot.length-1;lt+=2)st+=String.fromCharCode(ot[lt]+ot[lt+1]*256);return st}r.prototype.slice=function(U,D){const ot=this.length;U=~~U,D=D===void 0?ot:~~D,U<0?(U+=ot,U<0&&(U=0)):U>ot&&(U=ot),D<0?(D+=ot,D<0&&(D=0)):D>ot&&(D=ot),D<U&&(D=U);const st=this.subarray(U,D);return Object.setPrototypeOf(st,r.prototype),st};function X(K,U,D){if(K%1!==0||K<0)throw new RangeError("offset is not uint");if(K+U>D)throw new RangeError("Trying to access beyond buffer length")}r.prototype.readUintLE=r.prototype.readUIntLE=function(U,D,ot){U=U>>>0,D=D>>>0,ot||X(U,D,this.length);let st=this[U],lt=1,at=0;for(;++at<D&&(lt*=256);)st+=this[U+at]*lt;return st},r.prototype.readUintBE=r.prototype.readUIntBE=function(U,D,ot){U=U>>>0,D=D>>>0,ot||X(U,D,this.length);let st=this[U+--D],lt=1;for(;D>0&&(lt*=256);)st+=this[U+--D]*lt;return st},r.prototype.readUint8=r.prototype.readUInt8=function(U,D){return U=U>>>0,D||X(U,1,this.length),this[U]},r.prototype.readUint16LE=r.prototype.readUInt16LE=function(U,D){return U=U>>>0,D||X(U,2,this.length),this[U]|this[U+1]<<8},r.prototype.readUint16BE=r.prototype.readUInt16BE=function(U,D){return U=U>>>0,D||X(U,2,this.length),this[U]<<8|this[U+1]},r.prototype.readUint32LE=r.prototype.readUInt32LE=function(U,D){return U=U>>>0,D||X(U,4,this.length),(this[U]|this[U+1]<<8|this[U+2]<<16)+this[U+3]*16777216},r.prototype.readUint32BE=r.prototype.readUInt32BE=function(U,D){return U=U>>>0,D||X(U,4,this.length),this[U]*16777216+(this[U+1]<<16|this[U+2]<<8|this[U+3])},r.prototype.readBigUInt64LE=Qt(function(U){U=U>>>0,ct(U,"offset");const D=this[U],ot=this[U+7];(D===void 0||ot===void 0)&&dt(U,this.length-8);const st=D+this[++U]*2**8+this[++U]*2**16+this[++U]*2**24,lt=this[++U]+this[++U]*2**8+this[++U]*2**16+ot*2**24;return BigInt(st)+(BigInt(lt)<<BigInt(32))}),r.prototype.readBigUInt64BE=Qt(function(U){U=U>>>0,ct(U,"offset");const D=this[U],ot=this[U+7];(D===void 0||ot===void 0)&&dt(U,this.length-8);const st=D*2**24+this[++U]*2**16+this[++U]*2**8+this[++U],lt=this[++U]*2**24+this[++U]*2**16+this[++U]*2**8+ot;return(BigInt(st)<<BigInt(32))+BigInt(lt)}),r.prototype.readIntLE=function(U,D,ot){U=U>>>0,D=D>>>0,ot||X(U,D,this.length);let st=this[U],lt=1,at=0;for(;++at<D&&(lt*=256);)st+=this[U+at]*lt;return lt*=128,st>=lt&&(st-=Math.pow(2,8*D)),st},r.prototype.readIntBE=function(U,D,ot){U=U>>>0,D=D>>>0,ot||X(U,D,this.length);let st=D,lt=1,at=this[U+--st];for(;st>0&&(lt*=256);)at+=this[U+--st]*lt;return lt*=128,at>=lt&&(at-=Math.pow(2,8*D)),at},r.prototype.readInt8=function(U,D){return U=U>>>0,D||X(U,1,this.length),this[U]&128?(255-this[U]+1)*-1:this[U]},r.prototype.readInt16LE=function(U,D){U=U>>>0,D||X(U,2,this.length);const ot=this[U]|this[U+1]<<8;return ot&32768?ot|4294901760:ot},r.prototype.readInt16BE=function(U,D){U=U>>>0,D||X(U,2,this.length);const ot=this[U+1]|this[U]<<8;return ot&32768?ot|4294901760:ot},r.prototype.readInt32LE=function(U,D){return U=U>>>0,D||X(U,4,this.length),this[U]|this[U+1]<<8|this[U+2]<<16|this[U+3]<<24},r.prototype.readInt32BE=function(U,D){return U=U>>>0,D||X(U,4,this.length),this[U]<<24|this[U+1]<<16|this[U+2]<<8|this[U+3]},r.prototype.readBigInt64LE=Qt(function(U){U=U>>>0,ct(U,"offset");const D=this[U],ot=this[U+7];(D===void 0||ot===void 0)&&dt(U,this.length-8);const st=this[U+4]+this[U+5]*2**8+this[U+6]*2**16+(ot<<24);return(BigInt(st)<<BigInt(32))+BigInt(D+this[++U]*2**8+this[++U]*2**16+this[++U]*2**24)}),r.prototype.readBigInt64BE=Qt(function(U){U=U>>>0,ct(U,"offset");const D=this[U],ot=this[U+7];(D===void 0||ot===void 0)&&dt(U,this.length-8);const st=(D<<24)+this[++U]*2**16+this[++U]*2**8+this[++U];return(BigInt(st)<<BigInt(32))+BigInt(this[++U]*2**24+this[++U]*2**16+this[++U]*2**8+ot)}),r.prototype.readFloatLE=function(U,D){return U=U>>>0,D||X(U,4,this.length),e.read(this,U,!0,23,4)},r.prototype.readFloatBE=function(U,D){return U=U>>>0,D||X(U,4,this.length),e.read(this,U,!1,23,4)},r.prototype.readDoubleLE=function(U,D){return U=U>>>0,D||X(U,8,this.length),e.read(this,U,!0,52,8)},r.prototype.readDoubleBE=function(U,D){return U=U>>>0,D||X(U,8,this.length),e.read(this,U,!1,52,8)};function F(K,U,D,ot,st,lt){if(!r.isBuffer(K))throw new TypeError('"buffer" argument must be a Buffer instance');if(U>st||U<lt)throw new RangeError('"value" argument is out of bounds');if(D+ot>K.length)throw new RangeError("Index out of range")}r.prototype.writeUintLE=r.prototype.writeUIntLE=function(U,D,ot,st){if(U=+U,D=D>>>0,ot=ot>>>0,!st){const x=Math.pow(2,8*ot)-1;F(this,U,D,ot,x,0)}let lt=1,at=0;for(this[D]=U&255;++at<ot&&(lt*=256);)this[D+at]=U/lt&255;return D+ot},r.prototype.writeUintBE=r.prototype.writeUIntBE=function(U,D,ot,st){if(U=+U,D=D>>>0,ot=ot>>>0,!st){const x=Math.pow(2,8*ot)-1;F(this,U,D,ot,x,0)}let lt=ot-1,at=1;for(this[D+lt]=U&255;--lt>=0&&(at*=256);)this[D+lt]=U/at&255;return D+ot},r.prototype.writeUint8=r.prototype.writeUInt8=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,1,255,0),this[D]=U&255,D+1},r.prototype.writeUint16LE=r.prototype.writeUInt16LE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,2,65535,0),this[D]=U&255,this[D+1]=U>>>8,D+2},r.prototype.writeUint16BE=r.prototype.writeUInt16BE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,2,65535,0),this[D]=U>>>8,this[D+1]=U&255,D+2},r.prototype.writeUint32LE=r.prototype.writeUInt32LE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,4,4294967295,0),this[D+3]=U>>>24,this[D+2]=U>>>16,this[D+1]=U>>>8,this[D]=U&255,D+4},r.prototype.writeUint32BE=r.prototype.writeUInt32BE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,4,4294967295,0),this[D]=U>>>24,this[D+1]=U>>>16,this[D+2]=U>>>8,this[D+3]=U&255,D+4};function M(K,U,D,ot,st){et(U,ot,st,K,D,7);let lt=Number(U&BigInt(4294967295));K[D++]=lt,lt=lt>>8,K[D++]=lt,lt=lt>>8,K[D++]=lt,lt=lt>>8,K[D++]=lt;let at=Number(U>>BigInt(32)&BigInt(4294967295));return K[D++]=at,at=at>>8,K[D++]=at,at=at>>8,K[D++]=at,at=at>>8,K[D++]=at,D}function W(K,U,D,ot,st){et(U,ot,st,K,D,7);let lt=Number(U&BigInt(4294967295));K[D+7]=lt,lt=lt>>8,K[D+6]=lt,lt=lt>>8,K[D+5]=lt,lt=lt>>8,K[D+4]=lt;let at=Number(U>>BigInt(32)&BigInt(4294967295));return K[D+3]=at,at=at>>8,K[D+2]=at,at=at>>8,K[D+1]=at,at=at>>8,K[D]=at,D+8}r.prototype.writeBigUInt64LE=Qt(function(U,D=0){return M(this,U,D,BigInt(0),BigInt("0xffffffffffffffff"))}),r.prototype.writeBigUInt64BE=Qt(function(U,D=0){return W(this,U,D,BigInt(0),BigInt("0xffffffffffffffff"))}),r.prototype.writeIntLE=function(U,D,ot,st){if(U=+U,D=D>>>0,!st){const q=Math.pow(2,8*ot-1);F(this,U,D,ot,q-1,-q)}let lt=0,at=1,x=0;for(this[D]=U&255;++lt<ot&&(at*=256);)U<0&&x===0&&this[D+lt-1]!==0&&(x=1),this[D+lt]=(U/at>>0)-x&255;return D+ot},r.prototype.writeIntBE=function(U,D,ot,st){if(U=+U,D=D>>>0,!st){const q=Math.pow(2,8*ot-1);F(this,U,D,ot,q-1,-q)}let lt=ot-1,at=1,x=0;for(this[D+lt]=U&255;--lt>=0&&(at*=256);)U<0&&x===0&&this[D+lt+1]!==0&&(x=1),this[D+lt]=(U/at>>0)-x&255;return D+ot},r.prototype.writeInt8=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,1,127,-128),U<0&&(U=255+U+1),this[D]=U&255,D+1},r.prototype.writeInt16LE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,2,32767,-32768),this[D]=U&255,this[D+1]=U>>>8,D+2},r.prototype.writeInt16BE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,2,32767,-32768),this[D]=U>>>8,this[D+1]=U&255,D+2},r.prototype.writeInt32LE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,4,2147483647,-2147483648),this[D]=U&255,this[D+1]=U>>>8,this[D+2]=U>>>16,this[D+3]=U>>>24,D+4},r.prototype.writeInt32BE=function(U,D,ot){return U=+U,D=D>>>0,ot||F(this,U,D,4,2147483647,-2147483648),U<0&&(U=4294967295+U+1),this[D]=U>>>24,this[D+1]=U>>>16,this[D+2]=U>>>8,this[D+3]=U&255,D+4},r.prototype.writeBigInt64LE=Qt(function(U,D=0){return M(this,U,D,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),r.prototype.writeBigInt64BE=Qt(function(U,D=0){return W(this,U,D,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function A(K,U,D,ot,st,lt){if(D+ot>K.length)throw new RangeError("Index out of range");if(D<0)throw new RangeError("Index out of range")}function h(K,U,D,ot,st){return U=+U,D=D>>>0,st||A(K,U,D,4),e.write(K,U,D,ot,23,4),D+4}r.prototype.writeFloatLE=function(U,D,ot){return h(this,U,D,!0,ot)},r.prototype.writeFloatBE=function(U,D,ot){return h(this,U,D,!1,ot)};function Q(K,U,D,ot,st){return U=+U,D=D>>>0,st||A(K,U,D,8),e.write(K,U,D,ot,52,8),D+8}r.prototype.writeDoubleLE=function(U,D,ot){return Q(this,U,D,!0,ot)},r.prototype.writeDoubleBE=function(U,D,ot){return Q(this,U,D,!1,ot)},r.prototype.copy=function(U,D,ot,st){if(!r.isBuffer(U))throw new TypeError("argument should be a Buffer");if(ot||(ot=0),!st&&st!==0&&(st=this.length),D>=U.length&&(D=U.length),D||(D=0),st>0&&st<ot&&(st=ot),st===ot||U.length===0||this.length===0)return 0;if(D<0)throw new RangeError("targetStart out of bounds");if(ot<0||ot>=this.length)throw new RangeError("Index out of range");if(st<0)throw new RangeError("sourceEnd out of bounds");st>this.length&&(st=this.length),U.length-D<st-ot&&(st=U.length-D+ot);const lt=st-ot;return this===U&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(D,ot,st):Uint8Array.prototype.set.call(U,this.subarray(ot,st),D),lt},r.prototype.fill=function(U,D,ot,st){if(typeof U=="string"){if(typeof D=="string"?(st=D,D=0,ot=this.length):typeof ot=="string"&&(st=ot,ot=this.length),st!==void 0&&typeof st!="string")throw new TypeError("encoding must be a string");if(typeof st=="string"&&!r.isEncoding(st))throw new TypeError("Unknown encoding: "+st);if(U.length===1){const at=U.charCodeAt(0);(st==="utf8"&&at<128||st==="latin1")&&(U=at)}}else typeof U=="number"?U=U&255:typeof U=="boolean"&&(U=Number(U));if(D<0||this.length<D||this.length<ot)throw new RangeError("Out of range index");if(ot<=D)return this;D=D>>>0,ot=ot===void 0?this.length:ot>>>0,U||(U=0);let lt;if(typeof U=="number")for(lt=D;lt<ot;++lt)this[lt]=U;else{const at=r.isBuffer(U)?U:r.from(U,st),x=at.length;if(x===0)throw new TypeError('The value "'+U+'" is invalid for argument "value"');for(lt=0;lt<ot-D;++lt)this[lt+D]=at[lt%x]}return this};const p={};function d(K,U,D){p[K]=class extends D{constructor(){super(),Object.defineProperty(this,"message",{value:U.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${K}]`,this.stack,delete this.name}get code(){return K}set code(st){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:st,writable:!0})}toString(){return`${this.name} [${K}]: ${this.message}`}}}d("ERR_BUFFER_OUT_OF_BOUNDS",function(K){return K?`${K} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),d("ERR_INVALID_ARG_TYPE",function(K,U){return`The "${K}" argument must be of type number. Received type ${typeof U}`},TypeError),d("ERR_OUT_OF_RANGE",function(K,U,D){let ot=`The value of "${K}" is out of range.`,st=D;return Number.isInteger(D)&&Math.abs(D)>2**32?st=m(String(D)):typeof D=="bigint"&&(st=String(D),(D>BigInt(2)**BigInt(32)||D<-(BigInt(2)**BigInt(32)))&&(st=m(st)),st+="n"),ot+=` It must be ${U}. Received ${st}`,ot},RangeError);function m(K){let U="",D=K.length;const ot=K[0]==="-"?1:0;for(;D>=ot+4;D-=3)U=`_${K.slice(D-3,D)}${U}`;return`${K.slice(0,D)}${U}`}function v(K,U,D){ct(U,"offset"),(K[U]===void 0||K[U+D]===void 0)&&dt(U,K.length-(D+1))}function et(K,U,D,ot,st,lt){if(K>D||K<U){const at=typeof U=="bigint"?"n":"";let x;throw U===0||U===BigInt(0)?x=`>= 0${at} and < 2${at} ** ${(lt+1)*8}${at}`:x=`>= -(2${at} ** ${(lt+1)*8-1}${at}) and < 2 ** ${(lt+1)*8-1}${at}`,new p.ERR_OUT_OF_RANGE("value",x,K)}v(ot,st,lt)}function ct(K,U){if(typeof K!="number")throw new p.ERR_INVALID_ARG_TYPE(U,"number",K)}function dt(K,U,D){throw Math.floor(K)!==K?(ct(K,D),new p.ERR_OUT_OF_RANGE("offset","an integer",K)):U<0?new p.ERR_BUFFER_OUT_OF_BOUNDS:new p.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${U}`,K)}const ft=/[^+/0-9A-Za-z-_]/g;function Ft(K){if(K=K.split("=")[0],K=K.trim().replace(ft,""),K.length<2)return"";for(;K.length%4!==0;)K=K+"=";return K}function rt(K,U){U=U||1/0;let D;const ot=K.length;let st=null;const lt=[];for(let at=0;at<ot;++at){if(D=K.charCodeAt(at),D>55295&&D<57344){if(!st){if(D>56319){(U-=3)>-1&&lt.push(239,191,189);continue}else if(at+1===ot){(U-=3)>-1&&lt.push(239,191,189);continue}st=D;continue}if(D<56320){(U-=3)>-1&&lt.push(239,191,189),st=D;continue}D=(st-55296<<10|D-56320)+65536}else st&&(U-=3)>-1&&lt.push(239,191,189);if(st=null,D<128){if((U-=1)<0)break;lt.push(D)}else if(D<2048){if((U-=2)<0)break;lt.push(D>>6|192,D&63|128)}else if(D<65536){if((U-=3)<0)break;lt.push(D>>12|224,D>>6&63|128,D&63|128)}else if(D<1114112){if((U-=4)<0)break;lt.push(D>>18|240,D>>12&63|128,D>>6&63|128,D&63|128)}else throw new Error("Invalid code point")}return lt}function z(K){const U=[];for(let D=0;D<K.length;++D)U.push(K.charCodeAt(D)&255);return U}function wt(K,U){let D,ot,st;const lt=[];for(let at=0;at<K.length&&!((U-=2)<0);++at)D=K.charCodeAt(at),ot=D>>8,st=D%256,lt.push(st),lt.push(ot);return lt}function yt(K){return t.toByteArray(Ft(K))}function It(K,U,D,ot){let st;for(st=0;st<ot&&!(st+D>=U.length||st>=K.length);++st)U[st+D]=K[st];return st}function Ut(K,U){return K instanceof U||K!=null&&K.constructor!=null&&K.constructor.name!=null&&K.constructor.name===U.name}function Dt(K){return K!==K}const Mt=function(){const K="0123456789abcdef",U=new Array(256);for(let D=0;D<16;++D){const ot=D*16;for(let st=0;st<16;++st)U[ot+st]=K[D]+K[st]}return U}();function Qt(K){return typeof BigInt>"u"?it:K}function it(){throw new Error("BigInt not supported")}}(nr)),nr}var jt=El();function fu(a){if(!Number.isSafeInteger(a)||a<0)throw new Error("positive integer expected, got "+a)}function cg(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&a.constructor.name==="Uint8Array"}function ks(a,...t){if(!cg(a))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(a.length))throw new Error("Uint8Array expected of length "+t+", got length="+a.length)}function lg(a){if(typeof a!="function"||typeof a.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");fu(a.outputLen),fu(a.blockLen)}function hs(a,t=!0){if(a.destroyed)throw new Error("Hash instance has been destroyed");if(t&&a.finished)throw new Error("Hash#digest() has already been called")}function ug(a,t){ks(a);const e=t.outputLen;if(a.length<e)throw new Error("digestInto() expects output buffer of length at least "+e)}const Vi=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function ir(a){return new DataView(a.buffer,a.byteOffset,a.byteLength)}function Tn(a,t){return a<<32-t|a>>>t}function dg(a){if(typeof a!="string")throw new Error("utf8ToBytes expected string, got "+typeof a);return new Uint8Array(new TextEncoder().encode(a))}function Cl(a){return typeof a=="string"&&(a=dg(a)),ks(a),a}function fg(...a){let t=0;for(let n=0;n<a.length;n++){const i=a[n];ks(i),t+=i.length}const e=new Uint8Array(t);for(let n=0,i=0;n<a.length;n++){const o=a[n];e.set(o,i),i+=o.length}return e}class E2{clone(){return this._cloneInto()}}function C2(a){const t=n=>a().update(Cl(n)).digest(),e=a();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>a(),t}function B2(a=32){if(Vi&&typeof Vi.getRandomValues=="function")return Vi.getRandomValues(new Uint8Array(a));if(Vi&&typeof Vi.randomBytes=="function")return Vi.randomBytes(a);throw new Error("crypto.getRandomValues must be defined")}function hg(a,t,e,n){if(typeof a.setBigUint64=="function")return a.setBigUint64(t,e,n);const i=BigInt(32),o=BigInt(4294967295),s=Number(e>>i&o),r=Number(e&o),u=n?4:0,l=n?0:4;a.setUint32(t+u,s,n),a.setUint32(t+l,r,n)}function gg(a,t,e){return a&t^~a&e}function pg(a,t,e){return a&t^a&e^t&e}class v2 extends E2{constructor(t,e,n,i){super(),this.blockLen=t,this.outputLen=e,this.padOffset=n,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=ir(this.buffer)}update(t){hs(this);const{view:e,buffer:n,blockLen:i}=this;t=Cl(t);const o=t.length;for(let s=0;s<o;){const r=Math.min(i-this.pos,o-s);if(r===i){const u=ir(t);for(;i<=o-s;s+=i)this.process(u,s);continue}n.set(t.subarray(s,s+r),this.pos),this.pos+=r,s+=r,this.pos===i&&(this.process(e,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){hs(this),ug(t,this),this.finished=!0;const{buffer:e,view:n,blockLen:i,isLE:o}=this;let{pos:s}=this;e[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>i-s&&(this.process(n,0),s=0);for(let f=s;f<i;f++)e[f]=0;hg(n,i-8,BigInt(this.length*8),o),this.process(n,0);const r=ir(t),u=this.outputLen;if(u%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const l=u/4,c=this.get();if(l>c.length)throw new Error("_sha2: outputLen bigger than state");for(let f=0;f<l;f++)r.setUint32(4*f,c[f],o)}digest(){const{buffer:t,outputLen:e}=this;this.digestInto(t);const n=t.slice(0,e);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:e,buffer:n,length:i,finished:o,destroyed:s,pos:r}=this;return t.length=i,t.pos=r,t.finished=o,t.destroyed=s,i%e&&t.buffer.set(n),t}}const ka=BigInt(2**32-1),Oc=BigInt(32);function F2(a,t=!1){return t?{h:Number(a&ka),l:Number(a>>Oc&ka)}:{h:Number(a>>Oc&ka)|0,l:Number(a&ka)|0}}function Lg(a,t=!1){let e=new Uint32Array(a.length),n=new Uint32Array(a.length);for(let i=0;i<a.length;i++){const{h:o,l:s}=F2(a[i],t);[e[i],n[i]]=[o,s]}return[e,n]}const wg=(a,t)=>BigInt(a>>>0)<<Oc|BigInt(t>>>0),mg=(a,t,e)=>a>>>e,bg=(a,t,e)=>a<<32-e|t>>>e,yg=(a,t,e)=>a>>>e|t<<32-e,Ag=(a,t,e)=>a<<32-e|t>>>e,Ig=(a,t,e)=>a<<64-e|t>>>e-32,Eg=(a,t,e)=>a>>>e-32|t<<64-e,Cg=(a,t)=>t,Bg=(a,t)=>a,vg=(a,t,e)=>a<<e|t>>>32-e,Fg=(a,t,e)=>t<<e|a>>>32-e,Sg=(a,t,e)=>t<<e-32|a>>>64-e,_g=(a,t,e)=>a<<e-32|t>>>64-e;function xg(a,t,e,n){const i=(t>>>0)+(n>>>0);return{h:a+e+(i/2**32|0)|0,l:i|0}}const Mg=(a,t,e)=>(a>>>0)+(t>>>0)+(e>>>0),kg=(a,t,e,n)=>t+e+n+(a/2**32|0)|0,Ug=(a,t,e,n)=>(a>>>0)+(t>>>0)+(e>>>0)+(n>>>0),Gg=(a,t,e,n,i)=>t+e+n+i+(a/2**32|0)|0,Pg=(a,t,e,n,i)=>(a>>>0)+(t>>>0)+(e>>>0)+(n>>>0)+(i>>>0),Og=(a,t,e,n,i,o)=>t+e+n+i+o+(a/2**32|0)|0,we={fromBig:F2,split:Lg,toBig:wg,shrSH:mg,shrSL:bg,rotrSH:yg,rotrSL:Ag,rotrBH:Ig,rotrBL:Eg,rotr32H:Cg,rotr32L:Bg,rotlSH:vg,rotlSL:Fg,rotlBH:Sg,rotlBL:_g,add:xg,add3L:Mg,add3H:kg,add4L:Ug,add4H:Gg,add5H:Og,add5L:Pg},[Dg,qg]=we.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(a=>BigInt(a))),ci=new Uint32Array(80),li=new Uint32Array(80);class Tg extends v2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:t,Al:e,Bh:n,Bl:i,Ch:o,Cl:s,Dh:r,Dl:u,Eh:l,El:c,Fh:f,Fl:g,Gh:L,Gl:S,Hh:k,Hl:E}=this;return[t,e,n,i,o,s,r,u,l,c,f,g,L,S,k,E]}set(t,e,n,i,o,s,r,u,l,c,f,g,L,S,k,E){this.Ah=t|0,this.Al=e|0,this.Bh=n|0,this.Bl=i|0,this.Ch=o|0,this.Cl=s|0,this.Dh=r|0,this.Dl=u|0,this.Eh=l|0,this.El=c|0,this.Fh=f|0,this.Fl=g|0,this.Gh=L|0,this.Gl=S|0,this.Hh=k|0,this.Hl=E|0}process(t,e){for(let N=0;N<16;N++,e+=4)ci[N]=t.getUint32(e),li[N]=t.getUint32(e+=4);for(let N=16;N<80;N++){const J=ci[N-15]|0,j=li[N-15]|0,R=we.rotrSH(J,j,1)^we.rotrSH(J,j,8)^we.shrSH(J,j,7),b=we.rotrSL(J,j,1)^we.rotrSL(J,j,8)^we.shrSL(J,j,7),w=ci[N-2]|0,Z=li[N-2]|0,P=we.rotrSH(w,Z,19)^we.rotrBH(w,Z,61)^we.shrSH(w,Z,6),V=we.rotrSL(w,Z,19)^we.rotrBL(w,Z,61)^we.shrSL(w,Z,6),nt=we.add4L(b,V,li[N-7],li[N-16]),I=we.add4H(nt,R,P,ci[N-7],ci[N-16]);ci[N]=I|0,li[N]=nt|0}let{Ah:n,Al:i,Bh:o,Bl:s,Ch:r,Cl:u,Dh:l,Dl:c,Eh:f,El:g,Fh:L,Fl:S,Gh:k,Gl:E,Hh:G,Hl:C}=this;for(let N=0;N<80;N++){const J=we.rotrSH(f,g,14)^we.rotrSH(f,g,18)^we.rotrBH(f,g,41),j=we.rotrSL(f,g,14)^we.rotrSL(f,g,18)^we.rotrBL(f,g,41),R=f&L^~f&k,b=g&S^~g&E,w=we.add5L(C,j,b,qg[N],li[N]),Z=we.add5H(w,G,J,R,Dg[N],ci[N]),P=w|0,V=we.rotrSH(n,i,28)^we.rotrBH(n,i,34)^we.rotrBH(n,i,39),nt=we.rotrSL(n,i,28)^we.rotrBL(n,i,34)^we.rotrBL(n,i,39),I=n&o^n&r^o&r,y=i&s^i&u^s&u;G=k|0,C=E|0,k=L|0,E=S|0,L=f|0,S=g|0,{h:f,l:g}=we.add(l|0,c|0,Z|0,P|0),l=r|0,c=u|0,r=o|0,u=s|0,o=n|0,s=i|0;const _=we.add3L(P,nt,y);n=we.add3H(_,Z,V,I),i=_|0}({h:n,l:i}=we.add(this.Ah|0,this.Al|0,n|0,i|0)),{h:o,l:s}=we.add(this.Bh|0,this.Bl|0,o|0,s|0),{h:r,l:u}=we.add(this.Ch|0,this.Cl|0,r|0,u|0),{h:l,l:c}=we.add(this.Dh|0,this.Dl|0,l|0,c|0),{h:f,l:g}=we.add(this.Eh|0,this.El|0,f|0,g|0),{h:L,l:S}=we.add(this.Fh|0,this.Fl|0,L|0,S|0),{h:k,l:E}=we.add(this.Gh|0,this.Gl|0,k|0,E|0),{h:G,l:C}=we.add(this.Hh|0,this.Hl|0,G|0,C|0),this.set(n,i,o,s,r,u,l,c,f,g,L,S,k,E,G,C)}roundClean(){ci.fill(0),li.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Rg=C2(()=>new Tg);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Us=BigInt(0),Gs=BigInt(1),Hg=BigInt(2);function Ti(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&a.constructor.name==="Uint8Array"}function ya(a){if(!Ti(a))throw new Error("Uint8Array expected")}function oi(a,t){if(typeof t!="boolean")throw new Error(a+" boolean expected, got "+t)}const Qg=Array.from({length:256},(a,t)=>t.toString(16).padStart(2,"0"));function Ri(a){ya(a);let t="";for(let e=0;e<a.length;e++)t+=Qg[a[e]];return t}function Xi(a){const t=a.toString(16);return t.length&1?"0"+t:t}function Bl(a){if(typeof a!="string")throw new Error("hex string expected, got "+typeof a);return a===""?Us:BigInt("0x"+a)}const Vn={_0:48,_9:57,A:65,F:70,a:97,f:102};function hu(a){if(a>=Vn._0&&a<=Vn._9)return a-Vn._0;if(a>=Vn.A&&a<=Vn.F)return a-(Vn.A-10);if(a>=Vn.a&&a<=Vn.f)return a-(Vn.a-10)}function ro(a){if(typeof a!="string")throw new Error("hex string expected, got "+typeof a);const t=a.length,e=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);const n=new Uint8Array(e);for(let i=0,o=0;i<e;i++,o+=2){const s=hu(a.charCodeAt(o)),r=hu(a.charCodeAt(o+1));if(s===void 0||r===void 0){const u=a[o]+a[o+1];throw new Error('hex string expected, got non-hex character "'+u+'" at index '+o)}n[i]=s*16+r}return n}function Di(a){return Bl(Ri(a))}function no(a){return ya(a),Bl(Ri(Uint8Array.from(a).reverse()))}function co(a,t){return ro(a.toString(16).padStart(t*2,"0"))}function ha(a,t){return co(a,t).reverse()}function Kg(a){return ro(Xi(a))}function He(a,t,e){let n;if(typeof t=="string")try{n=ro(t)}catch(o){throw new Error(a+" must be hex string or Uint8Array, cause: "+o)}else if(Ti(t))n=Uint8Array.from(t);else throw new Error(a+" must be hex string or Uint8Array");const i=n.length;if(typeof e=="number"&&i!==e)throw new Error(a+" of length "+e+" expected, got "+i);return n}function Hi(...a){let t=0;for(let n=0;n<a.length;n++){const i=a[n];ya(i),t+=i.length}const e=new Uint8Array(t);for(let n=0,i=0;n<a.length;n++){const o=a[n];e.set(o,i),i+=o.length}return e}function Ng(a,t){if(a.length!==t.length)return!1;let e=0;for(let n=0;n<a.length;n++)e|=a[n]^t[n];return e===0}function zg(a){if(typeof a!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(a))}const or=a=>typeof a=="bigint"&&Us<=a;function Ps(a,t,e){return or(a)&&or(t)&&or(e)&&t<=a&&a<e}function Mn(a,t,e,n){if(!Ps(t,e,n))throw new Error("expected valid "+a+": "+e+" <= n < "+n+", got "+t)}function S2(a){let t;for(t=0;a>Us;a>>=Gs,t+=1);return t}function Jg(a,t){return a>>BigInt(t)&Gs}function Yg(a,t,e){return a|(e?Gs:Us)<<BigInt(t)}const vl=a=>(Hg<<BigInt(a-1))-Gs,ar=a=>new Uint8Array(a),gu=a=>Uint8Array.from(a);function _2(a,t,e){if(typeof a!="number"||a<2)throw new Error("hashLen must be a number");if(typeof t!="number"||t<2)throw new Error("qByteLen must be a number");if(typeof e!="function")throw new Error("hmacFn must be a function");let n=ar(a),i=ar(a),o=0;const s=()=>{n.fill(1),i.fill(0),o=0},r=(...f)=>e(i,n,...f),u=(f=ar())=>{i=r(gu([0]),f),n=r(),f.length!==0&&(i=r(gu([1]),f),n=r())},l=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let f=0;const g=[];for(;f<t;){n=r();const L=n.slice();g.push(L),f+=n.length}return Hi(...g)};return(f,g)=>{s(),u(f);let L;for(;!(L=g(l()));)u();return s(),L}}const jg={bigint:a=>typeof a=="bigint",function:a=>typeof a=="function",boolean:a=>typeof a=="boolean",string:a=>typeof a=="string",stringOrUint8Array:a=>typeof a=="string"||Ti(a),isSafeInteger:a=>Number.isSafeInteger(a),array:a=>Array.isArray(a),field:(a,t)=>t.Fp.isValid(a),hash:a=>typeof a=="function"&&Number.isSafeInteger(a.outputLen)};function Lo(a,t,e={}){const n=(i,o,s)=>{const r=jg[o];if(typeof r!="function")throw new Error("invalid validator function");const u=a[i];if(!(s&&u===void 0)&&!r(u,a))throw new Error("param "+String(i)+" is invalid. Expected "+o+", got "+u)};for(const[i,o]of Object.entries(t))n(i,o,!1);for(const[i,o]of Object.entries(e))n(i,o,!0);return a}const Vg=()=>{throw new Error("not implemented")};function ga(a){const t=new WeakMap;return(e,...n)=>{const i=t.get(e);if(i!==void 0)return i;const o=a(e,...n);return t.set(e,o),o}}const Wg=Object.freeze(Object.defineProperty({__proto__:null,aInRange:Mn,abool:oi,abytes:ya,bitGet:Jg,bitLen:S2,bitMask:vl,bitSet:Yg,bytesToHex:Ri,bytesToNumberBE:Di,bytesToNumberLE:no,concatBytes:Hi,createHmacDrbg:_2,ensureBytes:He,equalBytes:Ng,hexToBytes:ro,hexToNumber:Bl,inRange:Ps,isBytes:Ti,memoized:ga,notImplemented:Vg,numberToBytesBE:co,numberToBytesLE:ha,numberToHexUnpadded:Xi,numberToVarBytesBE:Kg,utf8ToBytes:zg,validateObject:Lo},Symbol.toStringTag,{value:"Module"}));/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Ve=BigInt(0),Pe=BigInt(1),Ui=BigInt(2),Zg=BigInt(3),Dc=BigInt(4),pu=BigInt(5),Lu=BigInt(8);function Me(a,t){const e=a%t;return e>=Ve?e:t+e}function Xg(a,t,e){if(t<Ve)throw new Error("invalid exponent, negatives unsupported");if(e<=Ve)throw new Error("invalid modulus");if(e===Pe)return Ve;let n=Pe;for(;t>Ve;)t&Pe&&(n=n*a%e),a=a*a%e,t>>=Pe;return n}function qe(a,t,e){let n=a;for(;t-- >Ve;)n*=n,n%=e;return n}function qc(a,t){if(a===Ve)throw new Error("invert: expected non-zero number");if(t<=Ve)throw new Error("invert: expected positive modulus, got "+t);let e=Me(a,t),n=t,i=Ve,o=Pe;for(;e!==Ve;){const r=n/e,u=n%e,l=i-o*r;n=e,e=u,i=o,o=l}if(n!==Pe)throw new Error("invert: does not exist");return Me(i,t)}function $g(a){const t=(a-Pe)/Ui;let e,n,i;for(e=a-Pe,n=0;e%Ui===Ve;e/=Ui,n++);for(i=Ui;i<a&&Xg(i,t,a)!==a-Pe;i++)if(i>1e3)throw new Error("Cannot find square root: likely non-prime P");if(n===1){const s=(a+Pe)/Dc;return function(u,l){const c=u.pow(l,s);if(!u.eql(u.sqr(c),l))throw new Error("Cannot find square root");return c}}const o=(e+Pe)/Ui;return function(r,u){if(r.pow(u,t)===r.neg(r.ONE))throw new Error("Cannot find square root");let l=n,c=r.pow(r.mul(r.ONE,i),e),f=r.pow(u,o),g=r.pow(u,e);for(;!r.eql(g,r.ONE);){if(r.eql(g,r.ZERO))return r.ZERO;let L=1;for(let k=r.sqr(g);L<l&&!r.eql(k,r.ONE);L++)k=r.sqr(k);const S=r.pow(c,Pe<<BigInt(l-L-1));c=r.sqr(S),f=r.mul(f,S),g=r.mul(g,c),l=L}return f}}function t3(a){if(a%Dc===Zg){const t=(a+Pe)/Dc;return function(n,i){const o=n.pow(i,t);if(!n.eql(n.sqr(o),i))throw new Error("Cannot find square root");return o}}if(a%Lu===pu){const t=(a-pu)/Lu;return function(n,i){const o=n.mul(i,Ui),s=n.pow(o,t),r=n.mul(i,s),u=n.mul(n.mul(r,Ui),s),l=n.mul(r,n.sub(u,n.ONE));if(!n.eql(n.sqr(l),i))throw new Error("Cannot find square root");return l}}return $g(a)}const e3=(a,t)=>(Me(a,t)&Pe)===Pe,n3=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function i3(a){const t={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},e=n3.reduce((n,i)=>(n[i]="function",n),t);return Lo(a,e)}function o3(a,t,e){if(e<Ve)throw new Error("invalid exponent, negatives unsupported");if(e===Ve)return a.ONE;if(e===Pe)return t;let n=a.ONE,i=t;for(;e>Ve;)e&Pe&&(n=a.mul(n,i)),i=a.sqr(i),e>>=Pe;return n}function a3(a,t){const e=new Array(t.length),n=t.reduce((o,s,r)=>a.is0(s)?o:(e[r]=o,a.mul(o,s)),a.ONE),i=a.inv(n);return t.reduceRight((o,s,r)=>a.is0(s)?o:(e[r]=a.mul(o,e[r]),a.mul(o,s)),i),e}function x2(a,t){const e=t!==void 0?t:a.toString(2).length,n=Math.ceil(e/8);return{nBitLength:e,nByteLength:n}}function Os(a,t,e=!1,n={}){if(a<=Ve)throw new Error("invalid field: expected ORDER > 0, got "+a);const{nBitLength:i,nByteLength:o}=x2(a,t);if(o>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let s;const r=Object.freeze({ORDER:a,isLE:e,BITS:i,BYTES:o,MASK:vl(i),ZERO:Ve,ONE:Pe,create:u=>Me(u,a),isValid:u=>{if(typeof u!="bigint")throw new Error("invalid field element: expected bigint, got "+typeof u);return Ve<=u&&u<a},is0:u=>u===Ve,isOdd:u=>(u&Pe)===Pe,neg:u=>Me(-u,a),eql:(u,l)=>u===l,sqr:u=>Me(u*u,a),add:(u,l)=>Me(u+l,a),sub:(u,l)=>Me(u-l,a),mul:(u,l)=>Me(u*l,a),pow:(u,l)=>o3(r,u,l),div:(u,l)=>Me(u*qc(l,a),a),sqrN:u=>u*u,addN:(u,l)=>u+l,subN:(u,l)=>u-l,mulN:(u,l)=>u*l,inv:u=>qc(u,a),sqrt:n.sqrt||(u=>(s||(s=t3(a)),s(r,u))),invertBatch:u=>a3(r,u),cmov:(u,l,c)=>c?l:u,toBytes:u=>e?ha(u,o):co(u,o),fromBytes:u=>{if(u.length!==o)throw new Error("Field.fromBytes: expected "+o+" bytes, got "+u.length);return e?no(u):Di(u)}});return Object.freeze(r)}function M2(a){if(typeof a!="bigint")throw new Error("field order must be bigint");const t=a.toString(2).length;return Math.ceil(t/8)}function k2(a){const t=M2(a);return t+Math.ceil(t/2)}function s3(a,t,e=!1){const n=a.length,i=M2(t),o=k2(t);if(n<16||n<o||n>1024)throw new Error("expected "+o+"-1024 bytes of input, got "+n);const s=e?no(a):Di(a),r=Me(s,t-Pe)+Pe;return e?ha(r,i):co(r,i)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const wu=BigInt(0),Ua=BigInt(1);function sr(a,t){const e=t.negate();return a?e:t}function U2(a,t){if(!Number.isSafeInteger(a)||a<=0||a>t)throw new Error("invalid window size, expected [1.."+t+"], got W="+a)}function rr(a,t){U2(a,t);const e=Math.ceil(t/a)+1,n=2**(a-1);return{windows:e,windowSize:n}}function r3(a,t){if(!Array.isArray(a))throw new Error("array expected");a.forEach((e,n)=>{if(!(e instanceof t))throw new Error("invalid point at index "+n)})}function c3(a,t){if(!Array.isArray(a))throw new Error("array of scalars expected");a.forEach((e,n)=>{if(!t.isValid(e))throw new Error("invalid scalar at index "+n)})}const cr=new WeakMap,G2=new WeakMap;function lr(a){return G2.get(a)||1}function P2(a,t){return{constTimeNegate:sr,hasPrecomputes(e){return lr(e)!==1},unsafeLadder(e,n,i=a.ZERO){let o=e;for(;n>wu;)n&Ua&&(i=i.add(o)),o=o.double(),n>>=Ua;return i},precomputeWindow(e,n){const{windows:i,windowSize:o}=rr(n,t),s=[];let r=e,u=r;for(let l=0;l<i;l++){u=r,s.push(u);for(let c=1;c<o;c++)u=u.add(r),s.push(u);r=u.double()}return s},wNAF(e,n,i){const{windows:o,windowSize:s}=rr(e,t);let r=a.ZERO,u=a.BASE;const l=BigInt(2**e-1),c=2**e,f=BigInt(e);for(let g=0;g<o;g++){const L=g*s;let S=Number(i&l);i>>=f,S>s&&(S-=c,i+=Ua);const k=L,E=L+Math.abs(S)-1,G=g%2!==0,C=S<0;S===0?u=u.add(sr(G,n[k])):r=r.add(sr(C,n[E]))}return{p:r,f:u}},wNAFUnsafe(e,n,i,o=a.ZERO){const{windows:s,windowSize:r}=rr(e,t),u=BigInt(2**e-1),l=2**e,c=BigInt(e);for(let f=0;f<s;f++){const g=f*r;if(i===wu)break;let L=Number(i&u);if(i>>=c,L>r&&(L-=l,i+=Ua),L===0)continue;let S=n[g+Math.abs(L)-1];L<0&&(S=S.negate()),o=o.add(S)}return o},getPrecomputes(e,n,i){let o=cr.get(n);return o||(o=this.precomputeWindow(n,e),e!==1&&cr.set(n,i(o))),o},wNAFCached(e,n,i){const o=lr(e);return this.wNAF(o,this.getPrecomputes(o,e,i),n)},wNAFCachedUnsafe(e,n,i,o){const s=lr(e);return s===1?this.unsafeLadder(e,n,o):this.wNAFUnsafe(s,this.getPrecomputes(s,e,i),n,o)},setWindowSize(e,n){U2(n,t),G2.set(e,n),cr.delete(e)}}}function O2(a,t,e,n){if(r3(e,a),c3(n,t),e.length!==n.length)throw new Error("arrays of points and scalars must have equal length");const i=a.ZERO,o=S2(BigInt(e.length)),s=o>12?o-3:o>4?o-2:o?2:1,r=(1<<s)-1,u=new Array(r+1).fill(i),l=Math.floor((t.BITS-1)/s)*s;let c=i;for(let f=l;f>=0;f-=s){u.fill(i);for(let L=0;L<n.length;L++){const S=n[L],k=Number(S>>BigInt(f)&BigInt(r));u[k]=u[k].add(e[L])}let g=i;for(let L=u.length-1,S=i;L>0;L--)S=S.add(u[L]),g=g.add(S);if(c=c.add(g),f!==0)for(let L=0;L<s;L++)c=c.double()}return c}function Fl(a){return i3(a.Fp),Lo(a,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...x2(a.n,a.nBitLength),...a,p:a.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Un=BigInt(0),wn=BigInt(1),Ga=BigInt(2),l3=BigInt(8),u3={zip215:!0};function d3(a){const t=Fl(a);return Lo(a,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}function f3(a){const t=d3(a),{Fp:e,n,prehash:i,hash:o,randomBytes:s,nByteLength:r,h:u}=t,l=Ga<<BigInt(r*8)-wn,c=e.create,f=Os(t.n,t.nBitLength),g=t.uvRatio||((T,B)=>{try{return{isValid:!0,value:e.sqrt(T*e.inv(B))}}catch{return{isValid:!1,value:Un}}}),L=t.adjustScalarBytes||(T=>T),S=t.domain||((T,B,Y)=>{if(oi("phflag",Y),B.length||Y)throw new Error("Contexts/pre-hash are not supported");return T});function k(T,B){Mn("coordinate "+T,B,Un,l)}function E(T){if(!(T instanceof N))throw new Error("ExtendedPoint expected")}const G=ga((T,B)=>{const{ex:Y,ey:tt,ez:$}=T,X=T.is0();B==null&&(B=X?l3:e.inv($));const F=c(Y*B),M=c(tt*B),W=c($*B);if(X)return{x:Un,y:wn};if(W!==wn)throw new Error("invZ was invalid");return{x:F,y:M}}),C=ga(T=>{const{a:B,d:Y}=t;if(T.is0())throw new Error("bad point: ZERO");const{ex:tt,ey:$,ez:X,et:F}=T,M=c(tt*tt),W=c($*$),A=c(X*X),h=c(A*A),Q=c(M*B),p=c(A*c(Q+W)),d=c(h+c(Y*c(M*W)));if(p!==d)throw new Error("bad point: equation left != right (1)");const m=c(tt*$),v=c(X*F);if(m!==v)throw new Error("bad point: equation left != right (2)");return!0});class N{constructor(B,Y,tt,$){this.ex=B,this.ey=Y,this.ez=tt,this.et=$,k("x",B),k("y",Y),k("z",tt),k("t",$),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(B){if(B instanceof N)throw new Error("extended point not allowed");const{x:Y,y:tt}=B||{};return k("x",Y),k("y",tt),new N(Y,tt,wn,c(Y*tt))}static normalizeZ(B){const Y=e.invertBatch(B.map(tt=>tt.ez));return B.map((tt,$)=>tt.toAffine(Y[$])).map(N.fromAffine)}static msm(B,Y){return O2(N,f,B,Y)}_setWindowSize(B){R.setWindowSize(this,B)}assertValidity(){C(this)}equals(B){E(B);const{ex:Y,ey:tt,ez:$}=this,{ex:X,ey:F,ez:M}=B,W=c(Y*M),A=c(X*$),h=c(tt*M),Q=c(F*$);return W===A&&h===Q}is0(){return this.equals(N.ZERO)}negate(){return new N(c(-this.ex),this.ey,this.ez,c(-this.et))}double(){const{a:B}=t,{ex:Y,ey:tt,ez:$}=this,X=c(Y*Y),F=c(tt*tt),M=c(Ga*c($*$)),W=c(B*X),A=Y+tt,h=c(c(A*A)-X-F),Q=W+F,p=Q-M,d=W-F,m=c(h*p),v=c(Q*d),et=c(h*d),ct=c(p*Q);return new N(m,v,ct,et)}add(B){E(B);const{a:Y,d:tt}=t,{ex:$,ey:X,ez:F,et:M}=this,{ex:W,ey:A,ez:h,et:Q}=B;if(Y===BigInt(-1)){const yt=c((X-$)*(A+W)),It=c((X+$)*(A-W)),Ut=c(It-yt);if(Ut===Un)return this.double();const Dt=c(F*Ga*Q),Mt=c(M*Ga*h),Qt=Mt+Dt,it=It+yt,K=Mt-Dt,U=c(Qt*Ut),D=c(it*K),ot=c(Qt*K),st=c(Ut*it);return new N(U,D,st,ot)}const p=c($*W),d=c(X*A),m=c(M*tt*Q),v=c(F*h),et=c(($+X)*(W+A)-p-d),ct=v-m,dt=v+m,ft=c(d-Y*p),Ft=c(et*ct),rt=c(dt*ft),z=c(et*ft),wt=c(ct*dt);return new N(Ft,rt,wt,z)}subtract(B){return this.add(B.negate())}wNAF(B){return R.wNAFCached(this,B,N.normalizeZ)}multiply(B){const Y=B;Mn("scalar",Y,wn,n);const{p:tt,f:$}=this.wNAF(Y);return N.normalizeZ([tt,$])[0]}multiplyUnsafe(B,Y=N.ZERO){const tt=B;return Mn("scalar",tt,Un,n),tt===Un?j:this.is0()||tt===wn?this:R.wNAFCachedUnsafe(this,tt,N.normalizeZ,Y)}isSmallOrder(){return this.multiplyUnsafe(u).is0()}isTorsionFree(){return R.unsafeLadder(this,n).is0()}toAffine(B){return G(this,B)}clearCofactor(){const{h:B}=t;return B===wn?this:this.multiplyUnsafe(B)}static fromHex(B,Y=!1){const{d:tt,a:$}=t,X=e.BYTES;B=He("pointHex",B,X),oi("zip215",Y);const F=B.slice(),M=B[X-1];F[X-1]=M&-129;const W=no(F),A=Y?l:e.ORDER;Mn("pointHex.y",W,Un,A);const h=c(W*W),Q=c(h-wn),p=c(tt*h-$);let{isValid:d,value:m}=g(Q,p);if(!d)throw new Error("Point.fromHex: invalid y coordinate");const v=(m&wn)===wn,et=(M&128)!==0;if(!Y&&m===Un&&et)throw new Error("Point.fromHex: x=0 and x_0=1");return et!==v&&(m=c(-m)),N.fromAffine({x:m,y:W})}static fromPrivateKey(B){return Z(B).point}toRawBytes(){const{x:B,y:Y}=this.toAffine(),tt=ha(Y,e.BYTES);return tt[tt.length-1]|=B&wn?128:0,tt}toHex(){return Ri(this.toRawBytes())}}N.BASE=new N(t.Gx,t.Gy,wn,c(t.Gx*t.Gy)),N.ZERO=new N(Un,wn,wn,Un);const{BASE:J,ZERO:j}=N,R=P2(N,r*8);function b(T){return Me(T,n)}function w(T){return b(no(T))}function Z(T){const B=e.BYTES;T=He("private key",T,B);const Y=He("hashed private key",o(T),2*B),tt=L(Y.slice(0,B)),$=Y.slice(B,2*B),X=w(tt),F=J.multiply(X),M=F.toRawBytes();return{head:tt,prefix:$,scalar:X,point:F,pointBytes:M}}function P(T){return Z(T).pointBytes}function V(T=new Uint8Array,...B){const Y=Hi(...B);return w(o(S(Y,He("context",T),!!i)))}function nt(T,B,Y={}){T=He("message",T),i&&(T=i(T));const{prefix:tt,scalar:$,pointBytes:X}=Z(B),F=V(Y.context,tt,T),M=J.multiply(F).toRawBytes(),W=V(Y.context,M,X,T),A=b(F+W*$);Mn("signature.s",A,Un,n);const h=Hi(M,ha(A,e.BYTES));return He("result",h,e.BYTES*2)}const I=u3;function y(T,B,Y,tt=I){const{context:$,zip215:X}=tt,F=e.BYTES;T=He("signature",T,2*F),B=He("message",B),Y=He("publicKey",Y,F),X!==void 0&&oi("zip215",X),i&&(B=i(B));const M=no(T.slice(F,2*F));let W,A,h;try{W=N.fromHex(Y,X),A=N.fromHex(T.slice(0,F),X),h=J.multiplyUnsafe(M)}catch{return!1}if(!X&&W.isSmallOrder())return!1;const Q=V($,A.toRawBytes(),W.toRawBytes(),B);return A.add(W.multiplyUnsafe(Q)).subtract(h).clearCofactor().equals(N.ZERO)}return J._setWindowSize(8),{CURVE:t,getPublicKey:P,sign:nt,verify:y,ExtendedPoint:N,utils:{getExtendedPublicKey:Z,randomPrivateKey:()=>s(e.BYTES),precompute(T=8,B=N.BASE){return B._setWindowSize(T),B.multiply(BigInt(3)),B}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Sl=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),mu=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt(0);const h3=BigInt(1),bu=BigInt(2);BigInt(3);const g3=BigInt(5),p3=BigInt(8);function L3(a){const t=BigInt(10),e=BigInt(20),n=BigInt(40),i=BigInt(80),o=Sl,r=a*a%o*a%o,u=qe(r,bu,o)*r%o,l=qe(u,h3,o)*a%o,c=qe(l,g3,o)*l%o,f=qe(c,t,o)*c%o,g=qe(f,e,o)*f%o,L=qe(g,n,o)*g%o,S=qe(L,i,o)*L%o,k=qe(S,i,o)*L%o,E=qe(k,t,o)*c%o;return{pow_p_5_8:qe(E,bu,o)*a%o,b2:r}}function w3(a){return a[0]&=248,a[31]&=127,a[31]|=64,a}function m3(a,t){const e=Sl,n=Me(t*t*t,e),i=Me(n*n*t,e),o=L3(a*i).pow_p_5_8;let s=Me(a*n*o,e);const r=Me(t*s*s,e),u=s,l=Me(s*mu,e),c=r===a,f=r===Me(-a,e),g=r===Me(-a*mu,e);return c&&(s=u),(f||g)&&(s=l),e3(s,e)&&(s=Me(-s,e)),{isValid:c||f,value:s}}const b3=Os(Sl,void 0,!0),y3={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:b3,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:p3,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Rg,randomBytes:B2,adjustScalarBytes:w3,uvRatio:m3},_l=f3(y3);var cs={exports:{}};const A3={},I3=Object.freeze(Object.defineProperty({__proto__:null,default:A3},Symbol.toStringTag,{value:"Module"})),E3=Il(I3);var C3=cs.exports,yu;function D2(){return yu||(yu=1,function(a){(function(t,e){function n(I,y){if(!I)throw new Error(y||"Assertion failed")}function i(I,y){I.super_=y;var _=function(){};_.prototype=y.prototype,I.prototype=new _,I.prototype.constructor=I}function o(I,y,_){if(o.isBN(I))return I;this.negative=0,this.words=null,this.length=0,this.red=null,I!==null&&((y==="le"||y==="be")&&(_=y,y=10),this._init(I||0,y||10,_||"be"))}typeof t=="object"?t.exports=o:e.BN=o,o.BN=o,o.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=E3.Buffer}catch{}o.isBN=function(y){return y instanceof o?!0:y!==null&&typeof y=="object"&&y.constructor.wordSize===o.wordSize&&Array.isArray(y.words)},o.max=function(y,_){return y.cmp(_)>0?y:_},o.min=function(y,_){return y.cmp(_)<0?y:_},o.prototype._init=function(y,_,T){if(typeof y=="number")return this._initNumber(y,_,T);if(typeof y=="object")return this._initArray(y,_,T);_==="hex"&&(_=16),n(_===(_|0)&&_>=2&&_<=36),y=y.toString().replace(/\s+/g,"");var B=0;y[0]==="-"&&(B++,this.negative=1),B<y.length&&(_===16?this._parseHex(y,B,T):(this._parseBase(y,_,B),T==="le"&&this._initArray(this.toArray(),_,T)))},o.prototype._initNumber=function(y,_,T){y<0&&(this.negative=1,y=-y),y<67108864?(this.words=[y&67108863],this.length=1):y<4503599627370496?(this.words=[y&67108863,y/67108864&67108863],this.length=2):(n(y<9007199254740992),this.words=[y&67108863,y/67108864&67108863,1],this.length=3),T==="le"&&this._initArray(this.toArray(),_,T)},o.prototype._initArray=function(y,_,T){if(n(typeof y.length=="number"),y.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(y.length/3),this.words=new Array(this.length);for(var B=0;B<this.length;B++)this.words[B]=0;var Y,tt,$=0;if(T==="be")for(B=y.length-1,Y=0;B>=0;B-=3)tt=y[B]|y[B-1]<<8|y[B-2]<<16,this.words[Y]|=tt<<$&67108863,this.words[Y+1]=tt>>>26-$&67108863,$+=24,$>=26&&($-=26,Y++);else if(T==="le")for(B=0,Y=0;B<y.length;B+=3)tt=y[B]|y[B+1]<<8|y[B+2]<<16,this.words[Y]|=tt<<$&67108863,this.words[Y+1]=tt>>>26-$&67108863,$+=24,$>=26&&($-=26,Y++);return this._strip()};function r(I,y){var _=I.charCodeAt(y);if(_>=48&&_<=57)return _-48;if(_>=65&&_<=70)return _-55;if(_>=97&&_<=102)return _-87;n(!1,"Invalid character in "+I)}function u(I,y,_){var T=r(I,_);return _-1>=y&&(T|=r(I,_-1)<<4),T}o.prototype._parseHex=function(y,_,T){this.length=Math.ceil((y.length-_)/6),this.words=new Array(this.length);for(var B=0;B<this.length;B++)this.words[B]=0;var Y=0,tt=0,$;if(T==="be")for(B=y.length-1;B>=_;B-=2)$=u(y,_,B)<<Y,this.words[tt]|=$&67108863,Y>=18?(Y-=18,tt+=1,this.words[tt]|=$>>>26):Y+=8;else{var X=y.length-_;for(B=X%2===0?_+1:_;B<y.length;B+=2)$=u(y,_,B)<<Y,this.words[tt]|=$&67108863,Y>=18?(Y-=18,tt+=1,this.words[tt]|=$>>>26):Y+=8}this._strip()};function l(I,y,_,T){for(var B=0,Y=0,tt=Math.min(I.length,_),$=y;$<tt;$++){var X=I.charCodeAt($)-48;B*=T,X>=49?Y=X-49+10:X>=17?Y=X-17+10:Y=X,n(X>=0&&Y<T,"Invalid character"),B+=Y}return B}o.prototype._parseBase=function(y,_,T){this.words=[0],this.length=1;for(var B=0,Y=1;Y<=67108863;Y*=_)B++;B--,Y=Y/_|0;for(var tt=y.length-T,$=tt%B,X=Math.min(tt,tt-$)+T,F=0,M=T;M<X;M+=B)F=l(y,M,M+B,_),this.imuln(Y),this.words[0]+F<67108864?this.words[0]+=F:this._iaddn(F);if($!==0){var W=1;for(F=l(y,M,y.length,_),M=0;M<$;M++)W*=_;this.imuln(W),this.words[0]+F<67108864?this.words[0]+=F:this._iaddn(F)}this._strip()},o.prototype.copy=function(y){y.words=new Array(this.length);for(var _=0;_<this.length;_++)y.words[_]=this.words[_];y.length=this.length,y.negative=this.negative,y.red=this.red};function c(I,y){I.words=y.words,I.length=y.length,I.negative=y.negative,I.red=y.red}if(o.prototype._move=function(y){c(y,this)},o.prototype.clone=function(){var y=new o(null);return this.copy(y),y},o.prototype._expand=function(y){for(;this.length<y;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},o.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{o.prototype[Symbol.for("nodejs.util.inspect.custom")]=f}catch{o.prototype.inspect=f}else o.prototype.inspect=f;function f(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var g=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],L=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],S=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(y,_){y=y||10,_=_|0||1;var T;if(y===16||y==="hex"){T="";for(var B=0,Y=0,tt=0;tt<this.length;tt++){var $=this.words[tt],X=(($<<B|Y)&16777215).toString(16);Y=$>>>24-B&16777215,B+=2,B>=26&&(B-=26,tt--),Y!==0||tt!==this.length-1?T=g[6-X.length]+X+T:T=X+T}for(Y!==0&&(T=Y.toString(16)+T);T.length%_!==0;)T="0"+T;return this.negative!==0&&(T="-"+T),T}if(y===(y|0)&&y>=2&&y<=36){var F=L[y],M=S[y];T="";var W=this.clone();for(W.negative=0;!W.isZero();){var A=W.modrn(M).toString(y);W=W.idivn(M),W.isZero()?T=A+T:T=g[F-A.length]+A+T}for(this.isZero()&&(T="0"+T);T.length%_!==0;)T="0"+T;return this.negative!==0&&(T="-"+T),T}n(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var y=this.words[0];return this.length===2?y+=this.words[1]*67108864:this.length===3&&this.words[2]===1?y+=4503599627370496+this.words[1]*67108864:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-y:y},o.prototype.toJSON=function(){return this.toString(16,2)},s&&(o.prototype.toBuffer=function(y,_){return this.toArrayLike(s,y,_)}),o.prototype.toArray=function(y,_){return this.toArrayLike(Array,y,_)};var k=function(y,_){return y.allocUnsafe?y.allocUnsafe(_):new y(_)};o.prototype.toArrayLike=function(y,_,T){this._strip();var B=this.byteLength(),Y=T||Math.max(1,B);n(B<=Y,"byte array longer than desired length"),n(Y>0,"Requested array length <= 0");var tt=k(y,Y),$=_==="le"?"LE":"BE";return this["_toArrayLike"+$](tt,B),tt},o.prototype._toArrayLikeLE=function(y,_){for(var T=0,B=0,Y=0,tt=0;Y<this.length;Y++){var $=this.words[Y]<<tt|B;y[T++]=$&255,T<y.length&&(y[T++]=$>>8&255),T<y.length&&(y[T++]=$>>16&255),tt===6?(T<y.length&&(y[T++]=$>>24&255),B=0,tt=0):(B=$>>>24,tt+=2)}if(T<y.length)for(y[T++]=B;T<y.length;)y[T++]=0},o.prototype._toArrayLikeBE=function(y,_){for(var T=y.length-1,B=0,Y=0,tt=0;Y<this.length;Y++){var $=this.words[Y]<<tt|B;y[T--]=$&255,T>=0&&(y[T--]=$>>8&255),T>=0&&(y[T--]=$>>16&255),tt===6?(T>=0&&(y[T--]=$>>24&255),B=0,tt=0):(B=$>>>24,tt+=2)}if(T>=0)for(y[T--]=B;T>=0;)y[T--]=0},Math.clz32?o.prototype._countBits=function(y){return 32-Math.clz32(y)}:o.prototype._countBits=function(y){var _=y,T=0;return _>=4096&&(T+=13,_>>>=13),_>=64&&(T+=7,_>>>=7),_>=8&&(T+=4,_>>>=4),_>=2&&(T+=2,_>>>=2),T+_},o.prototype._zeroBits=function(y){if(y===0)return 26;var _=y,T=0;return(_&8191)===0&&(T+=13,_>>>=13),(_&127)===0&&(T+=7,_>>>=7),(_&15)===0&&(T+=4,_>>>=4),(_&3)===0&&(T+=2,_>>>=2),(_&1)===0&&T++,T},o.prototype.bitLength=function(){var y=this.words[this.length-1],_=this._countBits(y);return(this.length-1)*26+_};function E(I){for(var y=new Array(I.bitLength()),_=0;_<y.length;_++){var T=_/26|0,B=_%26;y[_]=I.words[T]>>>B&1}return y}o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var y=0,_=0;_<this.length;_++){var T=this._zeroBits(this.words[_]);if(y+=T,T!==26)break}return y},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(y){return this.negative!==0?this.abs().inotn(y).iaddn(1):this.clone()},o.prototype.fromTwos=function(y){return this.testn(y-1)?this.notn(y).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return this.negative!==0},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(y){for(;this.length<y.length;)this.words[this.length++]=0;for(var _=0;_<y.length;_++)this.words[_]=this.words[_]|y.words[_];return this._strip()},o.prototype.ior=function(y){return n((this.negative|y.negative)===0),this.iuor(y)},o.prototype.or=function(y){return this.length>y.length?this.clone().ior(y):y.clone().ior(this)},o.prototype.uor=function(y){return this.length>y.length?this.clone().iuor(y):y.clone().iuor(this)},o.prototype.iuand=function(y){var _;this.length>y.length?_=y:_=this;for(var T=0;T<_.length;T++)this.words[T]=this.words[T]&y.words[T];return this.length=_.length,this._strip()},o.prototype.iand=function(y){return n((this.negative|y.negative)===0),this.iuand(y)},o.prototype.and=function(y){return this.length>y.length?this.clone().iand(y):y.clone().iand(this)},o.prototype.uand=function(y){return this.length>y.length?this.clone().iuand(y):y.clone().iuand(this)},o.prototype.iuxor=function(y){var _,T;this.length>y.length?(_=this,T=y):(_=y,T=this);for(var B=0;B<T.length;B++)this.words[B]=_.words[B]^T.words[B];if(this!==_)for(;B<_.length;B++)this.words[B]=_.words[B];return this.length=_.length,this._strip()},o.prototype.ixor=function(y){return n((this.negative|y.negative)===0),this.iuxor(y)},o.prototype.xor=function(y){return this.length>y.length?this.clone().ixor(y):y.clone().ixor(this)},o.prototype.uxor=function(y){return this.length>y.length?this.clone().iuxor(y):y.clone().iuxor(this)},o.prototype.inotn=function(y){n(typeof y=="number"&&y>=0);var _=Math.ceil(y/26)|0,T=y%26;this._expand(_),T>0&&_--;for(var B=0;B<_;B++)this.words[B]=~this.words[B]&67108863;return T>0&&(this.words[B]=~this.words[B]&67108863>>26-T),this._strip()},o.prototype.notn=function(y){return this.clone().inotn(y)},o.prototype.setn=function(y,_){n(typeof y=="number"&&y>=0);var T=y/26|0,B=y%26;return this._expand(T+1),_?this.words[T]=this.words[T]|1<<B:this.words[T]=this.words[T]&~(1<<B),this._strip()},o.prototype.iadd=function(y){var _;if(this.negative!==0&&y.negative===0)return this.negative=0,_=this.isub(y),this.negative^=1,this._normSign();if(this.negative===0&&y.negative!==0)return y.negative=0,_=this.isub(y),y.negative=1,_._normSign();var T,B;this.length>y.length?(T=this,B=y):(T=y,B=this);for(var Y=0,tt=0;tt<B.length;tt++)_=(T.words[tt]|0)+(B.words[tt]|0)+Y,this.words[tt]=_&67108863,Y=_>>>26;for(;Y!==0&&tt<T.length;tt++)_=(T.words[tt]|0)+Y,this.words[tt]=_&67108863,Y=_>>>26;if(this.length=T.length,Y!==0)this.words[this.length]=Y,this.length++;else if(T!==this)for(;tt<T.length;tt++)this.words[tt]=T.words[tt];return this},o.prototype.add=function(y){var _;return y.negative!==0&&this.negative===0?(y.negative=0,_=this.sub(y),y.negative^=1,_):y.negative===0&&this.negative!==0?(this.negative=0,_=y.sub(this),this.negative=1,_):this.length>y.length?this.clone().iadd(y):y.clone().iadd(this)},o.prototype.isub=function(y){if(y.negative!==0){y.negative=0;var _=this.iadd(y);return y.negative=1,_._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(y),this.negative=1,this._normSign();var T=this.cmp(y);if(T===0)return this.negative=0,this.length=1,this.words[0]=0,this;var B,Y;T>0?(B=this,Y=y):(B=y,Y=this);for(var tt=0,$=0;$<Y.length;$++)_=(B.words[$]|0)-(Y.words[$]|0)+tt,tt=_>>26,this.words[$]=_&67108863;for(;tt!==0&&$<B.length;$++)_=(B.words[$]|0)+tt,tt=_>>26,this.words[$]=_&67108863;if(tt===0&&$<B.length&&B!==this)for(;$<B.length;$++)this.words[$]=B.words[$];return this.length=Math.max(this.length,$),B!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(y){return this.clone().isub(y)};function G(I,y,_){_.negative=y.negative^I.negative;var T=I.length+y.length|0;_.length=T,T=T-1|0;var B=I.words[0]|0,Y=y.words[0]|0,tt=B*Y,$=tt&67108863,X=tt/67108864|0;_.words[0]=$;for(var F=1;F<T;F++){for(var M=X>>>26,W=X&67108863,A=Math.min(F,y.length-1),h=Math.max(0,F-I.length+1);h<=A;h++){var Q=F-h|0;B=I.words[Q]|0,Y=y.words[h]|0,tt=B*Y+W,M+=tt/67108864|0,W=tt&67108863}_.words[F]=W|0,X=M|0}return X!==0?_.words[F]=X|0:_.length--,_._strip()}var C=function(y,_,T){var B=y.words,Y=_.words,tt=T.words,$=0,X,F,M,W=B[0]|0,A=W&8191,h=W>>>13,Q=B[1]|0,p=Q&8191,d=Q>>>13,m=B[2]|0,v=m&8191,et=m>>>13,ct=B[3]|0,dt=ct&8191,ft=ct>>>13,Ft=B[4]|0,rt=Ft&8191,z=Ft>>>13,wt=B[5]|0,yt=wt&8191,It=wt>>>13,Ut=B[6]|0,Dt=Ut&8191,Mt=Ut>>>13,Qt=B[7]|0,it=Qt&8191,K=Qt>>>13,U=B[8]|0,D=U&8191,ot=U>>>13,st=B[9]|0,lt=st&8191,at=st>>>13,x=Y[0]|0,q=x&8191,gt=x>>>13,mt=Y[1]|0,ut=mt&8191,Ct=mt>>>13,vt=Y[2]|0,kt=vt&8191,Ot=vt>>>13,Rt=Y[3]|0,ht=Rt&8191,O=Rt>>>13,H=Y[4]|0,pt=H&8191,Lt=H>>>13,bt=Y[5]|0,Bt=bt&8191,At=bt>>>13,xt=Y[6]|0,_t=xt&8191,St=xt>>>13,Gt=Y[7]|0,Tt=Gt&8191,zt=Gt>>>13,Xt=Y[8]|0,Kt=Xt&8191,Yt=Xt>>>13,re=Y[9]|0,ie=re&8191,Vt=re>>>13;T.negative=y.negative^_.negative,T.length=19,X=Math.imul(A,q),F=Math.imul(A,gt),F=F+Math.imul(h,q)|0,M=Math.imul(h,gt);var ae=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(ae>>>26)|0,ae&=67108863,X=Math.imul(p,q),F=Math.imul(p,gt),F=F+Math.imul(d,q)|0,M=Math.imul(d,gt),X=X+Math.imul(A,ut)|0,F=F+Math.imul(A,Ct)|0,F=F+Math.imul(h,ut)|0,M=M+Math.imul(h,Ct)|0;var te=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(te>>>26)|0,te&=67108863,X=Math.imul(v,q),F=Math.imul(v,gt),F=F+Math.imul(et,q)|0,M=Math.imul(et,gt),X=X+Math.imul(p,ut)|0,F=F+Math.imul(p,Ct)|0,F=F+Math.imul(d,ut)|0,M=M+Math.imul(d,Ct)|0,X=X+Math.imul(A,kt)|0,F=F+Math.imul(A,Ot)|0,F=F+Math.imul(h,kt)|0,M=M+Math.imul(h,Ot)|0;var Le=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(Le>>>26)|0,Le&=67108863,X=Math.imul(dt,q),F=Math.imul(dt,gt),F=F+Math.imul(ft,q)|0,M=Math.imul(ft,gt),X=X+Math.imul(v,ut)|0,F=F+Math.imul(v,Ct)|0,F=F+Math.imul(et,ut)|0,M=M+Math.imul(et,Ct)|0,X=X+Math.imul(p,kt)|0,F=F+Math.imul(p,Ot)|0,F=F+Math.imul(d,kt)|0,M=M+Math.imul(d,Ot)|0,X=X+Math.imul(A,ht)|0,F=F+Math.imul(A,O)|0,F=F+Math.imul(h,ht)|0,M=M+Math.imul(h,O)|0;var ke=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(ke>>>26)|0,ke&=67108863,X=Math.imul(rt,q),F=Math.imul(rt,gt),F=F+Math.imul(z,q)|0,M=Math.imul(z,gt),X=X+Math.imul(dt,ut)|0,F=F+Math.imul(dt,Ct)|0,F=F+Math.imul(ft,ut)|0,M=M+Math.imul(ft,Ct)|0,X=X+Math.imul(v,kt)|0,F=F+Math.imul(v,Ot)|0,F=F+Math.imul(et,kt)|0,M=M+Math.imul(et,Ot)|0,X=X+Math.imul(p,ht)|0,F=F+Math.imul(p,O)|0,F=F+Math.imul(d,ht)|0,M=M+Math.imul(d,O)|0,X=X+Math.imul(A,pt)|0,F=F+Math.imul(A,Lt)|0,F=F+Math.imul(h,pt)|0,M=M+Math.imul(h,Lt)|0;var We=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(We>>>26)|0,We&=67108863,X=Math.imul(yt,q),F=Math.imul(yt,gt),F=F+Math.imul(It,q)|0,M=Math.imul(It,gt),X=X+Math.imul(rt,ut)|0,F=F+Math.imul(rt,Ct)|0,F=F+Math.imul(z,ut)|0,M=M+Math.imul(z,Ct)|0,X=X+Math.imul(dt,kt)|0,F=F+Math.imul(dt,Ot)|0,F=F+Math.imul(ft,kt)|0,M=M+Math.imul(ft,Ot)|0,X=X+Math.imul(v,ht)|0,F=F+Math.imul(v,O)|0,F=F+Math.imul(et,ht)|0,M=M+Math.imul(et,O)|0,X=X+Math.imul(p,pt)|0,F=F+Math.imul(p,Lt)|0,F=F+Math.imul(d,pt)|0,M=M+Math.imul(d,Lt)|0,X=X+Math.imul(A,Bt)|0,F=F+Math.imul(A,At)|0,F=F+Math.imul(h,Bt)|0,M=M+Math.imul(h,At)|0;var vo=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(vo>>>26)|0,vo&=67108863,X=Math.imul(Dt,q),F=Math.imul(Dt,gt),F=F+Math.imul(Mt,q)|0,M=Math.imul(Mt,gt),X=X+Math.imul(yt,ut)|0,F=F+Math.imul(yt,Ct)|0,F=F+Math.imul(It,ut)|0,M=M+Math.imul(It,Ct)|0,X=X+Math.imul(rt,kt)|0,F=F+Math.imul(rt,Ot)|0,F=F+Math.imul(z,kt)|0,M=M+Math.imul(z,Ot)|0,X=X+Math.imul(dt,ht)|0,F=F+Math.imul(dt,O)|0,F=F+Math.imul(ft,ht)|0,M=M+Math.imul(ft,O)|0,X=X+Math.imul(v,pt)|0,F=F+Math.imul(v,Lt)|0,F=F+Math.imul(et,pt)|0,M=M+Math.imul(et,Lt)|0,X=X+Math.imul(p,Bt)|0,F=F+Math.imul(p,At)|0,F=F+Math.imul(d,Bt)|0,M=M+Math.imul(d,At)|0,X=X+Math.imul(A,_t)|0,F=F+Math.imul(A,St)|0,F=F+Math.imul(h,_t)|0,M=M+Math.imul(h,St)|0;var vi=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(vi>>>26)|0,vi&=67108863,X=Math.imul(it,q),F=Math.imul(it,gt),F=F+Math.imul(K,q)|0,M=Math.imul(K,gt),X=X+Math.imul(Dt,ut)|0,F=F+Math.imul(Dt,Ct)|0,F=F+Math.imul(Mt,ut)|0,M=M+Math.imul(Mt,Ct)|0,X=X+Math.imul(yt,kt)|0,F=F+Math.imul(yt,Ot)|0,F=F+Math.imul(It,kt)|0,M=M+Math.imul(It,Ot)|0,X=X+Math.imul(rt,ht)|0,F=F+Math.imul(rt,O)|0,F=F+Math.imul(z,ht)|0,M=M+Math.imul(z,O)|0,X=X+Math.imul(dt,pt)|0,F=F+Math.imul(dt,Lt)|0,F=F+Math.imul(ft,pt)|0,M=M+Math.imul(ft,Lt)|0,X=X+Math.imul(v,Bt)|0,F=F+Math.imul(v,At)|0,F=F+Math.imul(et,Bt)|0,M=M+Math.imul(et,At)|0,X=X+Math.imul(p,_t)|0,F=F+Math.imul(p,St)|0,F=F+Math.imul(d,_t)|0,M=M+Math.imul(d,St)|0,X=X+Math.imul(A,Tt)|0,F=F+Math.imul(A,zt)|0,F=F+Math.imul(h,Tt)|0,M=M+Math.imul(h,zt)|0;var Fi=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(Fi>>>26)|0,Fi&=67108863,X=Math.imul(D,q),F=Math.imul(D,gt),F=F+Math.imul(ot,q)|0,M=Math.imul(ot,gt),X=X+Math.imul(it,ut)|0,F=F+Math.imul(it,Ct)|0,F=F+Math.imul(K,ut)|0,M=M+Math.imul(K,Ct)|0,X=X+Math.imul(Dt,kt)|0,F=F+Math.imul(Dt,Ot)|0,F=F+Math.imul(Mt,kt)|0,M=M+Math.imul(Mt,Ot)|0,X=X+Math.imul(yt,ht)|0,F=F+Math.imul(yt,O)|0,F=F+Math.imul(It,ht)|0,M=M+Math.imul(It,O)|0,X=X+Math.imul(rt,pt)|0,F=F+Math.imul(rt,Lt)|0,F=F+Math.imul(z,pt)|0,M=M+Math.imul(z,Lt)|0,X=X+Math.imul(dt,Bt)|0,F=F+Math.imul(dt,At)|0,F=F+Math.imul(ft,Bt)|0,M=M+Math.imul(ft,At)|0,X=X+Math.imul(v,_t)|0,F=F+Math.imul(v,St)|0,F=F+Math.imul(et,_t)|0,M=M+Math.imul(et,St)|0,X=X+Math.imul(p,Tt)|0,F=F+Math.imul(p,zt)|0,F=F+Math.imul(d,Tt)|0,M=M+Math.imul(d,zt)|0,X=X+Math.imul(A,Kt)|0,F=F+Math.imul(A,Yt)|0,F=F+Math.imul(h,Kt)|0,M=M+Math.imul(h,Yt)|0;var Fo=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(Fo>>>26)|0,Fo&=67108863,X=Math.imul(lt,q),F=Math.imul(lt,gt),F=F+Math.imul(at,q)|0,M=Math.imul(at,gt),X=X+Math.imul(D,ut)|0,F=F+Math.imul(D,Ct)|0,F=F+Math.imul(ot,ut)|0,M=M+Math.imul(ot,Ct)|0,X=X+Math.imul(it,kt)|0,F=F+Math.imul(it,Ot)|0,F=F+Math.imul(K,kt)|0,M=M+Math.imul(K,Ot)|0,X=X+Math.imul(Dt,ht)|0,F=F+Math.imul(Dt,O)|0,F=F+Math.imul(Mt,ht)|0,M=M+Math.imul(Mt,O)|0,X=X+Math.imul(yt,pt)|0,F=F+Math.imul(yt,Lt)|0,F=F+Math.imul(It,pt)|0,M=M+Math.imul(It,Lt)|0,X=X+Math.imul(rt,Bt)|0,F=F+Math.imul(rt,At)|0,F=F+Math.imul(z,Bt)|0,M=M+Math.imul(z,At)|0,X=X+Math.imul(dt,_t)|0,F=F+Math.imul(dt,St)|0,F=F+Math.imul(ft,_t)|0,M=M+Math.imul(ft,St)|0,X=X+Math.imul(v,Tt)|0,F=F+Math.imul(v,zt)|0,F=F+Math.imul(et,Tt)|0,M=M+Math.imul(et,zt)|0,X=X+Math.imul(p,Kt)|0,F=F+Math.imul(p,Yt)|0,F=F+Math.imul(d,Kt)|0,M=M+Math.imul(d,Yt)|0,X=X+Math.imul(A,ie)|0,F=F+Math.imul(A,Vt)|0,F=F+Math.imul(h,ie)|0,M=M+Math.imul(h,Vt)|0;var Si=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(Si>>>26)|0,Si&=67108863,X=Math.imul(lt,ut),F=Math.imul(lt,Ct),F=F+Math.imul(at,ut)|0,M=Math.imul(at,Ct),X=X+Math.imul(D,kt)|0,F=F+Math.imul(D,Ot)|0,F=F+Math.imul(ot,kt)|0,M=M+Math.imul(ot,Ot)|0,X=X+Math.imul(it,ht)|0,F=F+Math.imul(it,O)|0,F=F+Math.imul(K,ht)|0,M=M+Math.imul(K,O)|0,X=X+Math.imul(Dt,pt)|0,F=F+Math.imul(Dt,Lt)|0,F=F+Math.imul(Mt,pt)|0,M=M+Math.imul(Mt,Lt)|0,X=X+Math.imul(yt,Bt)|0,F=F+Math.imul(yt,At)|0,F=F+Math.imul(It,Bt)|0,M=M+Math.imul(It,At)|0,X=X+Math.imul(rt,_t)|0,F=F+Math.imul(rt,St)|0,F=F+Math.imul(z,_t)|0,M=M+Math.imul(z,St)|0,X=X+Math.imul(dt,Tt)|0,F=F+Math.imul(dt,zt)|0,F=F+Math.imul(ft,Tt)|0,M=M+Math.imul(ft,zt)|0,X=X+Math.imul(v,Kt)|0,F=F+Math.imul(v,Yt)|0,F=F+Math.imul(et,Kt)|0,M=M+Math.imul(et,Yt)|0,X=X+Math.imul(p,ie)|0,F=F+Math.imul(p,Vt)|0,F=F+Math.imul(d,ie)|0,M=M+Math.imul(d,Vt)|0;var _i=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(_i>>>26)|0,_i&=67108863,X=Math.imul(lt,kt),F=Math.imul(lt,Ot),F=F+Math.imul(at,kt)|0,M=Math.imul(at,Ot),X=X+Math.imul(D,ht)|0,F=F+Math.imul(D,O)|0,F=F+Math.imul(ot,ht)|0,M=M+Math.imul(ot,O)|0,X=X+Math.imul(it,pt)|0,F=F+Math.imul(it,Lt)|0,F=F+Math.imul(K,pt)|0,M=M+Math.imul(K,Lt)|0,X=X+Math.imul(Dt,Bt)|0,F=F+Math.imul(Dt,At)|0,F=F+Math.imul(Mt,Bt)|0,M=M+Math.imul(Mt,At)|0,X=X+Math.imul(yt,_t)|0,F=F+Math.imul(yt,St)|0,F=F+Math.imul(It,_t)|0,M=M+Math.imul(It,St)|0,X=X+Math.imul(rt,Tt)|0,F=F+Math.imul(rt,zt)|0,F=F+Math.imul(z,Tt)|0,M=M+Math.imul(z,zt)|0,X=X+Math.imul(dt,Kt)|0,F=F+Math.imul(dt,Yt)|0,F=F+Math.imul(ft,Kt)|0,M=M+Math.imul(ft,Yt)|0,X=X+Math.imul(v,ie)|0,F=F+Math.imul(v,Vt)|0,F=F+Math.imul(et,ie)|0,M=M+Math.imul(et,Vt)|0;var So=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(So>>>26)|0,So&=67108863,X=Math.imul(lt,ht),F=Math.imul(lt,O),F=F+Math.imul(at,ht)|0,M=Math.imul(at,O),X=X+Math.imul(D,pt)|0,F=F+Math.imul(D,Lt)|0,F=F+Math.imul(ot,pt)|0,M=M+Math.imul(ot,Lt)|0,X=X+Math.imul(it,Bt)|0,F=F+Math.imul(it,At)|0,F=F+Math.imul(K,Bt)|0,M=M+Math.imul(K,At)|0,X=X+Math.imul(Dt,_t)|0,F=F+Math.imul(Dt,St)|0,F=F+Math.imul(Mt,_t)|0,M=M+Math.imul(Mt,St)|0,X=X+Math.imul(yt,Tt)|0,F=F+Math.imul(yt,zt)|0,F=F+Math.imul(It,Tt)|0,M=M+Math.imul(It,zt)|0,X=X+Math.imul(rt,Kt)|0,F=F+Math.imul(rt,Yt)|0,F=F+Math.imul(z,Kt)|0,M=M+Math.imul(z,Yt)|0,X=X+Math.imul(dt,ie)|0,F=F+Math.imul(dt,Vt)|0,F=F+Math.imul(ft,ie)|0,M=M+Math.imul(ft,Vt)|0;var ri=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(ri>>>26)|0,ri&=67108863,X=Math.imul(lt,pt),F=Math.imul(lt,Lt),F=F+Math.imul(at,pt)|0,M=Math.imul(at,Lt),X=X+Math.imul(D,Bt)|0,F=F+Math.imul(D,At)|0,F=F+Math.imul(ot,Bt)|0,M=M+Math.imul(ot,At)|0,X=X+Math.imul(it,_t)|0,F=F+Math.imul(it,St)|0,F=F+Math.imul(K,_t)|0,M=M+Math.imul(K,St)|0,X=X+Math.imul(Dt,Tt)|0,F=F+Math.imul(Dt,zt)|0,F=F+Math.imul(Mt,Tt)|0,M=M+Math.imul(Mt,zt)|0,X=X+Math.imul(yt,Kt)|0,F=F+Math.imul(yt,Yt)|0,F=F+Math.imul(It,Kt)|0,M=M+Math.imul(It,Yt)|0,X=X+Math.imul(rt,ie)|0,F=F+Math.imul(rt,Vt)|0,F=F+Math.imul(z,ie)|0,M=M+Math.imul(z,Vt)|0;var jn=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(jn>>>26)|0,jn&=67108863,X=Math.imul(lt,Bt),F=Math.imul(lt,At),F=F+Math.imul(at,Bt)|0,M=Math.imul(at,At),X=X+Math.imul(D,_t)|0,F=F+Math.imul(D,St)|0,F=F+Math.imul(ot,_t)|0,M=M+Math.imul(ot,St)|0,X=X+Math.imul(it,Tt)|0,F=F+Math.imul(it,zt)|0,F=F+Math.imul(K,Tt)|0,M=M+Math.imul(K,zt)|0,X=X+Math.imul(Dt,Kt)|0,F=F+Math.imul(Dt,Yt)|0,F=F+Math.imul(Mt,Kt)|0,M=M+Math.imul(Mt,Yt)|0,X=X+Math.imul(yt,ie)|0,F=F+Math.imul(yt,Vt)|0,F=F+Math.imul(It,ie)|0,M=M+Math.imul(It,Vt)|0;var ji=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(ji>>>26)|0,ji&=67108863,X=Math.imul(lt,_t),F=Math.imul(lt,St),F=F+Math.imul(at,_t)|0,M=Math.imul(at,St),X=X+Math.imul(D,Tt)|0,F=F+Math.imul(D,zt)|0,F=F+Math.imul(ot,Tt)|0,M=M+Math.imul(ot,zt)|0,X=X+Math.imul(it,Kt)|0,F=F+Math.imul(it,Yt)|0,F=F+Math.imul(K,Kt)|0,M=M+Math.imul(K,Yt)|0,X=X+Math.imul(Dt,ie)|0,F=F+Math.imul(Dt,Vt)|0,F=F+Math.imul(Mt,ie)|0,M=M+Math.imul(Mt,Vt)|0;var Xs=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(Xs>>>26)|0,Xs&=67108863,X=Math.imul(lt,Tt),F=Math.imul(lt,zt),F=F+Math.imul(at,Tt)|0,M=Math.imul(at,zt),X=X+Math.imul(D,Kt)|0,F=F+Math.imul(D,Yt)|0,F=F+Math.imul(ot,Kt)|0,M=M+Math.imul(ot,Yt)|0,X=X+Math.imul(it,ie)|0,F=F+Math.imul(it,Vt)|0,F=F+Math.imul(K,ie)|0,M=M+Math.imul(K,Vt)|0;var $s=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+($s>>>26)|0,$s&=67108863,X=Math.imul(lt,Kt),F=Math.imul(lt,Yt),F=F+Math.imul(at,Kt)|0,M=Math.imul(at,Yt),X=X+Math.imul(D,ie)|0,F=F+Math.imul(D,Vt)|0,F=F+Math.imul(ot,ie)|0,M=M+Math.imul(ot,Vt)|0;var tr=($+X|0)+((F&8191)<<13)|0;$=(M+(F>>>13)|0)+(tr>>>26)|0,tr&=67108863,X=Math.imul(lt,ie),F=Math.imul(lt,Vt),F=F+Math.imul(at,ie)|0,M=Math.imul(at,Vt);var er=($+X|0)+((F&8191)<<13)|0;return $=(M+(F>>>13)|0)+(er>>>26)|0,er&=67108863,tt[0]=ae,tt[1]=te,tt[2]=Le,tt[3]=ke,tt[4]=We,tt[5]=vo,tt[6]=vi,tt[7]=Fi,tt[8]=Fo,tt[9]=Si,tt[10]=_i,tt[11]=So,tt[12]=ri,tt[13]=jn,tt[14]=ji,tt[15]=Xs,tt[16]=$s,tt[17]=tr,tt[18]=er,$!==0&&(tt[19]=$,T.length++),T};Math.imul||(C=G);function N(I,y,_){_.negative=y.negative^I.negative,_.length=I.length+y.length;for(var T=0,B=0,Y=0;Y<_.length-1;Y++){var tt=B;B=0;for(var $=T&67108863,X=Math.min(Y,y.length-1),F=Math.max(0,Y-I.length+1);F<=X;F++){var M=Y-F,W=I.words[M]|0,A=y.words[F]|0,h=W*A,Q=h&67108863;tt=tt+(h/67108864|0)|0,Q=Q+$|0,$=Q&67108863,tt=tt+(Q>>>26)|0,B+=tt>>>26,tt&=67108863}_.words[Y]=$,T=tt,tt=B}return T!==0?_.words[Y]=T:_.length--,_._strip()}function J(I,y,_){return N(I,y,_)}o.prototype.mulTo=function(y,_){var T,B=this.length+y.length;return this.length===10&&y.length===10?T=C(this,y,_):B<63?T=G(this,y,_):B<1024?T=N(this,y,_):T=J(this,y,_),T},o.prototype.mul=function(y){var _=new o(null);return _.words=new Array(this.length+y.length),this.mulTo(y,_)},o.prototype.mulf=function(y){var _=new o(null);return _.words=new Array(this.length+y.length),J(this,y,_)},o.prototype.imul=function(y){return this.clone().mulTo(y,this)},o.prototype.imuln=function(y){var _=y<0;_&&(y=-y),n(typeof y=="number"),n(y<67108864);for(var T=0,B=0;B<this.length;B++){var Y=(this.words[B]|0)*y,tt=(Y&67108863)+(T&67108863);T>>=26,T+=Y/67108864|0,T+=tt>>>26,this.words[B]=tt&67108863}return T!==0&&(this.words[B]=T,this.length++),_?this.ineg():this},o.prototype.muln=function(y){return this.clone().imuln(y)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(y){var _=E(y);if(_.length===0)return new o(1);for(var T=this,B=0;B<_.length&&_[B]===0;B++,T=T.sqr());if(++B<_.length)for(var Y=T.sqr();B<_.length;B++,Y=Y.sqr())_[B]!==0&&(T=T.mul(Y));return T},o.prototype.iushln=function(y){n(typeof y=="number"&&y>=0);var _=y%26,T=(y-_)/26,B=67108863>>>26-_<<26-_,Y;if(_!==0){var tt=0;for(Y=0;Y<this.length;Y++){var $=this.words[Y]&B,X=(this.words[Y]|0)-$<<_;this.words[Y]=X|tt,tt=$>>>26-_}tt&&(this.words[Y]=tt,this.length++)}if(T!==0){for(Y=this.length-1;Y>=0;Y--)this.words[Y+T]=this.words[Y];for(Y=0;Y<T;Y++)this.words[Y]=0;this.length+=T}return this._strip()},o.prototype.ishln=function(y){return n(this.negative===0),this.iushln(y)},o.prototype.iushrn=function(y,_,T){n(typeof y=="number"&&y>=0);var B;_?B=(_-_%26)/26:B=0;var Y=y%26,tt=Math.min((y-Y)/26,this.length),$=67108863^67108863>>>Y<<Y,X=T;if(B-=tt,B=Math.max(0,B),X){for(var F=0;F<tt;F++)X.words[F]=this.words[F];X.length=tt}if(tt!==0)if(this.length>tt)for(this.length-=tt,F=0;F<this.length;F++)this.words[F]=this.words[F+tt];else this.words[0]=0,this.length=1;var M=0;for(F=this.length-1;F>=0&&(M!==0||F>=B);F--){var W=this.words[F]|0;this.words[F]=M<<26-Y|W>>>Y,M=W&$}return X&&M!==0&&(X.words[X.length++]=M),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(y,_,T){return n(this.negative===0),this.iushrn(y,_,T)},o.prototype.shln=function(y){return this.clone().ishln(y)},o.prototype.ushln=function(y){return this.clone().iushln(y)},o.prototype.shrn=function(y){return this.clone().ishrn(y)},o.prototype.ushrn=function(y){return this.clone().iushrn(y)},o.prototype.testn=function(y){n(typeof y=="number"&&y>=0);var _=y%26,T=(y-_)/26,B=1<<_;if(this.length<=T)return!1;var Y=this.words[T];return!!(Y&B)},o.prototype.imaskn=function(y){n(typeof y=="number"&&y>=0);var _=y%26,T=(y-_)/26;if(n(this.negative===0,"imaskn works only with positive numbers"),this.length<=T)return this;if(_!==0&&T++,this.length=Math.min(T,this.length),_!==0){var B=67108863^67108863>>>_<<_;this.words[this.length-1]&=B}return this._strip()},o.prototype.maskn=function(y){return this.clone().imaskn(y)},o.prototype.iaddn=function(y){return n(typeof y=="number"),n(y<67108864),y<0?this.isubn(-y):this.negative!==0?this.length===1&&(this.words[0]|0)<=y?(this.words[0]=y-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(y),this.negative=1,this):this._iaddn(y)},o.prototype._iaddn=function(y){this.words[0]+=y;for(var _=0;_<this.length&&this.words[_]>=67108864;_++)this.words[_]-=67108864,_===this.length-1?this.words[_+1]=1:this.words[_+1]++;return this.length=Math.max(this.length,_+1),this},o.prototype.isubn=function(y){if(n(typeof y=="number"),n(y<67108864),y<0)return this.iaddn(-y);if(this.negative!==0)return this.negative=0,this.iaddn(y),this.negative=1,this;if(this.words[0]-=y,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var _=0;_<this.length&&this.words[_]<0;_++)this.words[_]+=67108864,this.words[_+1]-=1;return this._strip()},o.prototype.addn=function(y){return this.clone().iaddn(y)},o.prototype.subn=function(y){return this.clone().isubn(y)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(y,_,T){var B=y.length+T,Y;this._expand(B);var tt,$=0;for(Y=0;Y<y.length;Y++){tt=(this.words[Y+T]|0)+$;var X=(y.words[Y]|0)*_;tt-=X&67108863,$=(tt>>26)-(X/67108864|0),this.words[Y+T]=tt&67108863}for(;Y<this.length-T;Y++)tt=(this.words[Y+T]|0)+$,$=tt>>26,this.words[Y+T]=tt&67108863;if($===0)return this._strip();for(n($===-1),$=0,Y=0;Y<this.length;Y++)tt=-(this.words[Y]|0)+$,$=tt>>26,this.words[Y]=tt&67108863;return this.negative=1,this._strip()},o.prototype._wordDiv=function(y,_){var T=this.length-y.length,B=this.clone(),Y=y,tt=Y.words[Y.length-1]|0,$=this._countBits(tt);T=26-$,T!==0&&(Y=Y.ushln(T),B.iushln(T),tt=Y.words[Y.length-1]|0);var X=B.length-Y.length,F;if(_!=="mod"){F=new o(null),F.length=X+1,F.words=new Array(F.length);for(var M=0;M<F.length;M++)F.words[M]=0}var W=B.clone()._ishlnsubmul(Y,1,X);W.negative===0&&(B=W,F&&(F.words[X]=1));for(var A=X-1;A>=0;A--){var h=(B.words[Y.length+A]|0)*67108864+(B.words[Y.length+A-1]|0);for(h=Math.min(h/tt|0,67108863),B._ishlnsubmul(Y,h,A);B.negative!==0;)h--,B.negative=0,B._ishlnsubmul(Y,1,A),B.isZero()||(B.negative^=1);F&&(F.words[A]=h)}return F&&F._strip(),B._strip(),_!=="div"&&T!==0&&B.iushrn(T),{div:F||null,mod:B}},o.prototype.divmod=function(y,_,T){if(n(!y.isZero()),this.isZero())return{div:new o(0),mod:new o(0)};var B,Y,tt;return this.negative!==0&&y.negative===0?(tt=this.neg().divmod(y,_),_!=="mod"&&(B=tt.div.neg()),_!=="div"&&(Y=tt.mod.neg(),T&&Y.negative!==0&&Y.iadd(y)),{div:B,mod:Y}):this.negative===0&&y.negative!==0?(tt=this.divmod(y.neg(),_),_!=="mod"&&(B=tt.div.neg()),{div:B,mod:tt.mod}):(this.negative&y.negative)!==0?(tt=this.neg().divmod(y.neg(),_),_!=="div"&&(Y=tt.mod.neg(),T&&Y.negative!==0&&Y.isub(y)),{div:tt.div,mod:Y}):y.length>this.length||this.cmp(y)<0?{div:new o(0),mod:this}:y.length===1?_==="div"?{div:this.divn(y.words[0]),mod:null}:_==="mod"?{div:null,mod:new o(this.modrn(y.words[0]))}:{div:this.divn(y.words[0]),mod:new o(this.modrn(y.words[0]))}:this._wordDiv(y,_)},o.prototype.div=function(y){return this.divmod(y,"div",!1).div},o.prototype.mod=function(y){return this.divmod(y,"mod",!1).mod},o.prototype.umod=function(y){return this.divmod(y,"mod",!0).mod},o.prototype.divRound=function(y){var _=this.divmod(y);if(_.mod.isZero())return _.div;var T=_.div.negative!==0?_.mod.isub(y):_.mod,B=y.ushrn(1),Y=y.andln(1),tt=T.cmp(B);return tt<0||Y===1&&tt===0?_.div:_.div.negative!==0?_.div.isubn(1):_.div.iaddn(1)},o.prototype.modrn=function(y){var _=y<0;_&&(y=-y),n(y<=67108863);for(var T=(1<<26)%y,B=0,Y=this.length-1;Y>=0;Y--)B=(T*B+(this.words[Y]|0))%y;return _?-B:B},o.prototype.modn=function(y){return this.modrn(y)},o.prototype.idivn=function(y){var _=y<0;_&&(y=-y),n(y<=67108863);for(var T=0,B=this.length-1;B>=0;B--){var Y=(this.words[B]|0)+T*67108864;this.words[B]=Y/y|0,T=Y%y}return this._strip(),_?this.ineg():this},o.prototype.divn=function(y){return this.clone().idivn(y)},o.prototype.egcd=function(y){n(y.negative===0),n(!y.isZero());var _=this,T=y.clone();_.negative!==0?_=_.umod(y):_=_.clone();for(var B=new o(1),Y=new o(0),tt=new o(0),$=new o(1),X=0;_.isEven()&&T.isEven();)_.iushrn(1),T.iushrn(1),++X;for(var F=T.clone(),M=_.clone();!_.isZero();){for(var W=0,A=1;(_.words[0]&A)===0&&W<26;++W,A<<=1);if(W>0)for(_.iushrn(W);W-- >0;)(B.isOdd()||Y.isOdd())&&(B.iadd(F),Y.isub(M)),B.iushrn(1),Y.iushrn(1);for(var h=0,Q=1;(T.words[0]&Q)===0&&h<26;++h,Q<<=1);if(h>0)for(T.iushrn(h);h-- >0;)(tt.isOdd()||$.isOdd())&&(tt.iadd(F),$.isub(M)),tt.iushrn(1),$.iushrn(1);_.cmp(T)>=0?(_.isub(T),B.isub(tt),Y.isub($)):(T.isub(_),tt.isub(B),$.isub(Y))}return{a:tt,b:$,gcd:T.iushln(X)}},o.prototype._invmp=function(y){n(y.negative===0),n(!y.isZero());var _=this,T=y.clone();_.negative!==0?_=_.umod(y):_=_.clone();for(var B=new o(1),Y=new o(0),tt=T.clone();_.cmpn(1)>0&&T.cmpn(1)>0;){for(var $=0,X=1;(_.words[0]&X)===0&&$<26;++$,X<<=1);if($>0)for(_.iushrn($);$-- >0;)B.isOdd()&&B.iadd(tt),B.iushrn(1);for(var F=0,M=1;(T.words[0]&M)===0&&F<26;++F,M<<=1);if(F>0)for(T.iushrn(F);F-- >0;)Y.isOdd()&&Y.iadd(tt),Y.iushrn(1);_.cmp(T)>=0?(_.isub(T),B.isub(Y)):(T.isub(_),Y.isub(B))}var W;return _.cmpn(1)===0?W=B:W=Y,W.cmpn(0)<0&&W.iadd(y),W},o.prototype.gcd=function(y){if(this.isZero())return y.abs();if(y.isZero())return this.abs();var _=this.clone(),T=y.clone();_.negative=0,T.negative=0;for(var B=0;_.isEven()&&T.isEven();B++)_.iushrn(1),T.iushrn(1);do{for(;_.isEven();)_.iushrn(1);for(;T.isEven();)T.iushrn(1);var Y=_.cmp(T);if(Y<0){var tt=_;_=T,T=tt}else if(Y===0||T.cmpn(1)===0)break;_.isub(T)}while(!0);return T.iushln(B)},o.prototype.invm=function(y){return this.egcd(y).a.umod(y)},o.prototype.isEven=function(){return(this.words[0]&1)===0},o.prototype.isOdd=function(){return(this.words[0]&1)===1},o.prototype.andln=function(y){return this.words[0]&y},o.prototype.bincn=function(y){n(typeof y=="number");var _=y%26,T=(y-_)/26,B=1<<_;if(this.length<=T)return this._expand(T+1),this.words[T]|=B,this;for(var Y=B,tt=T;Y!==0&&tt<this.length;tt++){var $=this.words[tt]|0;$+=Y,Y=$>>>26,$&=67108863,this.words[tt]=$}return Y!==0&&(this.words[tt]=Y,this.length++),this},o.prototype.isZero=function(){return this.length===1&&this.words[0]===0},o.prototype.cmpn=function(y){var _=y<0;if(this.negative!==0&&!_)return-1;if(this.negative===0&&_)return 1;this._strip();var T;if(this.length>1)T=1;else{_&&(y=-y),n(y<=67108863,"Number is too big");var B=this.words[0]|0;T=B===y?0:B<y?-1:1}return this.negative!==0?-T|0:T},o.prototype.cmp=function(y){if(this.negative!==0&&y.negative===0)return-1;if(this.negative===0&&y.negative!==0)return 1;var _=this.ucmp(y);return this.negative!==0?-_|0:_},o.prototype.ucmp=function(y){if(this.length>y.length)return 1;if(this.length<y.length)return-1;for(var _=0,T=this.length-1;T>=0;T--){var B=this.words[T]|0,Y=y.words[T]|0;if(B!==Y){B<Y?_=-1:B>Y&&(_=1);break}}return _},o.prototype.gtn=function(y){return this.cmpn(y)===1},o.prototype.gt=function(y){return this.cmp(y)===1},o.prototype.gten=function(y){return this.cmpn(y)>=0},o.prototype.gte=function(y){return this.cmp(y)>=0},o.prototype.ltn=function(y){return this.cmpn(y)===-1},o.prototype.lt=function(y){return this.cmp(y)===-1},o.prototype.lten=function(y){return this.cmpn(y)<=0},o.prototype.lte=function(y){return this.cmp(y)<=0},o.prototype.eqn=function(y){return this.cmpn(y)===0},o.prototype.eq=function(y){return this.cmp(y)===0},o.red=function(y){return new V(y)},o.prototype.toRed=function(y){return n(!this.red,"Already a number in reduction context"),n(this.negative===0,"red works only with positives"),y.convertTo(this)._forceRed(y)},o.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(y){return this.red=y,this},o.prototype.forceRed=function(y){return n(!this.red,"Already a number in reduction context"),this._forceRed(y)},o.prototype.redAdd=function(y){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,y)},o.prototype.redIAdd=function(y){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,y)},o.prototype.redSub=function(y){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,y)},o.prototype.redISub=function(y){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,y)},o.prototype.redShl=function(y){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,y)},o.prototype.redMul=function(y){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,y),this.red.mul(this,y)},o.prototype.redIMul=function(y){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,y),this.red.imul(this,y)},o.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(y){return n(this.red&&!y.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,y)};var j={k256:null,p224:null,p192:null,p25519:null};function R(I,y){this.name=I,this.p=new o(y,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}R.prototype._tmp=function(){var y=new o(null);return y.words=new Array(Math.ceil(this.n/13)),y},R.prototype.ireduce=function(y){var _=y,T;do this.split(_,this.tmp),_=this.imulK(_),_=_.iadd(this.tmp),T=_.bitLength();while(T>this.n);var B=T<this.n?-1:_.ucmp(this.p);return B===0?(_.words[0]=0,_.length=1):B>0?_.isub(this.p):_.strip!==void 0?_.strip():_._strip(),_},R.prototype.split=function(y,_){y.iushrn(this.n,0,_)},R.prototype.imulK=function(y){return y.imul(this.k)};function b(){R.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}i(b,R),b.prototype.split=function(y,_){for(var T=4194303,B=Math.min(y.length,9),Y=0;Y<B;Y++)_.words[Y]=y.words[Y];if(_.length=B,y.length<=9){y.words[0]=0,y.length=1;return}var tt=y.words[9];for(_.words[_.length++]=tt&T,Y=10;Y<y.length;Y++){var $=y.words[Y]|0;y.words[Y-10]=($&T)<<4|tt>>>22,tt=$}tt>>>=22,y.words[Y-10]=tt,tt===0&&y.length>10?y.length-=10:y.length-=9},b.prototype.imulK=function(y){y.words[y.length]=0,y.words[y.length+1]=0,y.length+=2;for(var _=0,T=0;T<y.length;T++){var B=y.words[T]|0;_+=B*977,y.words[T]=_&67108863,_=B*64+(_/67108864|0)}return y.words[y.length-1]===0&&(y.length--,y.words[y.length-1]===0&&y.length--),y};function w(){R.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}i(w,R);function Z(){R.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}i(Z,R);function P(){R.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}i(P,R),P.prototype.imulK=function(y){for(var _=0,T=0;T<y.length;T++){var B=(y.words[T]|0)*19+_,Y=B&67108863;B>>>=26,y.words[T]=Y,_=B}return _!==0&&(y.words[y.length++]=_),y},o._prime=function(y){if(j[y])return j[y];var _;if(y==="k256")_=new b;else if(y==="p224")_=new w;else if(y==="p192")_=new Z;else if(y==="p25519")_=new P;else throw new Error("Unknown prime "+y);return j[y]=_,_};function V(I){if(typeof I=="string"){var y=o._prime(I);this.m=y.p,this.prime=y}else n(I.gtn(1),"modulus must be greater than 1"),this.m=I,this.prime=null}V.prototype._verify1=function(y){n(y.negative===0,"red works only with positives"),n(y.red,"red works only with red numbers")},V.prototype._verify2=function(y,_){n((y.negative|_.negative)===0,"red works only with positives"),n(y.red&&y.red===_.red,"red works only with red numbers")},V.prototype.imod=function(y){return this.prime?this.prime.ireduce(y)._forceRed(this):(c(y,y.umod(this.m)._forceRed(this)),y)},V.prototype.neg=function(y){return y.isZero()?y.clone():this.m.sub(y)._forceRed(this)},V.prototype.add=function(y,_){this._verify2(y,_);var T=y.add(_);return T.cmp(this.m)>=0&&T.isub(this.m),T._forceRed(this)},V.prototype.iadd=function(y,_){this._verify2(y,_);var T=y.iadd(_);return T.cmp(this.m)>=0&&T.isub(this.m),T},V.prototype.sub=function(y,_){this._verify2(y,_);var T=y.sub(_);return T.cmpn(0)<0&&T.iadd(this.m),T._forceRed(this)},V.prototype.isub=function(y,_){this._verify2(y,_);var T=y.isub(_);return T.cmpn(0)<0&&T.iadd(this.m),T},V.prototype.shl=function(y,_){return this._verify1(y),this.imod(y.ushln(_))},V.prototype.imul=function(y,_){return this._verify2(y,_),this.imod(y.imul(_))},V.prototype.mul=function(y,_){return this._verify2(y,_),this.imod(y.mul(_))},V.prototype.isqr=function(y){return this.imul(y,y.clone())},V.prototype.sqr=function(y){return this.mul(y,y)},V.prototype.sqrt=function(y){if(y.isZero())return y.clone();var _=this.m.andln(3);if(n(_%2===1),_===3){var T=this.m.add(new o(1)).iushrn(2);return this.pow(y,T)}for(var B=this.m.subn(1),Y=0;!B.isZero()&&B.andln(1)===0;)Y++,B.iushrn(1);n(!B.isZero());var tt=new o(1).toRed(this),$=tt.redNeg(),X=this.m.subn(1).iushrn(1),F=this.m.bitLength();for(F=new o(2*F*F).toRed(this);this.pow(F,X).cmp($)!==0;)F.redIAdd($);for(var M=this.pow(F,B),W=this.pow(y,B.addn(1).iushrn(1)),A=this.pow(y,B),h=Y;A.cmp(tt)!==0;){for(var Q=A,p=0;Q.cmp(tt)!==0;p++)Q=Q.redSqr();n(p<h);var d=this.pow(M,new o(1).iushln(h-p-1));W=W.redMul(d),M=d.redSqr(),A=A.redMul(M),h=p}return W},V.prototype.invm=function(y){var _=y._invmp(this.m);return _.negative!==0?(_.negative=0,this.imod(_).redNeg()):this.imod(_)},V.prototype.pow=function(y,_){if(_.isZero())return new o(1).toRed(this);if(_.cmpn(1)===0)return y.clone();var T=4,B=new Array(1<<T);B[0]=new o(1).toRed(this),B[1]=y;for(var Y=2;Y<B.length;Y++)B[Y]=this.mul(B[Y-1],y);var tt=B[0],$=0,X=0,F=_.bitLength()%26;for(F===0&&(F=26),Y=_.length-1;Y>=0;Y--){for(var M=_.words[Y],W=F-1;W>=0;W--){var A=M>>W&1;if(tt!==B[0]&&(tt=this.sqr(tt)),A===0&&$===0){X=0;continue}$<<=1,$|=A,X++,!(X!==T&&(Y!==0||W!==0))&&(tt=this.mul(tt,B[$]),X=0,$=0)}F=26}return tt},V.prototype.convertTo=function(y){var _=y.umod(this.m);return _===y?_.clone():_},V.prototype.convertFrom=function(y){var _=y.clone();return _.red=null,_},o.mont=function(y){return new nt(y)};function nt(I){V.call(this,I),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}i(nt,V),nt.prototype.convertTo=function(y){return this.imod(y.ushln(this.shift))},nt.prototype.convertFrom=function(y){var _=this.imod(y.mul(this.rinv));return _.red=null,_},nt.prototype.imul=function(y,_){if(y.isZero()||_.isZero())return y.words[0]=0,y.length=1,y;var T=y.imul(_),B=T.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),Y=T.isub(B).iushrn(this.shift),tt=Y;return Y.cmp(this.m)>=0?tt=Y.isub(this.m):Y.cmpn(0)<0&&(tt=Y.iadd(this.m)),tt._forceRed(this)},nt.prototype.mul=function(y,_){if(y.isZero()||_.isZero())return new o(0)._forceRed(this);var T=y.mul(_),B=T.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),Y=T.isub(B).iushrn(this.shift),tt=Y;return Y.cmp(this.m)>=0?tt=Y.isub(this.m):Y.cmpn(0)<0&&(tt=Y.iadd(this.m)),tt._forceRed(this)},nt.prototype.invm=function(y){var _=this.imod(y._invmp(this.m).mul(this.r2));return _._forceRed(this)}})(a,C3)}(cs)),cs.exports}var B3=D2();const Au=ba(B3);var Pa={exports:{}};/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var Iu;function q2(){return Iu||(Iu=1,function(a,t){var e=El(),n=e.Buffer;function i(s,r){for(var u in s)r[u]=s[u]}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?a.exports=e:(i(e,t),t.Buffer=o);function o(s,r,u){return n(s,r,u)}o.prototype=Object.create(n.prototype),i(n,o),o.from=function(s,r,u){if(typeof s=="number")throw new TypeError("Argument must not be a number");return n(s,r,u)},o.alloc=function(s,r,u){if(typeof s!="number")throw new TypeError("Argument must be a number");var l=n(s);return r!==void 0?typeof u=="string"?l.fill(r,u):l.fill(r):l.fill(0),l},o.allocUnsafe=function(s){if(typeof s!="number")throw new TypeError("Argument must be a number");return n(s)},o.allocUnsafeSlow=function(s){if(typeof s!="number")throw new TypeError("Argument must be a number");return e.SlowBuffer(s)}}(Pa,Pa.exports)),Pa.exports}var ur,Eu;function v3(){if(Eu)return ur;Eu=1;var a=q2().Buffer;function t(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),i=0;i<n.length;i++)n[i]=255;for(var o=0;o<e.length;o++){var s=e.charAt(o),r=s.charCodeAt(0);if(n[r]!==255)throw new TypeError(s+" is ambiguous");n[r]=o}var u=e.length,l=e.charAt(0),c=Math.log(u)/Math.log(256),f=Math.log(256)/Math.log(u);function g(k){if((Array.isArray(k)||k instanceof Uint8Array)&&(k=a.from(k)),!a.isBuffer(k))throw new TypeError("Expected Buffer");if(k.length===0)return"";for(var E=0,G=0,C=0,N=k.length;C!==N&&k[C]===0;)C++,E++;for(var J=(N-C)*f+1>>>0,j=new Uint8Array(J);C!==N;){for(var R=k[C],b=0,w=J-1;(R!==0||b<G)&&w!==-1;w--,b++)R+=256*j[w]>>>0,j[w]=R%u>>>0,R=R/u>>>0;if(R!==0)throw new Error("Non-zero carry");G=b,C++}for(var Z=J-G;Z!==J&&j[Z]===0;)Z++;for(var P=l.repeat(E);Z<J;++Z)P+=e.charAt(j[Z]);return P}function L(k){if(typeof k!="string")throw new TypeError("Expected String");if(k.length===0)return a.alloc(0);for(var E=0,G=0,C=0;k[E]===l;)G++,E++;for(var N=(k.length-E)*c+1>>>0,J=new Uint8Array(N);E<k.length;){var j=k.charCodeAt(E);if(j>255)return;var R=n[j];if(R===255)return;for(var b=0,w=N-1;(R!==0||b<C)&&w!==-1;w--,b++)R+=u*J[w]>>>0,J[w]=R%256>>>0,R=R/256>>>0;if(R!==0)throw new Error("Non-zero carry");C=b,E++}for(var Z=N-C;Z!==N&&J[Z]===0;)Z++;var P=a.allocUnsafe(G+(N-Z));P.fill(0,0,G);for(var V=G;Z!==N;)P[V++]=J[Z++];return P}function S(k){var E=L(k);if(E)return E;throw new Error("Non-base"+u+" character")}return{encode:g,decodeUnsafe:L,decode:S}}return ur=t,ur}var dr,Cu;function F3(){if(Cu)return dr;Cu=1;var a=v3(),t="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";return dr=a(t),dr}var S3=F3();const en=ba(S3),_3=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),ui=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),di=new Uint32Array(64);class x3 extends v2{constructor(){super(64,32,8,!1),this.A=ui[0]|0,this.B=ui[1]|0,this.C=ui[2]|0,this.D=ui[3]|0,this.E=ui[4]|0,this.F=ui[5]|0,this.G=ui[6]|0,this.H=ui[7]|0}get(){const{A:t,B:e,C:n,D:i,E:o,F:s,G:r,H:u}=this;return[t,e,n,i,o,s,r,u]}set(t,e,n,i,o,s,r,u){this.A=t|0,this.B=e|0,this.C=n|0,this.D=i|0,this.E=o|0,this.F=s|0,this.G=r|0,this.H=u|0}process(t,e){for(let f=0;f<16;f++,e+=4)di[f]=t.getUint32(e,!1);for(let f=16;f<64;f++){const g=di[f-15],L=di[f-2],S=Tn(g,7)^Tn(g,18)^g>>>3,k=Tn(L,17)^Tn(L,19)^L>>>10;di[f]=k+di[f-7]+S+di[f-16]|0}let{A:n,B:i,C:o,D:s,E:r,F:u,G:l,H:c}=this;for(let f=0;f<64;f++){const g=Tn(r,6)^Tn(r,11)^Tn(r,25),L=c+g+gg(r,u,l)+_3[f]+di[f]|0,k=(Tn(n,2)^Tn(n,13)^Tn(n,22))+pg(n,i,o)|0;c=l,l=u,u=r,r=s+L|0,s=o,o=i,i=n,n=L+k|0}n=n+this.A|0,i=i+this.B|0,o=o+this.C|0,s=s+this.D|0,r=r+this.E|0,u=u+this.F|0,l=l+this.G|0,c=c+this.H|0,this.set(n,i,o,s,r,u,l,c)}roundClean(){di.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const Tc=C2(()=>new x3);var ve={},fr,Bu;function M3(){if(Bu)return fr;Bu=1;var a=q2().Buffer;function t(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),i=0;i<n.length;i++)n[i]=255;for(var o=0;o<e.length;o++){var s=e.charAt(o),r=s.charCodeAt(0);if(n[r]!==255)throw new TypeError(s+" is ambiguous");n[r]=o}var u=e.length,l=e.charAt(0),c=Math.log(u)/Math.log(256),f=Math.log(256)/Math.log(u);function g(k){if((Array.isArray(k)||k instanceof Uint8Array)&&(k=a.from(k)),!a.isBuffer(k))throw new TypeError("Expected Buffer");if(k.length===0)return"";for(var E=0,G=0,C=0,N=k.length;C!==N&&k[C]===0;)C++,E++;for(var J=(N-C)*f+1>>>0,j=new Uint8Array(J);C!==N;){for(var R=k[C],b=0,w=J-1;(R!==0||b<G)&&w!==-1;w--,b++)R+=256*j[w]>>>0,j[w]=R%u>>>0,R=R/u>>>0;if(R!==0)throw new Error("Non-zero carry");G=b,C++}for(var Z=J-G;Z!==J&&j[Z]===0;)Z++;for(var P=l.repeat(E);Z<J;++Z)P+=e.charAt(j[Z]);return P}function L(k){if(typeof k!="string")throw new TypeError("Expected String");if(k.length===0)return a.alloc(0);for(var E=0,G=0,C=0;k[E]===l;)G++,E++;for(var N=(k.length-E)*c+1>>>0,J=new Uint8Array(N);E<k.length;){var j=k.charCodeAt(E);if(j>255)return;var R=n[j];if(R===255)return;for(var b=0,w=N-1;(R!==0||b<C)&&w!==-1;w--,b++)R+=u*J[w]>>>0,J[w]=R%256>>>0,R=R/256>>>0;if(R!==0)throw new Error("Non-zero carry");C=b,E++}for(var Z=N-C;Z!==N&&J[Z]===0;)Z++;var P=a.allocUnsafe(G+(N-Z));P.fill(0,0,G);for(var V=G;Z!==N;)P[V++]=J[Z++];return P}function S(k){var E=L(k);if(E)return E;throw new Error("Non-base"+u+" character")}return{encode:g,decodeUnsafe:L,decode:S}}return fr=t,fr}var hr,vu;function k3(){if(vu)return hr;vu=1;var a=M3(),t="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";return hr=a(t),hr}function ti(a,t,e){return t<=a&&a<=e}function Ds(a){if(a===void 0)return{};if(a===Object(a))return a;throw TypeError("Could not convert argument to dictionary")}function U3(a){for(var t=String(a),e=t.length,n=0,i=[];n<e;){var o=t.charCodeAt(n);if(o<55296||o>57343)i.push(o);else if(56320<=o&&o<=57343)i.push(65533);else if(55296<=o&&o<=56319)if(n===e-1)i.push(65533);else{var s=a.charCodeAt(n+1);if(56320<=s&&s<=57343){var r=o&1023,u=s&1023;i.push(65536+(r<<10)+u),n+=1}else i.push(65533)}n+=1}return i}function G3(a){for(var t="",e=0;e<a.length;++e){var n=a[e];n<=65535?t+=String.fromCharCode(n):(n-=65536,t+=String.fromCharCode((n>>10)+55296,(n&1023)+56320))}return t}var gs=-1;function xl(a){this.tokens=[].slice.call(a)}xl.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.shift():gs},prepend:function(a){if(Array.isArray(a))for(var t=a;t.length;)this.tokens.unshift(t.pop());else this.tokens.unshift(a)},push:function(a){if(Array.isArray(a))for(var t=a;t.length;)this.tokens.push(t.shift());else this.tokens.push(a)}};var lo=-1;function gr(a,t){if(a)throw TypeError("Decoder error");return t||65533}var ps="utf-8";function Ls(a,t){if(!(this instanceof Ls))return new Ls(a,t);if(a=a!==void 0?String(a).toLowerCase():ps,a!==ps)throw new Error("Encoding not supported. Only utf-8 is supported");t=Ds(t),this._streaming=!1,this._BOMseen=!1,this._decoder=null,this._fatal=!!t.fatal,this._ignoreBOM=!!t.ignoreBOM,Object.defineProperty(this,"encoding",{value:"utf-8"}),Object.defineProperty(this,"fatal",{value:this._fatal}),Object.defineProperty(this,"ignoreBOM",{value:this._ignoreBOM})}Ls.prototype={decode:function(t,e){var n;typeof t=="object"&&t instanceof ArrayBuffer?n=new Uint8Array(t):typeof t=="object"&&"buffer"in t&&t.buffer instanceof ArrayBuffer?n=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):n=new Uint8Array(0),e=Ds(e),this._streaming||(this._decoder=new P3({fatal:this._fatal}),this._BOMseen=!1),this._streaming=!!e.stream;for(var i=new xl(n),o=[],s;!i.endOfStream()&&(s=this._decoder.handler(i,i.read()),s!==lo);)s!==null&&(Array.isArray(s)?o.push.apply(o,s):o.push(s));if(!this._streaming){do{if(s=this._decoder.handler(i,i.read()),s===lo)break;s!==null&&(Array.isArray(s)?o.push.apply(o,s):o.push(s))}while(!i.endOfStream());this._decoder=null}return o.length&&["utf-8"].indexOf(this.encoding)!==-1&&!this._ignoreBOM&&!this._BOMseen&&(o[0]===65279?(this._BOMseen=!0,o.shift()):this._BOMseen=!0),G3(o)}};function ws(a,t){if(!(this instanceof ws))return new ws(a,t);if(a=a!==void 0?String(a).toLowerCase():ps,a!==ps)throw new Error("Encoding not supported. Only utf-8 is supported");t=Ds(t),this._streaming=!1,this._encoder=null,this._options={fatal:!!t.fatal},Object.defineProperty(this,"encoding",{value:"utf-8"})}ws.prototype={encode:function(t,e){t=t?String(t):"",e=Ds(e),this._streaming||(this._encoder=new O3(this._options)),this._streaming=!!e.stream;for(var n=[],i=new xl(U3(t)),o;!i.endOfStream()&&(o=this._encoder.handler(i,i.read()),o!==lo);)Array.isArray(o)?n.push.apply(n,o):n.push(o);if(!this._streaming){for(;o=this._encoder.handler(i,i.read()),o!==lo;)Array.isArray(o)?n.push.apply(n,o):n.push(o);this._encoder=null}return new Uint8Array(n)}};function P3(a){var t=a.fatal,e=0,n=0,i=0,o=128,s=191;this.handler=function(r,u){if(u===gs&&i!==0)return i=0,gr(t);if(u===gs)return lo;if(i===0){if(ti(u,0,127))return u;if(ti(u,194,223))i=1,e=u-192;else if(ti(u,224,239))u===224&&(o=160),u===237&&(s=159),i=2,e=u-224;else if(ti(u,240,244))u===240&&(o=144),u===244&&(s=143),i=3,e=u-240;else return gr(t);return e=e<<6*i,null}if(!ti(u,o,s))return e=i=n=0,o=128,s=191,r.prepend(u),gr(t);if(o=128,s=191,n+=1,e+=u-128<<6*(i-n),n!==i)return null;var l=e;return e=i=n=0,l}}function O3(a){a.fatal,this.handler=function(t,e){if(e===gs)return lo;if(ti(e,0,127))return e;var n,i;ti(e,128,2047)?(n=1,i=192):ti(e,2048,65535)?(n=2,i=224):ti(e,65536,1114111)&&(n=3,i=240);for(var o=[(e>>6*n)+i];n>0;){var s=e>>6*(n-1);o.push(128|s&63),n-=1}return o}}const D3=Object.freeze(Object.defineProperty({__proto__:null,TextDecoder:Ls,TextEncoder:ws},Symbol.toStringTag,{value:"Module"})),q3=Il(D3);var Fu;function T3(){if(Fu)return ve;Fu=1;var a=ve&&ve.__createBinding||(Object.create?function(Z,P,V,nt){nt===void 0&&(nt=V),Object.defineProperty(Z,nt,{enumerable:!0,get:function(){return P[V]}})}:function(Z,P,V,nt){nt===void 0&&(nt=V),Z[nt]=P[V]}),t=ve&&ve.__setModuleDefault||(Object.create?function(Z,P){Object.defineProperty(Z,"default",{enumerable:!0,value:P})}:function(Z,P){Z.default=P}),e=ve&&ve.__decorate||function(Z,P,V,nt){var I=arguments.length,y=I<3?P:nt===null?nt=Object.getOwnPropertyDescriptor(P,V):nt,_;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")y=Reflect.decorate(Z,P,V,nt);else for(var T=Z.length-1;T>=0;T--)(_=Z[T])&&(y=(I<3?_(y):I>3?_(P,V,y):_(P,V))||y);return I>3&&y&&Object.defineProperty(P,V,y),y},n=ve&&ve.__importStar||function(Z){if(Z&&Z.__esModule)return Z;var P={};if(Z!=null)for(var V in Z)V!=="default"&&Object.hasOwnProperty.call(Z,V)&&a(P,Z,V);return t(P,Z),P},i=ve&&ve.__importDefault||function(Z){return Z&&Z.__esModule?Z:{default:Z}};Object.defineProperty(ve,"__esModule",{value:!0}),ve.deserializeUnchecked=ve.deserialize=ve.serialize=ve.BinaryReader=ve.BinaryWriter=ve.BorshError=ve.baseDecode=ve.baseEncode=void 0;const o=i(D2()),s=i(k3()),r=n(q3),u=typeof TextDecoder!="function"?r.TextDecoder:TextDecoder,l=new u("utf-8",{fatal:!0});function c(Z){return typeof Z=="string"&&(Z=Buffer.from(Z,"utf8")),s.default.encode(Buffer.from(Z))}ve.baseEncode=c;function f(Z){return Buffer.from(s.default.decode(Z))}ve.baseDecode=f;const g=1024;class L extends Error{constructor(P){super(P),this.fieldPath=[],this.originalMessage=P}addToFieldPath(P){this.fieldPath.splice(0,0,P),this.message=this.originalMessage+": "+this.fieldPath.join(".")}}ve.BorshError=L;class S{constructor(){this.buf=Buffer.alloc(g),this.length=0}maybeResize(){this.buf.length<16+this.length&&(this.buf=Buffer.concat([this.buf,Buffer.alloc(g)]))}writeU8(P){this.maybeResize(),this.buf.writeUInt8(P,this.length),this.length+=1}writeU16(P){this.maybeResize(),this.buf.writeUInt16LE(P,this.length),this.length+=2}writeU32(P){this.maybeResize(),this.buf.writeUInt32LE(P,this.length),this.length+=4}writeU64(P){this.maybeResize(),this.writeBuffer(Buffer.from(new o.default(P).toArray("le",8)))}writeU128(P){this.maybeResize(),this.writeBuffer(Buffer.from(new o.default(P).toArray("le",16)))}writeU256(P){this.maybeResize(),this.writeBuffer(Buffer.from(new o.default(P).toArray("le",32)))}writeU512(P){this.maybeResize(),this.writeBuffer(Buffer.from(new o.default(P).toArray("le",64)))}writeBuffer(P){this.buf=Buffer.concat([Buffer.from(this.buf.subarray(0,this.length)),P,Buffer.alloc(g)]),this.length+=P.length}writeString(P){this.maybeResize();const V=Buffer.from(P,"utf8");this.writeU32(V.length),this.writeBuffer(V)}writeFixedArray(P){this.writeBuffer(Buffer.from(P))}writeArray(P,V){this.maybeResize(),this.writeU32(P.length);for(const nt of P)this.maybeResize(),V(nt)}toArray(){return this.buf.subarray(0,this.length)}}ve.BinaryWriter=S;function k(Z,P,V){const nt=V.value;V.value=function(...I){try{return nt.apply(this,I)}catch(y){if(y instanceof RangeError){const _=y.code;if(["ERR_BUFFER_OUT_OF_BOUNDS","ERR_OUT_OF_RANGE"].indexOf(_)>=0)throw new L("Reached the end of buffer when deserializing")}throw y}}}class E{constructor(P){this.buf=P,this.offset=0}readU8(){const P=this.buf.readUInt8(this.offset);return this.offset+=1,P}readU16(){const P=this.buf.readUInt16LE(this.offset);return this.offset+=2,P}readU32(){const P=this.buf.readUInt32LE(this.offset);return this.offset+=4,P}readU64(){const P=this.readBuffer(8);return new o.default(P,"le")}readU128(){const P=this.readBuffer(16);return new o.default(P,"le")}readU256(){const P=this.readBuffer(32);return new o.default(P,"le")}readU512(){const P=this.readBuffer(64);return new o.default(P,"le")}readBuffer(P){if(this.offset+P>this.buf.length)throw new L(`Expected buffer length ${P} isn't within bounds`);const V=this.buf.slice(this.offset,this.offset+P);return this.offset+=P,V}readString(){const P=this.readU32(),V=this.readBuffer(P);try{return l.decode(V)}catch(nt){throw new L(`Error decoding UTF-8 string: ${nt}`)}}readFixedArray(P){return new Uint8Array(this.readBuffer(P))}readArray(P){const V=this.readU32(),nt=Array();for(let I=0;I<V;++I)nt.push(P());return nt}}e([k],E.prototype,"readU8",null),e([k],E.prototype,"readU16",null),e([k],E.prototype,"readU32",null),e([k],E.prototype,"readU64",null),e([k],E.prototype,"readU128",null),e([k],E.prototype,"readU256",null),e([k],E.prototype,"readU512",null),e([k],E.prototype,"readString",null),e([k],E.prototype,"readFixedArray",null),e([k],E.prototype,"readArray",null),ve.BinaryReader=E;function G(Z){return Z.charAt(0).toUpperCase()+Z.slice(1)}function C(Z,P,V,nt,I){try{if(typeof nt=="string")I[`write${G(nt)}`](V);else if(nt instanceof Array)if(typeof nt[0]=="number"){if(V.length!==nt[0])throw new L(`Expecting byte array of length ${nt[0]}, but got ${V.length} bytes`);I.writeFixedArray(V)}else if(nt.length===2&&typeof nt[1]=="number"){if(V.length!==nt[1])throw new L(`Expecting byte array of length ${nt[1]}, but got ${V.length} bytes`);for(let y=0;y<nt[1];y++)C(Z,null,V[y],nt[0],I)}else I.writeArray(V,y=>{C(Z,P,y,nt[0],I)});else if(nt.kind!==void 0)switch(nt.kind){case"option":{V==null?I.writeU8(0):(I.writeU8(1),C(Z,P,V,nt.type,I));break}case"map":{I.writeU32(V.size),V.forEach((y,_)=>{C(Z,P,_,nt.key,I),C(Z,P,y,nt.value,I)});break}default:throw new L(`FieldType ${nt} unrecognized`)}else N(Z,V,I)}catch(y){throw y instanceof L&&y.addToFieldPath(P),y}}function N(Z,P,V){if(typeof P.borshSerialize=="function"){P.borshSerialize(V);return}const nt=Z.get(P.constructor);if(!nt)throw new L(`Class ${P.constructor.name} is missing in schema`);if(nt.kind==="struct")nt.fields.map(([I,y])=>{C(Z,I,P[I],y,V)});else if(nt.kind==="enum"){const I=P[nt.field];for(let y=0;y<nt.values.length;++y){const[_,T]=nt.values[y];if(_===I){V.writeU8(y),C(Z,_,P[_],T,V);break}}}else throw new L(`Unexpected schema kind: ${nt.kind} for ${P.constructor.name}`)}function J(Z,P,V=S){const nt=new V;return N(Z,P,nt),nt.toArray()}ve.serialize=J;function j(Z,P,V,nt){try{if(typeof V=="string")return nt[`read${G(V)}`]();if(V instanceof Array){if(typeof V[0]=="number")return nt.readFixedArray(V[0]);if(typeof V[1]=="number"){const I=[];for(let y=0;y<V[1];y++)I.push(j(Z,null,V[0],nt));return I}else return nt.readArray(()=>j(Z,P,V[0],nt))}if(V.kind==="option")return nt.readU8()?j(Z,P,V.type,nt):void 0;if(V.kind==="map"){let I=new Map;const y=nt.readU32();for(let _=0;_<y;_++){const T=j(Z,P,V.key,nt),B=j(Z,P,V.value,nt);I.set(T,B)}return I}return R(Z,V,nt)}catch(I){throw I instanceof L&&I.addToFieldPath(P),I}}function R(Z,P,V){if(typeof P.borshDeserialize=="function")return P.borshDeserialize(V);const nt=Z.get(P);if(!nt)throw new L(`Class ${P.name} is missing in schema`);if(nt.kind==="struct"){const I={};for(const[y,_]of Z.get(P).fields)I[y]=j(Z,y,_,V);return new P(I)}if(nt.kind==="enum"){const I=V.readU8();if(I>=nt.values.length)throw new L(`Enum index: ${I} is out of range`);const[y,_]=nt.values[I],T=j(Z,y,_,V);return new P({[y]:T})}throw new L(`Unexpected schema kind: ${nt.kind} for ${P.constructor.name}`)}function b(Z,P,V,nt=E){const I=new nt(V),y=R(Z,P,I);if(I.offset<V.length)throw new L(`Unexpected ${V.length-I.offset} bytes after deserialized data`);return y}ve.deserialize=b;function w(Z,P,V,nt=E){const I=new nt(V);return R(Z,P,I)}return ve.deserializeUnchecked=w,ve}var pr=T3(),qt={},Su;function R3(){if(Su)return qt;Su=1,Object.defineProperty(qt,"__esModule",{value:!0}),qt.s16=qt.s8=qt.nu64be=qt.u48be=qt.u40be=qt.u32be=qt.u24be=qt.u16be=qt.nu64=qt.u48=qt.u40=qt.u32=qt.u24=qt.u16=qt.u8=qt.offset=qt.greedy=qt.Constant=qt.UTF8=qt.CString=qt.Blob=qt.Boolean=qt.BitField=qt.BitStructure=qt.VariantLayout=qt.Union=qt.UnionLayoutDiscriminator=qt.UnionDiscriminator=qt.Structure=qt.Sequence=qt.DoubleBE=qt.Double=qt.FloatBE=qt.Float=qt.NearInt64BE=qt.NearInt64=qt.NearUInt64BE=qt.NearUInt64=qt.IntBE=qt.Int=qt.UIntBE=qt.UInt=qt.OffsetLayout=qt.GreedyCount=qt.ExternalLayout=qt.bindConstructorLayout=qt.nameWithProperty=qt.Layout=qt.uint8ArrayToBuffer=qt.checkUint8Array=void 0,qt.constant=qt.utf8=qt.cstr=qt.blob=qt.unionLayoutDiscriminator=qt.union=qt.seq=qt.bits=qt.struct=qt.f64be=qt.f64=qt.f32be=qt.f32=qt.ns64be=qt.s48be=qt.s40be=qt.s32be=qt.s24be=qt.s16be=qt.ns64=qt.s48=qt.s40=qt.s32=qt.s24=void 0;const a=El();function t(F){if(!(F instanceof Uint8Array))throw new TypeError("b must be a Uint8Array")}qt.checkUint8Array=t;function e(F){return t(F),a.Buffer.from(F.buffer,F.byteOffset,F.length)}qt.uint8ArrayToBuffer=e;let n=class{constructor(M,W){if(!Number.isInteger(M))throw new TypeError("span must be an integer");this.span=M,this.property=W}makeDestinationObject(){return{}}getSpan(M,W){if(0>this.span)throw new RangeError("indeterminate span");return this.span}replicate(M){const W=Object.create(this.constructor.prototype);return Object.assign(W,this),W.property=M,W}fromArray(M){}};qt.Layout=n;function i(F,M){return M.property?F+"["+M.property+"]":F}qt.nameWithProperty=i;function o(F,M){if(typeof F!="function")throw new TypeError("Class must be constructor");if(Object.prototype.hasOwnProperty.call(F,"layout_"))throw new Error("Class is already bound to a layout");if(!(M&&M instanceof n))throw new TypeError("layout must be a Layout");if(Object.prototype.hasOwnProperty.call(M,"boundConstructor_"))throw new Error("layout is already bound to a constructor");F.layout_=M,M.boundConstructor_=F,M.makeDestinationObject=()=>new F,Object.defineProperty(F.prototype,"encode",{value(W,A){return M.encode(this,W,A)},writable:!0}),Object.defineProperty(F,"decode",{value(W,A){return M.decode(W,A)},writable:!0})}qt.bindConstructorLayout=o;class s extends n{isCount(){throw new Error("ExternalLayout is abstract")}}qt.ExternalLayout=s;class r extends s{constructor(M=1,W){if(!Number.isInteger(M)||0>=M)throw new TypeError("elementSpan must be a (positive) integer");super(-1,W),this.elementSpan=M}isCount(){return!0}decode(M,W=0){t(M);const A=M.length-W;return Math.floor(A/this.elementSpan)}encode(M,W,A){return 0}}qt.GreedyCount=r;class u extends s{constructor(M,W=0,A){if(!(M instanceof n))throw new TypeError("layout must be a Layout");if(!Number.isInteger(W))throw new TypeError("offset must be integer or undefined");super(M.span,A||M.property),this.layout=M,this.offset=W}isCount(){return this.layout instanceof l||this.layout instanceof c}decode(M,W=0){return this.layout.decode(M,W+this.offset)}encode(M,W,A=0){return this.layout.encode(M,W,A+this.offset)}}qt.OffsetLayout=u;class l extends n{constructor(M,W){if(super(M,W),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(M,W=0){return e(M).readUIntLE(W,this.span)}encode(M,W,A=0){return e(W).writeUIntLE(M,A,this.span),this.span}}qt.UInt=l;class c extends n{constructor(M,W){if(super(M,W),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(M,W=0){return e(M).readUIntBE(W,this.span)}encode(M,W,A=0){return e(W).writeUIntBE(M,A,this.span),this.span}}qt.UIntBE=c;class f extends n{constructor(M,W){if(super(M,W),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(M,W=0){return e(M).readIntLE(W,this.span)}encode(M,W,A=0){return e(W).writeIntLE(M,A,this.span),this.span}}qt.Int=f;class g extends n{constructor(M,W){if(super(M,W),6<this.span)throw new RangeError("span must not exceed 6 bytes")}decode(M,W=0){return e(M).readIntBE(W,this.span)}encode(M,W,A=0){return e(W).writeIntBE(M,A,this.span),this.span}}qt.IntBE=g;const L=Math.pow(2,32);function S(F){const M=Math.floor(F/L),W=F-M*L;return{hi32:M,lo32:W}}function k(F,M){return F*L+M}class E extends n{constructor(M){super(8,M)}decode(M,W=0){const A=e(M),h=A.readUInt32LE(W),Q=A.readUInt32LE(W+4);return k(Q,h)}encode(M,W,A=0){const h=S(M),Q=e(W);return Q.writeUInt32LE(h.lo32,A),Q.writeUInt32LE(h.hi32,A+4),8}}qt.NearUInt64=E;class G extends n{constructor(M){super(8,M)}decode(M,W=0){const A=e(M),h=A.readUInt32BE(W),Q=A.readUInt32BE(W+4);return k(h,Q)}encode(M,W,A=0){const h=S(M),Q=e(W);return Q.writeUInt32BE(h.hi32,A),Q.writeUInt32BE(h.lo32,A+4),8}}qt.NearUInt64BE=G;class C extends n{constructor(M){super(8,M)}decode(M,W=0){const A=e(M),h=A.readUInt32LE(W),Q=A.readInt32LE(W+4);return k(Q,h)}encode(M,W,A=0){const h=S(M),Q=e(W);return Q.writeUInt32LE(h.lo32,A),Q.writeInt32LE(h.hi32,A+4),8}}qt.NearInt64=C;class N extends n{constructor(M){super(8,M)}decode(M,W=0){const A=e(M),h=A.readInt32BE(W),Q=A.readUInt32BE(W+4);return k(h,Q)}encode(M,W,A=0){const h=S(M),Q=e(W);return Q.writeInt32BE(h.hi32,A),Q.writeUInt32BE(h.lo32,A+4),8}}qt.NearInt64BE=N;class J extends n{constructor(M){super(4,M)}decode(M,W=0){return e(M).readFloatLE(W)}encode(M,W,A=0){return e(W).writeFloatLE(M,A),4}}qt.Float=J;class j extends n{constructor(M){super(4,M)}decode(M,W=0){return e(M).readFloatBE(W)}encode(M,W,A=0){return e(W).writeFloatBE(M,A),4}}qt.FloatBE=j;class R extends n{constructor(M){super(8,M)}decode(M,W=0){return e(M).readDoubleLE(W)}encode(M,W,A=0){return e(W).writeDoubleLE(M,A),8}}qt.Double=R;class b extends n{constructor(M){super(8,M)}decode(M,W=0){return e(M).readDoubleBE(W)}encode(M,W,A=0){return e(W).writeDoubleBE(M,A),8}}qt.DoubleBE=b;class w extends n{constructor(M,W,A){if(!(M instanceof n))throw new TypeError("elementLayout must be a Layout");if(!(W instanceof s&&W.isCount()||Number.isInteger(W)&&0<=W))throw new TypeError("count must be non-negative integer or an unsigned integer ExternalLayout");let h=-1;!(W instanceof s)&&0<M.span&&(h=W*M.span),super(h,A),this.elementLayout=M,this.count=W}getSpan(M,W=0){if(0<=this.span)return this.span;let A=0,h=this.count;if(h instanceof s&&(h=h.decode(M,W)),0<this.elementLayout.span)A=h*this.elementLayout.span;else{let Q=0;for(;Q<h;)A+=this.elementLayout.getSpan(M,W+A),++Q}return A}decode(M,W=0){const A=[];let h=0,Q=this.count;for(Q instanceof s&&(Q=Q.decode(M,W));h<Q;)A.push(this.elementLayout.decode(M,W)),W+=this.elementLayout.getSpan(M,W),h+=1;return A}encode(M,W,A=0){const h=this.elementLayout,Q=M.reduce((p,d)=>p+h.encode(d,W,A+p),0);return this.count instanceof s&&this.count.encode(M.length,W,A),Q}}qt.Sequence=w;class Z extends n{constructor(M,W,A){if(!(Array.isArray(M)&&M.reduce((Q,p)=>Q&&p instanceof n,!0)))throw new TypeError("fields must be array of Layout instances");typeof W=="boolean"&&A===void 0&&(A=W,W=void 0);for(const Q of M)if(0>Q.span&&Q.property===void 0)throw new Error("fields cannot contain unnamed variable-length layout");let h=-1;try{h=M.reduce((Q,p)=>Q+p.getSpan(),0)}catch{}super(h,W),this.fields=M,this.decodePrefixes=!!A}getSpan(M,W=0){if(0<=this.span)return this.span;let A=0;try{A=this.fields.reduce((h,Q)=>{const p=Q.getSpan(M,W);return W+=p,h+p},0)}catch{throw new RangeError("indeterminate span")}return A}decode(M,W=0){t(M);const A=this.makeDestinationObject();for(const h of this.fields)if(h.property!==void 0&&(A[h.property]=h.decode(M,W)),W+=h.getSpan(M,W),this.decodePrefixes&&M.length===W)break;return A}encode(M,W,A=0){const h=A;let Q=0,p=0;for(const d of this.fields){let m=d.span;if(p=0<m?m:0,d.property!==void 0){const v=M[d.property];v!==void 0&&(p=d.encode(v,W,A),0>m&&(m=d.getSpan(W,A)))}Q=A,A+=m}return Q+p-h}fromArray(M){const W=this.makeDestinationObject();for(const A of this.fields)A.property!==void 0&&0<M.length&&(W[A.property]=M.shift());return W}layoutFor(M){if(typeof M!="string")throw new TypeError("property must be string");for(const W of this.fields)if(W.property===M)return W}offsetOf(M){if(typeof M!="string")throw new TypeError("property must be string");let W=0;for(const A of this.fields){if(A.property===M)return W;0>A.span?W=-1:0<=W&&(W+=A.span)}}}qt.Structure=Z;class P{constructor(M){this.property=M}decode(M,W){throw new Error("UnionDiscriminator is abstract")}encode(M,W,A){throw new Error("UnionDiscriminator is abstract")}}qt.UnionDiscriminator=P;class V extends P{constructor(M,W){if(!(M instanceof s&&M.isCount()))throw new TypeError("layout must be an unsigned integer ExternalLayout");super(W||M.property||"variant"),this.layout=M}decode(M,W){return this.layout.decode(M,W)}encode(M,W,A){return this.layout.encode(M,W,A)}}qt.UnionLayoutDiscriminator=V;class nt extends n{constructor(M,W,A){let h;if(M instanceof l||M instanceof c)h=new V(new u(M));else if(M instanceof s&&M.isCount())h=new V(M);else if(M instanceof P)h=M;else throw new TypeError("discr must be a UnionDiscriminator or an unsigned integer layout");if(W===void 0&&(W=null),!(W===null||W instanceof n))throw new TypeError("defaultLayout must be null or a Layout");if(W!==null){if(0>W.span)throw new Error("defaultLayout must have constant span");W.property===void 0&&(W=W.replicate("content"))}let Q=-1;W&&(Q=W.span,0<=Q&&(M instanceof l||M instanceof c)&&(Q+=h.layout.span)),super(Q,A),this.discriminator=h,this.usesPrefixDiscriminator=M instanceof l||M instanceof c,this.defaultLayout=W,this.registry={};let p=this.defaultGetSourceVariant.bind(this);this.getSourceVariant=function(d){return p(d)},this.configGetSourceVariant=function(d){p=d.bind(this)}}getSpan(M,W=0){if(0<=this.span)return this.span;const A=this.getVariant(M,W);if(!A)throw new Error("unable to determine span for unrecognized variant");return A.getSpan(M,W)}defaultGetSourceVariant(M){if(Object.prototype.hasOwnProperty.call(M,this.discriminator.property)){if(this.defaultLayout&&this.defaultLayout.property&&Object.prototype.hasOwnProperty.call(M,this.defaultLayout.property))return;const W=this.registry[M[this.discriminator.property]];if(W&&(!W.layout||W.property&&Object.prototype.hasOwnProperty.call(M,W.property)))return W}else for(const W in this.registry){const A=this.registry[W];if(A.property&&Object.prototype.hasOwnProperty.call(M,A.property))return A}throw new Error("unable to infer src variant")}decode(M,W=0){let A;const h=this.discriminator,Q=h.decode(M,W),p=this.registry[Q];if(p===void 0){const d=this.defaultLayout;let m=0;this.usesPrefixDiscriminator&&(m=h.layout.span),A=this.makeDestinationObject(),A[h.property]=Q,A[d.property]=d.decode(M,W+m)}else A=p.decode(M,W);return A}encode(M,W,A=0){const h=this.getSourceVariant(M);if(h===void 0){const Q=this.discriminator,p=this.defaultLayout;let d=0;return this.usesPrefixDiscriminator&&(d=Q.layout.span),Q.encode(M[Q.property],W,A),d+p.encode(M[p.property],W,A+d)}return h.encode(M,W,A)}addVariant(M,W,A){const h=new I(this,M,W,A);return this.registry[M]=h,h}getVariant(M,W=0){let A;return M instanceof Uint8Array?A=this.discriminator.decode(M,W):A=M,this.registry[A]}}qt.Union=nt;class I extends n{constructor(M,W,A,h){if(!(M instanceof nt))throw new TypeError("union must be a Union");if(!Number.isInteger(W)||0>W)throw new TypeError("variant must be a (non-negative) integer");if(typeof A=="string"&&h===void 0&&(h=A,A=null),A){if(!(A instanceof n))throw new TypeError("layout must be a Layout");if(M.defaultLayout!==null&&0<=A.span&&A.span>M.defaultLayout.span)throw new Error("variant span exceeds span of containing union");if(typeof h!="string")throw new TypeError("variant must have a String property")}let Q=M.span;0>M.span&&(Q=A?A.span:0,0<=Q&&M.usesPrefixDiscriminator&&(Q+=M.discriminator.layout.span)),super(Q,h),this.union=M,this.variant=W,this.layout=A||null}getSpan(M,W=0){if(0<=this.span)return this.span;let A=0;this.union.usesPrefixDiscriminator&&(A=this.union.discriminator.layout.span);let h=0;return this.layout&&(h=this.layout.getSpan(M,W+A)),A+h}decode(M,W=0){const A=this.makeDestinationObject();if(this!==this.union.getVariant(M,W))throw new Error("variant mismatch");let h=0;return this.union.usesPrefixDiscriminator&&(h=this.union.discriminator.layout.span),this.layout?A[this.property]=this.layout.decode(M,W+h):this.property?A[this.property]=!0:this.union.usesPrefixDiscriminator&&(A[this.union.discriminator.property]=this.variant),A}encode(M,W,A=0){let h=0;if(this.union.usesPrefixDiscriminator&&(h=this.union.discriminator.layout.span),this.layout&&!Object.prototype.hasOwnProperty.call(M,this.property))throw new TypeError("variant lacks property "+this.property);this.union.discriminator.encode(this.variant,W,A);let Q=h;if(this.layout&&(this.layout.encode(M[this.property],W,A+h),Q+=this.layout.getSpan(W,A+h),0<=this.union.span&&Q>this.union.span))throw new Error("encoded variant overruns containing union");return Q}fromArray(M){if(this.layout)return this.layout.fromArray(M)}}qt.VariantLayout=I;function y(F){return 0>F&&(F+=4294967296),F}class _ extends n{constructor(M,W,A){if(!(M instanceof l||M instanceof c))throw new TypeError("word must be a UInt or UIntBE layout");if(typeof W=="string"&&A===void 0&&(A=W,W=!1),4<M.span)throw new RangeError("word cannot exceed 32 bits");super(M.span,A),this.word=M,this.msb=!!W,this.fields=[];let h=0;this._packedSetValue=function(Q){return h=y(Q),this},this._packedGetValue=function(){return h}}decode(M,W=0){const A=this.makeDestinationObject(),h=this.word.decode(M,W);this._packedSetValue(h);for(const Q of this.fields)Q.property!==void 0&&(A[Q.property]=Q.decode(M));return A}encode(M,W,A=0){const h=this.word.decode(W,A);this._packedSetValue(h);for(const Q of this.fields)if(Q.property!==void 0){const p=M[Q.property];p!==void 0&&Q.encode(p)}return this.word.encode(this._packedGetValue(),W,A)}addField(M,W){const A=new T(this,M,W);return this.fields.push(A),A}addBoolean(M){const W=new B(this,M);return this.fields.push(W),W}fieldFor(M){if(typeof M!="string")throw new TypeError("property must be string");for(const W of this.fields)if(W.property===M)return W}}qt.BitStructure=_;class T{constructor(M,W,A){if(!(M instanceof _))throw new TypeError("container must be a BitStructure");if(!Number.isInteger(W)||0>=W)throw new TypeError("bits must be positive integer");const h=8*M.span,Q=M.fields.reduce((p,d)=>p+d.bits,0);if(W+Q>h)throw new Error("bits too long for span remainder ("+(h-Q)+" of "+h+" remain)");this.container=M,this.bits=W,this.valueMask=(1<<W)-1,W===32&&(this.valueMask=4294967295),this.start=Q,this.container.msb&&(this.start=h-Q-W),this.wordMask=y(this.valueMask<<this.start),this.property=A}decode(M,W){const A=this.container._packedGetValue();return y(A&this.wordMask)>>>this.start}encode(M){if(typeof M!="number"||!Number.isInteger(M)||M!==y(M&this.valueMask))throw new TypeError(i("BitField.encode",this)+" value must be integer not exceeding "+this.valueMask);const W=this.container._packedGetValue(),A=y(M<<this.start);this.container._packedSetValue(y(W&~this.wordMask)|A)}}qt.BitField=T;class B extends T{constructor(M,W){super(M,1,W)}decode(M,W){return!!super.decode(M,W)}encode(M){typeof M=="boolean"&&(M=+M),super.encode(M)}}qt.Boolean=B;class Y extends n{constructor(M,W){if(!(M instanceof s&&M.isCount()||Number.isInteger(M)&&0<=M))throw new TypeError("length must be positive integer or an unsigned integer ExternalLayout");let A=-1;M instanceof s||(A=M),super(A,W),this.length=M}getSpan(M,W){let A=this.span;return 0>A&&(A=this.length.decode(M,W)),A}decode(M,W=0){let A=this.span;return 0>A&&(A=this.length.decode(M,W)),e(M).slice(W,W+A)}encode(M,W,A){let h=this.length;if(this.length instanceof s&&(h=M.length),!(M instanceof Uint8Array&&h===M.length))throw new TypeError(i("Blob.encode",this)+" requires (length "+h+") Uint8Array as src");if(A+h>W.length)throw new RangeError("encoding overruns Uint8Array");const Q=e(M);return e(W).write(Q.toString("hex"),A,h,"hex"),this.length instanceof s&&this.length.encode(h,W,A),h}}qt.Blob=Y;class tt extends n{constructor(M){super(-1,M)}getSpan(M,W=0){t(M);let A=W;for(;A<M.length&&M[A]!==0;)A+=1;return 1+A-W}decode(M,W=0){const A=this.getSpan(M,W);return e(M).slice(W,W+A-1).toString("utf-8")}encode(M,W,A=0){typeof M!="string"&&(M=String(M));const h=a.Buffer.from(M,"utf8"),Q=h.length;if(A+Q>W.length)throw new RangeError("encoding overruns Buffer");const p=e(W);return h.copy(p,A),p[A+Q]=0,Q+1}}qt.CString=tt;class $ extends n{constructor(M,W){if(typeof M=="string"&&W===void 0&&(W=M,M=void 0),M===void 0)M=-1;else if(!Number.isInteger(M))throw new TypeError("maxSpan must be an integer");super(-1,W),this.maxSpan=M}getSpan(M,W=0){return t(M),M.length-W}decode(M,W=0){const A=this.getSpan(M,W);if(0<=this.maxSpan&&this.maxSpan<A)throw new RangeError("text length exceeds maxSpan");return e(M).slice(W,W+A).toString("utf-8")}encode(M,W,A=0){typeof M!="string"&&(M=String(M));const h=a.Buffer.from(M,"utf8"),Q=h.length;if(0<=this.maxSpan&&this.maxSpan<Q)throw new RangeError("text length exceeds maxSpan");if(A+Q>W.length)throw new RangeError("encoding overruns Buffer");return h.copy(e(W),A),Q}}qt.UTF8=$;class X extends n{constructor(M,W){super(0,W),this.value=M}decode(M,W){return this.value}encode(M,W,A){return 0}}return qt.Constant=X,qt.greedy=(F,M)=>new r(F,M),qt.offset=(F,M,W)=>new u(F,M,W),qt.u8=F=>new l(1,F),qt.u16=F=>new l(2,F),qt.u24=F=>new l(3,F),qt.u32=F=>new l(4,F),qt.u40=F=>new l(5,F),qt.u48=F=>new l(6,F),qt.nu64=F=>new E(F),qt.u16be=F=>new c(2,F),qt.u24be=F=>new c(3,F),qt.u32be=F=>new c(4,F),qt.u40be=F=>new c(5,F),qt.u48be=F=>new c(6,F),qt.nu64be=F=>new G(F),qt.s8=F=>new f(1,F),qt.s16=F=>new f(2,F),qt.s24=F=>new f(3,F),qt.s32=F=>new f(4,F),qt.s40=F=>new f(5,F),qt.s48=F=>new f(6,F),qt.ns64=F=>new C(F),qt.s16be=F=>new g(2,F),qt.s24be=F=>new g(3,F),qt.s32be=F=>new g(4,F),qt.s40be=F=>new g(5,F),qt.s48be=F=>new g(6,F),qt.ns64be=F=>new N(F),qt.f32=F=>new J(F),qt.f32be=F=>new j(F),qt.f64=F=>new R(F),qt.f64be=F=>new b(F),qt.struct=(F,M,W)=>new Z(F,M,W),qt.bits=(F,M,W)=>new _(F,M,W),qt.seq=(F,M,W)=>new w(F,M,W),qt.union=(F,M,W)=>new nt(F,M,W),qt.unionLayoutDiscriminator=(F,M)=>new V(F,M),qt.blob=(F,M)=>new Y(F,M),qt.cstr=F=>new tt(F),qt.utf8=(F,M)=>new $(F,M),qt.constant=(F,M)=>new X(F,M),qt}var Et=R3(),xi={},_u;function H3(){if(_u)return xi;_u=1,Object.defineProperty(xi,"__esModule",{value:!0});function a(i){{const o=Buffer.from(i);o.reverse();const s=o.toString("hex");return s.length===0?BigInt(0):BigInt(`0x${s}`)}}xi.toBigIntLE=a;function t(i){{const o=i.toString("hex");return o.length===0?BigInt(0):BigInt(`0x${o}`)}}xi.toBigIntBE=t;function e(i,o){{const s=i.toString(16),r=Buffer.from(s.padStart(o*2,"0").slice(0,o*2),"hex");return r.reverse(),r}}xi.toBufferLE=e;function n(i,o){{const s=i.toString(16);return Buffer.from(s.padStart(o*2,"0").slice(0,o*2),"hex")}}return xi.toBufferBE=n,xi}var xu=H3();class Q3 extends TypeError{constructor(t,e){let n;const{message:i,explanation:o,...s}=t,{path:r}=t,u=r.length===0?i:`At path: ${r.join(".")} -- ${i}`;super(o??u),o!=null&&(this.cause=u),Object.assign(this,s),this.name=this.constructor.name,this.failures=()=>n??(n=[t,...e()])}}function K3(a){return Aa(a)&&typeof a[Symbol.iterator]=="function"}function Aa(a){return typeof a=="object"&&a!=null}function ms(a){return Aa(a)&&!Array.isArray(a)}function On(a){return typeof a=="symbol"?a.toString():typeof a=="string"?JSON.stringify(a):`${a}`}function N3(a){const{done:t,value:e}=a.next();return t?void 0:e}function z3(a,t,e,n){if(a===!0)return;a===!1?a={}:typeof a=="string"&&(a={message:a});const{path:i,branch:o}=t,{type:s}=e,{refinement:r,message:u=`Expected a value of type \`${s}\`${r?` with refinement \`${r}\``:""}, but received: \`${On(n)}\``}=a;return{value:n,type:s,refinement:r,key:i[i.length-1],path:i,branch:o,...a,message:u}}function*Mu(a,t,e,n){K3(a)||(a=[a]);for(const i of a){const o=z3(i,t,e,n);o&&(yield o)}}function*Ml(a,t,e={}){const{path:n=[],branch:i=[a],coerce:o=!1,mask:s=!1}=e,r={path:n,branch:i,mask:s};o&&(a=t.coercer(a,r));let u="valid";for(const l of t.validator(a,r))l.explanation=e.message,u="not_valid",yield[l,void 0];for(let[l,c,f]of t.entries(a,r)){const g=Ml(c,f,{path:l===void 0?n:[...n,l],branch:l===void 0?i:[...i,c],coerce:o,mask:s,message:e.message});for(const L of g)L[0]?(u=L[0].refinement!=null?"not_refined":"not_valid",yield[L[0],void 0]):o&&(c=L[1],l===void 0?a=c:a instanceof Map?a.set(l,c):a instanceof Set?a.add(c):Aa(a)&&(c!==void 0||l in a)&&(a[l]=c))}if(u!=="not_valid")for(const l of t.refiner(a,r))l.explanation=e.message,u="not_refined",yield[l,void 0];u==="valid"&&(yield[void 0,a])}let Jn=class{constructor(t){const{type:e,schema:n,validator:i,refiner:o,coercer:s=u=>u,entries:r=function*(){}}=t;this.type=e,this.schema=n,this.entries=r,this.coercer=s,i?this.validator=(u,l)=>{const c=i(u,l);return Mu(c,l,this,u)}:this.validator=()=>[],o?this.refiner=(u,l)=>{const c=o(u,l);return Mu(c,l,this,u)}:this.refiner=()=>[]}assert(t,e){return J3(t,this,e)}create(t,e){return Wt(t,this,e)}is(t){return T2(t,this)}mask(t,e){return Y3(t,this,e)}validate(t,e={}){return Ia(t,this,e)}};function J3(a,t,e){const n=Ia(a,t,{message:e});if(n[0])throw n[0]}function Wt(a,t,e){const n=Ia(a,t,{coerce:!0,message:e});if(n[0])throw n[0];return n[1]}function Y3(a,t,e){const n=Ia(a,t,{coerce:!0,mask:!0,message:e});if(n[0])throw n[0];return n[1]}function T2(a,t){return!Ia(a,t)[0]}function Ia(a,t,e={}){const n=Ml(a,t,e),i=N3(n);return i[0]?[new Q3(i[0],function*(){for(const s of n)s[0]&&(yield s[0])}),void 0]:[void 0,i[1]]}function Ki(a,t){return new Jn({type:a,schema:null,validator:t})}function j3(){return Ki("any",()=>!0)}function Zt(a){return new Jn({type:"array",schema:a,*entries(t){if(a&&Array.isArray(t))for(const[e,n]of t.entries())yield[e,n,a]},coercer(t){return Array.isArray(t)?t.slice():t},validator(t){return Array.isArray(t)||`Expected an array value, but received: ${On(t)}`}})}function Nn(){return Ki("boolean",a=>typeof a=="boolean")}function kl(a){return Ki("instance",t=>t instanceof a||`Expected a \`${a.name}\` instance, but received: ${On(t)}`)}function Ge(a){const t=On(a),e=typeof a;return new Jn({type:"literal",schema:e==="string"||e==="number"||e==="boolean"?a:null,validator(n){return n===a||`Expected the literal \`${t}\`, but received: ${On(n)}`}})}function V3(){return Ki("never",()=>!1)}function $t(a){return new Jn({...a,validator:(t,e)=>t===null||a.validator(t,e),refiner:(t,e)=>t===null||a.refiner(t,e)})}function Pt(){return Ki("number",a=>typeof a=="number"&&!isNaN(a)||`Expected a number, but received: ${On(a)}`)}function le(a){return new Jn({...a,validator:(t,e)=>t===void 0||a.validator(t,e),refiner:(t,e)=>t===void 0||a.refiner(t,e)})}function R2(a,t){return new Jn({type:"record",schema:null,*entries(e){if(Aa(e))for(const n in e){const i=e[n];yield[n,n,a],yield[n,i,t]}},validator(e){return ms(e)||`Expected an object, but received: ${On(e)}`},coercer(e){return ms(e)?{...e}:e}})}function Jt(){return Ki("string",a=>typeof a=="string"||`Expected a string, but received: ${On(a)}`)}function Ul(a){const t=V3();return new Jn({type:"tuple",schema:null,*entries(e){if(Array.isArray(e)){const n=Math.max(a.length,e.length);for(let i=0;i<n;i++)yield[i,e[i],a[i]||t]}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${On(e)}`},coercer(e){return Array.isArray(e)?e.slice():e}})}function Nt(a){const t=Object.keys(a);return new Jn({type:"type",schema:a,*entries(e){if(Aa(e))for(const n of t)yield[n,e[n],a[n]]},validator(e){return ms(e)||`Expected an object, but received: ${On(e)}`},coercer(e){return ms(e)?{...e}:e}})}function fn(a){const t=a.map(e=>e.type).join(" | ");return new Jn({type:"union",schema:null,coercer(e,n){for(const i of a){const[o,s]=i.validate(e,{coerce:!0,mask:n.mask});if(!o)return s}return e},validator(e,n){const i=[];for(const o of a){const[...s]=Ml(e,o,n),[r]=s;if(r[0])for(const[u]of s)u&&i.push(u);else return[]}return[`Expected the value to satisfy a union of \`${t}\`, but received: ${On(e)}`,...i]}})}function wo(){return Ki("unknown",()=>!0)}function Ea(a,t,e){return new Jn({...a,coercer:(n,i)=>T2(n,t)?a.coercer(e(n,i),i):a.coercer(n,i)})}var Oa,W3=new Uint8Array(16);function H2(){if(!Oa&&(Oa=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto<"u"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!Oa))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Oa(W3)}const Z3=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function qs(a){return typeof a=="string"&&Z3.test(a)}var $e=[];for(var Lr=0;Lr<256;++Lr)$e.push((Lr+256).toString(16).substr(1));function Ts(a){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,e=($e[a[t+0]]+$e[a[t+1]]+$e[a[t+2]]+$e[a[t+3]]+"-"+$e[a[t+4]]+$e[a[t+5]]+"-"+$e[a[t+6]]+$e[a[t+7]]+"-"+$e[a[t+8]]+$e[a[t+9]]+"-"+$e[a[t+10]]+$e[a[t+11]]+$e[a[t+12]]+$e[a[t+13]]+$e[a[t+14]]+$e[a[t+15]]).toLowerCase();if(!qs(e))throw TypeError("Stringified UUID is invalid");return e}var ku,wr,mr=0,br=0;function X3(a,t,e){var n=t&&e||0,i=t||new Array(16);a=a||{};var o=a.node||ku,s=a.clockseq!==void 0?a.clockseq:wr;if(o==null||s==null){var r=a.random||(a.rng||H2)();o==null&&(o=ku=[r[0]|1,r[1],r[2],r[3],r[4],r[5]]),s==null&&(s=wr=(r[6]<<8|r[7])&16383)}var u=a.msecs!==void 0?a.msecs:Date.now(),l=a.nsecs!==void 0?a.nsecs:br+1,c=u-mr+(l-br)/1e4;if(c<0&&a.clockseq===void 0&&(s=s+1&16383),(c<0||u>mr)&&a.nsecs===void 0&&(l=0),l>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");mr=u,br=l,wr=s,u+=122192928e5;var f=((u&268435455)*1e4+l)%4294967296;i[n++]=f>>>24&255,i[n++]=f>>>16&255,i[n++]=f>>>8&255,i[n++]=f&255;var g=u/4294967296*1e4&268435455;i[n++]=g>>>8&255,i[n++]=g&255,i[n++]=g>>>24&15|16,i[n++]=g>>>16&255,i[n++]=s>>>8|128,i[n++]=s&255;for(var L=0;L<6;++L)i[n+L]=o[L];return t||Ts(i)}function Q2(a){if(!qs(a))throw TypeError("Invalid UUID");var t,e=new Uint8Array(16);return e[0]=(t=parseInt(a.slice(0,8),16))>>>24,e[1]=t>>>16&255,e[2]=t>>>8&255,e[3]=t&255,e[4]=(t=parseInt(a.slice(9,13),16))>>>8,e[5]=t&255,e[6]=(t=parseInt(a.slice(14,18),16))>>>8,e[7]=t&255,e[8]=(t=parseInt(a.slice(19,23),16))>>>8,e[9]=t&255,e[10]=(t=parseInt(a.slice(24,36),16))/1099511627776&255,e[11]=t/4294967296&255,e[12]=t>>>24&255,e[13]=t>>>16&255,e[14]=t>>>8&255,e[15]=t&255,e}function $3(a){a=unescape(encodeURIComponent(a));for(var t=[],e=0;e<a.length;++e)t.push(a.charCodeAt(e));return t}var tp="6ba7b810-9dad-11d1-80b4-00c04fd430c8",ep="6ba7b811-9dad-11d1-80b4-00c04fd430c8";function K2(a,t,e){function n(i,o,s,r){if(typeof i=="string"&&(i=$3(i)),typeof o=="string"&&(o=Q2(o)),o.length!==16)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var u=new Uint8Array(16+i.length);if(u.set(o),u.set(i,o.length),u=e(u),u[6]=u[6]&15|t,u[8]=u[8]&63|128,s){r=r||0;for(var l=0;l<16;++l)s[r+l]=u[l];return s}return Ts(u)}try{n.name=a}catch{}return n.DNS=tp,n.URL=ep,n}function np(a){if(typeof a=="string"){var t=unescape(encodeURIComponent(a));a=new Uint8Array(t.length);for(var e=0;e<t.length;++e)a[e]=t.charCodeAt(e)}return ip(op(ap(a),a.length*8))}function ip(a){for(var t=[],e=a.length*32,n="0123456789abcdef",i=0;i<e;i+=8){var o=a[i>>5]>>>i%32&255,s=parseInt(n.charAt(o>>>4&15)+n.charAt(o&15),16);t.push(s)}return t}function N2(a){return(a+64>>>9<<4)+14+1}function op(a,t){a[t>>5]|=128<<t%32,a[N2(t)-1]=t;for(var e=1732584193,n=-271733879,i=-1732584194,o=271733878,s=0;s<a.length;s+=16){var r=e,u=n,l=i,c=o;e=on(e,n,i,o,a[s],7,-680876936),o=on(o,e,n,i,a[s+1],12,-389564586),i=on(i,o,e,n,a[s+2],17,606105819),n=on(n,i,o,e,a[s+3],22,-1044525330),e=on(e,n,i,o,a[s+4],7,-176418897),o=on(o,e,n,i,a[s+5],12,1200080426),i=on(i,o,e,n,a[s+6],17,-1473231341),n=on(n,i,o,e,a[s+7],22,-45705983),e=on(e,n,i,o,a[s+8],7,1770035416),o=on(o,e,n,i,a[s+9],12,-1958414417),i=on(i,o,e,n,a[s+10],17,-42063),n=on(n,i,o,e,a[s+11],22,-1990404162),e=on(e,n,i,o,a[s+12],7,1804603682),o=on(o,e,n,i,a[s+13],12,-40341101),i=on(i,o,e,n,a[s+14],17,-1502002290),n=on(n,i,o,e,a[s+15],22,1236535329),e=an(e,n,i,o,a[s+1],5,-165796510),o=an(o,e,n,i,a[s+6],9,-1069501632),i=an(i,o,e,n,a[s+11],14,643717713),n=an(n,i,o,e,a[s],20,-373897302),e=an(e,n,i,o,a[s+5],5,-701558691),o=an(o,e,n,i,a[s+10],9,38016083),i=an(i,o,e,n,a[s+15],14,-660478335),n=an(n,i,o,e,a[s+4],20,-405537848),e=an(e,n,i,o,a[s+9],5,568446438),o=an(o,e,n,i,a[s+14],9,-1019803690),i=an(i,o,e,n,a[s+3],14,-187363961),n=an(n,i,o,e,a[s+8],20,1163531501),e=an(e,n,i,o,a[s+13],5,-1444681467),o=an(o,e,n,i,a[s+2],9,-51403784),i=an(i,o,e,n,a[s+7],14,1735328473),n=an(n,i,o,e,a[s+12],20,-1926607734),e=sn(e,n,i,o,a[s+5],4,-378558),o=sn(o,e,n,i,a[s+8],11,-2022574463),i=sn(i,o,e,n,a[s+11],16,1839030562),n=sn(n,i,o,e,a[s+14],23,-35309556),e=sn(e,n,i,o,a[s+1],4,-1530992060),o=sn(o,e,n,i,a[s+4],11,1272893353),i=sn(i,o,e,n,a[s+7],16,-155497632),n=sn(n,i,o,e,a[s+10],23,-1094730640),e=sn(e,n,i,o,a[s+13],4,681279174),o=sn(o,e,n,i,a[s],11,-358537222),i=sn(i,o,e,n,a[s+3],16,-722521979),n=sn(n,i,o,e,a[s+6],23,76029189),e=sn(e,n,i,o,a[s+9],4,-640364487),o=sn(o,e,n,i,a[s+12],11,-421815835),i=sn(i,o,e,n,a[s+15],16,530742520),n=sn(n,i,o,e,a[s+2],23,-995338651),e=rn(e,n,i,o,a[s],6,-198630844),o=rn(o,e,n,i,a[s+7],10,1126891415),i=rn(i,o,e,n,a[s+14],15,-1416354905),n=rn(n,i,o,e,a[s+5],21,-57434055),e=rn(e,n,i,o,a[s+12],6,1700485571),o=rn(o,e,n,i,a[s+3],10,-1894986606),i=rn(i,o,e,n,a[s+10],15,-1051523),n=rn(n,i,o,e,a[s+1],21,-2054922799),e=rn(e,n,i,o,a[s+8],6,1873313359),o=rn(o,e,n,i,a[s+15],10,-30611744),i=rn(i,o,e,n,a[s+6],15,-1560198380),n=rn(n,i,o,e,a[s+13],21,1309151649),e=rn(e,n,i,o,a[s+4],6,-145523070),o=rn(o,e,n,i,a[s+11],10,-1120210379),i=rn(i,o,e,n,a[s+2],15,718787259),n=rn(n,i,o,e,a[s+9],21,-343485551),e=wi(e,r),n=wi(n,u),i=wi(i,l),o=wi(o,c)}return[e,n,i,o]}function ap(a){if(a.length===0)return[];for(var t=a.length*8,e=new Uint32Array(N2(t)),n=0;n<t;n+=8)e[n>>5]|=(a[n/8]&255)<<n%32;return e}function wi(a,t){var e=(a&65535)+(t&65535),n=(a>>16)+(t>>16)+(e>>16);return n<<16|e&65535}function sp(a,t){return a<<t|a>>>32-t}function Rs(a,t,e,n,i,o){return wi(sp(wi(wi(t,a),wi(n,o)),i),e)}function on(a,t,e,n,i,o,s){return Rs(t&e|~t&n,a,t,i,o,s)}function an(a,t,e,n,i,o,s){return Rs(t&n|e&~n,a,t,i,o,s)}function sn(a,t,e,n,i,o,s){return Rs(t^e^n,a,t,i,o,s)}function rn(a,t,e,n,i,o,s){return Rs(e^(t|~n),a,t,i,o,s)}var rp=K2("v3",48,np);function cp(a,t,e){a=a||{};var n=a.random||(a.rng||H2)();if(n[6]=n[6]&15|64,n[8]=n[8]&63|128,t){e=e||0;for(var i=0;i<16;++i)t[e+i]=n[i];return t}return Ts(n)}function lp(a,t,e,n){switch(a){case 0:return t&e^~t&n;case 1:return t^e^n;case 2:return t&e^t&n^e&n;case 3:return t^e^n}}function yr(a,t){return a<<t|a>>>32-t}function up(a){var t=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if(typeof a=="string"){var n=unescape(encodeURIComponent(a));a=[];for(var i=0;i<n.length;++i)a.push(n.charCodeAt(i))}else Array.isArray(a)||(a=Array.prototype.slice.call(a));a.push(128);for(var o=a.length/4+2,s=Math.ceil(o/16),r=new Array(s),u=0;u<s;++u){for(var l=new Uint32Array(16),c=0;c<16;++c)l[c]=a[u*64+c*4]<<24|a[u*64+c*4+1]<<16|a[u*64+c*4+2]<<8|a[u*64+c*4+3];r[u]=l}r[s-1][14]=(a.length-1)*8/Math.pow(2,32),r[s-1][14]=Math.floor(r[s-1][14]),r[s-1][15]=(a.length-1)*8&4294967295;for(var f=0;f<s;++f){for(var g=new Uint32Array(80),L=0;L<16;++L)g[L]=r[f][L];for(var S=16;S<80;++S)g[S]=yr(g[S-3]^g[S-8]^g[S-14]^g[S-16],1);for(var k=e[0],E=e[1],G=e[2],C=e[3],N=e[4],J=0;J<80;++J){var j=Math.floor(J/20),R=yr(k,5)+lp(j,E,G,C)+N+t[j]+g[J]>>>0;N=C,C=G,G=yr(E,30)>>>0,E=k,k=R}e[0]=e[0]+k>>>0,e[1]=e[1]+E>>>0,e[2]=e[2]+G>>>0,e[3]=e[3]+C>>>0,e[4]=e[4]+N>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,e[0]&255,e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,e[1]&255,e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,e[2]&255,e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,e[3]&255,e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,e[4]&255]}var dp=K2("v5",80,up);const fp="00000000-0000-0000-0000-000000000000";function hp(a){if(!qs(a))throw TypeError("Invalid UUID");return parseInt(a.substr(14,1),16)}const gp=Object.freeze(Object.defineProperty({__proto__:null,NIL:fp,parse:Q2,stringify:Ts,v1:X3,v3:rp,v4:cp,v5:dp,validate:qs,version:hp},Symbol.toStringTag,{value:"Module"})),z2=Il(gp);var Ar,Uu;function pp(){if(Uu)return Ar;Uu=1;const a=z2.v4;return Ar=function(e,n,i,o){if(typeof e!="string")throw new TypeError(e+" must be a string");o=o||{};const s=typeof o.version=="number"?o.version:2;if(s!==1&&s!==2)throw new TypeError(s+" must be 1 or 2");const r={method:e};if(s===2&&(r.jsonrpc="2.0"),n){if(typeof n!="object"&&!Array.isArray(n))throw new TypeError(n+" must be an object, array or omitted");r.params=n}if(typeof i>"u"){const u=typeof o.generator=="function"?o.generator:function(){return a()};r.id=u(r,o)}else s===2&&i===null?o.notificationIdNull&&(r.id=null):r.id=i;return r},Ar}var Ir,Gu;function Lp(){if(Gu)return Ir;Gu=1;const a=z2.v4,t=pp(),e=function(n,i){if(!(this instanceof e))return new e(n,i);i||(i={}),this.options={reviver:typeof i.reviver<"u"?i.reviver:null,replacer:typeof i.replacer<"u"?i.replacer:null,generator:typeof i.generator<"u"?i.generator:function(){return a()},version:typeof i.version<"u"?i.version:2,notificationIdNull:typeof i.notificationIdNull=="boolean"?i.notificationIdNull:!1},this.callServer=n};return Ir=e,e.prototype.request=function(n,i,o,s){const r=this;let u=null;const l=Array.isArray(n)&&typeof i=="function";if(this.options.version===1&&l)throw new TypeError("JSON-RPC 1.0 does not support batching");if(l||!l&&n&&typeof n=="object"&&typeof i=="function")s=i,u=n;else{typeof o=="function"&&(s=o,o=void 0);const g=typeof s=="function";try{u=t(n,i,o,{generator:this.options.generator,version:this.options.version,notificationIdNull:this.options.notificationIdNull})}catch(L){if(g)return s(L);throw L}if(!g)return u}let f;try{f=JSON.stringify(u,this.options.replacer)}catch(g){return s(g)}return this.callServer(f,function(g,L){r._parseResponse(g,L,s)}),u},e.prototype._parseResponse=function(n,i,o){if(n){o(n);return}if(!i)return o();let s;try{s=JSON.parse(i,this.options.reviver)}catch(r){return o(r)}if(o.length===3)if(Array.isArray(s)){const r=function(l){return typeof l.error<"u"},u=function(l){return!r(l)};return o(null,s.filter(r),s.filter(u))}else return o(null,s.error,s.result);o(null,s)},Ir}var wp=Lp();const mp=ba(wp);var Er={exports:{}},Pu;function bp(){return Pu||(Pu=1,function(a){var t=Object.prototype.hasOwnProperty,e="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(e=!1));function i(u,l,c){this.fn=u,this.context=l,this.once=c||!1}function o(u,l,c,f,g){if(typeof c!="function")throw new TypeError("The listener must be a function");var L=new i(c,f||u,g),S=e?e+l:l;return u._events[S]?u._events[S].fn?u._events[S]=[u._events[S],L]:u._events[S].push(L):(u._events[S]=L,u._eventsCount++),u}function s(u,l){--u._eventsCount===0?u._events=new n:delete u._events[l]}function r(){this._events=new n,this._eventsCount=0}r.prototype.eventNames=function(){var l=[],c,f;if(this._eventsCount===0)return l;for(f in c=this._events)t.call(c,f)&&l.push(e?f.slice(1):f);return Object.getOwnPropertySymbols?l.concat(Object.getOwnPropertySymbols(c)):l},r.prototype.listeners=function(l){var c=e?e+l:l,f=this._events[c];if(!f)return[];if(f.fn)return[f.fn];for(var g=0,L=f.length,S=new Array(L);g<L;g++)S[g]=f[g].fn;return S},r.prototype.listenerCount=function(l){var c=e?e+l:l,f=this._events[c];return f?f.fn?1:f.length:0},r.prototype.emit=function(l,c,f,g,L,S){var k=e?e+l:l;if(!this._events[k])return!1;var E=this._events[k],G=arguments.length,C,N;if(E.fn){switch(E.once&&this.removeListener(l,E.fn,void 0,!0),G){case 1:return E.fn.call(E.context),!0;case 2:return E.fn.call(E.context,c),!0;case 3:return E.fn.call(E.context,c,f),!0;case 4:return E.fn.call(E.context,c,f,g),!0;case 5:return E.fn.call(E.context,c,f,g,L),!0;case 6:return E.fn.call(E.context,c,f,g,L,S),!0}for(N=1,C=new Array(G-1);N<G;N++)C[N-1]=arguments[N];E.fn.apply(E.context,C)}else{var J=E.length,j;for(N=0;N<J;N++)switch(E[N].once&&this.removeListener(l,E[N].fn,void 0,!0),G){case 1:E[N].fn.call(E[N].context);break;case 2:E[N].fn.call(E[N].context,c);break;case 3:E[N].fn.call(E[N].context,c,f);break;case 4:E[N].fn.call(E[N].context,c,f,g);break;default:if(!C)for(j=1,C=new Array(G-1);j<G;j++)C[j-1]=arguments[j];E[N].fn.apply(E[N].context,C)}}return!0},r.prototype.on=function(l,c,f){return o(this,l,c,f,!1)},r.prototype.once=function(l,c,f){return o(this,l,c,f,!0)},r.prototype.removeListener=function(l,c,f,g){var L=e?e+l:l;if(!this._events[L])return this;if(!c)return s(this,L),this;var S=this._events[L];if(S.fn)S.fn===c&&(!g||S.once)&&(!f||S.context===f)&&s(this,L);else{for(var k=0,E=[],G=S.length;k<G;k++)(S[k].fn!==c||g&&!S[k].once||f&&S[k].context!==f)&&E.push(S[k]);E.length?this._events[L]=E.length===1?E[0]:E:s(this,L)}return this},r.prototype.removeAllListeners=function(l){var c;return l?(c=e?e+l:l,this._events[c]&&s(this,c)):(this._events=new n,this._eventsCount=0),this},r.prototype.off=r.prototype.removeListener,r.prototype.addListener=r.prototype.on,r.prefixed=e,r.EventEmitter=r,a.exports=r}(Er)),Er.exports}var yp=bp();const J2=ba(yp);var Ap=class extends J2{constructor(t,e,n){super();Ye(this,"socket");this.socket=new window.WebSocket(t,n),this.socket.onopen=()=>this.emit("open"),this.socket.onmessage=i=>this.emit("message",i.data),this.socket.onerror=i=>this.emit("error",i),this.socket.onclose=i=>{this.emit("close",i.code,i.reason)}}send(t,e,n){const i=n||e;try{this.socket.send(t),i()}catch(o){i(o)}}close(t,e){this.socket.close(t,e)}addEventListener(t,e,n){this.socket.addEventListener(t,e,n)}};function Ip(a,t){return new Ap(a,t)}var Ep=class{encode(a){return JSON.stringify(a)}decode(a){return JSON.parse(a)}},Cp=class extends J2{constructor(t,e="ws://localhost:8080",{autoconnect:n=!0,reconnect:i=!0,reconnect_interval:o=1e3,max_reconnects:s=5,...r}={},u,l){super();Ye(this,"address");Ye(this,"rpc_id");Ye(this,"queue");Ye(this,"options");Ye(this,"autoconnect");Ye(this,"ready");Ye(this,"reconnect");Ye(this,"reconnect_timer_id");Ye(this,"reconnect_interval");Ye(this,"max_reconnects");Ye(this,"rest_options");Ye(this,"current_reconnects");Ye(this,"generate_request_id");Ye(this,"socket");Ye(this,"webSocketFactory");Ye(this,"dataPack");this.webSocketFactory=t,this.queue={},this.rpc_id=0,this.address=e,this.autoconnect=n,this.ready=!1,this.reconnect=i,this.reconnect_timer_id=void 0,this.reconnect_interval=o,this.max_reconnects=s,this.rest_options=r,this.current_reconnects=0,this.generate_request_id=u||(()=>typeof this.rpc_id=="number"?++this.rpc_id:Number(this.rpc_id)+1),l?this.dataPack=l:this.dataPack=new Ep,this.autoconnect&&this._connect(this.address,{autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects,...this.rest_options})}connect(){this.socket||this._connect(this.address,{autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects,...this.rest_options})}call(t,e,n,i){return!i&&typeof n=="object"&&(i=n,n=null),new Promise((o,s)=>{if(!this.ready)return s(new Error("socket not ready"));const r=this.generate_request_id(t,e),u={jsonrpc:"2.0",method:t,params:e||void 0,id:r};this.socket.send(this.dataPack.encode(u),i,l=>{if(l)return s(l);this.queue[r]={promise:[o,s]},n&&(this.queue[r].timeout=setTimeout(()=>{delete this.queue[r],s(new Error("reply timeout"))},n))})})}async login(t){const e=await this.call("rpc.login",t);if(!e)throw new Error("authentication failed");return e}async listMethods(){return await this.call("__listMethods")}notify(t,e){return new Promise((n,i)=>{if(!this.ready)return i(new Error("socket not ready"));const o={jsonrpc:"2.0",method:t,params:e};this.socket.send(this.dataPack.encode(o),s=>{if(s)return i(s);n()})})}async subscribe(t){typeof t=="string"&&(t=[t]);const e=await this.call("rpc.on",t);if(typeof t=="string"&&e[t]!=="ok")throw new Error("Failed subscribing to an event '"+t+"' with: "+e[t]);return e}async unsubscribe(t){typeof t=="string"&&(t=[t]);const e=await this.call("rpc.off",t);if(typeof t=="string"&&e[t]!=="ok")throw new Error("Failed unsubscribing from an event with: "+e);return e}close(t,e){this.socket.close(t||1e3,e)}setAutoReconnect(t){this.reconnect=t}setReconnectInterval(t){this.reconnect_interval=t}setMaxReconnects(t){this.max_reconnects=t}_connect(t,e){clearTimeout(this.reconnect_timer_id),this.socket=this.webSocketFactory(t,e),this.socket.addEventListener("open",()=>{this.ready=!0,this.emit("open"),this.current_reconnects=0}),this.socket.addEventListener("message",({data:n})=>{n instanceof ArrayBuffer&&(n=jt.Buffer.from(n).toString());try{n=this.dataPack.decode(n)}catch{return}if(n.notification&&this.listeners(n.notification).length){if(!Object.keys(n.params).length)return this.emit(n.notification);const i=[n.notification];if(n.params.constructor===Object)i.push(n.params);else for(let o=0;o<n.params.length;o++)i.push(n.params[o]);return Promise.resolve().then(()=>{this.emit.apply(this,i)})}if(!this.queue[n.id])return n.method?Promise.resolve().then(()=>{this.emit(n.method,n==null?void 0:n.params)}):void 0;"error"in n=="result"in n&&this.queue[n.id].promise[1](new Error('Server response malformed. Response must include either "result" or "error", but not both.')),this.queue[n.id].timeout&&clearTimeout(this.queue[n.id].timeout),n.error?this.queue[n.id].promise[1](n.error):this.queue[n.id].promise[0](n.result),delete this.queue[n.id]}),this.socket.addEventListener("error",n=>this.emit("error",n)),this.socket.addEventListener("close",({code:n,reason:i})=>{this.ready&&setTimeout(()=>this.emit("close",n,i),0),this.ready=!1,this.socket=void 0,n!==1e3&&(this.current_reconnects++,this.reconnect&&(this.max_reconnects>this.current_reconnects||this.max_reconnects===0)&&(this.reconnect_timer_id=setTimeout(()=>this._connect(t,e),this.reconnect_interval)))})}};class Y2 extends E2{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,lg(t);const n=Cl(e);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,o=new Uint8Array(i);o.set(n.length>i?t.create().update(n).digest():n);for(let s=0;s<o.length;s++)o[s]^=54;this.iHash.update(o),this.oHash=t.create();for(let s=0;s<o.length;s++)o[s]^=106;this.oHash.update(o),o.fill(0)}update(t){return hs(this),this.iHash.update(t),this}digestInto(t){hs(this),ks(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:e,iHash:n,finished:i,destroyed:o,blockLen:s,outputLen:r}=this;return t=t,t.finished=i,t.destroyed=o,t.blockLen=s,t.outputLen=r,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const j2=(a,t,e)=>new Y2(a,t).update(e).digest();j2.create=(a,t)=>new Y2(a,t);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Ou(a){a.lowS!==void 0&&oi("lowS",a.lowS),a.prehash!==void 0&&oi("prehash",a.prehash)}function Bp(a){const t=Fl(a);Lo(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:e,Fp:n,a:i}=t;if(e){if(!n.eql(i,n.ZERO))throw new Error("invalid endomorphism, can only be defined for Koblitz curves that have a=0");if(typeof e!="object"||typeof e.beta!="bigint"||typeof e.splitScalar!="function")throw new Error("invalid endomorphism, expected beta: bigint and splitScalar: function")}return Object.freeze({...t})}const{bytesToNumberBE:vp,hexToBytes:Fp}=Wg;class Sp extends Error{constructor(t=""){super(t)}}const Xn={Err:Sp,_tlv:{encode:(a,t)=>{const{Err:e}=Xn;if(a<0||a>256)throw new e("tlv.encode: wrong tag");if(t.length&1)throw new e("tlv.encode: unpadded data");const n=t.length/2,i=Xi(n);if(i.length/2&128)throw new e("tlv.encode: long form length too big");const o=n>127?Xi(i.length/2|128):"";return Xi(a)+o+i+t},decode(a,t){const{Err:e}=Xn;let n=0;if(a<0||a>256)throw new e("tlv.encode: wrong tag");if(t.length<2||t[n++]!==a)throw new e("tlv.decode: wrong tlv");const i=t[n++],o=!!(i&128);let s=0;if(!o)s=i;else{const u=i&127;if(!u)throw new e("tlv.decode(long): indefinite length not supported");if(u>4)throw new e("tlv.decode(long): byte length is too big");const l=t.subarray(n,n+u);if(l.length!==u)throw new e("tlv.decode: length bytes not complete");if(l[0]===0)throw new e("tlv.decode(long): zero leftmost byte");for(const c of l)s=s<<8|c;if(n+=u,s<128)throw new e("tlv.decode(long): not minimal encoding")}const r=t.subarray(n,n+s);if(r.length!==s)throw new e("tlv.decode: wrong value length");return{v:r,l:t.subarray(n+s)}}},_int:{encode(a){const{Err:t}=Xn;if(a<ei)throw new t("integer: negative integers are not allowed");let e=Xi(a);if(Number.parseInt(e[0],16)&8&&(e="00"+e),e.length&1)throw new t("unexpected DER parsing assertion: unpadded hex");return e},decode(a){const{Err:t}=Xn;if(a[0]&128)throw new t("invalid signature integer: negative");if(a[0]===0&&!(a[1]&128))throw new t("invalid signature integer: unnecessary leading zero");return vp(a)}},toSig(a){const{Err:t,_int:e,_tlv:n}=Xn,i=typeof a=="string"?Fp(a):a;ya(i);const{v:o,l:s}=n.decode(48,i);if(s.length)throw new t("invalid signature: left bytes after parsing");const{v:r,l:u}=n.decode(2,o),{v:l,l:c}=n.decode(2,u);if(c.length)throw new t("invalid signature: left bytes after parsing");return{r:e.decode(r),s:e.decode(l)}},hexFromSig(a){const{_tlv:t,_int:e}=Xn,n=t.encode(2,e.encode(a.r)),i=t.encode(2,e.encode(a.s)),o=n+i;return t.encode(48,o)}},ei=BigInt(0),je=BigInt(1);BigInt(2);const Du=BigInt(3);BigInt(4);function _p(a){const t=Bp(a),{Fp:e}=t,n=Os(t.n,t.nBitLength),i=t.toBytes||((k,E,G)=>{const C=E.toAffine();return Hi(Uint8Array.from([4]),e.toBytes(C.x),e.toBytes(C.y))}),o=t.fromBytes||(k=>{const E=k.subarray(1),G=e.fromBytes(E.subarray(0,e.BYTES)),C=e.fromBytes(E.subarray(e.BYTES,2*e.BYTES));return{x:G,y:C}});function s(k){const{a:E,b:G}=t,C=e.sqr(k),N=e.mul(C,k);return e.add(e.add(N,e.mul(k,E)),G)}if(!e.eql(e.sqr(t.Gy),s(t.Gx)))throw new Error("bad generator point: equation left != right");function r(k){return Ps(k,je,t.n)}function u(k){const{allowedPrivateKeyLengths:E,nByteLength:G,wrapPrivateKey:C,n:N}=t;if(E&&typeof k!="bigint"){if(Ti(k)&&(k=Ri(k)),typeof k!="string"||!E.includes(k.length))throw new Error("invalid private key");k=k.padStart(G*2,"0")}let J;try{J=typeof k=="bigint"?k:Di(He("private key",k,G))}catch{throw new Error("invalid private key, expected hex or "+G+" bytes, got "+typeof k)}return C&&(J=Me(J,N)),Mn("private key",J,je,N),J}function l(k){if(!(k instanceof g))throw new Error("ProjectivePoint expected")}const c=ga((k,E)=>{const{px:G,py:C,pz:N}=k;if(e.eql(N,e.ONE))return{x:G,y:C};const J=k.is0();E==null&&(E=J?e.ONE:e.inv(N));const j=e.mul(G,E),R=e.mul(C,E),b=e.mul(N,E);if(J)return{x:e.ZERO,y:e.ZERO};if(!e.eql(b,e.ONE))throw new Error("invZ was invalid");return{x:j,y:R}}),f=ga(k=>{if(k.is0()){if(t.allowInfinityPoint&&!e.is0(k.py))return;throw new Error("bad point: ZERO")}const{x:E,y:G}=k.toAffine();if(!e.isValid(E)||!e.isValid(G))throw new Error("bad point: x or y not FE");const C=e.sqr(G),N=s(E);if(!e.eql(C,N))throw new Error("bad point: equation left != right");if(!k.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class g{constructor(E,G,C){if(this.px=E,this.py=G,this.pz=C,E==null||!e.isValid(E))throw new Error("x required");if(G==null||!e.isValid(G))throw new Error("y required");if(C==null||!e.isValid(C))throw new Error("z required");Object.freeze(this)}static fromAffine(E){const{x:G,y:C}=E||{};if(!E||!e.isValid(G)||!e.isValid(C))throw new Error("invalid affine point");if(E instanceof g)throw new Error("projective point not allowed");const N=J=>e.eql(J,e.ZERO);return N(G)&&N(C)?g.ZERO:new g(G,C,e.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(E){const G=e.invertBatch(E.map(C=>C.pz));return E.map((C,N)=>C.toAffine(G[N])).map(g.fromAffine)}static fromHex(E){const G=g.fromAffine(o(He("pointHex",E)));return G.assertValidity(),G}static fromPrivateKey(E){return g.BASE.multiply(u(E))}static msm(E,G){return O2(g,n,E,G)}_setWindowSize(E){S.setWindowSize(this,E)}assertValidity(){f(this)}hasEvenY(){const{y:E}=this.toAffine();if(e.isOdd)return!e.isOdd(E);throw new Error("Field doesn't support isOdd")}equals(E){l(E);const{px:G,py:C,pz:N}=this,{px:J,py:j,pz:R}=E,b=e.eql(e.mul(G,R),e.mul(J,N)),w=e.eql(e.mul(C,R),e.mul(j,N));return b&&w}negate(){return new g(this.px,e.neg(this.py),this.pz)}double(){const{a:E,b:G}=t,C=e.mul(G,Du),{px:N,py:J,pz:j}=this;let R=e.ZERO,b=e.ZERO,w=e.ZERO,Z=e.mul(N,N),P=e.mul(J,J),V=e.mul(j,j),nt=e.mul(N,J);return nt=e.add(nt,nt),w=e.mul(N,j),w=e.add(w,w),R=e.mul(E,w),b=e.mul(C,V),b=e.add(R,b),R=e.sub(P,b),b=e.add(P,b),b=e.mul(R,b),R=e.mul(nt,R),w=e.mul(C,w),V=e.mul(E,V),nt=e.sub(Z,V),nt=e.mul(E,nt),nt=e.add(nt,w),w=e.add(Z,Z),Z=e.add(w,Z),Z=e.add(Z,V),Z=e.mul(Z,nt),b=e.add(b,Z),V=e.mul(J,j),V=e.add(V,V),Z=e.mul(V,nt),R=e.sub(R,Z),w=e.mul(V,P),w=e.add(w,w),w=e.add(w,w),new g(R,b,w)}add(E){l(E);const{px:G,py:C,pz:N}=this,{px:J,py:j,pz:R}=E;let b=e.ZERO,w=e.ZERO,Z=e.ZERO;const P=t.a,V=e.mul(t.b,Du);let nt=e.mul(G,J),I=e.mul(C,j),y=e.mul(N,R),_=e.add(G,C),T=e.add(J,j);_=e.mul(_,T),T=e.add(nt,I),_=e.sub(_,T),T=e.add(G,N);let B=e.add(J,R);return T=e.mul(T,B),B=e.add(nt,y),T=e.sub(T,B),B=e.add(C,N),b=e.add(j,R),B=e.mul(B,b),b=e.add(I,y),B=e.sub(B,b),Z=e.mul(P,T),b=e.mul(V,y),Z=e.add(b,Z),b=e.sub(I,Z),Z=e.add(I,Z),w=e.mul(b,Z),I=e.add(nt,nt),I=e.add(I,nt),y=e.mul(P,y),T=e.mul(V,T),I=e.add(I,y),y=e.sub(nt,y),y=e.mul(P,y),T=e.add(T,y),nt=e.mul(I,T),w=e.add(w,nt),nt=e.mul(B,T),b=e.mul(_,b),b=e.sub(b,nt),nt=e.mul(_,I),Z=e.mul(B,Z),Z=e.add(Z,nt),new g(b,w,Z)}subtract(E){return this.add(E.negate())}is0(){return this.equals(g.ZERO)}wNAF(E){return S.wNAFCached(this,E,g.normalizeZ)}multiplyUnsafe(E){const{endo:G,n:C}=t;Mn("scalar",E,ei,C);const N=g.ZERO;if(E===ei)return N;if(this.is0()||E===je)return this;if(!G||S.hasPrecomputes(this))return S.wNAFCachedUnsafe(this,E,g.normalizeZ);let{k1neg:J,k1:j,k2neg:R,k2:b}=G.splitScalar(E),w=N,Z=N,P=this;for(;j>ei||b>ei;)j&je&&(w=w.add(P)),b&je&&(Z=Z.add(P)),P=P.double(),j>>=je,b>>=je;return J&&(w=w.negate()),R&&(Z=Z.negate()),Z=new g(e.mul(Z.px,G.beta),Z.py,Z.pz),w.add(Z)}multiply(E){const{endo:G,n:C}=t;Mn("scalar",E,je,C);let N,J;if(G){const{k1neg:j,k1:R,k2neg:b,k2:w}=G.splitScalar(E);let{p:Z,f:P}=this.wNAF(R),{p:V,f:nt}=this.wNAF(w);Z=S.constTimeNegate(j,Z),V=S.constTimeNegate(b,V),V=new g(e.mul(V.px,G.beta),V.py,V.pz),N=Z.add(V),J=P.add(nt)}else{const{p:j,f:R}=this.wNAF(E);N=j,J=R}return g.normalizeZ([N,J])[0]}multiplyAndAddUnsafe(E,G,C){const N=g.BASE,J=(R,b)=>b===ei||b===je||!R.equals(N)?R.multiplyUnsafe(b):R.multiply(b),j=J(this,G).add(J(E,C));return j.is0()?void 0:j}toAffine(E){return c(this,E)}isTorsionFree(){const{h:E,isTorsionFree:G}=t;if(E===je)return!0;if(G)return G(g,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:E,clearCofactor:G}=t;return E===je?this:G?G(g,this):this.multiplyUnsafe(t.h)}toRawBytes(E=!0){return oi("isCompressed",E),this.assertValidity(),i(g,this,E)}toHex(E=!0){return oi("isCompressed",E),Ri(this.toRawBytes(E))}}g.BASE=new g(t.Gx,t.Gy,e.ONE),g.ZERO=new g(e.ZERO,e.ONE,e.ZERO);const L=t.nBitLength,S=P2(g,t.endo?Math.ceil(L/2):L);return{CURVE:t,ProjectivePoint:g,normPrivateKeyToScalar:u,weierstrassEquation:s,isWithinCurveOrder:r}}function xp(a){const t=Fl(a);return Lo(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}function Mp(a){const t=xp(a),{Fp:e,n}=t,i=e.BYTES+1,o=2*e.BYTES+1;function s(y){return Me(y,n)}function r(y){return qc(y,n)}const{ProjectivePoint:u,normPrivateKeyToScalar:l,weierstrassEquation:c,isWithinCurveOrder:f}=_p({...t,toBytes(y,_,T){const B=_.toAffine(),Y=e.toBytes(B.x),tt=Hi;return oi("isCompressed",T),T?tt(Uint8Array.from([_.hasEvenY()?2:3]),Y):tt(Uint8Array.from([4]),Y,e.toBytes(B.y))},fromBytes(y){const _=y.length,T=y[0],B=y.subarray(1);if(_===i&&(T===2||T===3)){const Y=Di(B);if(!Ps(Y,je,e.ORDER))throw new Error("Point is not on curve");const tt=c(Y);let $;try{$=e.sqrt(tt)}catch(M){const W=M instanceof Error?": "+M.message:"";throw new Error("Point is not on curve"+W)}const X=($&je)===je;return(T&1)===1!==X&&($=e.neg($)),{x:Y,y:$}}else if(_===o&&T===4){const Y=e.fromBytes(B.subarray(0,e.BYTES)),tt=e.fromBytes(B.subarray(e.BYTES,2*e.BYTES));return{x:Y,y:tt}}else{const Y=i,tt=o;throw new Error("invalid Point, expected length of "+Y+", or uncompressed "+tt+", got "+_)}}}),g=y=>Ri(co(y,t.nByteLength));function L(y){const _=n>>je;return y>_}function S(y){return L(y)?s(-y):y}const k=(y,_,T)=>Di(y.slice(_,T));class E{constructor(_,T,B){this.r=_,this.s=T,this.recovery=B,this.assertValidity()}static fromCompact(_){const T=t.nByteLength;return _=He("compactSignature",_,T*2),new E(k(_,0,T),k(_,T,2*T))}static fromDER(_){const{r:T,s:B}=Xn.toSig(He("DER",_));return new E(T,B)}assertValidity(){Mn("r",this.r,je,n),Mn("s",this.s,je,n)}addRecoveryBit(_){return new E(this.r,this.s,_)}recoverPublicKey(_){const{r:T,s:B,recovery:Y}=this,tt=R(He("msgHash",_));if(Y==null||![0,1,2,3].includes(Y))throw new Error("recovery id invalid");const $=Y===2||Y===3?T+t.n:T;if($>=e.ORDER)throw new Error("recovery id 2 or 3 invalid");const X=(Y&1)===0?"02":"03",F=u.fromHex(X+g($)),M=r($),W=s(-tt*M),A=s(B*M),h=u.BASE.multiplyAndAddUnsafe(F,W,A);if(!h)throw new Error("point at infinify");return h.assertValidity(),h}hasHighS(){return L(this.s)}normalizeS(){return this.hasHighS()?new E(this.r,s(-this.s),this.recovery):this}toDERRawBytes(){return ro(this.toDERHex())}toDERHex(){return Xn.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ro(this.toCompactHex())}toCompactHex(){return g(this.r)+g(this.s)}}const G={isValidPrivateKey(y){try{return l(y),!0}catch{return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{const y=k2(t.n);return s3(t.randomBytes(y),t.n)},precompute(y=8,_=u.BASE){return _._setWindowSize(y),_.multiply(BigInt(3)),_}};function C(y,_=!0){return u.fromPrivateKey(y).toRawBytes(_)}function N(y){const _=Ti(y),T=typeof y=="string",B=(_||T)&&y.length;return _?B===i||B===o:T?B===2*i||B===2*o:y instanceof u}function J(y,_,T=!0){if(N(y))throw new Error("first arg must be private key");if(!N(_))throw new Error("second arg must be public key");return u.fromHex(_).multiply(l(y)).toRawBytes(T)}const j=t.bits2int||function(y){if(y.length>8192)throw new Error("input is too large");const _=Di(y),T=y.length*8-t.nBitLength;return T>0?_>>BigInt(T):_},R=t.bits2int_modN||function(y){return s(j(y))},b=vl(t.nBitLength);function w(y){return Mn("num < 2^"+t.nBitLength,y,ei,b),co(y,t.nByteLength)}function Z(y,_,T=P){if(["recovered","canonical"].some(p=>p in T))throw new Error("sign() legacy options not supported");const{hash:B,randomBytes:Y}=t;let{lowS:tt,prehash:$,extraEntropy:X}=T;tt==null&&(tt=!0),y=He("msgHash",y),Ou(T),$&&(y=He("prehashed msgHash",B(y)));const F=R(y),M=l(_),W=[w(M),w(F)];if(X!=null&&X!==!1){const p=X===!0?Y(e.BYTES):X;W.push(He("extraEntropy",p))}const A=Hi(...W),h=F;function Q(p){const d=j(p);if(!f(d))return;const m=r(d),v=u.BASE.multiply(d).toAffine(),et=s(v.x);if(et===ei)return;const ct=s(m*s(h+et*M));if(ct===ei)return;let dt=(v.x===et?0:2)|Number(v.y&je),ft=ct;return tt&&L(ct)&&(ft=S(ct),dt^=1),new E(et,ft,dt)}return{seed:A,k2sig:Q}}const P={lowS:t.lowS,prehash:!1},V={lowS:t.lowS,prehash:!1};function nt(y,_,T=P){const{seed:B,k2sig:Y}=Z(y,_,T),tt=t;return _2(tt.hash.outputLen,tt.nByteLength,tt.hmac)(B,Y)}u.BASE._setWindowSize(8);function I(y,_,T,B=V){var dt;const Y=y;_=He("msgHash",_),T=He("publicKey",T);const{lowS:tt,prehash:$,format:X}=B;if(Ou(B),"strict"in B)throw new Error("options.strict was renamed to lowS");if(X!==void 0&&X!=="compact"&&X!=="der")throw new Error("format must be compact or der");const F=typeof Y=="string"||Ti(Y),M=!F&&!X&&typeof Y=="object"&&Y!==null&&typeof Y.r=="bigint"&&typeof Y.s=="bigint";if(!F&&!M)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let W,A;try{if(M&&(W=new E(Y.r,Y.s)),F){try{X!=="compact"&&(W=E.fromDER(Y))}catch(ft){if(!(ft instanceof Xn.Err))throw ft}!W&&X!=="der"&&(W=E.fromCompact(Y))}A=u.fromHex(T)}catch{return!1}if(!W||tt&&W.hasHighS())return!1;$&&(_=t.hash(_));const{r:h,s:Q}=W,p=R(_),d=r(Q),m=s(p*d),v=s(h*d),et=(dt=u.BASE.multiplyAndAddUnsafe(A,m,v))==null?void 0:dt.toAffine();return et?s(et.x)===h:!1}return{CURVE:t,getPublicKey:C,getSharedSecret:J,sign:nt,verify:I,ProjectivePoint:u,Signature:E,utils:G}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function kp(a){return{hash:a,hmac:(t,...e)=>j2(a,t,fg(...e)),randomBytes:B2}}function Up(a,t){const e=n=>Mp({...a,...kp(n)});return{...e(t),create:e}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const V2=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),qu=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Gp=BigInt(1),Rc=BigInt(2),Tu=(a,t)=>(a+t/Rc)/t;function Pp(a){const t=V2,e=BigInt(3),n=BigInt(6),i=BigInt(11),o=BigInt(22),s=BigInt(23),r=BigInt(44),u=BigInt(88),l=a*a*a%t,c=l*l*a%t,f=qe(c,e,t)*c%t,g=qe(f,e,t)*c%t,L=qe(g,Rc,t)*l%t,S=qe(L,i,t)*L%t,k=qe(S,o,t)*S%t,E=qe(k,r,t)*k%t,G=qe(E,u,t)*E%t,C=qe(G,r,t)*k%t,N=qe(C,e,t)*c%t,J=qe(N,s,t)*S%t,j=qe(J,n,t)*l%t,R=qe(j,Rc,t);if(!Hc.eql(Hc.sqr(R),a))throw new Error("Cannot find square root");return R}const Hc=Os(V2,void 0,void 0,{sqrt:Pp}),Op=Up({a:BigInt(0),b:BigInt(7),Fp:Hc,n:qu,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:a=>{const t=qu,e=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Gp*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=e,s=BigInt("0x100000000000000000000000000000000"),r=Tu(o*a,t),u=Tu(-n*a,t);let l=Me(a-r*e-u*i,t),c=Me(-r*n-u*o,t);const f=l>s,g=c>s;if(f&&(l=t-l),g&&(c=t-c),l>s||c>s)throw new Error("splitScalar: Endomorphism failed, k="+a);return{k1neg:f,k1:l,k2neg:g,k2:c}}}},Tc);BigInt(0);function Ru(a){try{return _l.ExtendedPoint.fromHex(a),!0}catch{return!1}}const Dp=(a,t)=>_l.sign(a,t.slice(0,32)),qp=_l.verify,tn=a=>jt.Buffer.isBuffer(a)?a:a instanceof Uint8Array?jt.Buffer.from(a.buffer,a.byteOffset,a.byteLength):jt.Buffer.from(a);class Tp{constructor(t){Object.assign(this,t)}encode(){return jt.Buffer.from(pr.serialize(ls,this))}static decode(t){return pr.deserialize(ls,this,t)}static decodeUnchecked(t){return pr.deserializeUnchecked(ls,this,t)}}const ls=new Map;var W2;const Rp=32,mi=32;function Hp(a){return a._bn!==void 0}let Hu=1;class se extends Tp{constructor(t){if(super({}),this._bn=void 0,Hp(t))this._bn=t._bn;else{if(typeof t=="string"){const e=en.decode(t);if(e.length!=mi)throw new Error("Invalid public key input");this._bn=new Au(e)}else this._bn=new Au(t);if(this._bn.byteLength()>mi)throw new Error("Invalid public key input")}}static unique(){const t=new se(Hu);return Hu+=1,new se(t.toBuffer())}equals(t){return this._bn.eq(t._bn)}toBase58(){return en.encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const t=this.toBuffer();return new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}toBuffer(){const t=this._bn.toArrayLike(jt.Buffer);if(t.length===mi)return t;const e=jt.Buffer.alloc(32);return t.copy(e,32-t.length),e}get[Symbol.toStringTag](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(t,e,n){const i=jt.Buffer.concat([t.toBuffer(),jt.Buffer.from(e),n.toBuffer()]),o=Tc(i);return new se(o)}static createProgramAddressSync(t,e){let n=jt.Buffer.alloc(0);t.forEach(function(o){if(o.length>Rp)throw new TypeError("Max seed length exceeded");n=jt.Buffer.concat([n,tn(o)])}),n=jt.Buffer.concat([n,e.toBuffer(),jt.Buffer.from("ProgramDerivedAddress")]);const i=Tc(n);if(Ru(i))throw new Error("Invalid seeds, address must fall off the curve");return new se(i)}static async createProgramAddress(t,e){return this.createProgramAddressSync(t,e)}static findProgramAddressSync(t,e){let n=255,i;for(;n!=0;){try{const o=t.concat(jt.Buffer.from([n]));i=this.createProgramAddressSync(o,e)}catch(o){if(o instanceof TypeError)throw o;n--;continue}return[i,n]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(t,e){return this.findProgramAddressSync(t,e)}static isOnCurve(t){const e=new se(t);return Ru(e.toBytes())}}W2=se;se.default=new W2("11111111111111111111111111111111");ls.set(se,{kind:"struct",fields:[["_bn","u256"]]});new se("BPFLoader1111111111111111111111111111111111");const io=1232,Z2=127,X2=64;class $2 extends Error{constructor(t){super(`Signature ${t} has expired: block height exceeded.`),this.signature=void 0,this.signature=t}}Object.defineProperty($2.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class th extends Error{constructor(t,e){super(`Transaction was not confirmed in ${e.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${t} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=t}}Object.defineProperty(th.prototype,"name",{value:"TransactionExpiredTimeoutError"});class na extends Error{constructor(t){super(`Signature ${t} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=t}}Object.defineProperty(na.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class bs{constructor(t,e){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=t,this.accountKeysFromLookups=e}keySegments(){const t=[this.staticAccountKeys];return this.accountKeysFromLookups&&(t.push(this.accountKeysFromLookups.writable),t.push(this.accountKeysFromLookups.readonly)),t}get(t){for(const e of this.keySegments()){if(t<e.length)return e[t];t-=e.length}}get length(){return this.keySegments().flat().length}compileInstructions(t){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const n=new Map;this.keySegments().flat().forEach((o,s)=>{n.set(o.toBase58(),s)});const i=o=>{const s=n.get(o.toBase58());if(s===void 0)throw new Error("Encountered an unknown instruction account key during compilation");return s};return t.map(o=>({programIdIndex:i(o.programId),accountKeyIndexes:o.keys.map(s=>i(s.pubkey)),data:o.data}))}}const Ae=(a="publicKey")=>Et.blob(32,a),$i=(a="string")=>{const t=Et.struct([Et.u32("length"),Et.u32("lengthPadding"),Et.blob(Et.offset(Et.u32(),-8),"chars")],a),e=t.decode.bind(t),n=t.encode.bind(t),i=t;return i.decode=(o,s)=>e(o,s).chars.toString(),i.encode=(o,s,r)=>{const u={chars:jt.Buffer.from(o,"utf8")};return n(u,s,r)},i.alloc=o=>Et.u32().span+Et.u32().span+jt.Buffer.from(o,"utf8").length,i},Qp=(a="authorized")=>Et.struct([Ae("staker"),Ae("withdrawer")],a),Kp=(a="lockup")=>Et.struct([Et.ns64("unixTimestamp"),Et.ns64("epoch"),Ae("custodian")],a),Np=(a="voteInit")=>Et.struct([Ae("nodePubkey"),Ae("authorizedVoter"),Ae("authorizedWithdrawer"),Et.u8("commission")],a),zp=(a="voteAuthorizeWithSeedArgs")=>Et.struct([Et.u32("voteAuthorizationType"),Ae("currentAuthorityDerivedKeyOwnerPubkey"),$i("currentAuthorityDerivedKeySeed"),Ae("newAuthorized")],a);function eh(a,t){const e=i=>{if(i.span>=0)return i.span;if(typeof i.alloc=="function")return i.alloc(t[i.property]);if("count"in i&&"elementLayout"in i){const o=t[i.property];if(Array.isArray(o))return o.length*e(i.elementLayout)}else if("fields"in i)return eh({layout:i},t[i.property]);return 0};let n=0;return a.layout.fields.forEach(i=>{n+=e(i)}),n}function Sn(a){let t=0,e=0;for(;;){let n=a.shift();if(t|=(n&127)<<e*7,e+=1,(n&128)===0)break}return t}function _n(a,t){let e=t;for(;;){let n=e&127;if(e>>=7,e==0){a.push(n);break}else n|=128,a.push(n)}}function Qe(a,t){if(!a)throw new Error(t||"Assertion failed")}class Hs{constructor(t,e){this.payer=void 0,this.keyMetaMap=void 0,this.payer=t,this.keyMetaMap=e}static compile(t,e){const n=new Map,i=s=>{const r=s.toBase58();let u=n.get(r);return u===void 0&&(u={isSigner:!1,isWritable:!1,isInvoked:!1},n.set(r,u)),u},o=i(e);o.isSigner=!0,o.isWritable=!0;for(const s of t){i(s.programId).isInvoked=!0;for(const r of s.keys){const u=i(r.pubkey);u.isSigner||(u.isSigner=r.isSigner),u.isWritable||(u.isWritable=r.isWritable)}}return new Hs(e,n)}getMessageComponents(){const t=[...this.keyMetaMap.entries()];Qe(t.length<=256,"Max static account keys length exceeded");const e=t.filter(([,u])=>u.isSigner&&u.isWritable),n=t.filter(([,u])=>u.isSigner&&!u.isWritable),i=t.filter(([,u])=>!u.isSigner&&u.isWritable),o=t.filter(([,u])=>!u.isSigner&&!u.isWritable),s={numRequiredSignatures:e.length+n.length,numReadonlySignedAccounts:n.length,numReadonlyUnsignedAccounts:o.length};{Qe(e.length>0,"Expected at least one writable signer key");const[u]=e[0];Qe(u===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}const r=[...e.map(([u])=>new se(u)),...n.map(([u])=>new se(u)),...i.map(([u])=>new se(u)),...o.map(([u])=>new se(u))];return[s,r]}extractTableLookup(t){const[e,n]=this.drainKeysFoundInLookupTable(t.state.addresses,s=>!s.isSigner&&!s.isInvoked&&s.isWritable),[i,o]=this.drainKeysFoundInLookupTable(t.state.addresses,s=>!s.isSigner&&!s.isInvoked&&!s.isWritable);if(!(e.length===0&&i.length===0))return[{accountKey:t.key,writableIndexes:e,readonlyIndexes:i},{writable:n,readonly:o}]}drainKeysFoundInLookupTable(t,e){const n=new Array,i=new Array;for(const[o,s]of this.keyMetaMap.entries())if(e(s)){const r=new se(o),u=t.findIndex(l=>l.equals(r));u>=0&&(Qe(u<256,"Max lookup table index exceeded"),n.push(u),i.push(r),this.keyMetaMap.delete(o))}return[n,i]}}const nh="Reached end of buffer unexpectedly";function ni(a){if(a.length===0)throw new Error(nh);return a.shift()}function xn(a,...t){const[e]=t;if(t.length===2?e+(t[1]??0)>a.length:e>=a.length)throw new Error(nh);return a.splice(...t)}class bi{constructor(t){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=t.header,this.accountKeys=t.accountKeys.map(e=>new se(e)),this.recentBlockhash=t.recentBlockhash,this.instructions=t.instructions,this.instructions.forEach(e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex]))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map(t=>({programIdIndex:t.programIdIndex,accountKeyIndexes:t.accounts,data:en.decode(t.data)}))}get addressTableLookups(){return[]}getAccountKeys(){return new bs(this.staticAccountKeys)}static compile(t){const e=Hs.compile(t.instructions,t.payerKey),[n,i]=e.getMessageComponents(),s=new bs(i).compileInstructions(t.instructions).map(r=>({programIdIndex:r.programIdIndex,accounts:r.accountKeyIndexes,data:en.encode(r.data)}));return new bi({header:n,accountKeys:i,recentBlockhash:t.recentBlockhash,instructions:s})}isAccountSigner(t){return t<this.header.numRequiredSignatures}isAccountWritable(t){const e=this.header.numRequiredSignatures;if(t>=this.header.numRequiredSignatures){const n=t-e,o=this.accountKeys.length-e-this.header.numReadonlyUnsignedAccounts;return n<o}else{const n=e-this.header.numReadonlySignedAccounts;return t<n}}isProgramId(t){return this.indexToProgramIds.has(t)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter((t,e)=>!this.isProgramId(e))}serialize(){const t=this.accountKeys.length;let e=[];_n(e,t);const n=this.instructions.map(f=>{const{accounts:g,programIdIndex:L}=f,S=Array.from(en.decode(f.data));let k=[];_n(k,g.length);let E=[];return _n(E,S.length),{programIdIndex:L,keyIndicesCount:jt.Buffer.from(k),keyIndices:g,dataLength:jt.Buffer.from(E),data:S}});let i=[];_n(i,n.length);let o=jt.Buffer.alloc(io);jt.Buffer.from(i).copy(o);let s=i.length;n.forEach(f=>{const L=Et.struct([Et.u8("programIdIndex"),Et.blob(f.keyIndicesCount.length,"keyIndicesCount"),Et.seq(Et.u8("keyIndex"),f.keyIndices.length,"keyIndices"),Et.blob(f.dataLength.length,"dataLength"),Et.seq(Et.u8("userdatum"),f.data.length,"data")]).encode(f,o,s);s+=L}),o=o.slice(0,s);const r=Et.struct([Et.blob(1,"numRequiredSignatures"),Et.blob(1,"numReadonlySignedAccounts"),Et.blob(1,"numReadonlyUnsignedAccounts"),Et.blob(e.length,"keyCount"),Et.seq(Ae("key"),t,"keys"),Ae("recentBlockhash")]),u={numRequiredSignatures:jt.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:jt.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:jt.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:jt.Buffer.from(e),keys:this.accountKeys.map(f=>tn(f.toBytes())),recentBlockhash:en.decode(this.recentBlockhash)};let l=jt.Buffer.alloc(2048);const c=r.encode(u,l);return o.copy(l,c),l.slice(0,c+o.length)}static from(t){let e=[...t];const n=ni(e);if(n!==(n&Z2))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const i=ni(e),o=ni(e),s=Sn(e);let r=[];for(let g=0;g<s;g++){const L=xn(e,0,mi);r.push(new se(jt.Buffer.from(L)))}const u=xn(e,0,mi),l=Sn(e);let c=[];for(let g=0;g<l;g++){const L=ni(e),S=Sn(e),k=xn(e,0,S),E=Sn(e),G=xn(e,0,E),C=en.encode(jt.Buffer.from(G));c.push({programIdIndex:L,accounts:k,data:C})}const f={header:{numRequiredSignatures:n,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:o},recentBlockhash:en.encode(jt.Buffer.from(u)),accountKeys:r,instructions:c};return new bi(f)}}class ys{constructor(t){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=t.header,this.staticAccountKeys=t.staticAccountKeys,this.recentBlockhash=t.recentBlockhash,this.compiledInstructions=t.compiledInstructions,this.addressTableLookups=t.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let t=0;for(const e of this.addressTableLookups)t+=e.readonlyIndexes.length+e.writableIndexes.length;return t}getAccountKeys(t){let e;if(t&&"accountKeysFromLookups"in t&&t.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=t.accountKeysFromLookups.writable.length+t.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");e=t.accountKeysFromLookups}else if(t&&"addressLookupTableAccounts"in t&&t.addressLookupTableAccounts)e=this.resolveAddressTableLookups(t.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new bs(this.staticAccountKeys,e)}isAccountSigner(t){return t<this.header.numRequiredSignatures}isAccountWritable(t){const e=this.header.numRequiredSignatures,n=this.staticAccountKeys.length;if(t>=n){const i=t-n,o=this.addressTableLookups.reduce((s,r)=>s+r.writableIndexes.length,0);return i<o}else if(t>=this.header.numRequiredSignatures){const i=t-e,s=n-e-this.header.numReadonlyUnsignedAccounts;return i<s}else{const i=e-this.header.numReadonlySignedAccounts;return t<i}}resolveAddressTableLookups(t){const e={writable:[],readonly:[]};for(const n of this.addressTableLookups){const i=t.find(o=>o.key.equals(n.accountKey));if(!i)throw new Error(`Failed to find address lookup table account for table key ${n.accountKey.toBase58()}`);for(const o of n.writableIndexes)if(o<i.state.addresses.length)e.writable.push(i.state.addresses[o]);else throw new Error(`Failed to find address for index ${o} in address lookup table ${n.accountKey.toBase58()}`);for(const o of n.readonlyIndexes)if(o<i.state.addresses.length)e.readonly.push(i.state.addresses[o]);else throw new Error(`Failed to find address for index ${o} in address lookup table ${n.accountKey.toBase58()}`)}return e}static compile(t){const e=Hs.compile(t.instructions,t.payerKey),n=new Array,i={writable:new Array,readonly:new Array},o=t.addressLookupTableAccounts||[];for(const c of o){const f=e.extractTableLookup(c);if(f!==void 0){const[g,{writable:L,readonly:S}]=f;n.push(g),i.writable.push(...L),i.readonly.push(...S)}}const[s,r]=e.getMessageComponents(),l=new bs(r,i).compileInstructions(t.instructions);return new ys({header:s,staticAccountKeys:r,recentBlockhash:t.recentBlockhash,compiledInstructions:l,addressTableLookups:n})}serialize(){const t=Array();_n(t,this.staticAccountKeys.length);const e=this.serializeInstructions(),n=Array();_n(n,this.compiledInstructions.length);const i=this.serializeAddressTableLookups(),o=Array();_n(o,this.addressTableLookups.length);const s=Et.struct([Et.u8("prefix"),Et.struct([Et.u8("numRequiredSignatures"),Et.u8("numReadonlySignedAccounts"),Et.u8("numReadonlyUnsignedAccounts")],"header"),Et.blob(t.length,"staticAccountKeysLength"),Et.seq(Ae(),this.staticAccountKeys.length,"staticAccountKeys"),Ae("recentBlockhash"),Et.blob(n.length,"instructionsLength"),Et.blob(e.length,"serializedInstructions"),Et.blob(o.length,"addressTableLookupsLength"),Et.blob(i.length,"serializedAddressTableLookups")]),r=new Uint8Array(io),l=s.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(t),staticAccountKeys:this.staticAccountKeys.map(c=>c.toBytes()),recentBlockhash:en.decode(this.recentBlockhash),instructionsLength:new Uint8Array(n),serializedInstructions:e,addressTableLookupsLength:new Uint8Array(o),serializedAddressTableLookups:i},r);return r.slice(0,l)}serializeInstructions(){let t=0;const e=new Uint8Array(io);for(const n of this.compiledInstructions){const i=Array();_n(i,n.accountKeyIndexes.length);const o=Array();_n(o,n.data.length);const s=Et.struct([Et.u8("programIdIndex"),Et.blob(i.length,"encodedAccountKeyIndexesLength"),Et.seq(Et.u8(),n.accountKeyIndexes.length,"accountKeyIndexes"),Et.blob(o.length,"encodedDataLength"),Et.blob(n.data.length,"data")]);t+=s.encode({programIdIndex:n.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(i),accountKeyIndexes:n.accountKeyIndexes,encodedDataLength:new Uint8Array(o),data:n.data},e,t)}return e.slice(0,t)}serializeAddressTableLookups(){let t=0;const e=new Uint8Array(io);for(const n of this.addressTableLookups){const i=Array();_n(i,n.writableIndexes.length);const o=Array();_n(o,n.readonlyIndexes.length);const s=Et.struct([Ae("accountKey"),Et.blob(i.length,"encodedWritableIndexesLength"),Et.seq(Et.u8(),n.writableIndexes.length,"writableIndexes"),Et.blob(o.length,"encodedReadonlyIndexesLength"),Et.seq(Et.u8(),n.readonlyIndexes.length,"readonlyIndexes")]);t+=s.encode({accountKey:n.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(i),writableIndexes:n.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(o),readonlyIndexes:n.readonlyIndexes},e,t)}return e.slice(0,t)}static deserialize(t){let e=[...t];const n=ni(e),i=n&Z2;Qe(n!==i,"Expected versioned message but received legacy message");const o=i;Qe(o===0,`Expected versioned message with version 0 but found version ${o}`);const s={numRequiredSignatures:ni(e),numReadonlySignedAccounts:ni(e),numReadonlyUnsignedAccounts:ni(e)},r=[],u=Sn(e);for(let S=0;S<u;S++)r.push(new se(xn(e,0,mi)));const l=en.encode(xn(e,0,mi)),c=Sn(e),f=[];for(let S=0;S<c;S++){const k=ni(e),E=Sn(e),G=xn(e,0,E),C=Sn(e),N=new Uint8Array(xn(e,0,C));f.push({programIdIndex:k,accountKeyIndexes:G,data:N})}const g=Sn(e),L=[];for(let S=0;S<g;S++){const k=new se(xn(e,0,mi)),E=Sn(e),G=xn(e,0,E),C=Sn(e),N=xn(e,0,C);L.push({accountKey:k,writableIndexes:G,readonlyIndexes:N})}return new ys({header:s,staticAccountKeys:r,recentBlockhash:l,compiledInstructions:f,addressTableLookups:L})}}let fi=function(a){return a[a.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",a[a.PROCESSED=1]="PROCESSED",a[a.TIMED_OUT=2]="TIMED_OUT",a[a.NONCE_INVALID=3]="NONCE_INVALID",a}({});const Jp=jt.Buffer.alloc(X2).fill(0);class Je{constructor(t){this.keys=void 0,this.programId=void 0,this.data=jt.Buffer.alloc(0),this.programId=t.programId,this.keys=t.keys,t.data&&(this.data=t.data)}toJSON(){return{keys:this.keys.map(({pubkey:t,isSigner:e,isWritable:n})=>({pubkey:t.toJSON(),isSigner:e,isWritable:n})),programId:this.programId.toJSON(),data:[...this.data]}}}class En{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(t){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,!!t)if(t.feePayer&&(this.feePayer=t.feePayer),t.signatures&&(this.signatures=t.signatures),Object.prototype.hasOwnProperty.call(t,"nonceInfo")){const{minContextSlot:e,nonceInfo:n}=t;this.minNonceContextSlot=e,this.nonceInfo=n}else if(Object.prototype.hasOwnProperty.call(t,"lastValidBlockHeight")){const{blockhash:e,lastValidBlockHeight:n}=t;this.recentBlockhash=e,this.lastValidBlockHeight=n}else{const{recentBlockhash:e,nonceInfo:n}=t;n&&(this.nonceInfo=n),this.recentBlockhash=e}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map(t=>t.toJSON()),signers:this.signatures.map(({publicKey:t})=>t.toJSON())}}add(...t){if(t.length===0)throw new Error("No instructions");return t.forEach(e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new Je(e))}),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let t,e;if(this.nonceInfo?(t=this.nonceInfo.nonce,this.instructions[0]!=this.nonceInfo.nonceInstruction?e=[this.nonceInfo.nonceInstruction,...this.instructions]:e=this.instructions):(t=this.recentBlockhash,e=this.instructions),!t)throw new Error("Transaction recentBlockhash required");e.length<1&&console.warn("No instructions provided");let n;if(this.feePayer)n=this.feePayer;else if(this.signatures.length>0&&this.signatures[0].publicKey)n=this.signatures[0].publicKey;else throw new Error("Transaction fee payer required");for(let k=0;k<e.length;k++)if(e[k].programId===void 0)throw new Error(`Transaction instruction index ${k} has undefined program id`);const i=[],o=[];e.forEach(k=>{k.keys.forEach(G=>{o.push({...G})});const E=k.programId.toString();i.includes(E)||i.push(E)}),i.forEach(k=>{o.push({pubkey:new se(k),isSigner:!1,isWritable:!1})});const s=[];o.forEach(k=>{const E=k.pubkey.toString(),G=s.findIndex(C=>C.pubkey.toString()===E);G>-1?(s[G].isWritable=s[G].isWritable||k.isWritable,s[G].isSigner=s[G].isSigner||k.isSigner):s.push(k)}),s.sort(function(k,E){if(k.isSigner!==E.isSigner)return k.isSigner?-1:1;if(k.isWritable!==E.isWritable)return k.isWritable?-1:1;const G={localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"};return k.pubkey.toBase58().localeCompare(E.pubkey.toBase58(),"en",G)});const r=s.findIndex(k=>k.pubkey.equals(n));if(r>-1){const[k]=s.splice(r,1);k.isSigner=!0,k.isWritable=!0,s.unshift(k)}else s.unshift({pubkey:n,isSigner:!0,isWritable:!0});for(const k of this.signatures){const E=s.findIndex(G=>G.pubkey.equals(k.publicKey));if(E>-1)s[E].isSigner||(s[E].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."));else throw new Error(`unknown signer: ${k.publicKey.toString()}`)}let u=0,l=0,c=0;const f=[],g=[];s.forEach(({pubkey:k,isSigner:E,isWritable:G})=>{E?(f.push(k.toString()),u+=1,G||(l+=1)):(g.push(k.toString()),G||(c+=1))});const L=f.concat(g),S=e.map(k=>{const{data:E,programId:G}=k;return{programIdIndex:L.indexOf(G.toString()),accounts:k.keys.map(C=>L.indexOf(C.pubkey.toString())),data:en.encode(E)}});return S.forEach(k=>{Qe(k.programIdIndex>=0),k.accounts.forEach(E=>Qe(E>=0))}),new bi({header:{numRequiredSignatures:u,numReadonlySignedAccounts:l,numReadonlyUnsignedAccounts:c},accountKeys:L,recentBlockhash:t,instructions:S})}_compile(){const t=this.compileMessage(),e=t.accountKeys.slice(0,t.header.numRequiredSignatures);return this.signatures.length===e.length&&this.signatures.every((i,o)=>e[o].equals(i.publicKey))||(this.signatures=e.map(n=>({signature:null,publicKey:n}))),t}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(t){return(await t.getFeeForMessage(this.compileMessage())).value}setSigners(...t){if(t.length===0)throw new Error("No signers");const e=new Set;this.signatures=t.filter(n=>{const i=n.toString();return e.has(i)?!1:(e.add(i),!0)}).map(n=>({signature:null,publicKey:n}))}sign(...t){if(t.length===0)throw new Error("No signers");const e=new Set,n=[];for(const o of t){const s=o.publicKey.toString();e.has(s)||(e.add(s),n.push(o))}this.signatures=n.map(o=>({signature:null,publicKey:o.publicKey}));const i=this._compile();this._partialSign(i,...n)}partialSign(...t){if(t.length===0)throw new Error("No signers");const e=new Set,n=[];for(const o of t){const s=o.publicKey.toString();e.has(s)||(e.add(s),n.push(o))}const i=this._compile();this._partialSign(i,...n)}_partialSign(t,...e){const n=t.serialize();e.forEach(i=>{const o=Dp(n,i.secretKey);this._addSignature(i.publicKey,tn(o))})}addSignature(t,e){this._compile(),this._addSignature(t,e)}_addSignature(t,e){Qe(e.length===64);const n=this.signatures.findIndex(i=>t.equals(i.publicKey));if(n<0)throw new Error(`unknown signer: ${t.toString()}`);this.signatures[n].signature=jt.Buffer.from(e)}verifySignatures(t=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),t)}_getMessageSignednessErrors(t,e){const n={};for(const{signature:i,publicKey:o}of this.signatures)i===null?e&&(n.missing||(n.missing=[])).push(o):qp(i,t,o.toBytes())||(n.invalid||(n.invalid=[])).push(o);return n.invalid||n.missing?n:void 0}serialize(t){const{requireAllSignatures:e,verifySignatures:n}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},t),i=this.serializeMessage();if(n){const o=this._getMessageSignednessErrors(i,e);if(o){let s="Signature verification failed.";throw o.invalid&&(s+=`
Invalid signature for public key${o.invalid.length===1?"":"(s)"} [\`${o.invalid.map(r=>r.toBase58()).join("`, `")}\`].`),o.missing&&(s+=`
Missing signature for public key${o.missing.length===1?"":"(s)"} [\`${o.missing.map(r=>r.toBase58()).join("`, `")}\`].`),new Error(s)}}return this._serialize(i)}_serialize(t){const{signatures:e}=this,n=[];_n(n,e.length);const i=n.length+e.length*64+t.length,o=jt.Buffer.alloc(i);return Qe(e.length<256),jt.Buffer.from(n).copy(o,0),e.forEach(({signature:s},r)=>{s!==null&&(Qe(s.length===64,"signature has invalid length"),jt.Buffer.from(s).copy(o,n.length+r*64))}),t.copy(o,n.length+e.length*64),Qe(o.length<=io,`Transaction too large: ${o.length} > ${io}`),o}get keys(){return Qe(this.instructions.length===1),this.instructions[0].keys.map(t=>t.pubkey)}get programId(){return Qe(this.instructions.length===1),this.instructions[0].programId}get data(){return Qe(this.instructions.length===1),this.instructions[0].data}static from(t){let e=[...t];const n=Sn(e);let i=[];for(let o=0;o<n;o++){const s=xn(e,0,X2);i.push(en.encode(jt.Buffer.from(s)))}return En.populate(bi.from(e),i)}static populate(t,e=[]){const n=new En;return n.recentBlockhash=t.recentBlockhash,t.header.numRequiredSignatures>0&&(n.feePayer=t.accountKeys[0]),e.forEach((i,o)=>{const s={signature:i==en.encode(Jp)?null:en.decode(i),publicKey:t.accountKeys[o]};n.signatures.push(s)}),t.instructions.forEach(i=>{const o=i.accounts.map(s=>{const r=t.accountKeys[s];return{pubkey:r,isSigner:n.signatures.some(u=>u.publicKey.toString()===r.toString())||t.isAccountSigner(s),isWritable:t.isAccountWritable(s)}});n.instructions.push(new Je({keys:o,programId:t.accountKeys[i.programIdIndex],data:en.decode(i.data)}))}),n._message=t,n._json=n.toJSON(),n}}const Yp=160,jp=64,Vp=Yp/jp,Wp=1e3/Vp;new se("SysvarC1ock11111111111111111111111111111111");new se("SysvarEpochSchedu1e111111111111111111111111");new se("Sysvar1nstructions1111111111111111111111111");const Cr=new se("SysvarRecentB1ockHashes11111111111111111111"),Qu=new se("SysvarRent111111111111111111111111111111111");new se("SysvarRewards111111111111111111111111111111");new se("SysvarS1otHashes111111111111111111111111111");new se("SysvarS1otHistory11111111111111111111111111");new se("SysvarStakeHistory1111111111111111111111111");class Ku extends Error{constructor({action:t,signature:e,transactionMessage:n,logs:i}){const o=i?`Logs: 
${JSON.stringify(i.slice(-10),null,2)}. `:"",s="\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.";let r;switch(t){case"send":r=`Transaction ${e} resulted in an error. 
${n}. `+o+s;break;case"simulate":r=`Simulation failed. 
Message: ${n}. 
`+o+s;break;default:r=`Unknown action '${(u=>u)(t)}'`}super(r),this.signature=void 0,this.transactionMessage=void 0,this.transactionLogs=void 0,this.signature=e,this.transactionMessage=n,this.transactionLogs=i||void 0}get transactionError(){return{message:this.transactionMessage,logs:Array.isArray(this.transactionLogs)?this.transactionLogs:void 0}}get logs(){const t=this.transactionLogs;if(!(t!=null&&typeof t=="object"&&"then"in t))return t}async getLogs(t){return Array.isArray(this.transactionLogs)||(this.transactionLogs=new Promise((e,n)=>{t.getTransaction(this.signature).then(i=>{if(i&&i.meta&&i.meta.logMessages){const o=i.meta.logMessages;this.transactionLogs=o,e(o)}else n(new Error("Log messages not found"))}).catch(n)})),await this.transactionLogs}}class ce extends Error{constructor({code:t,message:e,data:n},i){super(i!=null?`${i}: ${e}`:e),this.code=void 0,this.data=void 0,this.code=t,this.data=n,this.name="SolanaJSONRPCError"}}function Zi(a){return new Promise(t=>setTimeout(t,a))}function cn(a,t){const e=a.layout.span>=0?a.layout.span:eh(a,t),n=jt.Buffer.alloc(e),i=Object.assign({instruction:a.index},t);return a.layout.encode(i,n),n}const Zp=Et.nu64("lamportsPerSignature"),ih=Et.struct([Et.u32("version"),Et.u32("state"),Ae("authorizedPubkey"),Ae("nonce"),Et.struct([Zp],"feeCalculator")]),Nu=ih.span;class Gl{constructor(t){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=t.authorizedPubkey,this.nonce=t.nonce,this.feeCalculator=t.feeCalculator}static fromAccountData(t){const e=ih.decode(tn(t),0);return new Gl({authorizedPubkey:new se(e.authorizedPubkey),nonce:new se(e.nonce).toString(),feeCalculator:e.feeCalculator})}}const Xp=a=>{const t=a.decode.bind(a),e=a.encode.bind(a);return{decode:t,encode:e}},$p=a=>t=>{const e=Et.blob(a,t),{encode:n,decode:i}=Xp(e),o=e;return o.decode=(s,r)=>{const u=i(s,r);return xu.toBigIntLE(jt.Buffer.from(u))},o.encode=(s,r,u)=>{const l=xu.toBufferLE(s,a);return n(l,r,u)},o},uo=$p(8),Bn=Object.freeze({Create:{index:0,layout:Et.struct([Et.u32("instruction"),Et.ns64("lamports"),Et.ns64("space"),Ae("programId")])},Assign:{index:1,layout:Et.struct([Et.u32("instruction"),Ae("programId")])},Transfer:{index:2,layout:Et.struct([Et.u32("instruction"),uo("lamports")])},CreateWithSeed:{index:3,layout:Et.struct([Et.u32("instruction"),Ae("base"),$i("seed"),Et.ns64("lamports"),Et.ns64("space"),Ae("programId")])},AdvanceNonceAccount:{index:4,layout:Et.struct([Et.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:Et.struct([Et.u32("instruction"),Et.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:Et.struct([Et.u32("instruction"),Ae("authorized")])},AuthorizeNonceAccount:{index:7,layout:Et.struct([Et.u32("instruction"),Ae("authorized")])},Allocate:{index:8,layout:Et.struct([Et.u32("instruction"),Et.ns64("space")])},AllocateWithSeed:{index:9,layout:Et.struct([Et.u32("instruction"),Ae("base"),$i("seed"),Et.ns64("space"),Ae("programId")])},AssignWithSeed:{index:10,layout:Et.struct([Et.u32("instruction"),Ae("base"),$i("seed"),Ae("programId")])},TransferWithSeed:{index:11,layout:Et.struct([Et.u32("instruction"),uo("lamports"),$i("seed"),Ae("programId")])},UpgradeNonceAccount:{index:12,layout:Et.struct([Et.u32("instruction")])}});class yi{constructor(){}static createAccount(t){const e=Bn.Create,n=cn(e,{lamports:t.lamports,space:t.space,programId:tn(t.programId.toBuffer())});return new Je({keys:[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:n})}static transfer(t){let e,n;if("basePubkey"in t){const i=Bn.TransferWithSeed;e=cn(i,{lamports:BigInt(t.lamports),seed:t.seed,programId:tn(t.programId.toBuffer())}),n=[{pubkey:t.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0}]}else{const i=Bn.Transfer;e=cn(i,{lamports:BigInt(t.lamports)}),n=[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0}]}return new Je({keys:n,programId:this.programId,data:e})}static assign(t){let e,n;if("basePubkey"in t){const i=Bn.AssignWithSeed;e=cn(i,{base:tn(t.basePubkey.toBuffer()),seed:t.seed,programId:tn(t.programId.toBuffer())}),n=[{pubkey:t.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1}]}else{const i=Bn.Assign;e=cn(i,{programId:tn(t.programId.toBuffer())}),n=[{pubkey:t.accountPubkey,isSigner:!0,isWritable:!0}]}return new Je({keys:n,programId:this.programId,data:e})}static createAccountWithSeed(t){const e=Bn.CreateWithSeed,n=cn(e,{base:tn(t.basePubkey.toBuffer()),seed:t.seed,lamports:t.lamports,space:t.space,programId:tn(t.programId.toBuffer())});let i=[{pubkey:t.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:t.newAccountPubkey,isSigner:!1,isWritable:!0}];return t.basePubkey.equals(t.fromPubkey)||i.push({pubkey:t.basePubkey,isSigner:!0,isWritable:!1}),new Je({keys:i,programId:this.programId,data:n})}static createNonceAccount(t){const e=new En;"basePubkey"in t&&"seed"in t?e.add(yi.createAccountWithSeed({fromPubkey:t.fromPubkey,newAccountPubkey:t.noncePubkey,basePubkey:t.basePubkey,seed:t.seed,lamports:t.lamports,space:Nu,programId:this.programId})):e.add(yi.createAccount({fromPubkey:t.fromPubkey,newAccountPubkey:t.noncePubkey,lamports:t.lamports,space:Nu,programId:this.programId}));const n={noncePubkey:t.noncePubkey,authorizedPubkey:t.authorizedPubkey};return e.add(this.nonceInitialize(n)),e}static nonceInitialize(t){const e=Bn.InitializeNonceAccount,n=cn(e,{authorized:tn(t.authorizedPubkey.toBuffer())}),i={keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:Cr,isSigner:!1,isWritable:!1},{pubkey:Qu,isSigner:!1,isWritable:!1}],programId:this.programId,data:n};return new Je(i)}static nonceAdvance(t){const e=Bn.AdvanceNonceAccount,n=cn(e),i={keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:Cr,isSigner:!1,isWritable:!1},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:n};return new Je(i)}static nonceWithdraw(t){const e=Bn.WithdrawNonceAccount,n=cn(e,{lamports:t.lamports});return new Je({keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:t.toPubkey,isSigner:!1,isWritable:!0},{pubkey:Cr,isSigner:!1,isWritable:!1},{pubkey:Qu,isSigner:!1,isWritable:!1},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static nonceAuthorize(t){const e=Bn.AuthorizeNonceAccount,n=cn(e,{authorized:tn(t.newAuthorizedPubkey.toBuffer())});return new Je({keys:[{pubkey:t.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:t.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static allocate(t){let e,n;if("basePubkey"in t){const i=Bn.AllocateWithSeed;e=cn(i,{base:tn(t.basePubkey.toBuffer()),seed:t.seed,space:t.space,programId:tn(t.programId.toBuffer())}),n=[{pubkey:t.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:t.basePubkey,isSigner:!0,isWritable:!1}]}else{const i=Bn.Allocate;e=cn(i,{space:t.space}),n=[{pubkey:t.accountPubkey,isSigner:!0,isWritable:!0}]}return new Je({keys:n,programId:this.programId,data:e})}}yi.programId=new se("11111111111111111111111111111111");new se("BPFLoader2111111111111111111111111111111111");function t1(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a}var Br,zu;function e1(){if(zu)return Br;zu=1;var a=Object.prototype.toString,t=Object.keys||function(n){var i=[];for(var o in n)i.push(o);return i};function e(n,i){var o,s,r,u,l,c,f;if(n===!0)return"true";if(n===!1)return"false";switch(typeof n){case"object":if(n===null)return null;if(n.toJSON&&typeof n.toJSON=="function")return e(n.toJSON(),i);if(f=a.call(n),f==="[object Array]"){for(r="[",s=n.length-1,o=0;o<s;o++)r+=e(n[o],!0)+",";return s>-1&&(r+=e(n[o],!0)),r+"]"}else if(f==="[object Object]"){for(u=t(n).sort(),s=u.length,r="",o=0;o<s;)l=u[o],c=e(n[l],!1),c!==void 0&&(r&&(r+=","),r+=JSON.stringify(l)+":"+c),o++;return"{"+r+"}"}else return JSON.stringify(n);case"function":case"undefined":return i?null:void 0;case"string":return JSON.stringify(n);default:return isFinite(n)?n:null}}return Br=function(n){var i=e(n,!1);if(i!==void 0)return""+i},Br}var n1=e1(),Ju=t1(n1);const xo=32;function vr(a){let t=0;for(;a>1;)a/=2,t++;return t}function i1(a){return a===0?1:(a--,a|=a>>1,a|=a>>2,a|=a>>4,a|=a>>8,a|=a>>16,a|=a>>32,a+1)}class o1{constructor(t,e,n,i,o){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=t,this.leaderScheduleSlotOffset=e,this.warmup=n,this.firstNormalEpoch=i,this.firstNormalSlot=o}getEpoch(t){return this.getEpochAndSlotIndex(t)[0]}getEpochAndSlotIndex(t){if(t<this.firstNormalSlot){const e=vr(i1(t+xo+1))-vr(xo)-1,n=this.getSlotsInEpoch(e),i=t-(n-xo);return[e,i]}else{const e=t-this.firstNormalSlot,n=Math.floor(e/this.slotsPerEpoch),i=this.firstNormalEpoch+n,o=e%this.slotsPerEpoch;return[i,o]}}getFirstSlotInEpoch(t){return t<=this.firstNormalEpoch?(Math.pow(2,t)-1)*xo:(t-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(t){return this.getFirstSlotInEpoch(t)+this.getSlotsInEpoch(t)-1}getSlotsInEpoch(t){return t<this.firstNormalEpoch?Math.pow(2,t+vr(xo)):this.slotsPerEpoch}}var a1=globalThis.fetch;class s1 extends Cp{constructor(t,e,n){const i=o=>{const s=Ip(o,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...e});return"socket"in s?this.underlyingSocket=s.socket:this.underlyingSocket=s,s};super(i,t,e,n),this.underlyingSocket=void 0}call(...t){var n;const e=(n=this.underlyingSocket)==null?void 0:n.readyState;return e===1?super.call(...t):Promise.reject(new Error("Tried to call a JSON-RPC method `"+t[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+e+")"))}notify(...t){var n;const e=(n=this.underlyingSocket)==null?void 0:n.readyState;return e===1?super.notify(...t):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+t[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+e+")"))}}function r1(a,t){let e;try{e=a.layout.decode(t)}catch(n){throw new Error("invalid instruction; "+n)}if(e.typeIndex!==a.index)throw new Error(`invalid account data; account type mismatch ${e.typeIndex} != ${a.index}`);return e}const Yu=56;class ju{constructor(t){this.key=void 0,this.state=void 0,this.key=t.key,this.state=t.state}isActive(){const t=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===t}static deserialize(t){const e=r1(c1,t),n=t.length-Yu;Qe(n>=0,"lookup table is invalid"),Qe(n%32===0,"lookup table is invalid");const i=n/32,{addresses:o}=Et.struct([Et.seq(Ae(),i,"addresses")]).decode(t.slice(Yu));return{deactivationSlot:e.deactivationSlot,lastExtendedSlot:e.lastExtendedSlot,lastExtendedSlotStartIndex:e.lastExtendedStartIndex,authority:e.authority.length!==0?new se(e.authority[0]):void 0,addresses:o.map(s=>new se(s))}}}const c1={index:1,layout:Et.struct([Et.u32("typeIndex"),uo("deactivationSlot"),Et.nu64("lastExtendedSlot"),Et.u8("lastExtendedStartIndex"),Et.u8(),Et.seq(Ae(),Et.offset(Et.u8(),-1),"authority")])},l1=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;function u1(a){const t=a.match(l1);if(t==null)throw TypeError(`Failed to validate endpoint URL \`${a}\``);const[e,n,i,o]=t,s=a.startsWith("https:")?"wss:":"ws:",r=i==null?null:parseInt(i.slice(1),10),u=r==null?"":`:${r+1}`;return`${s}//${n}${u}${o}`}const De=Ea(kl(se),Jt(),a=>new se(a)),oh=Ul([Jt(),Ge("base64")]),Pl=Ea(kl(jt.Buffer),oh,a=>jt.Buffer.from(a[0],"base64")),d1=30*1e3;function f1(a){if(/^https?:/.test(a)===!1)throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return a}function Fe(a){let t,e;if(typeof a=="string")t=a;else if(a){const{commitment:n,...i}=a;t=n,e=i}return{commitment:t,config:e}}function Vu(a){return a.map(t=>"memcmp"in t?{...t,memcmp:{...t.memcmp,encoding:t.memcmp.encoding??"base58"}}:t)}function ah(a){return fn([Nt({jsonrpc:Ge("2.0"),id:Jt(),result:a}),Nt({jsonrpc:Ge("2.0"),id:Jt(),error:Nt({code:wo(),message:Jt(),data:le(j3())})})])}const h1=ah(wo());function me(a){return Ea(ah(a),h1,t=>"error"in t?t:{...t,result:Wt(t.result,a)})}function Te(a){return me(Nt({context:Nt({slot:Pt()}),value:a}))}function Qs(a){return Nt({context:Nt({slot:Pt()}),value:a})}function Fr(a,t){return a===0?new ys({header:t.header,staticAccountKeys:t.accountKeys.map(e=>new se(e)),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:en.decode(e.data)})),addressTableLookups:t.addressTableLookups}):new bi(t)}const g1=Nt({foundation:Pt(),foundationTerm:Pt(),initial:Pt(),taper:Pt(),terminal:Pt()}),p1=me(Zt($t(Nt({epoch:Pt(),effectiveSlot:Pt(),amount:Pt(),postBalance:Pt(),commission:le($t(Pt()))})))),L1=Zt(Nt({slot:Pt(),prioritizationFee:Pt()})),w1=Nt({total:Pt(),validator:Pt(),foundation:Pt(),epoch:Pt()}),m1=Nt({epoch:Pt(),slotIndex:Pt(),slotsInEpoch:Pt(),absoluteSlot:Pt(),blockHeight:le(Pt()),transactionCount:le(Pt())}),b1=Nt({slotsPerEpoch:Pt(),leaderScheduleSlotOffset:Pt(),warmup:Nn(),firstNormalEpoch:Pt(),firstNormalSlot:Pt()}),y1=R2(Jt(),Zt(Pt())),Ni=$t(fn([Nt({}),Jt()])),A1=Nt({err:Ni}),I1=Ge("receivedSignature"),E1=Nt({"solana-core":Jt(),"feature-set":le(Pt())}),C1=Nt({program:Jt(),programId:De,parsed:wo()}),B1=Nt({programId:De,accounts:Zt(De),data:Jt()}),Wu=Te(Nt({err:$t(fn([Nt({}),Jt()])),logs:$t(Zt(Jt())),accounts:le($t(Zt($t(Nt({executable:Nn(),owner:Jt(),lamports:Pt(),data:Zt(Jt()),rentEpoch:le(Pt())}))))),unitsConsumed:le(Pt()),returnData:le($t(Nt({programId:Jt(),data:Ul([Jt(),Ge("base64")])}))),innerInstructions:le($t(Zt(Nt({index:Pt(),instructions:Zt(fn([C1,B1]))}))))})),v1=Te(Nt({byIdentity:R2(Jt(),Zt(Pt())),range:Nt({firstSlot:Pt(),lastSlot:Pt()})}));function F1(a,t,e,n,i,o){const s=e||a1;let r;o!=null&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments.");let u;return n&&(u=async(c,f)=>{const g=await new Promise((L,S)=>{try{n(c,f,(k,E)=>L([k,E]))}catch(k){S(k)}});return await s(...g)}),new mp(async(c,f)=>{const g={method:"POST",body:c,agent:r,headers:Object.assign({"Content-Type":"application/json"},t||{},FL)};try{let L=5,S,k=500;for(;u?S=await u(a,g):S=await s(a,g),!(S.status!==429||i===!0||(L-=1,L===0));)console.error(`Server responded with ${S.status} ${S.statusText}.  Retrying after ${k}ms delay...`),await Zi(k),k*=2;const E=await S.text();S.ok?f(null,E):f(new Error(`${S.status} ${S.statusText}: ${E}`))}catch(L){L instanceof Error&&f(L)}},{})}function S1(a){return(t,e)=>new Promise((n,i)=>{a.request(t,e,(o,s)=>{if(o){i(o);return}n(s)})})}function _1(a){return t=>new Promise((e,n)=>{t.length===0&&e([]);const i=t.map(o=>a.request(o.methodName,o.args));a.request(i,(o,s)=>{if(o){n(o);return}e(s)})})}const x1=me(g1),M1=me(w1),k1=me(L1),U1=me(m1),G1=me(b1),P1=me(y1),O1=me(Pt()),D1=Te(Nt({total:Pt(),circulating:Pt(),nonCirculating:Pt(),nonCirculatingAccounts:Zt(De)})),Qc=Nt({amount:Jt(),uiAmount:$t(Pt()),decimals:Pt(),uiAmountString:le(Jt())}),q1=Te(Zt(Nt({address:De,amount:Jt(),uiAmount:$t(Pt()),decimals:Pt(),uiAmountString:le(Jt())}))),T1=Te(Zt(Nt({pubkey:De,account:Nt({executable:Nn(),owner:De,lamports:Pt(),data:Pl,rentEpoch:Pt()})}))),Kc=Nt({program:Jt(),parsed:wo(),space:Pt()}),R1=Te(Zt(Nt({pubkey:De,account:Nt({executable:Nn(),owner:De,lamports:Pt(),data:Kc,rentEpoch:Pt()})}))),H1=Te(Zt(Nt({lamports:Pt(),address:De}))),pa=Nt({executable:Nn(),owner:De,lamports:Pt(),data:Pl,rentEpoch:Pt()}),Q1=Nt({pubkey:De,account:pa}),K1=Ea(fn([kl(jt.Buffer),Kc]),fn([oh,Kc]),a=>Array.isArray(a)?Wt(a,Pl):a),Nc=Nt({executable:Nn(),owner:De,lamports:Pt(),data:K1,rentEpoch:Pt()}),N1=Nt({pubkey:De,account:Nc}),z1=Nt({state:fn([Ge("active"),Ge("inactive"),Ge("activating"),Ge("deactivating")]),active:Pt(),inactive:Pt()}),J1=me(Zt(Nt({signature:Jt(),slot:Pt(),err:Ni,memo:$t(Jt()),blockTime:le($t(Pt()))}))),Y1=me(Zt(Nt({signature:Jt(),slot:Pt(),err:Ni,memo:$t(Jt()),blockTime:le($t(Pt()))}))),j1=Nt({subscription:Pt(),result:Qs(pa)}),V1=Nt({pubkey:De,account:pa}),W1=Nt({subscription:Pt(),result:Qs(V1)}),Z1=Nt({parent:Pt(),slot:Pt(),root:Pt()}),X1=Nt({subscription:Pt(),result:Z1}),$1=fn([Nt({type:fn([Ge("firstShredReceived"),Ge("completed"),Ge("optimisticConfirmation"),Ge("root")]),slot:Pt(),timestamp:Pt()}),Nt({type:Ge("createdBank"),parent:Pt(),slot:Pt(),timestamp:Pt()}),Nt({type:Ge("frozen"),slot:Pt(),timestamp:Pt(),stats:Nt({numTransactionEntries:Pt(),numSuccessfulTransactions:Pt(),numFailedTransactions:Pt(),maxTransactionsPerEntry:Pt()})}),Nt({type:Ge("dead"),slot:Pt(),timestamp:Pt(),err:Jt()})]),tL=Nt({subscription:Pt(),result:$1}),eL=Nt({subscription:Pt(),result:Qs(fn([A1,I1]))}),nL=Nt({subscription:Pt(),result:Pt()}),iL=Nt({pubkey:Jt(),gossip:$t(Jt()),tpu:$t(Jt()),rpc:$t(Jt()),version:$t(Jt())}),Zu=Nt({votePubkey:Jt(),nodePubkey:Jt(),activatedStake:Pt(),epochVoteAccount:Nn(),epochCredits:Zt(Ul([Pt(),Pt(),Pt()])),commission:Pt(),lastVote:Pt(),rootSlot:$t(Pt())}),oL=me(Nt({current:Zt(Zu),delinquent:Zt(Zu)})),aL=fn([Ge("processed"),Ge("confirmed"),Ge("finalized")]),sL=Nt({slot:Pt(),confirmations:$t(Pt()),err:Ni,confirmationStatus:le(aL)}),rL=Te(Zt($t(sL))),cL=me(Pt()),sh=Nt({accountKey:De,writableIndexes:Zt(Pt()),readonlyIndexes:Zt(Pt())}),Ol=Nt({signatures:Zt(Jt()),message:Nt({accountKeys:Zt(Jt()),header:Nt({numRequiredSignatures:Pt(),numReadonlySignedAccounts:Pt(),numReadonlyUnsignedAccounts:Pt()}),instructions:Zt(Nt({accounts:Zt(Pt()),data:Jt(),programIdIndex:Pt()})),recentBlockhash:Jt(),addressTableLookups:le(Zt(sh))})}),rh=Nt({pubkey:De,signer:Nn(),writable:Nn(),source:le(fn([Ge("transaction"),Ge("lookupTable")]))}),ch=Nt({accountKeys:Zt(rh),signatures:Zt(Jt())}),lh=Nt({parsed:wo(),program:Jt(),programId:De}),uh=Nt({accounts:Zt(De),data:Jt(),programId:De}),lL=fn([uh,lh]),uL=fn([Nt({parsed:wo(),program:Jt(),programId:Jt()}),Nt({accounts:Zt(Jt()),data:Jt(),programId:Jt()})]),dh=Ea(lL,uL,a=>"accounts"in a?Wt(a,uh):Wt(a,lh)),fh=Nt({signatures:Zt(Jt()),message:Nt({accountKeys:Zt(rh),instructions:Zt(dh),recentBlockhash:Jt(),addressTableLookups:le($t(Zt(sh)))})}),As=Nt({accountIndex:Pt(),mint:Jt(),owner:le(Jt()),programId:le(Jt()),uiTokenAmount:Qc}),hh=Nt({writable:Zt(De),readonly:Zt(De)}),Ks=Nt({err:Ni,fee:Pt(),innerInstructions:le($t(Zt(Nt({index:Pt(),instructions:Zt(Nt({accounts:Zt(Pt()),data:Jt(),programIdIndex:Pt()}))})))),preBalances:Zt(Pt()),postBalances:Zt(Pt()),logMessages:le($t(Zt(Jt()))),preTokenBalances:le($t(Zt(As))),postTokenBalances:le($t(Zt(As))),loadedAddresses:le(hh),computeUnitsConsumed:le(Pt())}),Dl=Nt({err:Ni,fee:Pt(),innerInstructions:le($t(Zt(Nt({index:Pt(),instructions:Zt(dh)})))),preBalances:Zt(Pt()),postBalances:Zt(Pt()),logMessages:le($t(Zt(Jt()))),preTokenBalances:le($t(Zt(As))),postTokenBalances:le($t(Zt(As))),loadedAddresses:le(hh),computeUnitsConsumed:le(Pt())}),mo=fn([Ge(0),Ge("legacy")]),zi=Nt({pubkey:Jt(),lamports:Pt(),postBalance:$t(Pt()),rewardType:$t(Jt()),commission:le($t(Pt()))}),dL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),transactions:Zt(Nt({transaction:Ol,meta:$t(Ks),version:le(mo)})),rewards:le(Zt(zi)),blockTime:$t(Pt()),blockHeight:$t(Pt())}))),fL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),rewards:le(Zt(zi)),blockTime:$t(Pt()),blockHeight:$t(Pt())}))),hL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),transactions:Zt(Nt({transaction:ch,meta:$t(Ks),version:le(mo)})),rewards:le(Zt(zi)),blockTime:$t(Pt()),blockHeight:$t(Pt())}))),gL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),transactions:Zt(Nt({transaction:fh,meta:$t(Dl),version:le(mo)})),rewards:le(Zt(zi)),blockTime:$t(Pt()),blockHeight:$t(Pt())}))),pL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),transactions:Zt(Nt({transaction:ch,meta:$t(Dl),version:le(mo)})),rewards:le(Zt(zi)),blockTime:$t(Pt()),blockHeight:$t(Pt())}))),LL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),rewards:le(Zt(zi)),blockTime:$t(Pt()),blockHeight:$t(Pt())}))),wL=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),transactions:Zt(Nt({transaction:Ol,meta:$t(Ks)})),rewards:le(Zt(zi)),blockTime:$t(Pt())}))),Xu=me($t(Nt({blockhash:Jt(),previousBlockhash:Jt(),parentSlot:Pt(),signatures:Zt(Jt()),blockTime:$t(Pt())}))),Sr=me($t(Nt({slot:Pt(),meta:$t(Ks),blockTime:le($t(Pt())),transaction:Ol,version:le(mo)}))),Da=me($t(Nt({slot:Pt(),transaction:fh,meta:$t(Dl),blockTime:le($t(Pt())),version:le(mo)}))),mL=Te(Nt({blockhash:Jt(),lastValidBlockHeight:Pt()})),bL=Te(Nn()),yL=Nt({slot:Pt(),numTransactions:Pt(),numSlots:Pt(),samplePeriodSecs:Pt()}),AL=me(Zt(yL)),IL=Te($t(Nt({feeCalculator:Nt({lamportsPerSignature:Pt()})}))),EL=me(Jt()),CL=me(Jt()),BL=Nt({err:Ni,logs:Zt(Jt()),signature:Jt()}),vL=Nt({result:Qs(BL),subscription:Pt()}),FL={"solana-client":"js/1.0.0-maintenance"};class Ca{constructor(t,e){this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const l={};return async c=>{const{commitment:f,config:g}=Fe(c),L=this._buildArgs([],f,void 0,g),S=Ju(L);return l[S]=l[S]??(async()=>{try{const k=await this._rpcRequest("getBlockHeight",L),E=Wt(k,me(Pt()));if("error"in E)throw new ce(E.error,"failed to get block height information");return E.result}finally{delete l[S]}})(),await l[S]}})();let n,i,o,s,r,u;e&&typeof e=="string"?this._commitment=e:e&&(this._commitment=e.commitment,this._confirmTransactionInitialTimeout=e.confirmTransactionInitialTimeout,n=e.wsEndpoint,i=e.httpHeaders,o=e.fetch,s=e.fetchMiddleware,r=e.disableRetryOnRateLimit,u=e.httpAgent),this._rpcEndpoint=f1(t),this._rpcWsEndpoint=n||u1(t),this._rpcClient=F1(t,i,o,s,r,u),this._rpcRequest=S1(this._rpcClient),this._rpcBatchRequest=_1(this._rpcClient),this._rpcWebSocket=new s1(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgs([t.toBase58()],n,void 0,i),s=await this._rpcRequest("getBalance",o),r=Wt(s,Te(Pt()));if("error"in r)throw new ce(r.error,`failed to get balance for ${t.toBase58()}`);return r.result}async getBalance(t,e){return await this.getBalanceAndContext(t,e).then(n=>n.value).catch(n=>{throw new Error("failed to get balance of account "+t.toBase58()+": "+n)})}async getBlockTime(t){const e=await this._rpcRequest("getBlockTime",[t]),n=Wt(e,me($t(Pt())));if("error"in n)throw new ce(n.error,`failed to get block time for slot ${t}`);return n.result}async getMinimumLedgerSlot(){const t=await this._rpcRequest("minimumLedgerSlot",[]),e=Wt(t,me(Pt()));if("error"in e)throw new ce(e.error,"failed to get minimum ledger slot");return e.result}async getFirstAvailableBlock(){const t=await this._rpcRequest("getFirstAvailableBlock",[]),e=Wt(t,O1);if("error"in e)throw new ce(e.error,"failed to get first available block");return e.result}async getSupply(t){let e={};typeof t=="string"?e={commitment:t}:t?e={...t,commitment:t&&t.commitment||this.commitment}:e={commitment:this.commitment};const n=await this._rpcRequest("getSupply",[e]),i=Wt(n,D1);if("error"in i)throw new ce(i.error,"failed to get supply");return i.result}async getTokenSupply(t,e){const n=this._buildArgs([t.toBase58()],e),i=await this._rpcRequest("getTokenSupply",n),o=Wt(i,Te(Qc));if("error"in o)throw new ce(o.error,"failed to get token supply");return o.result}async getTokenAccountBalance(t,e){const n=this._buildArgs([t.toBase58()],e),i=await this._rpcRequest("getTokenAccountBalance",n),o=Wt(i,Te(Qc));if("error"in o)throw new ce(o.error,"failed to get token account balance");return o.result}async getTokenAccountsByOwner(t,e,n){const{commitment:i,config:o}=Fe(n);let s=[t.toBase58()];"mint"in e?s.push({mint:e.mint.toBase58()}):s.push({programId:e.programId.toBase58()});const r=this._buildArgs(s,i,"base64",o),u=await this._rpcRequest("getTokenAccountsByOwner",r),l=Wt(u,T1);if("error"in l)throw new ce(l.error,`failed to get token accounts owned by account ${t.toBase58()}`);return l.result}async getParsedTokenAccountsByOwner(t,e,n){let i=[t.toBase58()];"mint"in e?i.push({mint:e.mint.toBase58()}):i.push({programId:e.programId.toBase58()});const o=this._buildArgs(i,n,"jsonParsed"),s=await this._rpcRequest("getTokenAccountsByOwner",o),r=Wt(s,R1);if("error"in r)throw new ce(r.error,`failed to get token accounts owned by account ${t.toBase58()}`);return r.result}async getLargestAccounts(t){const e={...t,commitment:t&&t.commitment||this.commitment},n=e.filter||e.commitment?[e]:[],i=await this._rpcRequest("getLargestAccounts",n),o=Wt(i,H1);if("error"in o)throw new ce(o.error,"failed to get largest accounts");return o.result}async getTokenLargestAccounts(t,e){const n=this._buildArgs([t.toBase58()],e),i=await this._rpcRequest("getTokenLargestAccounts",n),o=Wt(i,q1);if("error"in o)throw new ce(o.error,"failed to get token largest accounts");return o.result}async getAccountInfoAndContext(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgs([t.toBase58()],n,"base64",i),s=await this._rpcRequest("getAccountInfo",o),r=Wt(s,Te($t(pa)));if("error"in r)throw new ce(r.error,`failed to get info about account ${t.toBase58()}`);return r.result}async getParsedAccountInfo(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgs([t.toBase58()],n,"jsonParsed",i),s=await this._rpcRequest("getAccountInfo",o),r=Wt(s,Te($t(Nc)));if("error"in r)throw new ce(r.error,`failed to get info about account ${t.toBase58()}`);return r.result}async getAccountInfo(t,e){try{return(await this.getAccountInfoAndContext(t,e)).value}catch(n){throw new Error("failed to get info about account "+t.toBase58()+": "+n)}}async getMultipleParsedAccounts(t,e){const{commitment:n,config:i}=Fe(e),o=t.map(l=>l.toBase58()),s=this._buildArgs([o],n,"jsonParsed",i),r=await this._rpcRequest("getMultipleAccounts",s),u=Wt(r,Te(Zt($t(Nc))));if("error"in u)throw new ce(u.error,`failed to get info for accounts ${o}`);return u.result}async getMultipleAccountsInfoAndContext(t,e){const{commitment:n,config:i}=Fe(e),o=t.map(l=>l.toBase58()),s=this._buildArgs([o],n,"base64",i),r=await this._rpcRequest("getMultipleAccounts",s),u=Wt(r,Te(Zt($t(pa))));if("error"in u)throw new ce(u.error,`failed to get info for accounts ${o}`);return u.result}async getMultipleAccountsInfo(t,e){return(await this.getMultipleAccountsInfoAndContext(t,e)).value}async getStakeActivation(t,e,n){const{commitment:i,config:o}=Fe(e),s=this._buildArgs([t.toBase58()],i,void 0,{...o,epoch:n??(o==null?void 0:o.epoch)}),r=await this._rpcRequest("getStakeActivation",s),u=Wt(r,me(z1));if("error"in u)throw new ce(u.error,`failed to get Stake Activation ${t.toBase58()}`);return u.result}async getProgramAccounts(t,e){const{commitment:n,config:i}=Fe(e),{encoding:o,...s}=i||{},r=this._buildArgs([t.toBase58()],n,o||"base64",{...s,...s.filters?{filters:Vu(s.filters)}:null}),u=await this._rpcRequest("getProgramAccounts",r),l=Zt(Q1),c=s.withContext===!0?Wt(u,Te(l)):Wt(u,me(l));if("error"in c)throw new ce(c.error,`failed to get accounts owned by program ${t.toBase58()}`);return c.result}async getParsedProgramAccounts(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgs([t.toBase58()],n,"jsonParsed",i),s=await this._rpcRequest("getProgramAccounts",o),r=Wt(s,me(Zt(N1)));if("error"in r)throw new ce(r.error,`failed to get accounts owned by program ${t.toBase58()}`);return r.result}async confirmTransaction(t,e){var o;let n;if(typeof t=="string")n=t;else{const s=t;if((o=s.abortSignal)!=null&&o.aborted)return Promise.reject(s.abortSignal.reason);n=s.signature}let i;try{i=en.decode(n)}catch{throw new Error("signature must be base58 encoded: "+n)}return Qe(i.length===64,"signature has invalid length"),typeof t=="string"?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:e||this.commitment,signature:n}):"lastValidBlockHeight"in t?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e||this.commitment,strategy:t}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:e||this.commitment,strategy:t})}getCancellationPromise(t){return new Promise((e,n)=>{t!=null&&(t.aborted?n(t.reason):t.addEventListener("abort",()=>{n(t.reason)}))})}getTransactionConfirmationPromise({commitment:t,signature:e}){let n,i,o=!1;const s=new Promise((u,l)=>{try{n=this.onSignature(e,(f,g)=>{n=void 0;const L={context:g,value:f};u({__type:fi.PROCESSED,response:L})},t);const c=new Promise(f=>{n==null?f():i=this._onSubscriptionStateChange(n,g=>{g==="subscribed"&&f()})});(async()=>{if(await c,o)return;const f=await this.getSignatureStatus(e);if(o||f==null)return;const{context:g,value:L}=f;if(L!=null)if(L!=null&&L.err)l(L.err);else{switch(t){case"confirmed":case"single":case"singleGossip":{if(L.confirmationStatus==="processed")return;break}case"finalized":case"max":case"root":{if(L.confirmationStatus==="processed"||L.confirmationStatus==="confirmed")return;break}case"processed":case"recent":}o=!0,u({__type:fi.PROCESSED,response:{context:g,value:L}})}})()}catch(c){l(c)}});return{abortConfirmation:()=>{i&&(i(),i=void 0),n!=null&&(this.removeSignatureListener(n),n=void 0)},confirmationPromise:s}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t,strategy:{abortSignal:e,lastValidBlockHeight:n,signature:i}}){let o=!1;const s=new Promise(f=>{const g=async()=>{try{return await this.getBlockHeight(t)}catch{return-1}};(async()=>{let L=await g();if(!o){for(;L<=n;)if(await Zi(1e3),o||(L=await g(),o))return;f({__type:fi.BLOCKHEIGHT_EXCEEDED})}})()}),{abortConfirmation:r,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:t,signature:i}),l=this.getCancellationPromise(e);let c;try{const f=await Promise.race([l,u,s]);if(f.__type===fi.PROCESSED)c=f.response;else throw new $2(i)}finally{o=!0,r()}return c}async confirmTransactionUsingDurableNonceStrategy({commitment:t,strategy:{abortSignal:e,minContextSlot:n,nonceAccountPubkey:i,nonceValue:o,signature:s}}){let r=!1;const u=new Promise(L=>{let S=o,k=null;const E=async()=>{try{const{context:G,value:C}=await this.getNonceAndContext(i,{commitment:t,minContextSlot:n});return k=G.slot,C==null?void 0:C.nonce}catch{return S}};(async()=>{if(S=await E(),!r)for(;;){if(o!==S){L({__type:fi.NONCE_INVALID,slotInWhichNonceDidAdvance:k});return}if(await Zi(2e3),r||(S=await E(),r))return}})()}),{abortConfirmation:l,confirmationPromise:c}=this.getTransactionConfirmationPromise({commitment:t,signature:s}),f=this.getCancellationPromise(e);let g;try{const L=await Promise.race([f,c,u]);if(L.__type===fi.PROCESSED)g=L.response;else{let S;for(;;){const k=await this.getSignatureStatus(s);if(k==null)break;if(k.context.slot<(L.slotInWhichNonceDidAdvance??n)){await Zi(400);continue}S=k;break}if(S!=null&&S.value){const k=t||"finalized",{confirmationStatus:E}=S.value;switch(k){case"processed":case"recent":if(E!=="processed"&&E!=="confirmed"&&E!=="finalized")throw new na(s);break;case"confirmed":case"single":case"singleGossip":if(E!=="confirmed"&&E!=="finalized")throw new na(s);break;case"finalized":case"max":case"root":if(E!=="finalized")throw new na(s);break;default:}g={context:S.context,value:{err:S.value.err}}}else throw new na(s)}}finally{r=!0,l()}return g}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:t,signature:e}){let n;const i=new Promise(u=>{let l=this._confirmTransactionInitialTimeout||6e4;switch(t){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":{l=this._confirmTransactionInitialTimeout||3e4;break}}n=setTimeout(()=>u({__type:fi.TIMED_OUT,timeoutMs:l}),l)}),{abortConfirmation:o,confirmationPromise:s}=this.getTransactionConfirmationPromise({commitment:t,signature:e});let r;try{const u=await Promise.race([s,i]);if(u.__type===fi.PROCESSED)r=u.response;else throw new th(e,u.timeoutMs/1e3)}finally{clearTimeout(n),o()}return r}async getClusterNodes(){const t=await this._rpcRequest("getClusterNodes",[]),e=Wt(t,me(Zt(iL)));if("error"in e)throw new ce(e.error,"failed to get cluster nodes");return e.result}async getVoteAccounts(t){const e=this._buildArgs([],t),n=await this._rpcRequest("getVoteAccounts",e),i=Wt(n,oL);if("error"in i)throw new ce(i.error,"failed to get vote accounts");return i.result}async getSlot(t){const{commitment:e,config:n}=Fe(t),i=this._buildArgs([],e,void 0,n),o=await this._rpcRequest("getSlot",i),s=Wt(o,me(Pt()));if("error"in s)throw new ce(s.error,"failed to get slot");return s.result}async getSlotLeader(t){const{commitment:e,config:n}=Fe(t),i=this._buildArgs([],e,void 0,n),o=await this._rpcRequest("getSlotLeader",i),s=Wt(o,me(Jt()));if("error"in s)throw new ce(s.error,"failed to get slot leader");return s.result}async getSlotLeaders(t,e){const n=[t,e],i=await this._rpcRequest("getSlotLeaders",n),o=Wt(i,me(Zt(De)));if("error"in o)throw new ce(o.error,"failed to get slot leaders");return o.result}async getSignatureStatus(t,e){const{context:n,value:i}=await this.getSignatureStatuses([t],e);Qe(i.length===1);const o=i[0];return{context:n,value:o}}async getSignatureStatuses(t,e){const n=[t];e&&n.push(e);const i=await this._rpcRequest("getSignatureStatuses",n),o=Wt(i,rL);if("error"in o)throw new ce(o.error,"failed to get signature status");return o.result}async getTransactionCount(t){const{commitment:e,config:n}=Fe(t),i=this._buildArgs([],e,void 0,n),o=await this._rpcRequest("getTransactionCount",i),s=Wt(o,me(Pt()));if("error"in s)throw new ce(s.error,"failed to get transaction count");return s.result}async getTotalSupply(t){return(await this.getSupply({commitment:t,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(t){const e=this._buildArgs([],t),n=await this._rpcRequest("getInflationGovernor",e),i=Wt(n,x1);if("error"in i)throw new ce(i.error,"failed to get inflation");return i.result}async getInflationReward(t,e,n){const{commitment:i,config:o}=Fe(n),s=this._buildArgs([t.map(l=>l.toBase58())],i,void 0,{...o,epoch:e??(o==null?void 0:o.epoch)}),r=await this._rpcRequest("getInflationReward",s),u=Wt(r,p1);if("error"in u)throw new ce(u.error,"failed to get inflation reward");return u.result}async getInflationRate(){const t=await this._rpcRequest("getInflationRate",[]),e=Wt(t,M1);if("error"in e)throw new ce(e.error,"failed to get inflation rate");return e.result}async getEpochInfo(t){const{commitment:e,config:n}=Fe(t),i=this._buildArgs([],e,void 0,n),o=await this._rpcRequest("getEpochInfo",i),s=Wt(o,U1);if("error"in s)throw new ce(s.error,"failed to get epoch info");return s.result}async getEpochSchedule(){const t=await this._rpcRequest("getEpochSchedule",[]),e=Wt(t,G1);if("error"in e)throw new ce(e.error,"failed to get epoch schedule");const n=e.result;return new o1(n.slotsPerEpoch,n.leaderScheduleSlotOffset,n.warmup,n.firstNormalEpoch,n.firstNormalSlot)}async getLeaderSchedule(){const t=await this._rpcRequest("getLeaderSchedule",[]),e=Wt(t,P1);if("error"in e)throw new ce(e.error,"failed to get leader schedule");return e.result}async getMinimumBalanceForRentExemption(t,e){const n=this._buildArgs([t],e),i=await this._rpcRequest("getMinimumBalanceForRentExemption",n),o=Wt(i,cL);return"error"in o?(console.warn("Unable to fetch minimum balance for rent exemption"),0):o.result}async getRecentBlockhashAndContext(t){const{context:e,value:{blockhash:n}}=await this.getLatestBlockhashAndContext(t);return{context:e,value:{blockhash:n,feeCalculator:{get lamportsPerSignature(){throw new Error("The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee for a given message.")},toJSON(){return{}}}}}}async getRecentPerformanceSamples(t){const e=await this._rpcRequest("getRecentPerformanceSamples",t?[t]:[]),n=Wt(e,AL);if("error"in n)throw new ce(n.error,"failed to get recent performance samples");return n.result}async getFeeCalculatorForBlockhash(t,e){const n=this._buildArgs([t],e),i=await this._rpcRequest("getFeeCalculatorForBlockhash",n),o=Wt(i,IL);if("error"in o)throw new ce(o.error,"failed to get fee calculator");const{context:s,value:r}=o.result;return{context:s,value:r!==null?r.feeCalculator:null}}async getFeeForMessage(t,e){const n=tn(t.serialize()).toString("base64"),i=this._buildArgs([n],e),o=await this._rpcRequest("getFeeForMessage",i),s=Wt(o,Te($t(Pt())));if("error"in s)throw new ce(s.error,"failed to get fee for message");if(s.result===null)throw new Error("invalid blockhash");return s.result}async getRecentPrioritizationFees(t){var s;const e=(s=t==null?void 0:t.lockedWritableAccounts)==null?void 0:s.map(r=>r.toBase58()),n=e!=null&&e.length?[e]:[],i=await this._rpcRequest("getRecentPrioritizationFees",n),o=Wt(i,k1);if("error"in o)throw new ce(o.error,"failed to get recent prioritization fees");return o.result}async getRecentBlockhash(t){try{return(await this.getRecentBlockhashAndContext(t)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(t){try{return(await this.getLatestBlockhashAndContext(t)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(t){const{commitment:e,config:n}=Fe(t),i=this._buildArgs([],e,void 0,n),o=await this._rpcRequest("getLatestBlockhash",i),s=Wt(o,mL);if("error"in s)throw new ce(s.error,"failed to get latest blockhash");return s.result}async isBlockhashValid(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgs([t],n,void 0,i),s=await this._rpcRequest("isBlockhashValid",o),r=Wt(s,bL);if("error"in r)throw new ce(r.error,"failed to determine if the blockhash `"+t+"`is valid");return r.result}async getVersion(){const t=await this._rpcRequest("getVersion",[]),e=Wt(t,me(E1));if("error"in e)throw new ce(e.error,"failed to get version");return e.result}async getGenesisHash(){const t=await this._rpcRequest("getGenesisHash",[]),e=Wt(t,me(Jt()));if("error"in e)throw new ce(e.error,"failed to get genesis hash");return e.result}async getBlock(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgsAtLeastConfirmed([t],n,void 0,i),s=await this._rpcRequest("getBlock",o);try{switch(i==null?void 0:i.transactionDetails){case"accounts":{const r=Wt(s,hL);if("error"in r)throw r.error;return r.result}case"none":{const r=Wt(s,fL);if("error"in r)throw r.error;return r.result}default:{const r=Wt(s,dL);if("error"in r)throw r.error;const{result:u}=r;return u?{...u,transactions:u.transactions.map(({transaction:l,meta:c,version:f})=>({meta:c,transaction:{...l,message:Fr(f,l.message)},version:f}))}:null}}}catch(r){throw new ce(r,"failed to get confirmed block")}}async getParsedBlock(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgsAtLeastConfirmed([t],n,"jsonParsed",i),s=await this._rpcRequest("getBlock",o);try{switch(i==null?void 0:i.transactionDetails){case"accounts":{const r=Wt(s,pL);if("error"in r)throw r.error;return r.result}case"none":{const r=Wt(s,LL);if("error"in r)throw r.error;return r.result}default:{const r=Wt(s,gL);if("error"in r)throw r.error;return r.result}}}catch(r){throw new ce(r,"failed to get block")}}async getBlockProduction(t){let e,n;if(typeof t=="string")n=t;else if(t){const{commitment:r,...u}=t;n=r,e=u}const i=this._buildArgs([],n,"base64",e),o=await this._rpcRequest("getBlockProduction",i),s=Wt(o,v1);if("error"in s)throw new ce(s.error,"failed to get block production information");return s.result}async getTransaction(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgsAtLeastConfirmed([t],n,void 0,i),s=await this._rpcRequest("getTransaction",o),r=Wt(s,Sr);if("error"in r)throw new ce(r.error,"failed to get transaction");const u=r.result;return u&&{...u,transaction:{...u.transaction,message:Fr(u.version,u.transaction.message)}}}async getParsedTransaction(t,e){const{commitment:n,config:i}=Fe(e),o=this._buildArgsAtLeastConfirmed([t],n,"jsonParsed",i),s=await this._rpcRequest("getTransaction",o),r=Wt(s,Da);if("error"in r)throw new ce(r.error,"failed to get transaction");return r.result}async getParsedTransactions(t,e){const{commitment:n,config:i}=Fe(e),o=t.map(u=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([u],n,"jsonParsed",i)}));return(await this._rpcBatchRequest(o)).map(u=>{const l=Wt(u,Da);if("error"in l)throw new ce(l.error,"failed to get transactions");return l.result})}async getTransactions(t,e){const{commitment:n,config:i}=Fe(e),o=t.map(u=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([u],n,void 0,i)}));return(await this._rpcBatchRequest(o)).map(u=>{const l=Wt(u,Sr);if("error"in l)throw new ce(l.error,"failed to get transactions");const c=l.result;return c&&{...c,transaction:{...c.transaction,message:Fr(c.version,c.transaction.message)}}})}async getConfirmedBlock(t,e){const n=this._buildArgsAtLeastConfirmed([t],e),i=await this._rpcRequest("getBlock",n),o=Wt(i,wL);if("error"in o)throw new ce(o.error,"failed to get confirmed block");const s=o.result;if(!s)throw new Error("Confirmed block "+t+" not found");const r={...s,transactions:s.transactions.map(({transaction:u,meta:l})=>{const c=new bi(u.message);return{meta:l,transaction:{...u,message:c}}})};return{...r,transactions:r.transactions.map(({transaction:u,meta:l})=>({meta:l,transaction:En.populate(u.message,u.signatures)}))}}async getBlocks(t,e,n){const i=this._buildArgsAtLeastConfirmed(e!==void 0?[t,e]:[t],n),o=await this._rpcRequest("getBlocks",i),s=Wt(o,me(Zt(Pt())));if("error"in s)throw new ce(s.error,"failed to get blocks");return s.result}async getBlockSignatures(t,e){const n=this._buildArgsAtLeastConfirmed([t],e,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getBlock",n),o=Wt(i,Xu);if("error"in o)throw new ce(o.error,"failed to get block");const s=o.result;if(!s)throw new Error("Block "+t+" not found");return s}async getConfirmedBlockSignatures(t,e){const n=this._buildArgsAtLeastConfirmed([t],e,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getBlock",n),o=Wt(i,Xu);if("error"in o)throw new ce(o.error,"failed to get confirmed block");const s=o.result;if(!s)throw new Error("Confirmed block "+t+" not found");return s}async getConfirmedTransaction(t,e){const n=this._buildArgsAtLeastConfirmed([t],e),i=await this._rpcRequest("getTransaction",n),o=Wt(i,Sr);if("error"in o)throw new ce(o.error,"failed to get transaction");const s=o.result;if(!s)return s;const r=new bi(s.transaction.message),u=s.transaction.signatures;return{...s,transaction:En.populate(r,u)}}async getParsedConfirmedTransaction(t,e){const n=this._buildArgsAtLeastConfirmed([t],e,"jsonParsed"),i=await this._rpcRequest("getTransaction",n),o=Wt(i,Da);if("error"in o)throw new ce(o.error,"failed to get confirmed transaction");return o.result}async getParsedConfirmedTransactions(t,e){const n=t.map(s=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([s],e,"jsonParsed")}));return(await this._rpcBatchRequest(n)).map(s=>{const r=Wt(s,Da);if("error"in r)throw new ce(r.error,"failed to get confirmed transactions");return r.result})}async getConfirmedSignaturesForAddress(t,e,n){let i={},o=await this.getFirstAvailableBlock();for(;!("until"in i)&&(e--,!(e<=0||e<o));)try{const u=await this.getConfirmedBlockSignatures(e,"finalized");u.signatures.length>0&&(i.until=u.signatures[u.signatures.length-1].toString())}catch(u){if(u instanceof Error&&u.message.includes("skipped"))continue;throw u}let s=await this.getSlot("finalized");for(;!("before"in i)&&(n++,!(n>s));)try{const u=await this.getConfirmedBlockSignatures(n);u.signatures.length>0&&(i.before=u.signatures[u.signatures.length-1].toString())}catch(u){if(u instanceof Error&&u.message.includes("skipped"))continue;throw u}return(await this.getConfirmedSignaturesForAddress2(t,i)).map(u=>u.signature)}async getConfirmedSignaturesForAddress2(t,e,n){const i=this._buildArgsAtLeastConfirmed([t.toBase58()],n,void 0,e),o=await this._rpcRequest("getConfirmedSignaturesForAddress2",i),s=Wt(o,J1);if("error"in s)throw new ce(s.error,"failed to get confirmed signatures for address");return s.result}async getSignaturesForAddress(t,e,n){const i=this._buildArgsAtLeastConfirmed([t.toBase58()],n,void 0,e),o=await this._rpcRequest("getSignaturesForAddress",i),s=Wt(o,Y1);if("error"in s)throw new ce(s.error,"failed to get signatures for address");return s.result}async getAddressLookupTable(t,e){const{context:n,value:i}=await this.getAccountInfoAndContext(t,e);let o=null;return i!==null&&(o=new ju({key:t,state:ju.deserialize(i.data)})),{context:n,value:o}}async getNonceAndContext(t,e){const{context:n,value:i}=await this.getAccountInfoAndContext(t,e);let o=null;return i!==null&&(o=Gl.fromAccountData(i.data)),{context:n,value:o}}async getNonce(t,e){return await this.getNonceAndContext(t,e).then(n=>n.value).catch(n=>{throw new Error("failed to get nonce for account "+t.toBase58()+": "+n)})}async requestAirdrop(t,e){const n=await this._rpcRequest("requestAirdrop",[t.toBase58(),e]),i=Wt(n,EL);if("error"in i)throw new ce(i.error,`airdrop to ${t.toBase58()} failed`);return i.result}async _blockhashWithExpiryBlockHeight(t){if(!t){for(;this._pollingBlockhash;)await Zi(100);const n=Date.now()-this._blockhashInfo.lastFetch>=d1;if(this._blockhashInfo.latestBlockhash!==null&&!n)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const t=Date.now(),e=this._blockhashInfo.latestBlockhash,n=e?e.blockhash:null;for(let i=0;i<50;i++){const o=await this.getLatestBlockhash("finalized");if(n!==o.blockhash)return this._blockhashInfo={latestBlockhash:o,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},o;await Zi(Wp/2)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-t}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(t){const{commitment:e,config:n}=Fe(t),i=this._buildArgs([],e,"base64",n),o=await this._rpcRequest("getStakeMinimumDelegation",i),s=Wt(o,Te(Pt()));if("error"in s)throw new ce(s.error,"failed to get stake minimum delegation");return s.result}async simulateTransaction(t,e,n){if("message"in t){const k=t.serialize(),E=jt.Buffer.from(k).toString("base64");if(Array.isArray(e)||n!==void 0)throw new Error("Invalid arguments");const G=e||{};G.encoding="base64","commitment"in G||(G.commitment=this.commitment),e&&typeof e=="object"&&"innerInstructions"in e&&(G.innerInstructions=e.innerInstructions);const C=[E,G],N=await this._rpcRequest("simulateTransaction",C),J=Wt(N,Wu);if("error"in J)throw new Error("failed to simulate transaction: "+J.error.message);return J.result}let i;if(t instanceof En){let S=t;i=new En,i.feePayer=S.feePayer,i.instructions=t.instructions,i.nonceInfo=S.nonceInfo,i.signatures=S.signatures}else i=En.populate(t),i._message=i._json=void 0;if(e!==void 0&&!Array.isArray(e))throw new Error("Invalid arguments");const o=e;if(i.nonceInfo&&o)i.sign(...o);else{let S=this._disableBlockhashCaching;for(;;){const k=await this._blockhashWithExpiryBlockHeight(S);if(i.lastValidBlockHeight=k.lastValidBlockHeight,i.recentBlockhash=k.blockhash,!o)break;if(i.sign(...o),!i.signature)throw new Error("!signature");const E=i.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(E)&&!this._blockhashInfo.transactionSignatures.includes(E)){this._blockhashInfo.simulatedSignatures.push(E);break}else S=!0}}const s=i._compile(),r=s.serialize(),l=i._serialize(r).toString("base64"),c={encoding:"base64",commitment:this.commitment};if(n){const S=(Array.isArray(n)?n:s.nonProgramIds()).map(k=>k.toBase58());c.accounts={encoding:"base64",addresses:S}}o&&(c.sigVerify=!0),e&&typeof e=="object"&&"innerInstructions"in e&&(c.innerInstructions=e.innerInstructions);const f=[l,c],g=await this._rpcRequest("simulateTransaction",f),L=Wt(g,Wu);if("error"in L){let S;if("data"in L.error&&(S=L.error.data.logs,S&&Array.isArray(S))){const k=`
    `,E=k+S.join(k);console.error(L.error.message,E)}throw new Ku({action:"simulate",signature:"",transactionMessage:L.error.message,logs:S})}return L.result}async sendTransaction(t,e,n){if("version"in t){if(e&&Array.isArray(e))throw new Error("Invalid arguments");const s=t.serialize();return await this.sendRawTransaction(s,e)}if(e===void 0||!Array.isArray(e))throw new Error("Invalid arguments");const i=e;if(t.nonceInfo)t.sign(...i);else{let s=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(s);if(t.lastValidBlockHeight=r.lastValidBlockHeight,t.recentBlockhash=r.blockhash,t.sign(...i),!t.signature)throw new Error("!signature");const u=t.signature.toString("base64");if(this._blockhashInfo.transactionSignatures.includes(u))s=!0;else{this._blockhashInfo.transactionSignatures.push(u);break}}}const o=t.serialize();return await this.sendRawTransaction(o,n)}async sendRawTransaction(t,e){const n=tn(t).toString("base64");return await this.sendEncodedTransaction(n,e)}async sendEncodedTransaction(t,e){const n={encoding:"base64"},i=e&&e.skipPreflight,o=i===!0?"processed":e&&e.preflightCommitment||this.commitment;e&&e.maxRetries!=null&&(n.maxRetries=e.maxRetries),e&&e.minContextSlot!=null&&(n.minContextSlot=e.minContextSlot),i&&(n.skipPreflight=i),o&&(n.preflightCommitment=o);const s=[t,n],r=await this._rpcRequest("sendTransaction",s),u=Wt(r,CL);if("error"in u){let l;throw"data"in u.error&&(l=u.error.data.logs),new Ku({action:i?"send":"simulate",signature:"",transactionMessage:u.error.message,logs:l})}return u.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval(()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()},5e3),this._updateSubscriptions()}_wsOnError(t){this._rpcWebSocketConnected=!1,console.error("ws error:",t.message)}_wsOnClose(t){if(this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),t===1e3){this._updateSubscriptions();return}this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach(([e,n])=>{this._setSubscription(e,{...n,state:"pending"})})}_setSubscription(t,e){var i;const n=(i=this._subscriptionsByHash[t])==null?void 0:i.state;if(this._subscriptionsByHash[t]=e,n!==e.state){const o=this._subscriptionStateChangeCallbacksByHash[t];o&&o.forEach(s=>{try{s(e.state)}catch{}})}}_onSubscriptionStateChange(t,e){var o;const n=this._subscriptionHashByClientSubscriptionId[t];if(n==null)return()=>{};const i=(o=this._subscriptionStateChangeCallbacksByHash)[n]||(o[n]=new Set);return i.add(e),()=>{i.delete(e),i.size===0&&delete this._subscriptionStateChangeCallbacksByHash[n]}}async _updateSubscriptions(){if(Object.keys(this._subscriptionsByHash).length===0){this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout(()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(n){n instanceof Error&&console.log(`Error when closing socket connection: ${n.message}`)}},500));return}if(this._rpcWebSocketIdleTimeout!==null&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected){this._rpcWebSocket.connect();return}const t=this._rpcWebSocketGeneration,e=()=>t===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map(async n=>{const i=this._subscriptionsByHash[n];if(i!==void 0)switch(i.state){case"pending":case"unsubscribed":if(i.callbacks.size===0){delete this._subscriptionsByHash[n],i.state==="unsubscribed"&&delete this._subscriptionCallbacksByServerSubscriptionId[i.serverSubscriptionId],await this._updateSubscriptions();return}await(async()=>{const{args:o,method:s}=i;try{this._setSubscription(n,{...i,state:"subscribing"});const r=await this._rpcWebSocket.call(s,o);this._setSubscription(n,{...i,serverSubscriptionId:r,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[r]=i.callbacks,await this._updateSubscriptions()}catch(r){if(console.error(`Received ${r instanceof Error?"":"JSON-RPC "}error calling \`${s}\``,{args:o,error:r}),!e())return;this._setSubscription(n,{...i,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":i.callbacks.size===0&&await(async()=>{const{serverSubscriptionId:o,unsubscribeMethod:s}=i;if(this._subscriptionsAutoDisposedByRpc.has(o))this._subscriptionsAutoDisposedByRpc.delete(o);else{this._setSubscription(n,{...i,state:"unsubscribing"}),this._setSubscription(n,{...i,state:"unsubscribing"});try{await this._rpcWebSocket.call(s,[o])}catch(r){if(r instanceof Error&&console.error(`${s} error:`,r.message),!e())return;this._setSubscription(n,{...i,state:"subscribed"}),await this._updateSubscriptions();return}}this._setSubscription(n,{...i,state:"unsubscribed"}),await this._updateSubscriptions()})();break}}))}_handleServerNotification(t,e){const n=this._subscriptionCallbacksByServerSubscriptionId[t];n!==void 0&&n.forEach(i=>{try{i(...e)}catch(o){console.error(o)}})}_wsOnAccountNotification(t){const{result:e,subscription:n}=Wt(t,j1);this._handleServerNotification(n,[e.value,e.context])}_makeSubscription(t,e){const n=this._nextClientSubscriptionId++,i=Ju([t.method,e]),o=this._subscriptionsByHash[i];return o===void 0?this._subscriptionsByHash[i]={...t,args:e,callbacks:new Set([t.callback]),state:"pending"}:o.callbacks.add(t.callback),this._subscriptionHashByClientSubscriptionId[n]=i,this._subscriptionDisposeFunctionsByClientSubscriptionId[n]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[n],delete this._subscriptionHashByClientSubscriptionId[n];const s=this._subscriptionsByHash[i];Qe(s!==void 0,`Could not find a \`Subscription\` when tearing down client subscription #${n}`),s.callbacks.delete(t.callback),await this._updateSubscriptions()},this._updateSubscriptions(),n}onAccountChange(t,e,n){const{commitment:i,config:o}=Fe(n),s=this._buildArgs([t.toBase58()],i||this._commitment||"finalized","base64",o);return this._makeSubscription({callback:e,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},s)}async removeAccountChangeListener(t){await this._unsubscribeClientSubscription(t,"account change")}_wsOnProgramAccountNotification(t){const{result:e,subscription:n}=Wt(t,W1);this._handleServerNotification(n,[{accountId:e.value.pubkey,accountInfo:e.value.account},e.context])}onProgramAccountChange(t,e,n,i){const{commitment:o,config:s}=Fe(n),r=this._buildArgs([t.toBase58()],o||this._commitment||"finalized","base64",s||(i?{filters:Vu(i)}:void 0));return this._makeSubscription({callback:e,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},r)}async removeProgramAccountChangeListener(t){await this._unsubscribeClientSubscription(t,"program account change")}onLogs(t,e,n){const i=this._buildArgs([typeof t=="object"?{mentions:[t.toString()]}:t],n||this._commitment||"finalized");return this._makeSubscription({callback:e,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},i)}async removeOnLogsListener(t){await this._unsubscribeClientSubscription(t,"logs")}_wsOnLogsNotification(t){const{result:e,subscription:n}=Wt(t,vL);this._handleServerNotification(n,[e.value,e.context])}_wsOnSlotNotification(t){const{result:e,subscription:n}=Wt(t,X1);this._handleServerNotification(n,[e])}onSlotChange(t){return this._makeSubscription({callback:t,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(t){await this._unsubscribeClientSubscription(t,"slot change")}_wsOnSlotUpdatesNotification(t){const{result:e,subscription:n}=Wt(t,tL);this._handleServerNotification(n,[e])}onSlotUpdate(t){return this._makeSubscription({callback:t,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(t){await this._unsubscribeClientSubscription(t,"slot update")}async _unsubscribeClientSubscription(t,e){const n=this._subscriptionDisposeFunctionsByClientSubscriptionId[t];n?await n():console.warn(`Ignored unsubscribe request because an active subscription with id \`${t}\` for '${e}' events could not be found.`)}_buildArgs(t,e,n,i){const o=e||this._commitment;if(o||n||i){let s={};n&&(s.encoding=n),o&&(s.commitment=o),i&&(s=Object.assign(s,i)),t.push(s)}return t}_buildArgsAtLeastConfirmed(t,e,n,i){const o=e||this._commitment;if(o&&!["confirmed","finalized"].includes(o))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(t,e,n,i)}_wsOnSignatureNotification(t){const{result:e,subscription:n}=Wt(t,eL);e.value!=="receivedSignature"&&this._subscriptionsAutoDisposedByRpc.add(n),this._handleServerNotification(n,e.value==="receivedSignature"?[{type:"received"},e.context]:[{type:"status",result:e.value},e.context])}onSignature(t,e,n){const i=this._buildArgs([t],n||this._commitment||"finalized"),o=this._makeSubscription({callback:(s,r)=>{if(s.type==="status"){e(s.result,r);try{this.removeSignatureListener(o)}catch{}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return o}onSignatureWithOptions(t,e,n){const{commitment:i,...o}={...n,commitment:n&&n.commitment||this._commitment||"finalized"},s=this._buildArgs([t],i,void 0,o),r=this._makeSubscription({callback:(u,l)=>{e(u,l);try{this.removeSignatureListener(r)}catch{}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return r}async removeSignatureListener(t){await this._unsubscribeClientSubscription(t,"signature result")}_wsOnRootNotification(t){const{result:e,subscription:n}=Wt(t,nL);this._handleServerNotification(n,[e])}onRootChange(t){return this._makeSubscription({callback:t,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(t){await this._unsubscribeClientSubscription(t,"root change")}}Object.freeze({CreateLookupTable:{index:0,layout:Et.struct([Et.u32("instruction"),uo("recentSlot"),Et.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:Et.struct([Et.u32("instruction")])},ExtendLookupTable:{index:2,layout:Et.struct([Et.u32("instruction"),uo(),Et.seq(Ae(),Et.offset(Et.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:Et.struct([Et.u32("instruction")])},CloseLookupTable:{index:4,layout:Et.struct([Et.u32("instruction")])}});new se("AddressLookupTab1e1111111111111111111111111");const qa=Object.freeze({RequestUnits:{index:0,layout:Et.struct([Et.u8("instruction"),Et.u32("units"),Et.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:Et.struct([Et.u8("instruction"),Et.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:Et.struct([Et.u8("instruction"),Et.u32("units")])},SetComputeUnitPrice:{index:3,layout:Et.struct([Et.u8("instruction"),uo("microLamports")])}});class Ns{constructor(){}static requestUnits(t){const e=qa.RequestUnits,n=cn(e,t);return new Je({keys:[],programId:this.programId,data:n})}static requestHeapFrame(t){const e=qa.RequestHeapFrame,n=cn(e,t);return new Je({keys:[],programId:this.programId,data:n})}static setComputeUnitLimit(t){const e=qa.SetComputeUnitLimit,n=cn(e,t);return new Je({keys:[],programId:this.programId,data:n})}static setComputeUnitPrice(t){const e=qa.SetComputeUnitPrice,n=cn(e,{microLamports:BigInt(t.microLamports)});return new Je({keys:[],programId:this.programId,data:n})}}Ns.programId=new se("ComputeBudget111111111111111111111111111111");Et.struct([Et.u8("numSignatures"),Et.u8("padding"),Et.u16("signatureOffset"),Et.u16("signatureInstructionIndex"),Et.u16("publicKeyOffset"),Et.u16("publicKeyInstructionIndex"),Et.u16("messageDataOffset"),Et.u16("messageDataSize"),Et.u16("messageInstructionIndex")]);new se("Ed25519SigVerify111111111111111111111111111");Op.utils.isValidPrivateKey;Et.struct([Et.u8("numSignatures"),Et.u16("signatureOffset"),Et.u8("signatureInstructionIndex"),Et.u16("ethAddressOffset"),Et.u8("ethAddressInstructionIndex"),Et.u16("messageDataOffset"),Et.u16("messageDataSize"),Et.u8("messageInstructionIndex"),Et.blob(20,"ethAddress"),Et.blob(64,"signature"),Et.u8("recoveryId")]);new se("KeccakSecp256k11111111111111111111111111111");var gh;new se("StakeConfig11111111111111111111111111111111");class ph{constructor(t,e,n){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=t,this.epoch=e,this.custodian=n}}gh=ph;ph.default=new gh(0,0,se.default);Object.freeze({Initialize:{index:0,layout:Et.struct([Et.u32("instruction"),Qp(),Kp()])},Authorize:{index:1,layout:Et.struct([Et.u32("instruction"),Ae("newAuthorized"),Et.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:Et.struct([Et.u32("instruction")])},Split:{index:3,layout:Et.struct([Et.u32("instruction"),Et.ns64("lamports")])},Withdraw:{index:4,layout:Et.struct([Et.u32("instruction"),Et.ns64("lamports")])},Deactivate:{index:5,layout:Et.struct([Et.u32("instruction")])},Merge:{index:7,layout:Et.struct([Et.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:Et.struct([Et.u32("instruction"),Ae("newAuthorized"),Et.u32("stakeAuthorizationType"),$i("authoritySeed"),Ae("authorityOwner")])}});new se("Stake11111111111111111111111111111111111111");Object.freeze({InitializeAccount:{index:0,layout:Et.struct([Et.u32("instruction"),Np()])},Authorize:{index:1,layout:Et.struct([Et.u32("instruction"),Ae("newAuthorized"),Et.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:Et.struct([Et.u32("instruction"),Et.ns64("lamports")])},UpdateValidatorIdentity:{index:4,layout:Et.struct([Et.u32("instruction")])},AuthorizeWithSeed:{index:10,layout:Et.struct([Et.u32("instruction"),zp()])}});new se("Vote111111111111111111111111111111111111111");new se("Va1idator1nfo111111111111111111111111111111");Nt({name:Jt(),website:le(Jt()),details:le(Jt()),iconUrl:le(Jt()),keybaseUsername:le(Jt())});new se("Vote111111111111111111111111111111111111111");Et.struct([Ae("nodePubkey"),Ae("authorizedWithdrawer"),Et.u8("commission"),Et.nu64(),Et.seq(Et.struct([Et.nu64("slot"),Et.u32("confirmationCount")]),Et.offset(Et.u32(),-8),"votes"),Et.u8("rootSlotValid"),Et.nu64("rootSlot"),Et.nu64(),Et.seq(Et.struct([Et.nu64("epoch"),Ae("authorizedVoter")]),Et.offset(Et.u32(),-8),"authorizedVoters"),Et.struct([Et.seq(Et.struct([Ae("authorizedPubkey"),Et.nu64("epochOfLastAuthorizedSwitch"),Et.nu64("targetEpoch")]),32,"buf"),Et.nu64("idx"),Et.u8("isEmpty")],"priorVoters"),Et.nu64(),Et.seq(Et.struct([Et.nu64("epoch"),Et.nu64("credits"),Et.nu64("prevCredits")]),Et.offset(Et.u32(),-8),"epochCredits"),Et.struct([Et.nu64("slot"),Et.nu64("timestamp")],"lastTimestamp")]);function SL(a){if(a.length>=255)throw new TypeError("Alphabet too long");const t=new Uint8Array(256);for(let l=0;l<t.length;l++)t[l]=255;for(let l=0;l<a.length;l++){const c=a.charAt(l),f=c.charCodeAt(0);if(t[f]!==255)throw new TypeError(c+" is ambiguous");t[f]=l}const e=a.length,n=a.charAt(0),i=Math.log(e)/Math.log(256),o=Math.log(256)/Math.log(e);function s(l){if(l instanceof Uint8Array||(ArrayBuffer.isView(l)?l=new Uint8Array(l.buffer,l.byteOffset,l.byteLength):Array.isArray(l)&&(l=Uint8Array.from(l))),!(l instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(l.length===0)return"";let c=0,f=0,g=0;const L=l.length;for(;g!==L&&l[g]===0;)g++,c++;const S=(L-g)*o+1>>>0,k=new Uint8Array(S);for(;g!==L;){let C=l[g],N=0;for(let J=S-1;(C!==0||N<f)&&J!==-1;J--,N++)C+=256*k[J]>>>0,k[J]=C%e>>>0,C=C/e>>>0;if(C!==0)throw new Error("Non-zero carry");f=N,g++}let E=S-f;for(;E!==S&&k[E]===0;)E++;let G=n.repeat(c);for(;E<S;++E)G+=a.charAt(k[E]);return G}function r(l){if(typeof l!="string")throw new TypeError("Expected String");if(l.length===0)return new Uint8Array;let c=0,f=0,g=0;for(;l[c]===n;)f++,c++;const L=(l.length-c)*i+1>>>0,S=new Uint8Array(L);for(;c<l.length;){const C=l.charCodeAt(c);if(C>255)return;let N=t[C];if(N===255)return;let J=0;for(let j=L-1;(N!==0||J<g)&&j!==-1;j--,J++)N+=e*S[j]>>>0,S[j]=N%256>>>0,N=N/256>>>0;if(N!==0)throw new Error("Non-zero carry");g=J,c++}let k=L-g;for(;k!==L&&S[k]===0;)k++;const E=new Uint8Array(f+(L-k));let G=f;for(;k!==L;)E[G++]=S[k++];return E}function u(l){const c=r(l);if(c)return c;throw new Error("Non-base"+e+" character")}return{encode:s,decodeUnsafe:r,decode:u}}var _L="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";const xL=SL(_L);var _r={},Ta={},xr,$u;function ln(){if($u)return xr;$u=1;const a=BigInt("21888242871839275222246405745257275088548364400416034343698204186575808495617"),t=8,e=[56,57,56,60,60,63,64,63,60,66,60,65,70,60,64,68],n=s=>{let r=s*s;return s*r*r%a};function i(s,r){const u=[];for(let l=0;l<s.length;l++){let c=0n;for(let f=0;f<s.length;f++)c=c+r[l][f]*s[f];u.push(c%a)}return u}function o(s,r,u=1){const l=s.map(E=>BigInt(E));if(l.length<=0)throw new Error("poseidon-lite: Not enough inputs");if(l.length>e.length)throw new Error("poseidon-lite: Too many inputs");const c=l.length+1,f=t,g=e[c-2],{C:L,M:S}=r;if(S.length!==c)throw new Error(`poseidon-lite: Incorrect M length, expected ${c} got ${S.length}`);let k=[0n,...l];for(let E=0;E<f+g;E++){for(let G=0;G<k.length;G++)k[G]=k[G]+L[E*c+G],(E<f/2||E>=f/2+g||G===0)&&(k[G]=n(k[G]));k=i(k,S)}if(typeof u!="number")throw new Error(`poseidon-lite: expected nOuts to be number got ${typeof u}`);if(u===1)return k[0];if(u<=k.length)return k.slice(0,u);throw new Error(`poseidon-lite: Invalid number of outputs requested ${u}, max ${k.length}`)}return xr=o,xr}var Ra={},td;function un(){if(td)return Ra;td=1,Object.defineProperty(Ra,"__esModule",{value:!0}),Ra.default=a;function a(t){if(Array.isArray(t))return t.map(a);if(typeof t=="object"){const i={};for(const[o,s]of Object.entries(t))i[o]=a(s);return i}const n=[...Uint8Array.from(atob(t),i=>i.charCodeAt(0))].map(i=>i.toString(16).padStart(2,"0")).join("");return BigInt(`0x${n}`)}return Ra}var Mo={},ed;function ML(){if(ed)return Mo;ed=1,Object.defineProperty(Mo,"__esModule",{value:!0}),Mo.default=void 0;var a={C:["CcRunsaOm9T+H6q6KUy6OKcaoXdTTN0bbH3A29Cr16c=","DANWUwiW7sQql+2TfzE1z8UUKzrkBbg0PB2D/6YEy4E=","Hiih2TVpitEULlEYK7VM9KAOpaq9Ymi9MX6pd8wVSjA=","J68tgxqdJ0gICWXbMOKY5A5XV8PgCNuWTPnisSuRJR8=","Hm8RzmD8j1E6ajz+Fq4XWkEpFGLyFM0Iear0NUW3TgM=","Kmc4TTu9XkOFQYGctoHwvgRGLtFMNhPY9xkgYmjRQtM=","C2b981YJOmEWCfjhL7/s8LmF44HwJRiJNkCPXVyfRdA=","AS7j7B541HCDDGEJPCreNwsmyDzFzr7t2qaFLb2wniE=","AlK6X2dgv739iPZ/gXXj/WzRxDGwmba7LRCOe0Rbsbk=","F5R0zOyl/2dsa+w871QpY1Q5Gok1/3HW71rqrXypMvE=","LCQmE3mlG/qSKP9KUD/U7Zwfl0omSWmzfholibvtK5E=","HMHXtiaS5j6sLyiL0GlbQ8L2P1AB/A/FU+ZsBVGAGwU=","JVBZMBqtqYuy7VX4UpeelgB4Tb8X+6zQXZ7/X9nJG1Y=","KEN746wcsuR54fXA7M0ys66iQjSXCoGTsRwpzn5Z79k=","KCFqRC8uH3EcpPprU3ZusRhUjaj7T3jUM4diw39fIEM=","LB9HzRf6Wt8fOfTnBW3QP+7h784DCUWBEx8jdzI0gsk=","B6utArel68SGMrzJNWzrfdna/KJ2Y4pjZGuFZqYhr8k=","AjAmRgH/3yknWzP/qrUd/pQp+QiAppzRN9oMTRX5bDw=","G8lzBU5R2QWg8WhlZJfKQKhkQUVX7iiecX5dZomaoKk=","Lhwi+WRDUAggbDFX6GNB7dJJr/XC2EIfKmsiKI8KZ/w=","EiTzjfZ8U3gSHB1fRhu8UJ6OoVmORsn3pwRSvCu6hrg=","AuTmnYulnlGSgLS9ntAGj9e/6M2d/toZadKYkYbN4g4=","Hx7Mw0qroBN/XfgfwE/z7k8Z7jZOZT8HbUfpc12YAY4=","FnKtPXCaNTl0JmwwOamnMRQkRIAyzRgZ6suKTUKE9YI=","KD4/3CxuQgxW9Er1GStK6c2mlh8oTSSZHS7WAt+Mj8c=","HCo9EgxVDs/Q2wlXFw+gE2g3Ufj9/1nWYU+9af85S8w=","IW+Eh3qsYXL3iXpzI0Vu/hQ6mkN3PqbylstrgXdlP70=","LA0nK+zyp1dkun6OPijRK86qR+phylmkEaH1FVL5R4g=","FuNCmYZcDihITuenTEVOnxcKVICr4FCPy0psPYlUb0M=","F1zrpZnpb1s3WiMqb7nMcXcgR3ZYAikPSM2Tl1VIj8U=","DHWURA3EjBb+rZ4XWLAoBmqkEL+8NU9U2MX/u0Sh7jI=","GjwpvDnyG7XEZtt9frb9j3YOIAE8z5EskkeYgtkZ/Y0=","DM/dkG80JuXAmG6gSbJTQAhV00kHT1pmlcjuq80i5o8=","FPa8gdnxhvYr20dc5slBGGanqKP9Bls84OaZtn3Z55Y=","CWK4J4n7PRKXAspwsvbFqswJmBDJxJXIiO3rc4a5cFI=","GogK9wdNGLO/IMed4lEnvBMoSrAe8CV1r+8Mj2oxqG0=","EMuhhBmmozLNXnfwIRwVSyCvKST8IP8/TDASu3rpMRs=","BX5iqaj4mz69x2umOp6sqPontzGcrjQGdWooSfMC8Q0=","KHyXHekdwKvUSt9ThLSYjLlhMDu/Zc/1r6BBO0QoDO4=","Id8ziK8Wh7uzvKnaDMqQjx5WK8RtSrpOb395YOMGiR0=","G+XIh9JbznA+JcyXTQk0zXid+PcLSY/YPv+LVg4WgrM=","Jo2jb3blaPtoEXF1zqLNDdLLXUL9pazqSNWcJwag1cE=","DherCR9urlDGCb6vVRDs7MXYu3QTXr0FvQZGDMJqXtY=","BNcn5yj/oKZ67lNasHSkMJHvYtjPg9JwBA9cqh9ir0A=","DdvXv5wpNBWBtUl2K8Ai7TNwKsEPG/2GKxVBfX45ym4=","J5DrM1FiF1J2gWLoKYnGwjT1sNHTr5tYiinEnIeJZUs=","HkV8YBpjtz5EcZUBk9ilcDlfPZq4sv0JhLdkIGFC+ek=","Ia5kMB3KliVjjWqyu+cTX/qQ7NDEP/kfxMaG/EbgkbA=","A3n2PIzjRo1NopMWb0lJKIVL6eNDLglVWFhTTu2NNQs=","AC1WQgNZ0CZqdEoICAngVMoOSSGkZoasjJ9YoyTDUEk=","EjFY5ZZbXZsdaLPNMuELvtqNYkWeIfQJD8LFr5Y1FaY=","C+KfxAhHqUFmHRS79svgQg+7K29Sg21OYMgOtJytnsE=","Gslpkd7CuwVXcWFCAVpFPDbbnYWcrV+aIzgC8k/fTBo=","FZZEP3Y9vMJfSWT8YdI7Pl4SyfqX8YqSUcozVbywYn4=","EuC802VL36drKGHU7Drq4PGFfZ8X5xWu1tBJ6uO6MhI=","D8krTxu+qCuepz1K+a8qUM6rrH83FUsZBObHbHz5ZLo=","H5wLFhBEZELW8uWSqAE/QLFPfHciI29PnH6WUjOHJ2I=","Dr10JErnJnX4zeBhV6eC9AUNkU2ji0wFjRWfZD279NM=","LLfw7Tnhbp9pqfr9SrlRwDsGcelzRu45eoOYOdzPxtE=","Gp1uLs/wIsxWBUQ+5BurIM52HQUUzlJmkMcrynNS2b8=","KhFUOWB/M1peqDw7xEqTMdDBMyapp7owh9oYLWSOxy8=","I/m2UptdBA0VuPp67j40EOc4tWMFzUTylTXBFcWkwGA=","BYcsFtsPcqIkmsa6SEu5w6POl8FtWLaLJg65OfDm6Kc=","EwC97gi7eCTKIPuAEYB19AIZthUdVbXFK2JKfN7d9qc=","Gbm2PS8QjhfmOBeGOo9sKI160pkW2YyxBy5Oe31Ss3Y=","AVvuE1fjwBW1vaI3ZoUi9hPRyIcmtexCJKIBKEgbT38=","KVNzbpS7a58blwek8WFeTv4eHOS6shjL6pLHhbEo/9E=","CwaTU7oJFhiGL4BhgMA4X4UbmNNytF9UTOcmbtZgjfw=","ME901GHMwTEV5OC8+5OBflWut+uTBrZOT1iKyX2B9Ck=","FbvxRs6bygnooz9ed9/k9arSoWSkYXpMuO5UFc3pE/w=","CrTf4MJ0LN5EkBAxSHlk7ZuPS4UEBcEMqf8jhZVyyMY=","DjLbMgoETjGX9F92SaGWde9e7f6lRt6pJR3jn5Y5d5o=","ChdWqh83jKSydjWni2iI5meXczqCd0iWoweO+lFtoBY=","BExKM7EPaTRH/RcXf5Uu+JXmHTKPhe+pQlTWoqJdk+8=","LtNhG3JbinC+ZVtTf2b3AP4IedeaSWiR03sHtUZsS4s=","H5uk6Lq3zkLI7MPXIqouDq3965z900e12DOepxIIWKo=","GyMwQwUujCiPfukHqE5RiqOOgqxFAgZtt0BW+GXF09o=","JDHhzBZLuNB0Axq3K9VbTJAgU7/A8U2wyi+XsCCHWVQ=","CC+TTJH1qsMwzWlToKfbRaE+MiCXWDMZp5Hyc5ZYAf0=","K5oKIj51OLCjS+B0MVVCo8dyReKufL6Zmta7kwxImXw=","DhzZHt0s+izOuFSDuIepvoFkFj51qKAOsLWJzHAhTn0=","Lh6sDyv9/WPJUfYUd+NpiZl3TxmFTQD1iNMkYBzr4vk=","DL+pXzf7dAYMdhWOdp1tFXNFeE2O/bM8I9dIEVtQC4M=","CPBbO+kj7UTWWtSdimHppnbZkeOndRPZmAwjLfpKT4Q=","InGeKgcLzQhSv44hmE0EQ+coSSXcB1ijJaLdUQwEfvY=","BB9Zap7hyyvAYPf8w6GrTHvb8DYRmYLA9B9isvJoMMA=","Iz/TXeG+UgqHYo6wb2sdTAIb4cLQ3EZKGfzdCYaxD4k=","BSS0bRqoel5DJeCkI+vIENMeB4qhtHB+78tFPGHJwmc=","LDT0JMgeVxbOR/ysiUuFgkInu5VLDzGZzESGI3xRUhE=","C18qS2M4eBkgfv/CtVQfty3SAltUV8yX8zAQMn3kkV4=","IiB4VggszFTFty/kOdLP1sF0NdL1evbOrvrEH+BcZZ8=","JNV6i/XaY/5OJBWbf4lQtc37IQGUyvefJ4VASM4sgXE=","Cvqxgf3V4Fg7Nx11vWk/mDdK1wl7sBqFc5Gbsjt5OW4=","LbqbEI8gh3KZilLvrHy9VnbABXGUwWwL8WKQ1isRKO4=","JjSbZu24sW9W+IHHiPU/g8u4PeC9WSslWv8T5rzkILM=","Ja984OXhA1doXpX5Izl1OtgaVtKOzBk7I1KIo+bxN9s=","JbTOe9IpQ5DAlNalXt1ouXDu16roiyv/H3wBh/41AR8=","IsVD8Q9siew4flPxkIqI5d6c7yjr3zCxjLnVTB4CtjE=","Ajb5PneJxHJPx5CKnxkeHkJekGqRnXo032aOdIgvh6k=","KTULQBFmygEOfSfjfQXamWUr2uEU6wFlnLSXr5gMS1I=","Du14fWWCDT9r0xu6tUf3WmXtt12ETruJ7hJgkWZSNj8=","B8wRcPE7RvIDanU/Ugsykf3NDpm9lCl9GQb2VvTeb60=","Irk5IzsdcgX0m89hOj0wsZCHhtf59dEMIFlDVonorOo=","AUUXYqCquByKrR3IvDPocHQPCDpaqFQ4rdZQrOYK5aY=","I1BrtdhyfURh+r8QJdRtH+MuqmHex9pX5wT+wIkvzok=","LkhMROg4rqC6wGrj9xvdCSo3CVMeHv6pf4vWiQc1VSI=","D0vH0H66/WQ3nnjFC9LkK69KWUVFztwlRUGNomg1tUw=","H008j2WD6eX6dmN4Yvqu6FFYI4hyXfRg5iCZbVDY504=","CTUU4McHEfgmYNB74OSpiPrgKrx7aB2RU+uby0j+c4k=","GtqwyOKzutNGaZorXzvANkPug+zkcijySljgo0fhU9g=","FnKxcmBX2Z3RRwnrtHRkGjeMG5S4ByusGiLb756A2tI=","Hf1T1Fdq8uOPRPU/3KtGjMXY4vrgrMTuMNR7I5tHnBQ=","DGiIoQt1sPOnCjYmOjfhf+bXfWQPb8PevH8gd1MgXGA=","Gt25M6Zb53CSs0p+d9Ev6GEaYeAO5oSLhQkezKnR5Qg=","ANdUDc0mioRcEK4Y0d6TPPY4/1Ql8K//eTVijimdF5E=","FAwOQmh+nq0BsoJ6VmTKnCb+3eSs2Z2x0xaTnSC4LA4=","Lww6EV1DF9GRuom40T0YBsIKD5sk+MXtwJHirlZWWYQ=","DE7neP98FFUwBu0iDPnIEAigz/ZwsiuC2MU4odyVjGE=","FwTydm1G+Cw2k/AEQMzDYJQk7SbArMZiJ8PXSF3nTGk=","Ly0ZzD6l146noCwbUdJEq/B2nJ+FROQCObZv6QCcPPo=","GuA4U7dfyrpQU/ES4qjo3N1+5suc/tnH1sdmqAb8Zik=","CXGqv3lSQd9R0THQ+mGqXzVWkhstbwFOTkGobdrwVtU=","FAjDFuYBThqR1M9rbg3nPtpiT4OA3xyHX1wp97/i9kY=","Fmfz/i7b6FAkir5CtUMJO2yJ8fdz7yhTQWkfOYIu9b0=","E798XQ0sQ3akiwoDVXzfkVuBcYQJ5cEzQkxpV2UA/jc=","B2IKbfsLbOwwFq3z01M8JAJLlTR4VreXGbwLp0OmLCw=","FXTH7wxDVF82qMoIvb3YsHXSlZ4vMitzFnXePhmCtNA=","Jp5LW3oushr9VnlwpxfO7FvUGEVxwlT9wG4Dp/+DePA="],M:[["Bm9vhdb2ioXsEDRTUaI6Oq8H84r4yVKnvOynC9KvetU=","K51LQRDJrpl3guFQmx0P2yCnwCu9i+pzBUYrn4Elseg="],["DMV827CFB9Yr9npEk8wmL7bAnVVwE//x9XP0MSIfj/k=","EnTmSaMu01WjGm7WlyThra3oV+hutcOhIbzRR5QyA8g="]]};return Mo.default=a,Mo}var nd;function kL(){if(nd)return Ta;nd=1,Object.defineProperty(Ta,"__esModule",{value:!0}),Ta.poseidon1=o;var a=n(ln()),t=n(un()),e=n(ML());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Ta}var Ha={},ko={},id;function UL(){if(id)return ko;id=1,Object.defineProperty(ko,"__esModule",{value:!0}),ko.default=void 0;var a={C:["DumlkrqalRjQWYbWVvQMIRTEmTwRuymTjSHUcwTNjm4=","APFEUjXyFIxZhlhxafwbzYh7CNTQCGjfVpb/9AlW6GQ=","CN/zSH6KyZ4fKaBY0PqAuTDHKHMLerNs6HnziQ7Pc/U=","Lye+aQ/a7kbDzij3UysTyFbDU0LIS9puIJZjEPrcAdA=","KyrhrPaLe40kFr6/PU9iNLdj/gS4BD7ki4MnvryhbPI=","AxnQYgcr737MperAb5fU1VlSwXWrawPq5ktEx9vxHPo=","KIE9yuuuqoKKN234evSmO8i3vyetScYpjvezh78oUm0=","JydnOyzLyQPxgb844cHUDSAzhlIAw1K8FQkord35y3g=","I07EXKJ3J8LnSr0rKhSUzW771D40BYfWuPueMeZcxjI=","FbUlNAMa4Y9/hiyyz3z3YKsQqBUKM3sczZn/boeX1Cg=","Dcj61tnks19e2aPRhrec444Oio0bWLEy1wHU7s9o0fY=","G82V/8IR+8pgD3BfrT+1Z+pOs3j2Lh/sl4BVGKR+TZw=","EFILCrchyt/p7/gbAW/DTcdto2wleJN4F8uXjQad5Vk=","H21IFJuOf32bJX2O1fu69CkySYB1/tCs6IqeuB9WJ/Y=","HZZV9lIwkBTSngDvNaIIm//43ByBbw3JyjS9tUYMhwU=","BN9aVv+VvK+wUfexzUOpm6cx/2fkcDIFj+PUGFaXzH0=","BnLZlfj/9kAVGz0pDO2vFIaQoQqMhCSn9uwoK25L6Cg=","CZlStBSIRFSyEgDX/6/dXwyancwG8nCOn8HYIJtcdbk=","BSy6IlXf0Ax8SDFDuo1GlEjkNYaptM2Rg/0OhDprn6Y=","C4ut7mkK246wvXRxK3mZr4LeVXByUa13Fgd8uTxGTdw=","EZsVkPEzB69aHuZRAgwHx0nBXWBoOoBQuWPQqOSyvdE=","AxULfNbV0XslKdNr4PZ7gyxKz8iE707lzhW+C/tKjQk=","LMYYLF4UVG488ZUfFzkSNVN077g9gImKvmnLMXyepWU=","AFAyVR5jeMRQz+EppASzdkIYyt7awU4rktLNcxEb8Pk=","IzI34yibqjS7FH6XLry5UWRpw5n8wGn7iPnaLMKCdrU=","Bcj09OvUpuPJgNMWdL++YyMDfyGzSuWk6AwtTCTWAoA=","CnsdsTBC05a6BdgYoxnyUlK8817zru2R7h8JslkPxls=","KnO3H5shDPWxQpZXLJ0y2/FW4rCG/0fcXfVCNlpATsA=","GsmwQXq8yaGTUQfp/8kdw+wY8sTb5/Ipdqdgu1xQxGA=","EsAzmuCDdII/q7B2cH70eSafPk1ssQQ0kBXuBG3JP8A=","C3R1sQKhZa1/WxjbTh5wT1KQCqMlO6rGgkZoLlbpoo4=","A3woSeGRyj7bHF5J9ui4kXyEPjeTZvLqMqs6qI1/hEg=","BaaBH4VW8BTpJnRmHiF+m9UgbFyToH3BRf2xdqcWNG8=","KaeV59mAKJRulHt11U6fBEB26Hp7KIO0e2de9fOL1m4=","IEOaDISzIutFo4V6/Bj1gm6Mc4LIoVhcUHvhmZgf0i8=","Lguo2U2ez0qU7CBQxzcf8btQ8neZqEttSipvKgmCyIc=","FD/RFc4I+yfKOOt8zoIrRReCLNIQkEjS5tDdzKF9ccg=","DGTL7LHHNLhXlo273PgTzfhhFlkyPby/yEMjYjvpyvE=","AoowWEfGg/ZG/KklwWP/WudPNI1iwrZw8UJs75QD2lM=","Lk71EP8Lb9pfqUCrTEOA8mpry2TYlCe4JNZ1W1254ww=","AIHJW8QzhOZj15JwyVbOO4kltPbQM7B4uWOE9QV5QA4=","LtXwyRy9l0kYfi+t5ofgXuJJGzScA5oLuoqfQCOguzg=","MFCZkfiNo1BLvzdO1ari8DRIoix2I0yMmQ8B8zpzUgY=","HD8g/VVAmlMiG3xNSaNWufChEZ+yBntBp1KQlEJOxq0=","ELTn86td8AMElRRFm24Y7sRrsiE+jhMeFwiHtH3cuWw=","KhmCl5w/9/Q93VQ9iRwqvd2A+ATAd9d1A5qjUC5Dre8=","HHTuZPFeHbb+3b6tVtbVXbpDHrw5bJr5XK0PExW9XJE=","B1M+yFC6f5jquTA8rOAbS55PLouCcIz6nC/kWgrhRqA=","IVdrQ45QBEmhUeTurxexVChcaPQtQsGAihGr83ZMB1A=","LxfAVZuP55YIrVyhk9YvELzoOEyBXwkGdD1pMINtSp4=","LUd+OGLQdwinnoqulGFwvJd1pCATGEdK5mWwsbficw4=","Fi9SQ5ZwZMOQ4JVXeYTyka+6ImbDj1q82Jvg9bJ0fqs=","K0yyM+3pukgmTs0siuUNGteoWWqH8p+Kd3enAJI5MxE=","LI+8st2Fc9wduvj0YihUd22y7s5thcTPQlTnw14DsHo=","HW80dyXkgWry/0U/DNVrGZ4bYen2Aemt5eiNuHCUnak=","IEsMOX9OvnHrwtiz31uRPfnmrAK2jTEyTNSa9cRWVSk=","DEy53DxP2BdPEUmzxjw8L57LgnzX3CVTT/j7dbx5xQI=","F0rWGhRIyJmiVBZHT0kwMB5cSUdSeeBjmmFt3EW8e1Q=","GpYXe89NjYn3Wd9OwvPN4uqqKMF3zA+hOpgW1Jo40u8=","Bm0EskMx1xzQ74BUvGDE/wUgLBJqIzwagkKs42C4owo=","KkxPxuwLDPUhlXgoccbdOzgcxl9y4CrVJwN6Yqob2AQ=","E6stE2zPN9RH6fLhSnztyV5yf4RG9tnX5Vr8ASGf1kk=","ESFVL8omBhYZ0k2EPcgnacGwT87Cb1UZTC4+hprMapo=","AO9lMyKxPWyIm8gXFcN9d6bNJn1ZXEqJCaVUbHyXz/E=","DiVIPkWmZSCLJh2Lp0BR5kAMd21lJZXZhFrKNdijl9M=","KfU23LnddoIkUmRlnhXYjjlaw9Td6S2MRkSNuXnuuok=","KlbvnyxT/rrf2jNXXb29iFoSTieAu+oXDkVrqs4Ppb4=","HINhx461z13s+3otF7XECfKuKZmkZ2Lo7kFiQKjLmvE=","FRr/XziyCg/ARzCJqvAga4Po5op2RQe/09CrS+dDGcU=","BMYYfkHtiB3BsjnIj3+dQ6n1L8jIts3R525HYVtR8QA=","E7N72A9NJ/sQ2EMx9vttU0uBxh7RV3ZEnoAbfdycKWc=","AaXFNic8LZ31eL+9MsF7eizjZkwqUgMskyHOscToqOQ=","KrNWGDTKc4Na0F9desuVC0qaLGZrlybagyI5Blt8OwI=","HU2OwpHnINsgD+bWhsDWE6yvavTpXTv2n37VFqWXtkY=","BBKU0sxITSKPV4T+eRn9K7klNRJAoEtxFRTJyAtlrx0=","FUrJjgFwjGEcT6cVmR8ASJj1eTnRJuOSBClx3ZDoH8Y=","CzOdisyn1Pg+7dhAk671EFCzaEyI+LCwRSRWO8bqTaQ=","CVXknmYQyUJUpPhM+6s0RZjw5x6v9Kfdge2VtQg5yC4=","BnRqYVbrpUQmueIiBvFavKmm9B5vU1xvNSVAHqBlRiY=","Dxj1oOzRQjxJbzggxUnCeDjleQ4r0KGWrJF8f/Mgd/s=","BPbuyhdR9zCKxZ7/W+smHku1Y1g+3nvJKnOCI9b3bhM=","K1aXM2TExPXBo+xNo83OA4gR6xFvs+RbwXaNJvwLN1g=","Ejdp3UnVsFTc12uJgEsby44TkrOFcWpdg/62XUN/Ke8=","IUe0JPxIyAqI7lK5EWmqzqmJ9kRkcRUJlCV7L7AcY+k=","D9wfWFSLhXAabFUF6jMqKWR+bzStQkPC6lStiXzr5U0=","Ejc6glH+oATfaKvPD3eG1Lzv8oxdu+DDlE9oXMCgsfI=","IeT06l81+FutfqUv90LJ6KZCdWtq9EID3YofNcGpADU=","FiQ5FtadLKPftHIiJNTEYrVzZkkvRekNioGTTxvDsUc=","HvvkbdeleLT2b5rbyItDeKvCFWbhoEU8oTpBWcrASsI=","B+pehTfPXdCIhgIOI6fzh9Ro1VJb5m+FO2csyWqIlpo=","BajE+ZaLiqO3tHijD5pbY2UPGadefOEcqf4WwLdsALw=","IPBXcSzCFlT7/lm9NF6NrD94GMcBuceILZ1Xtyoy6D8=","BKEu3tqd/WiWcvjGf+4xY23NjojQHUkBm9kLM+sz22k=","J+iNjBXzfc7kTx5UJaUd7L0TbOUJGmdn5J7JVEzNEBo=","L+7Re4QoXtm4pcjF6VpB9m4JZhmncDIjF2xB7kM95NE=","HtfMdu30XHxAQkFCD3Kc85TllCkRMSoNaXK4vVOv8rg=","FXQumbm/oyMVf/jFhvVmDqxng0dhRM3K3yh0vkVGaxo=","GqwoU4f2XoLIlfxoh930BXcQdFTG7AMXKE8DPyfQx4U=","JYUcPIRdR5D53a29tgVzV4MuLnpJd19x7HWpZVTWfHc=","FaWCFWXMLsLOeEV9sZft81O367osVSM3DdzMPZ8Uamc=","JBHVekgTuZgO+n4xodtZZtz2TzYEQndQLxVIXyjHFyc=","AC5vjWUgzUcT4zW4wLbS5kfpqY4S9M0lWIKLXvbLTJs=","L/e8j0OAzemX2gC2FrD80a+PDpHi/h7XOYg0YJ4DFdI=","ALmDG5SFJVle4CckRxvNGC6VIfa3u2jx6Tvk/rsNPL4=","Ci9TdouOv2qGkTsOV8BOARykCGSKR0OofXetvwycNRI=","ACSBVhQv0Dc6R5+R/yOelg9Zn/fpS+abfyopAwXhGY0=","Fx1WILh7+xMoz4wCqz8MmjlxlqpqVCwjUOtRKisrzak=","FwpPVVNvfclwCHx8ENb612DJUhct1U3ZnRBF5Ow0qAg=","KaujP3mf5mwu8xNK6gQzbsw344wc0hG6SC7KF+Lb+uE=","HpvBeaT911j90bsZRQiNR+cNEUoD9qDotbplA2nmSXM=","HdJpeZtmD61Y9/SJLfsLWv6q2GmpxLRPnJ4cQ72vjwk=","Is28i3ARetFAEYHQLhVFnnzNQm/oacfJXR3Syw8krzg=","DvBC5FR3HFM6n1elXFA/zv0xUPUu2Up81bqTucfazv0=","EWCeBq1sj+Lyh/MDYDfohRMY6LCKA1mgOzBP/KYugoQ=","EWbZ5VRhbbqedT7qQnwXt/7NWMB23+QnCLCPW3g6qa8=","LeUpiUMahZWTQTAmNUQT2xd/v0zSrAtW+FWoiDV+5GY=","MAbrT/x6hYGabaSS86isHfUa7lsXuOiddL8Bz19x6a0=","KvQfu2G6ioD9z2//nj9vQimT/o8KRjn5YjRMgiUUUIY=","EZ5oTeR2FV/lprQajryF24cYqyeInoXngbIUus5IJ8M=","GDW3huLokl4Yi+pZrjY1N7USSMI4KPBHz/eEuXs/2AA=","KCAaNMWU36NNeUmWxkM6INFSusKnkFySbEDihasy7rY=","CD79eifRdRCU6A/vr3iwAIZMgutXEYdySnYfiMIsxOc=","C2+Io1dxmVJhWOYc7qJ76BHBbfd3TdhRngeVZPYf0Ts=","Dsho5tFeUdlkT2bh1kcalFiVEcoA0p4QFDkObuQlT1s=","KvM+P4ZncScawMmz7S4RQuzT50uTnNQNANk3q4TJhZE=","C1ICEfkEtefQm12WHGrOdzRWjFR91oWLNkzl5HlR8Xg=","Cy1yLQkZoarY21jxAGKpLqDFasQnDoIsyiKGIBiKHUA=","H3kNTX+M8JTZgM6zfCRT6Ve1SpmRyji74AYdHtblYtQ=","AXHrld+/fR6uqXzThfeAFQiFwWI1oqao2pLOsB5QQjM=","DC0OO1/VdUkym/aIXaZrm3kLQN79LIZQdiMFOBsWiHM=","EWL7KGicJxVOWoIotOcrN3y8r6WJ4oPDXTgDBUQHoY0=","LxRZtl3uRBtkrThqkegxDygsWpKonhmSFiPvgklxG8A=","Hm/zIWtojD2ZbXQ2fVzUwbxInUZ1TrcSwkP3DRtTz7s=","AcqL5zgyuNBoFIfSfRV4AtdBpvNs3CoFdogfkyZHiHU=","H3c1cG/+n8WG+XbVvfIj3GgChggLEM6gC5td4xX5ZQ4=","JSK2D06jMHZAoMLc4EH7qSGsEKPV8JbvR0XKg4KF8Bk=","I/C+4AGxAp1SVQdd3JV/gzQYytT1K2w/jOFsI1VyV1s=","K8Gui43buB/KrC1EVV7VaF0UJjPp35BfZtlAEJMILVk=","D5QGuCllZKNzBFB7jbo+0WI3EnOgex/JgBH81q1yIF8=","I2Co6wzH3vpntymY3pBxThfnWxdKUu5KyxJsjNmV8Kg=","FYcaXN3q2XaATIA8uu8lXrSBWl6W34sAbcu8J2f4iUg=","GTpWdmmY7p4KhlLdLzsdoDYvT1T3I3lUT5V8ze77Qg8=","KjlKQ5NPhpgvm+Vv9PqxcDsuY8itM0g05DCYBed3rg8=","GFmVTP64aV8+i2NdyzRRkoks0RIjRDuntBZuiHbA0UI=","BOEYF2MFDlgBNETby5nxkCsRvCXZC73KQI04GfT+0ys=","D9slPe6Dhp1AwzXqZN6MW7EOuC2wi16LH15VUr/QXyM=","BYy+ippQJ72qTvtiOt6tYnXwhobxwImEqdfFuum08cA=","E4Ltzplx4YZJfq2xrrH1KyO0uDvvAjqw0VIotMzspZo=","A0ZJkPBFxu4IGcpR/RGwvn9huOuZ8Ut34eZjRgHZ6LU=","I/e/yHINwpb/8ztB+Y/4PG/KtGBdsutaqlvBN663Clg=","ClmhWOPuwhF+bpTn8OnezxjD/9XhUxqSGWNhWLuvYvI=","BuxUyAOBwFK1i/I7MS/9POLE66BlQgr49MI+0Adf0Hs=","EYhy3IMuDrVHa1ZkjoZ+yLCTQPenvLG0li8P+e0fnQE=","E9afoSfYNBZa1cfLp61Z7VLgsPDkLX/qleGQa1IJIbE=","FpoXf2PqaBJwscaHenPSG94UOUL7cdxV/YpJ8Z8Qx3s=","BO9RWRxurZfvQvKHrc5A2Tq+sDK5IvZv+36aWnRQVE0=","JW4XWh3AeTkOzXynA/suOxnsYYBdTwPO1fRe5t0Paew=","MBAtKGNqvV/l8q9BL/YAT3XMNg0yBd0toAKBPT4s7rI=","EJmOQt/NO78cBxS8c+sb9ARDo/qZvvSjH9Mb4YL8x5I=","GT7djp/PPXYl+n0ktZih2J8zYur01YLv7K12+HnjaGA=","GBaK/TTy2RXQNozoC3szR9HHpWHOYRQl8mZNeqUfC10=","KTg8AevTtqsMAXZW6+ZYtqMo7He8M2JuKeLpWzPqYRE=","EGRtLyYD3jmh9K5ed3GmSnAttuhvt2q2AL9XP5AQxxE=","C+teB9GycUX1dfE5WlW/Ey+QwltA2ns4ZNAkLcsRF/s=","FtaFJSB4wTPcDT7K1itciDD5W7LlS1mr3/vwGNlvozY=","Cmq9HYM5OPM8dBVOBAS0tApVW7vsId36/Wct1iBH8Bo=","GmefXTbre1yOoSpMLe3I/rEt/+7EUDFycKbxmzTPGGA=","CYD7IzvUVsI5dNUODr/eRyakI+raTo9v+8dZLj8bk9Y=","FhtCIy5huEy/GBCvk6OPwM7OPVYoySggA+ustcMSxys=","CtoQqQx/BSCVD31Hpg1eakk/CXh/FWTl0JID20feGgs=","GnMNNyMQuoIyA0WimsQjjtPweoorThIbtQ3bmvQH9FE=","LIEg8mjvBU+BcGTDad2n6pCDd/6rpcTf+9oQ71joxVY=","HHyIJPdYdT+lfAB4nGhCF7kw6VMTvLc+bnuGSaSWj3A=","LNntMfX4aRyOOeQHenT6oPQArYtJHrP3tHsn+j/Rz3c=","I/9PnUaBNFfPYNkvV2GDmaXgIqwyHKVQhUriORiiLuo=","CZRaXRR6T2bO7OZAXd3Z0K9aLFEDUpQH3/HqWPGAQm0=","GI2cUoAl1MK2dmDGt3G5D3x9puqinT8mim3SI+xvxjA=","MFDjeZZZa3+B9oMRQx2HNNun2SbTYzWV4MDY3fTw9H8=","Fa8RaTloMKkWAMqBAsNcQmzq5UYeP5XYnYKVGNMK/Xg=","HabQmIVDLqmgbZ83+HPZhdrpM+NRRmspBChNozINisw=","J5bqkNJpryn1+KzzOSESTk5PrT2+ZYlF5UbuQR3aqcs=","IC190doPa0sDJcizMHdC8B4VYS7I6TBKfLAxngHTLWA=","CW1nkNBbt1kVapUromPWcqLX+ceI9Mgxop2s5MD4vl8=","BU76H2Ww/OKDgIllJ12He0ONojzlsT4ZY3mMsUR9JaQ=","GxYvg9kX6T7bMwjCmALeudiqaQETsuFIZMz24Y5BZfE=","IeUkHhJWTdb9nxzdKg3jnu3+/BRmzFaOxc63RaBQbtw=","HPtWYujPWskiaoDuF7Nqvstzq1+H4WGSe0NJ4Q5L3wg=","DyEXfjAqdxu65tjR7LNztiyZrzRiIKwBKcU/Zm6yQQA=","FnFSI3RgaZKv+w3X9xsSvsQjau3mKQVGvO9+H1FcIyA=","D6PsW5SIJZwutM8kUBv62b4uyeQsXMjM1BnSppLK2HA=","GTwOBOC9KYNXyyZsFQYIDtNu3OhcZIzAhejFexq1S7o=","ECrfjvdHNaJ+kSgwbcvDyZ9vcpHNQGV4zhTqKtq6aPg=","D+CveFjkmFnipU1vGtlFsTFqokv73SOuQKbQy3DD6rE=","IW9nF7vH3tsIU2oiIIQ/Ti2l8dqp69796KXqc0R5jSI=","HaVcyQDw0h9KPmlDkZGKGzwjsqx3PGs++I4uQigyUWE="],M:[["EJt/QRug5MmytwyvXDansZS+fBGtJDeL/ttoWSuoEYs=","Fu1B4Tu5wMZq4RlCT928vJMU3J/b3upV1sZFQ9xJA+A=","K5C7oA/KBYn2F+fcv+guDfcGq2QM6yR7eRqTt042c20="],["KWnyfu0xpIC5w2x2Q3nbyizI/dFBXD3e1ilAvN4L13E=","LiQZ+ewC7DlMmHHIMpY9wbiddDyMe5ZAKbIxFoex/iM=","EBBx8AMjebaXMVh2aQ8FPRSNThCfX7BlyKrMVaD4m/o="],["FDAh7GhqPzMNX55lRjgGXObNeeKMWzdTMmJE7mWhsac=","F2zAKWla0CWCpw7/CKb9mdBX4S5Y59e2sWzfq8juKRE=","GaP8ClZwK/QXun/uOAJZP6ZERwMHBD93cyec1x0l1eA="]]};return ko.default=a,ko}var od;function GL(){if(od)return Ha;od=1,Object.defineProperty(Ha,"__esModule",{value:!0}),Ha.poseidon2=o;var a=n(ln()),t=n(un()),e=n(UL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Ha}var Qa={},Uo={},ad;function PL(){if(ad)return Uo;ad=1,Object.defineProperty(Uo,"__esModule",{value:!0}),Uo.default=void 0;var a={C:["GbhJ9pRQsGhI2h05vV5KQwK7hnRO3CYjiwh44mntI+U=","Jl3f4SfdUb1yOTR7dY8KEyDrLMdFCswdrUf4DI3PNNY=","GZdQ7EcvGAng9mpUXh5RYkEIrIRQFcKqPfw2urSX2Ko=","FX/z/mWscggRDwal90MCsU10PqJQZ/D/0DL3h8fxzfg=","LknEPEVp3Zxf01rEX8oz8QsVxZBpL4vu/hj0iWrJSQI=","DjX7iZgYkFINSu8rbWUGw8svC2lzwk+oJzE0X/otHx4=","JRrUfLFcTxEF8QmuXpRPG6nZ54BtZn/+xv5yMALguZY=","E9oH3GTUKDaYc+lxYCNGQfi+tW/dBeXzVj+jnZwi304=","DACbhOZQ5tI9wAx9zO90g6VTk5aJ01DNRue4kFX9Rzg=","AR8WscY6hU8BmS45VvQtiwTrZQxtU16wID3sdL79ygY=","DtaeXjg6aI8gnZpWHap5YS8/eNBGetRUhd8HCT82dUk=","BNupSnsM6eIhrK1BRytrvjrsUH9es9M/RjZyJkyfeJs=","Cj8mN9hA86FusJQnHJ0je2A2dX1LtQv3znMv8dT6KOg=","JZpmbxKe6hmPihxQL9s4+jmx8HVWlWS25UpIXRGCMj8=","KL90Wcmy9MbY59BqTuOkf3dF1CcQOOUVejL99+3g1qE=","ChypQfBXA3Um6iAPSJvo1MN8hbvM5qKu7JG9aUFDJEc=","DG+PlYvg6TBT1/1PxUUShVU17RU58FHctDom/ZJjYc8=","EjEGqTzRdXjUJugSisnZCqnooAcI4pbghN1X5pyq+BE=","JuG6Uq2Shdl906tS+OhACF6PqD/x6PGHewdIZ80t7nU=","HLVcrXvRM94YpkxcR7nJfL5Ni3v54JWGRHFTfmpK4sU=","Hc1z5GrNj44OLHzgS95/bSpTBD1QYKQccUPwjm6QVdA=","ARAD4y9tnGb1hS8FR0pN7wzaKUoOtOm5sSubtFEuVXQ=","Kx6AmsHRCrKa1fINA6V9/rrf5ZA/WLr+18UI3SKHrow=","JTneF4W3NZmftNrDXuF+0O+ZXQWrL8X66qaa6HvOwKU=","DCRsWi747gEmSX8iKz4KDvThw9QchtRuQ5gssR13lR0=","GSCJxJdPaOlUCBSPfAYy7bsJ5qatGhwvPwMF9dA7Uns=","Hq4K2KtosvBqDuNu6w0MBYUpCX2RCWt1bY/cL7WmDYU=","F5GQ5dDiIXnkb4KChyq8iNtuL9wN7pnml2i9mMXQa/s=","KbueLJB2cyV26agcesS4MhRSj32wDzG/bK/nlKmzzRw=","Il05TkIgdZlAPv0MJGSpDVJlJkWIKqw1sQ5ZDm5pHgg=","BkdgYjwlyM91PSOAVbREUyvhNVdFHAh94J79RUsj/Vk=","ELo6DgHfkuh/MBxLcW2KOU1n9L9Cp1wQkikQp49rW4c=","DgcL9T+EUbJPnG6WsMKoActRG8DCQuudNht3aT8hRxw=","G5TNYbBRsE3Tl1X/k4Iac8zWyxHSSR2Kp/khAU3iUvs=","HXyzm6+4x0ThSHh6LnAjD51OkX1XE7sFBIe1qn10Bws=","Lskxib0atPaRF9D+mAyA/4eFwpYYKfcBu3SsHzA7F9s=","LbNmv9020nemkruCW4YnW+rEBKGa4HqQgupGvYNReSY=","BiEA60hdsGJpZVzxhqaFMphSdUKEUDWa3JnOxpYHEbg=","B2HTPGZhSqpXDn8egkTKESAkP5L6WeT5AMVnv0H1pZs=","IPxBGhFNE5ksJwWqA04/MV14YIoPfeTM96cuSUhVrQ0=","JbXABKS9/LWt2exOmrIZuhAsZ+iz7/tfw6MPMXJQvFo=","I7GCLSeO1jKklOWPbfb17QOLGG2EdBVa2H59/2Kzf0s=","InNLTFw/lJNgbEupASSZvw8U0Tv8/MyqFhAqKcwvaeA=","JsDI/gnrMLfienTcM0kjR+W9/0Cao2ECVEE9P615XOU=","Bw3QzLa9e7rojqwD+h+7Jhlr4wg6gJgpu9Ym3zSMytk=","ErZZW9sym2+wQ7p4uyjDvsLApt5G2MWtYGfE6/1CUNo=","JI2X1/dig9Y77DDnpYdsEcBvypsnXGccXjPZW7fo1yk=","GjBtQ51GOwgW/G/WTMk5MYtF63Wd3eSqEG0V2b2bqqo=","KKj4Ny48ONrO18AEIctGIfTxtU3cJ4IbDWLT1ux8Vs8=","AJSXVxf5qKi7NRUvJNQylAcc4yDIKfOIvIUhg+Hizn4=","BNXuTDqnj32A/eYNcWSA01k/dNT2U66D9BAyRtsujWU=","Kmz16aoD1DNjSa1vuO0iace+9UuIIsx20ISVwS794Yc=","IwTTHqq5YLqSdNpD4Z3et/eSGAgI/W5Duq5I1+/Lo/M=","A/2ayGWksqbV5wCXhYFySb/win4HJvy04cEdOdGZ8LA=","ALclje1Su9oiSEBNVe5QRHmK/DogkZMHP3lU1NY7C2Q=","FZ+BraB3F5nsOPyi1L9l67E9OnTzKY2zYnLFymXpLZo=","HvkOZ0N/vIVQI3p1vCjju5AAEw6iXwxUceFEz0JkQx8=","HmX4OFFeX/AZa0mqQaLSVo33ObwXawjslaee2Cky4w0=","KxsEXe86FmzsbOdo0Hm6dLGMhE5XDh+CZXXBBoyUwz8=","CDLldTzrD/ZAJUOxEJIpwWXcLXO+9xXj8cbgfBaLsXM=","AvYU6c7fs9xrdirgo31BurG4QcLotkUbxajjw5C2rRY=","DiQn04vUamDdZAuONiytlnNw67d3vt/0D2oL4n5+1wU=","BJNjC3xnC23rfITUFOfOeQSfDsCYw8fFB2i74pIUpTo=","IurRAOjkgmdN7NqxcGbFomuxUVNV1UYaPcBsyFMnzqk=","JbPlbmVbQs2q4mJu0lVNSFg/GuNWJtBN5QhOC20qbxY=","HjJ1KtqINu9YN6bN6P8T27WZwzY0nkxYS0/cCgz2+dA=","L6KoccFaOHzFD2j288NFWyPACZXwUHj2cqmGQHTUEuU=","L1abippEJMknjh23MR6In1TMvxBmG6t/zRjnx6fYNQU=","BEy0VREKj91TGt5TAjTFGKffk/czL/0hRBZTdLJGtD0=","IngI3pOQbV1CAkYVfy5CsZH+jJCt/hGBeN3HI6UxkCU=","AvzKKTTgRrxiOt6thzV5hl0DeBrgkK1KhXnS56aAA1U=","DvkV8KwSC4dqvMzrNEodNrrT88Wrkajdy+wuBg2L76w=","F5cTD0t6Phd363V7xvKH9qsPuF9r5jsJ87Fu8rFAXTg=","CnYiXcBBcK4zBshaurWeYIx/SXwgFW1NNsZoVV3sxuU=","H/+57BmS1muh53p7kyCa9vj6dtSKy2ZHlhdLUyajGlw=","JXIcT8FaPyhTtXwzj6U42F+Pu6bGucYJBhGIm3l7nF8=","DIF/1C1fekEhXj0HuhlyFq20w3kHBdqV62O5gr/K91o=","E6vj9SOZFdOffhPCwklwtt+M+GzgCiIAK8FYZuUrWpY=","IQb+6lRiJOoS7385mHpGyFwbw9wpvb16ks1grLTTkc4=","IcqFlGinRraqp5R0o32rSfHKWijHSLxxV+GzNFuw+Vk=","BczWJVwebwxc8fDfk0GUxikR0U0DIWYqjxpImZ40GFs=","Dw40pktwpibkZNhGZ0xMiBbE+yZ/5E/m6ihnjLCUkKQ=","BVhTGk4lRwxhV3lMo20Olkfb/P41DWSDj1saii3g1L8=","CdPcqRc+0vrO6hJRV2g9GJJMra0/ZVpgty9YZJYfFFU=","AyjL1U6MCRNJP4Zu0D0hi/I/ktaKrsSGF9THIuW9QzU=","K/ByFuKv8KIjpIexpwlOB+eee8yXmMZI7jNH3VMp00s=","Ha80WlgAa3NkmcWDy3bDFtb3jtam3/yCER4Rpj/kEt8=","F2VjRyRWqqdGtpTGDhgjYR7zkDmy7cf/OR5vIpPSxAQ=","LvHg+tnwjoeju15H1+M1OMqWTSt9EIPU+wIlA1vT+Ns=","ImybGvlbq88XsrH1fHMQF5wYA97Fro8KF3ntNsgXrio=","FLzjVJzD23QoEmtMOhWuD/gUjInxP7NdNXNOtdStDe8=","Lev/FW4na7V0LDNz8mNbSLjpI9MB83L45VDP1ANCEsc=","LUCDz1qH9bb8I5WyLjVrZEGv4baynEet19BDLR1HYMc=","DCJbe80Ev5w0uREmL9ycG5G/eaEMAYTYnDF8U9cWHCk=","AxUhadTz0G7DOnm/rJGgLJmqAgDbZtWqe4NSZfnJyPM=","C2GBGpIQvniwWXRYdIbVi93I9Rv9/ru4ev6LeqfTGZw=","ID4ADK0pjar366alxZIYeLiuSKz3BI8WBG1jelM7b3g=","GkS/CTfHItE3ZnK2n2yWVbp+44b9oREsB1cUPRv6kUY=","A3a0+uCMsD01AK/sGh9WrLjg/edaIQbXAC9ZxWEdTao=","AHgK8socrWRlohcSUP38Mtb8JB0yFBd/PVU+82MYIYU=","EHdNmrgMJb3rgIvt/XKo2bddvhjVIhyH6dhXB5vcMdU=","ENxunABuo4sEseA7S9lJDA0D+Ykpyh1/tWgh/RnTtug=","AFRLgzh5FRiyx2RaUDknmLIfdbtg41lhcAZ9ABQcrBY=","IiwBF1cYOG8uLoLrEieJ41LhBaO4+oUmE7xTRDPuQow=","KEDQRem8IrJZz7iBGx4PRbd/e9t/fitGFRoUMPYI48U=","BidS+G7r4RoAnJN+RowzWwRVRXTCmQGWUI4B+lhgGGs=","BgQb2sSCBayHrbh8IKR4pxyZUMEqgLwKVajoPqrwR0Y=","BKUz8jbEItH/kAo2iUmwAix6KuCS8wjYKx3Lv1H1AA0=","E+MdemcjL9gR1qlVs9TyXf4GbR59wz3wS95QorLQWyo=","ARwmg66R6037wT1jV+hZmpJ50WSP8sldL3mQW7E5IPE=","Cw0hk0a4V0UlsaJw4LTLpdVsko4+LCvQoeyu0BWq9q4=","FKveyNucbclwKR7mOGkCCbZQgHge+f0T2Ex6cmtfE2Q=","GgtwtLJv3Cj80yqj0mZHiAHrEiAu9HztmI0DdmEL4QY=","J4VDch+W0TB7aUP5gE5/5WQB3rLvmcTRJwSILnJ4tgc=","FutZSUqXds9XhmIU29FHPz8HOKMlY42Lo2U14BHVglk=","JWemWKgf+0RPJACI+lUkxpqeU+6ra3+MQcNHnc+MZEo=","KaodfBUemtCnqznxq9nPd6t44CFaVxWmuIKt6EC7E9g=","FcCRIz5g7+DUu/zis2QVAGpPAX+ahTiM4ga5H5nyyYQ=","Fr19Iv+Fjl4IgsLJmVWNd+dnOtXxkV+f62eagRXwFM8=","AttQSAoHvg6ywuE+1u9AdMAYLZtmi44I/+Z2klAEICU=","BeSiIOajvJ97aAbsnWzboYYzDvK/ettME7qGY0O3MRk=","HdoF68MBcLyYy/Kl7jtQ6LX3C8Qk05+kEE038cvPekI=","AYS+9yGIgYf2Rbb+42Z/PJHaIUQU2JulzTAfIrDeiZA=","FJijB+aJAAZfXoJ29irvHDdBS4RJThV3rRptZDQbeOw=","JfQPgrMdrMT0k5gAudLD6s73N7j6sfhk/jNUitRr1J0=","CdMXzGcCUZQ/b1hiow0uqegwVs5JB7+7yx/zHOW7llA=","L3fXd4bZebI7pM5KTBs70KQRMs1GeoarKbkTts8xSdA=","D1Pa/VNan0Rz3CZrb8zGhBu9M2lj8lTBUvieeF9ym78=","JcH9cuIjBFJlw6CZ4XUm+g5pduHAC68W3pbehd7vL6I=","KpAsiYDBf6rjaNOF1S0WvkGvlchOrqPPiT5l1s5Kj2I=","HOFYCjRS7PMCh4yJdrgr6WZ23RFNHcjSVSdAV2L4NSk=","JKYHP5Gt3DOkmh+jBt8AiAHF7FaWCQNNL8UPfw9NAFY=","JeUtvWEkUw2fwn/jBtcdRYPgfKVUtdFXfyVsaLC+K3Q=","I9/648Qj+nqTRo28z7AphVl0vk0KeymUZ5blts1w8V0=","BjQto3DMDYxJt3WU9rAnxIBhXVC+NiQ6mVkbyZJO1vU=","J1QRQoEoZUa3XwnxFfx1G0d4MD0EBcG0zH3w2On2OSU=","FcGehTTFwaiGLCvB0Rnt3qvyFBU4M9e9tZ7hl/gYfPU=","Jl/gYnZtCPq0x40NnvPKvjZvO+CoIQYWebSz0td9Xz4=","E8z2idZ6PsnyLLfNCsOjJ9N3rFzQFG8Ejev9CY0+x74=","F2YvdFZ4lzn4HNOXSCeoh9kqXgW98/5rn7zMpFJKrr0=","IbKcdjKbMcjvGGMeUV9/L4LKalzKcM7k6An9YkvnrV0=","GBN0eDgqrbpEHrl/4nkBmJwGc4FlIVMZk56xewH6l1w=","K8B+or+taOjcck9f7ys3wtNPdhk1/9O3Oc7sRmjzfog=","LdsuN29U1kpWOEBIDfmT/rQXMgPCvZStDmAgd675oD4=","J361DyuqcGEGtByyTGAmCeiiD41y9hNwitslNzWWw/c=","DU3kfhq6NCadDGIJBPAaVrM/xLRQwNtQu3+Hc0yaH+U=","C4RCv+nkobRChnO2vT7qb59EVpcFjxNKrpCNAnminww=","Ef5bGPu+oahuBpMMuJ99SibhhqZZRelldCR/3bcg+PU=","IkAm9t+vceJNJdj22fkAId9bd03K1NiDFw5K2JwzoNY=","CyymqZn+aIfgcE2tWNA0ZalryeN9EJH2G8n5xiu+uCQ=","Ihtj1m8LRfnUDFQFOiigax0KTOQdNkeXoafgyWUp9CE=","MBhcSLey8dU9QSCAGwR9CHSTvOZNTSSu3OL0g2u4StQ=","I/XTcqPw48upieIjBWIn01MzVvD6pI8n+CZzGGMqYfA=","JxZoOzLHVf0b+CNeoWKx84jh4AkNBhYujm375DKPPjs=","CXdUWDaGb6IEyh2FPsCQnj0UB3DICsZ9yTDGl0jV1Lw=","FETo9ZK9v9gCXZGrSYLdQl9RaC0xRysF6BxDwPlDSzE=","JuBLZenKgnC+t0ocXLj+6L4/+/5YP3ASoA+HTncY++M=","IqXC+oYNEf407kelzZ+GmAD0j0/r4prW32mBb7GpFNI=","F0tU2ZB9j1xq/Wcqc49Cc37DOPOglkxin3R03UTFyNc=","HbHbiqRSg/MRaPpmaUzygI0hibh8jIFD1WyHGQezm4c=","FTC/D0ZSfoiQMLjHt9/eEm9l+vjM4KtmOHNB2BPRv9E=","C3P2E5kyKfWfAcHOyHYOmTbq2e3I8oFIiTMKLyut5Fc=","KcJaIv4hZGBFUqrqN39EjVh6uXf8gid4e9LcDza89B4=","KzDVPtF1m/uFA9pmySz0B3q+gnldwnKzd99X13yHVSY=","EvbXA7VwKqt7e35pNZ1TonVsCMhe3nInz18KKRZ4fNI=","JSDhgwCv2j9hpAoLiDcpOlWtAQcQKNSEH/qaxwY2QRM=","Hsna6oYJcezdqO1PNG+pZ6ybxZJ4J3OTxo8J+gO4uV8=","Cpmz4XjbLi5DL1zVvvj+RIO/XL9w7UB8CKriS4MK1yU=","B82p5j22458Ia4m2AcK75AfuCrrDyBehMXq618V3hJI=","CMnGWk+VXolS1XGxkbsK20m9gpCWMgOzXUiqs4+Pw6M=","Jzf4zh1aZ7NJWQ3b+9cJ7Zr1Sio/JxnTOAHJwXvdnJ4=","EEmmxl/wGfDSh3AHJ5jot5CUMr0MEpgTqfF5umJ/fWo=","GLT+locyxGLA6lqb6yfOy96IaJRP32TuYKUSI2Ha7ds=","L/K2/SLfSdJECy6u7vqMAqb0eM/PEfGypPdHNIOIXRk=","LsXy8ZKP6TLlbHibj2u8s+i+QFfL2NvRihs1L1zvQv8=","JlpezNi5KXXjOtn3W/NCbUJKTGp3lO4/CMHRADeOVF4=","JAXqpMC94RKdYkK7WtoOaHeOZWz8s2a/IFF9od/UJ5w=","CUyX2MGUxC6IAYAEy78rxf21GVXYstZrdt2Yotv2BBc=","LDDV8zuzLFwiuZeaYFv2TVCLcFIh5qaGMwyWJcKv4Lg=","AadWZvYkH2gl0BzG3LFiLUiG6lg+hymeaqL8cW/bbPU=","CjKQ6DmBE+pNEqwJHoe+fG01mrmmaXn89Hvy6H04L8s=","FUrenKNuJo3+s4RhQluw2MMSGdj6Dfx17NIb9pqgzHQ=","J6qNPiU4DAsbFy15xvIu7pkjHvXcadjcE6S1CV0Ch3I=","LPQFHmyrSDAaiy47ymCZ11a730ha+h9UnTlbvL2AZGE=","MB5w9ynzyUsdP1F93/nyAVEx/quK+l7rsIQ9f4SyPnE=","KYvrZPgS0l2LTZYgNHqwIzLcTO8ROuYNF6jXpMkfg7w=","GzYucqX4R/hNA/0pHDxHHtHBShWyIWgKzxGj8C5GqpU=","DciiFGEQwLN1QykCmZIj1aoe9ueOHl68vB2bpB3Bxzc=","CkhmOzTOXhwF3JMJLLaXeMshcppy3cA6CK+h65Iv8nk=","Coc5H7HNjN9glrZKgvnpXw/kbxQ7cC10VFuzFIgQmO4=","G1spRvfCiXXwUS/45so2L4gm7dfqnCnzgrqKKgiS/V0=","AQAc9RKsJB1H6+Ijkhm8ahc6i7y4pbmHtOrB9TMxW2s=","L9l3xw9kXbT3BPp9dpPacnrAk9P7X1/rxyvrF9g1ijI=","I8ADmj+rStPC18xogWTznnYdU1XAVETZm+djqXeTqcQ=","GdQ+4MYIHAUsnA32Fh6qwa7DVs9DWIjnnyfyL/A/ol0=","LZsQwvLnrBr93M/9lKVjAovym2RtAggwkZ+dXKHO/lk=","JFfKbC8qow7Efkr/Wmb1zieZKD4Wb8gc2uLyufg+Qmc=","Crw5L+he2oVYIFkkRQlAIoEe6Gdu1vDDBE37VKfBCzU=","GdLMXKVJ0dQM68038+pU8xFhrDmTrPMQHSwrww6sHrA=","D5euMDP/oBYIqvsmrhPNOT7g5OwEG6ZEo9OrVG6Yycg=","FtvHj9KLf7gmDkBM8dQnp/oVU36k4WjoihZkluiM/so=","JA+vKPEUmbkW8IX3O8TyLu+DROV2+K09GCeCA2bV4Hs=","Chuwdao3/wz+bIUx5V4XcOq6gIyP222/RvjKtY2e8a8=","LkfhXqSkf/GmqFOq86ZEyjjVsIWsEEL9xKcFp84In00=","Fm5b8HM3g0iGDKSpwJ054Wc6sFmTX03zX7FFKDdXcrY=","GLQtf/3S6k+vI1kC8FeidAyszNAnIzAB7RD5ZTjwkW8=","CJyxsDIjj15JFHiOPjx+rU/DaAILPtOCId6rEFHDdwI=","JCrNPrOi9yuvfHB23RZa34n5M5x7lxkh2ecIY0Ud2NE=","F0+7EEpO4wK/R/K9gvzolurJoGgoPzJkdK+GBFckXDs=","FzQOcdlvRm1h8wWM4JLGfSiR+yuzGGE/eAwnX+ERbGs=","Ho5ArIU7fULwDy44OYLQJPCYufj9RVlTov04DE339rI=","BSmJjcBkmQfh1NXihLjRB1GYxVytZuipv0D5KTji6WE=","IWJ1TbC6oDC/feW7eXNk3OjHeqAX7h179l8hxNTl348=","EsdVNpjEv2886yUK4AxYwqn5KR773kyEIb70R0F1LsY=","KSZD47ogJq/8uMUnkxO9UaczyTNT6dnHnLcjE2UmUI4=","AMzxPgy2+dgdUpUb6pkL1bbAfF2Y5m/3HbbnTVuH0Vg=","GF0eIOI7CRfdZUEozy86qrZyOHPLMPwisPhsFatkW0s=","FMYcg21V0990K98Rxg76GGd4494PAkwPE/5T+Nh2Th8=","DzVoQbP1Vvzl2+RoBFdpHCkZ4q9TAIGE0D7hGV1yRJ4=","G4/Z/zlxTgdd8ST4h79As4MUM3T9IIC6DAprbo+ls+g=","DoaowgCcFAyj+HOSTiqqFPw8iuBOnfCz6RA0GHlvYCQ=","LmxeiY9VR3cOVGKtky/N0jc/xDggyisWsIYUIeeRVcg=","BdeX8as2RyN8FPnR3wMryf+f4aDs03eXLOX9WgwBRgQ=","KaMRBGOlqudsPRUodZgdDB2vLc1lUZ71yokphR2owAg=","KXTae8B0MiJzw6S5HAU1TNxxZAqLvR+GS3MvgWOIMxQ=","HtD7BmmbokmyowYhwF6xLKKcuRqggsi/zOnFIoibR9w=","HHk+8NzFESNlT/JtjYY/7q4p6MVy7KkS2AyK425A/ps=","HmqsHG090xV5ViV9PSNO8YyR6CWJp4Fp+7Sodwl33C8=","GiCtp1diNO7mJz3W+piyXtA3dICApH2Uj82jMlb7a/U=","GRAz1thc6qb8epojpv2ZlmQtdyBF7OUTNdSTBnKK+Ww=","AG5Zedp+fvU6glqm/dw6v8dvIAs3QLiyMu9IH10GKXs=","Cw1+acZRkQu+8+aNQX6foPvVf1lsjymDHv+MAXTNsG0=","Jcr1sMG5O8UWQ17AhOLs1ErEbbuwM8URLEsgolyc350=","EsHqiSzDHg2a+LeW2WRYcvf3dELWL9TICFsvFQ9yRyo=","Fq8paVFXq6m4u+Ov6yRf7uWpKdn5KLm4Heba3HjDKq4=","ATbfRXyAWI3Wh/svO+GGkXBbh+xaTP3BaNMQhCVrZ9w=","FjmijFtMgRZq6phPum5xR54Hse+8dENNuVooUGDnsIk=","A9Yvv4L9HUMT+OZQ9YfsBoFsKLcAvcUPfiMr2bXKm3Y=","Ea7rUn3IzkS00Uqt3KPP4vd6HkD8bal8JJgw3h7f3lQ=","E/m5pBJ0EpR5xeYTjGyO42pnDmvGjHpJZCtkWAe/yCQ=","Dkdy+j11F53ISEzSbHwfY13e7tepOUQMUGyui3680Vs=","GzmgDLyB5CfeS97Fj+vo2LWXF1IGemErOfxGpoxdTbQ=","K+22bhrVodVx4W4pU/SHMfZkY8LrVKJFRE0cCjolcH4=","LPCgmlXKk6+KvQaPBqcof7CLGTtghYKic3nONdqRXew=","LRvXj6kOd6qIgwyr/vL40n0aUSBQun2wdTyPuGPvs4c=","BlYQxvT5JJH0I9MHHrg1OffA1JwThwYuYw1/0oPcM5Q=","LZM/8ZIXpVRQE7Eoc0Ur68xfmWkDPxXsZC+0ZL1gc2g=","GqnT/kxkSRD3a5Kz4Tsw1QDa5TVOeVCMPEnIqpngJYs=","An7wSGnkgrHHSGOMWREcaycJX6dz4aygeM6h8chFC90=","K31STFFyy7sV204AZoqMRJ9nomBdnsA4AuP6E2rQuPs=","DHw4JEPGqnh8hxjYZ0fH90aTriWx5V3xP3w8Hdc12w8=","ALRWcYa8P3xip7Vqz092IHofQ8LTDQ/kpifc3ZvXkHg=","HkH8KbglRU/m1hc3/gi0f7B/5znkweYdAzdJCIPbT9U=","ElB81Va3u8xy7m2vxhZYRCHhr4ctjA6JACro07oGU7Y=","E9Q3CDVTAGvO8xLl5vUqXZfrNmF+82/k130+l/cctds=","Fj7HMlH4VENociJIfdqaZUZ9kLIvCzhmRoYHfGpEhtU="],M:[["I20TOT74XMSKNR3Xht16HeXjmUIpYSf9h5RyI65RCK0=","J3aGSU92RLvEqbGU4Qck65Z/HcWHGOWePO3IIbKnrhk=","Aj22h4Tj8MwLhWGIJqmzUFEpwWR5lzsKhKRSnmawnGI=","HTWdJF8obBLVDWY7rnM/l4rwjNvWMBfFezp1ZG/zgsE="],["KnWhcVY7gH21Jb4llpmrKP6bx/sfcJQ/8Em8lw6EGgw=","CDq/9eEAUfB44oJ9CS4a6Ai03T4VzMNwbzjOQVe2dw4=","GlrXG7vs2Kl9xJz9uuMDrSTVxHQeq4t1aKn/glOh628=","DXRf0A3RZ/uGdyEzZA8CzpRQBKe8LFnoeQ9yXF2E8K8="],["IHBnnnmHgu9ZKlLKnO+CDUl60u7Lqn5C82az5SHE7UI=","LhjIVw0gv134AHOaU9p12Qbs4xjNIkq2s6K+l54tfqs=","D6hvDyfk091/M2fOhvaE8fLkOG0+W584+ig8aqcjtgg=","A/Pm+reR8WYoFo5LFNuutlcDXuPaayyoPwwkkeC0A+s="],["L1ReV4ICyXMkiFQOQfeDto/wYT/Xk3X4uos9MJWOdnc=","I4EL+Ch3/Bm/9+7+rj+vS7gQTDK6TNcBWWoVYj0BR24=","AU/NXrC+bVvur8SUQDTPMhwGjvkw8QviIH7VjSo0zdY=","AMFfw6HVcz3YNerggj43f4ukqLYnYnzCu2YcJdIPtSo="]]};return Uo.default=a,Uo}var sd;function OL(){if(sd)return Qa;sd=1,Object.defineProperty(Qa,"__esModule",{value:!0}),Qa.poseidon3=o;var a=n(ln()),t=n(un()),e=n(PL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Qa}var Ka={},Go={},rd;function DL(){if(rd)return Go;rd=1,Object.defineProperty(Go,"__esModule",{value:!0}),Go.default=void 0;var a={C:["DrVE/uKBXdp/U+KcysmO19iJu069R8OGTzwr2BptqJE=","BVTXNjFbhmLwL9un3XN/vKGXrrEupkcTunM/KEdRKMs=","L4O53yWbK2i810gFYwfDd1SQffDA+wA19Qh8WNXowtQ=","LKcOLo1/OaEkR6yDBSRRtGHxX4tBp17zGRUgj1q6loM=","HLX5MZvmpF6RsE1yIicclJlBlvEu0ixdTscZy4Ps/qk=","LrT5nGn5Zuv4pCGS3n/2FiHHu0e5N1DCueoI0YRGwSI=","Ikoo5aNThafFGYFp5AXZ6g/H2ouT7hO21ffQmeKZUg4=","D3QRtGXmAO7Yr91q/KScMDbzPsvZoPl4I3lrmTu9gvc=","D50NWq0slVWivnFQOS2NmBmyCK4zcPmaBib5/12Q5OM=","HpqW3IKSu1lvUqWVONMpIpcyslJZz3RLahLTBwLW+6A=","CHgFFMzZA4CIfVeMRVVeWTz+Uuq0uUXGws1NUo+z/jw=","JySY/O1obHrIFJ+j9z74ws7WRxfjVW1aWfEZ1inMtfw=","Ae+PndfJOqxLfLgJML0G60W9NQr/WF8Q49Dvingu998=","BFufWbZZXmFNwI8iK0abE46IbmS/PECql+oK51STTTA=","CsHpHFfZ2pGf1vWdKkD/jqPkHiTiR6OHrfJYQpXWHGY=","AooWIalAVLDH+aQhNTzYnQ/WcGGu6Zl50S5o8E5i0TQ=","JrQYAsBx6kyWMmR+0FkjblDBnD+zyW0J0CquKg3Nnbw=","L7XdqAcrtyy6rC9j5GghXgXJ3gZ1jbapSvNDhK7bRis=","IhLToPX8yvJE/zVH/YIySa2KuLoqGNOD3QXFbuiU2FA=","GwQa1bLwaEJY5N+u6gm+VqMnb9sZ9EwBXNDH7tRl4uM=","CgF3a7IvS2uOzP8z52/e0xRPt+OsFOhGqR5kr7FQDv8=","K3tWdKrsw8vzTT8nUGbVSaTzOujBXPgn95NkQIEKzkM=","KdKZuAzUSJ5M91d57VS0jGCwQiV7ePwATBuAM4Gjvf0=","HEaDHZp0UpNXZBwhnXIadKQnEQAyteHdGd3jBCS+QB4=","BtdibJU8y3LzcUHcNNV44DYpbAZXZ0+Ac5rh2IPpEmk=","KP/dyG8YwTbFQAJ0jgxBDtxcRAowIs2WDxCMcc2ikww=","Lmf37l5KopX4Xe7QnkALF75n8bftKratuOwGGfb7xek=","Js44+mNskGMOl/JRFKeaLcpWhZ73WeU856vyLCToDyc=","Lm4Hw8lb98NN16AdAKf/7ELLPRah9ychr6y0xM/TXbE=","KqdPdZfwyfRfkdeWHDpU+4iQ0nZhLhJGOEsUcNok2Mw=","KH1oGkai+q4sfAkPZoq0W4pxMTwVCRg+LsDKY5t/c/4=","ISvRnfgS6q70pAYAUo89faXTEG/1Zao7EeKfMwXnPAQ=","EVT3z1GRhr8ar7FLNQ64YPl/2XQJJtq5OAnChARxNQQ=","Hf9jhcsx8cJGN4EKS9Gxb79RUpBb42WD2nR+eWYfwgc=","DkRFgtIrTnbAgdNMRMGOQkARo01UdiUoY+o8YGtVHlw=","AyPJ5DO6ZsSrq2Y4Mo8C8YFXc+nChGMj/3LTqrfk7/g=","EnRrvXF5EFkZO7p5zexEjyW4zwAnQBEttw8saHapwp0=","EXO30RLCp5j9m503UYQsddRmyDfPUNc+/QSetEOKIkA=","E9UcEJChrUh20eVV1/7RPajlcTslAm6+X9tICHAyQ9o=","AIdME0SkrVH/jct8vS2XQ8tydD8DlO/n9KWOvrlWuqE=","It8iExqquFhlziNrB/JE+g7qSNNUbpfWoypWIHT+8I8=","C/lk0tvSW5CHCLQ3pEX8PphFJKWRAebBi/XrBakZ8VU=","CbGNm5F6VbyjAr4ffxgeDmQLnXOpqymMabQ1tfxQLzI=","CU9VNERPrjakv8HVvz3AW/u7xwpjZTZt1nRaUGconkM=","KZm6saXyUhBRn6ZiKvU6FaPiQMDaVwHLeE/dwNwj8B8=","L2iYwHWB9jccqU23NxDogIQwG86Kk9E2aVdaEbA6PSM=","ByaOqroIvBnsFtfhMYpHQFZd6x6OV0L4YhdLGmhm/Ms=","GGJ5sANFTbATOf93ETvJ62JgPgeOHGaJpslYLEGgUp8=","GKP3NlCRl9bkkVvdBNPl3bZ+LMXemiJ1B2jlUkc3Fyw=","CiH6GYjPONh3zB4u0kyAjHJeLUvLLToAe1mHuHCFZx0=","FbKFy+JsRn8fr172pkYlIoMowYSixDvACzahNeeF+6I=","FktwYsRnHPCMCLjD+YBtVgt3dbfJAvV4jNKN4+d58WE=","CJC6CBmsCm+G2YZf5+UO82HGHT1DtuZdeiT2USSbqnA=","L76k1l1+1CWkJxLlpyHk6qYnrFyw64eMzC7grtVD6SI=","BJK/ODw2+lVUAwOjtTb4XntwpY6FSrm5ED1/Xzeauqo=","Bekf6UTpRBBOICUcVlFC1h1hhanOhWdfapadViktwk4=","Ev5cICnksziT1GPLBBrK0JlbliHm5Jw7fjgKduNubBw=","AkFUrfAlXUeVj3cjkhR0Ex8mKfrciUlpBs0B3G+geE4=","GIJKCeavr0o27SRiqGvQuteYgVZE8rveiBPBNFekVVA=","DItILboK1Rvp8lXeDD293d+EpjCvaNULuwaYPj1dWKU=","FzJf0KtjWHE2PgoWZ9O2fFpPpn/Naq+GRBOSh4/bBeY=","BQrpX20vFRkSL1r2e2kPMeVQdz+o0Yv3HMbQ6RH6QC4=","Dw0Tmg6B6UMDjLKI1iY2dku7YpXwdWmIV3HshO3FDEA=","HA+Gl3lWic33D9LywPk9Gnmznrx6GxxUnbvKe450fNY=","K9D5QK2Ta3ltK8LgSLyXnkm+I6SxNZj5/lNqFtwdgeY=","J+sb4nycTpNHeMCaAFMzf6BuuydeCW0WfOVNHpbuYss=","LkiJ2DCmflqPlr3TFVp8oyhPvTB9H3Gw8VG+YlSOKuo=","GT/j2wq0fTxdLsXpxb2Zg8mJHyytwWXbYGS75vzB4wU=","K/MIbpbDbHvOQVkHrQxA7W6WYcAJZ55ON8sTAnyD5SU=","EvFuLebUrUapjNtpfGytXdXn5BP3Qczyn/LqSG5Zuyg=","KnIUfSMBGfOgJi42U93RnzPz1dbsbEvwrZGbA0O5LS8=","Ib4OLEv9ZOVtxH+VeAbcXwotm8wmQS4pd995rMELqXQ=","Di1+HclG1wsnSaO1Q2eyWnG4T7kRqleuE3/UtsIbREo=","Jmf3+1pPoSRhcKdF2KQYjMMa2w6uMyXcnz8H1LkrPi4=","LMxvQx+3QAcwp4O2YGRpehVQwSsI3+tygw4QfaeONAU=","CIiKlPxaLKNPAgFGJCAAH65tvunoygwkLsUGIeOObl0=","Apd7NO6qPLatQN1Cybb916DS++dTr4izas/NPMvFPyo=","EgzM4T0ot1z9b7bJ6hOmSL/P4Nfm/46WELXp+XHha5o=","CfrSJpxKjpPIHhuXcOoJjJJ4ekV1sr1zoL8q8y+G/zw=","AmCR/T1MRNUKSzEOSsbw+g3r23B3XuuK9jDP+2AJLW8=","KUBKorpWW3e7f7qd+2/DISVDzFavrWr8uQT9K8qJOZQ=","J0lHXDmarznU6HwlSGlbTvH/2GWQ4IJ95yATUbfIg/k=","CYyEIyJHn3I5kStQQkaFy6Lr4twuTacKx1V9q2X/oiI=","GM71gSIrZH4xI45X/q19XHWKzhTJPE2kAZHQwFO1GTY=","Exd4OcaKUIDU50Z0XkNxHTy8DKShCPmNY7KqaBaY3mA=","AgymlvUx5D7AiPVvS3QyVibMTfcSwOXwqQfYjl8N7/0=","JyMO7enMz8n6gFow/FSNtpPRNwjGRoQdFuAoOHx6wCI=","AWRZEcEZiwHWT940o0KheGSXwFlpoBVDkFfS/nW7KBw=","LDI/4WSBv0luQ5yINBziXxmJceFEhwVs/cpKRRpdhkM=","D8CC3+cHKOhFC9IHTD4i4bAiwSTTv/6LWviK5ttQhcg=","IFLBdIANsgnYzcpWjcwls76WQhFqxMd+/opIi0I1Ie4=","KOQg4Q3y+7WvltYh1VQjGQvjUc6BKQZajdn9BbPs6cA=","JWmMpeJKG3mfeDxEYqJNtlXWrhvazRy1SdbgvDrlBpo=","FgqZgaXImlfPj/v6V9UQSaKXthB0QirBNNm4V9aYTTU=","IckaOeFFw7w02baUuEPzv4t86/Wd27CgZGQrBpmX89Q=","GsjYDc1e6HbSsJNF7xEjRdbqoCnZPwO20Ql1Rh5Bc0w=","CrPmrQ7Pi458FmKkF0xSIl2CKJXidVVEuNvOpWV84Cw=","HGdRglEmIK4n47C5F7OiHKUu8+9ZCbThxbIjfL2rM3c=","LNvJmN/Xr/09lI0MhbrS4uN6Sj4Hp9ddDIqQkqwr7UU=","I7WEpW4hF7B3S/Z8wN7jMyQzc1Awnf+DPkkaEzu2Oy4=","Hp4rMQ9gup+MtzAwo8nSoQ0TO8a6TsEVLz0g3hRl6aU=","DgHjZbpbMDGrw+cgFArnRsmrXauYdSDEYLzU8fpbIts=","BAiEzc/GS/x7cSc0BJjVxEM4IBG2HJpLE4fYW8EmTmg=","GQse4SBeuVAMdKOZjyvqNjU/FyTWBn7QoKF94xHvlmg=","FkfHKuxsQ4jQT1L8I82cCMHfz2XOYeFl/CjR+DK9Oyw=","JDAAY0agFF95mIDMTIc2Jp9UlNiftIsChC5ZW3HkVB0=","F3uaCDQ5F+E2UQej2jrn9p2FOQK7FrrLMiGFAlK3V68=","BKQg5kKxGulOWIYqaPXjJgnNU9CuKUI0ObEdBGZt9Pg=","JdDg9zn7OfwQWoj6sK/YEN4kYYWOlWzMzfq+3baiXI8=","BEdtkbfv8v2FkFy/WGUe3DIMsVYQ6u1FLE1P+gx0Cic=","EJDAtos9fXuLycokGeuN6hwo9tXhJQy16XgP2coob64=","JTk847klbVBEinJcXHzVrTdvLUNYVcEOvyiZy1xmF74=","JZMcDHNx9PH8hi8wbm5YMO2CQ4jWuTQml9FE8Pq0ZjA=","I5bLUBcAu+bIKq1RsPt5z4pNNTGF1YCCA/c/Iq+/YvY=","JqNjSDNItYlU6nSKcSmnsKPckGjDzKe1s/DOA7hySIQ=","J8oQfKIE8qGNbxU1uSxUeMmbiTM0IV9rp6DltF/NaJc=","Jtoo/Al+13zkZiveMmsszqwV9zAReFgdjS0Cs7LZEFY=","BWqzUWkdi7NwPjBVBwrJzGVXdMG7NdV1cpcbpW7gy4k=","Jji1fyO3VK7HbRCaL0gao8IlR6Ef/FAVLXKa9jI3apA=","MEdUu4xX1gcy9JLCYFGE/cM+RqUyveyA6nvFUZ7efO8=","ANFyf4RX7gNRTxVbWAbL90jsaFf8VUAQdSrJOpt2Gaw=","AO4fPGb7wFxDuilaMDxy+rW8qGgF7JQZxYjlCUd2H6M=","Cvr63PW03UpKdrWh2CQV/RChn7z8WQeMYfkpfrZ12XI=","CyRJ85dGCF6GzkXo7tEI7mWiNINaCmpeqJltEk3QTQo=","IGsM4vGyxbfJ83sARSJwlfbG8HHsO92nan3fSCPdXdY=","D+uk+4eDTHy2luZ0M2KM1sr/w6TvIP6oUsfhApRZQJw=","JU2/rHTEmwuJJnUuCE4CUTsG8TFebXDhgXPpcjNuVdM=","Ct2xNyzuThZGVRaMNnVZ4ZYGxb0XkQrrN3Ge36DKh2I=","JrJbfiV/PpfHmQJPsBn2XGyk2NgbGuFiIaWJ1ogx11k=","CQmVt5rOwkBBO41MZYeH5aRle5qwC9tbGWCxBZ4RO6M=","CNvcLiHvEfLFcploeEPOo+sNjkDpkTH0KXQXjUT3O3s=","CeirpnFIEZdnn691Kg9440L+nEkVlqtnWPFwk5eFF58=","HesFGA6DPkVlkFKn66+BbH79Eqf57slLe8fGg/E2PVw=","GacOxr38kJipJu+8wEqp7iSJl+iywkrzNf1lI+UlCHk=","IddzZgra+4qHmYb5qrSJBWY1Ojd32KPx65Or4Qu/H2Q=","CfGJD3Lp3HE+ILpje4nV05emsB/NZnNH9vRmF4QcOQE=","Ba9Fk2HrRU0qMAxh5EaZjUj6H4l78hnWCMIUXDOxEcM=","D6Gh1oKfA0VmSmbcdaZXM18zbxXzQHVs+hL8hQzItRM=","AuR6NbzAw6C9oLHAMHrVQ/QoD8+H9jb4U2Vc+Xpii7A=","FPdz6YNMa964+Q54v0wktyA0EUYBEkkQNmIYlSBNDxI=","EC2Yz1Au2EMlXPGdKbx9jmQqvnz9Y5mS/7CRli/I98w=","BD3V9Kpadt1MR/bGXafKIyDUxzrTKUc4y6aGp+kTc8I=","IYM4GcMzcZSmwNKaSNTyZ28OfHl0OjBvTP2ysmvRHvo=","DygZJc9e5km0dKaBnRFso+tOyiRsMR7K3FMmKjz/K1M=","DT4kd6exC+tEcJx3RtaCTt9iXdYFBNXck85mLxXCONY=","LNf2Qb7b9mlW/4oBvpzeNdgPgKtR5ztJrL/D7/Wu/EQ=","KelbSSvy+V9NCTgPmLdOOJFJ0kBFgR16ht2GExBGPPg=","ItpmvGLo8BEmbvyoamyBD5rkxRr2/+tX+LPFDfg8wT4=","D+bTDeeoLRYwI0kXlPSsoyINt56BKd82QwcthBklVUo=","AFDoQqEpmQkSPEbv8YXCOtMS0D/vGt/sx+B+yymP1n8=","ITCjp7MiEiK+NMxTpC13M2Zvnd9xTtfFiFy722MQjCE=","LfnuKU7fmePY1Yg/4FZsJKpmcx80qTKA4dMo5nszyfo=","G/fW5ImtjAzybraMwh/1QVgTI5bcJQrrpLb8X8M3J2I=","DGAvoVW+lYdh6vc5YXqxNs97gHcov3/jXUd40xF4DlQ=","LlDixbNqogUyQH2GuNItfVFUCAokly+utj+vASHtfyE=","F8JRCYKntYJXENYpDsT3gvZ0mV7oQJtCtFkSOxgDMuE=","Cw1S8DyK9ydoA+zyRluIWyEze1OOq9L2sqslXzdrQqg=","D1Yz3xlyuUVZU9iKY/gGR6msd8bA+F1FYZct2Pq4vRQ=","Dr960pyhOAThQi6TloEVUSR4D/Q+dukpA1SYEwp/FXI=","Gv8TyBvaR+gLApYhc7ujQ+GPlL7ifIpXZhsRA6cg/+I=","IQRJ2/XPMGHaJGW+hVBYYtPzHeGjtY/zVxO+V++sbAc=","CIIwwnlOUMV9dc1tPHudvhnR4vHTABBEuTrRw+5imBc=","HECMJWSQsKHaCNxGQTjfx4zOmp4Wx3BWF6TW27IOfjo=","B0UX4IHrTB8i0XcSAPsHZY98d2VNWEQEkN1vVX6eOQM=","AtBOnCHfHb2IUkvbIDaRtM7lUwVZ1s8PoFrfYeEv3L8=","LregEbi86RCC4T69dd47WOubRlDa6fEaqB2zLPG2exM=","Lv2nftNfSvApn3XW6KhJtU0qxr+VNoME5gMMGPDPF7U=","CRmdyv1QzmQu3b7aZSBtT2GnPRCFK4EUxRskQBkq4GQ=","Joxc/ERtOZxN0xnbZmp1tctlXYwXl+n6dhgctCFuFWI=","IwOmUslJBxgmsOmjbIBXhpe0TpEszmaHAShU7aEaGNw=","J8U1Y7EqbuLD8EHzHcRZIrxTU+sRCGjSNwc/Tvs1+98=","EgGofq9K5hjwK9gtClEJBJlptSSM/pD0LCePImFdKw4=","LEMWlDn81p6tghSZe7Bpvsr8sbosUeVwbLS0PasqRD0=","BoNZcxU1kEDqA8RdaYTGiU9Gy7NtcC48T7mEfmME2UQ=","A1RXBnBuqzavuTsSj+vRb7BCXhWDFBl7d3la06eY0YM=","GjPCVOwRdhnTXx/AUbMXKHQL7SOmo3hw7bOTtxoMDms=","H/5paKRHDNVnsMACKByvmW6I9x51m4fm8zjlF/FpDHg=","D9ZuA7qICP/ssFnImf2A9BQN3V0qXESDEH9OAuNVs5M=","Jjq2nxO5ZvgZc5RVKQaxfmyGF6e91ddKe+M5a3/gE6s=","FqQl5H0REGJQVNWhZd5BPjvYfVqjlY/dbrfgPjm6QEY=","LcUQpHGewQytdS8DxnPw4lPMMdE+OekJ/MX3OvkTjZo=","JN+OjYVsW14b0crSPQfdo0I8UXkym3qCy0qnCalFduU=","K8yU/0/Dx2881caJFaBC6HYoJJoBsJVhvfJKbNzlYg8=","B2weiNxUDI2N5U40PffEKdMpX1LDjP/mtIvoaFLal98=","CbXyCaRRrEMcBR+xLZpeT+QO4WARIJR9qZD7jhLLRuE=","IF8XsNhyni6qiNakQTWmq2TpQk9VsPHqBoOvdetnfAc=","KBxcaIg29s+RJjjDi+BGzQkWgfCkF2FyDN0e358jcCk=","GgU+aHjpAPRfTWdEjEcc8wCaROegLqUOSvpE8lkmIfU=","EA3H1CbevjAH+3zqyE5PVGjvy4l+e77pgXQoOdWeBkw=","FwImcqAWqVe7h+LPrci3X7KJBb22LILICxyzG0EeScg=","EIbbfidg/ItxBTqH6+FRI5+4tUcYKxcN4MJyA/lU9NI=","FThP451ztjMCRgrkwpQvrCtB+2WhhVNvuF3ST9dYQGQ=","LrtZn+kTbUJL9KvFNCxsdEexqFMgX8+1UZ5VE1dwkAg=","G0teh8+5Jiz+w8DwVC5MWkzyeCkrTOPu2Zb6xvTTcog=","JGUFOuULaIWAHz+C4wLK+7tKdYG7T7pgtjf+vmWeUFc=","EU8y7c3qCc0JXFu1048bl9qfBeGLNwi/bgq509VIWe8=","K8cN/rK6qy9rOHzXe+d5rC5eVRnz0YEj7ijYwlQ8cUg=","Acm/eiA84it3XjphrX53tqeDSLn27GikEuSb/jLAVBU=","BRSw/lkJ6oh77bApX7vOw1XPtXX/apfNn0rQDMtX7ps=","Jnx27IGTTMgaEyqLBYkQoSCSUgsSogGvA+MgLXtsG34=","KRcOMyKz2NXHjIS6u7RwrfFiJJPOg+lc+xUc91e95dY=","AZ9qgSSxnjOvM+XThz+cM1xvCaRUhsq1Nt1ZbKQdlRk=","GQSqTWkIVEqLNI6dsZgcJwCe2OoXFRiuVAXQNiQrYOk=","JvF4c5Sbxnn38EOVZpTkIrPO4d6d1vZHO5MqR2RV/xo=","GsZo9hK4JDwZOzNyC4qlQEDEdgMRlxMevcrJsYvEj3U=","CZbZYadcDQcZba5Fv2JHZsz7+FVb6XltpS+BVo7wZj0=","AwyX4bjK0dT9UNG0OD++ZnTRcfmcY/67VCWzlcJPyBk=","BuOtakaQDi05UzcCVbaPibPlI/H+UCZC7iJvLYvQhI8=","HWs3VTMc0CFraIDkL5iA9WXLlLDgRVFToymJBYjMkW4=","KOTcukuW8SpZsEFTXnMKyMNRidwLhawDPdOMCLrlMfI=","CLYIYEaoNVCMz0hPKXS2prBxKkdiYDdsejs+S8SkehQ=","FizSyn/jtfFES87JeBIBm7b9hfumoFNqiWQ+Fbm7O1I=","KPHgO6rqm7wFr1sRk35PXLXJqcEZIGPRmYwBxk1IOnY=","G9sGJ3jXwV2jla8nNMJfqgEn0qq0qnE2YDGgu2eRzhA=","I3WDlQLgmJDLKRToKWJ+Dg/JiHCyMkqLUDKevdJHScs=","H6hmL7y2H7OtfFVmjclCOjMtyHz7LfRW6S0zYR7Xu1A=","Hk+tLdawpvH4cH9yFxbIpEbi+yxHpROPP3+XNgeddpQ=","IRJW0Wxyaf1t9vX83R+niLo70FAFn1PSYbD18Tcx/+c=","LkkISzNuzqpPjiouavCDGPQgYOV03aNB9KEHmxK8xaU=","DOGfVM3Dn38781GSrGgIIRrs6gjf4UyrdY0liR+wC7k=","ABHF1Ww5Dok8w5QiEmHYdI3GBFHkrk4chKhGi6ssFMs=","F9ef8GtjrCqKngXuavPbt8pg4Xv6ObR1FKjNgFFXm0w=","GafTpEbLU5PcdFYAk1krBrGos1zWQWouyrABc2OQFfo=","AwwAoJM9zboqgIsuG5KC8zHwRZbYko2nqmw8lyNwN6Y=","Fry0R84tUPOuJa0IBpU4LpNdLQAYTErMk3C+iqtkE5w=","EjQbRrAVCqJepOyHFTEpl+YhJPN8q3ttOSVbfNZv6x0=","DobRORf0QFC3Kpeyv2EMhAAvwo4pbRBE3IkhLbakn/Q=","CObrQInTfWbTV+ALU9fzDRBSoYH48usU0FkCWxEMcmI=","LqEjhWJF9shHONFd0UgaDAQVzLNRoeDO4QxIzpfKexg=","LcpysuvKuMI0RuADMLFjEEGVeJAlQTq/Zk2w+chN+m8=","Bv+e1Q0yfoRjMp9YXskks/L2tCNfA2+kxkomy9Qrams=","JGoQt+PgCJlH98m9o9VN+OKmDgzKhOoqxjCkU1r79zA=","IqY1AcXwS5AYcZ7ZnXAO5S+EanFa5nrXXJaznWiLZpE=","L0xQR39/2cZxeZrF0uIkzbkWT1g1HYqhQOwH5RT66Tc=","EP+3qtH1HH0TsX9Nh22aHjjwuopKI9S1DNoyythRVn4=","Dpzv3cPC076k05ciUy1UIHhAJzUhh+evGgVpNcNYA64=","B6+EpNMUHnrCM1Lm3G6kr6Flb5ajPIl4o+g73UumK0E=","LZ4xoQrrx2H43gDRSx5WbRo5Mj1uibY46UDz7Ioiw8U=","J/GaZTLma1Mz2xr9WS9m8dNgNLMU2thEdlZ0e+J+ZMc=","AFj6PIRU1jNUsgJMO0pXehgO2Z+PMVXNfk1hfUfQf/0=","BBYntnFbeAlnlXwIBpk0PrBBSiBdOhddcIlklWgWpdU=","AGrEndklPtx/Yy5XuVjM7NmCAUcc8fZliYiPErcnxS0=","ATGt/9i9clSx2MNha74zhuwMnA1tJamk7EamvxgwE5g=","HEpvUsn8z3pBOOQT72Kig3eXetfiXkmjzwMOHNj59bY=","A/KmvlHsZ3+UZVGzhg6kef7gSK4geK630feVjSwmRfY=","LadwqtLC6wk5Ggy3jvOpZIoTcthUMRlWTXN2OWuN3GI=","FSeEY2ZfdM3cGAL+v6sCzsnUX+hmw1nHOAYq+3XWSgM=","Ev4niqNlROrJcxAnCQUY1DTjjqlmoIpvjVgGOKxUx3M=","FJucgCGCVYpMRdEZ0/TMf9hYdgTKTw1uIbBv8wtqI7Y=","CBLntNhHvIUX0ZMZdy88mFXgRP1g26yaCtxJWbaR3+Q=","Au2Njd6v49nY338ooL+qf1VYE8fnUDrqKmaXNwOgxhs=","Dr0HO6BTe1FN62Ap+SECnlXl5NmgPWtroTBAOGYtTbg=","FcdU1bFLLEIFxrqNLM0CglWz55LGr6CLRO51ti7/n1k=","FpUVyJrFR52w7Y+m+jEbORzBI1Jw9MvFwp58vDDocyo=","JUefv7Omj5gjiPJiEAEQFgi9wp9v8DdpbZFh9c2aT+8=","FEdcS9UgRR88hSywMRpXjKf45ulyGCGWzglIbpS+YHE=","BFppEGbMZr7JuvJ5iDOh39OoR1Aq7I1fXE5zNj0Jd5k=","JgKcDCZ8eZ+4M6yKEeOj8BR6jKA3IhuQATuLyzfrpoM=","Fj+ss0/1cvv3yUaWnBwmCHPOEqapSj5FuBAdW5SNFkE=","LHFOluGROzUdlpMgzGnV7BPgamJ15YaIr47gDEJA7ig=","HBZh4qfOdLdauoRmXs0r+d3WJo8G3r/i1SuATv8dX6Y=","Bqaa55Xum/5eWvPmYZpH0mY1s0wqCIn+qMPAaLfcLHE=","ET1YU12JIRXF0otMGaNgk3Tb2631QZXHMUFshdcx1Go=","KriRAuK41eY4/5fXYdpgQuU08f9H95F6LKGnQGO0YQE=","A8Ecp55B/f6WJzDEXmmVRjSQMYk9orT9OYBP1qFa0bM=","JwlsZyYhQDiIAU3bu/ydoff2e01M/oRsat8ED6ryZpw=","LeMq0VSXrvTVBNTe61OxPGbbeQzkhhMMqp3CtX71vg0=","DcEI8rCigNL9XTQTEHIqLSjHON3a7J89JVdURI7v0AE=","GGnzt2P+gWTJaFihu5761bzcPuvECb58fTTKUDZdgy8=","Ai7Totn/Mcv4JVn+apEYQ7YWlF4WpWjUjG0zdnEpaC0=","IVXWAFIQFp45RO0TZb0OcpL8ofJ8GcJmEMauwHfQJrw=","DeG6elYqj3rK6TJj9fG0u+wMBVbJGvPbPqWSjIyuroU=","Bdu0QGAkvqvPzlv0bsfaOBJvdAvOjWN7Y1Hfp9qQJWM=","BdQUm6rEE77U2NyK13jTLADnieP81y3MyX5UJ6No/V4=","Ac34tFLZfCub5QRuc5fnb/C2gC+pQceHkhLiIXLCey4=","H8anGGcCf1avgIX/ga3OM8TXxQFeztjHGwoiJ51GwHw=","EEC+9MZC0DRdTVmlp6OkK6nhhbdTBtnDVo4P2paqr8I=","FrecOmvzFuD/LJGyiTNKTSsh6VZ2QxkYqAgUdauPrQ0=","IN/xvDD222tDSzoTh+PIxqNAcOUrYB/BPL4c3NWfR04=","AhKsKrem6q7CVJVQMKlw+AYt1BcacmqL37f9hRKuBg0=","Lyk3dJFHREKGmhCckhVjfLAtwDE08ARCE8gRn2mWrgk=","CYTKal+RhdUl7JPDP+pgMnO+nzhmqihMWDfZ8y2BS/o=","DQgKa2s7YHANKZvW+oEiDeSRNhyKa9Gc6w7pKUsk8Cg=","DmXNmehLBS9niVMGOMsK2CGsyFtkACZNzpKe18haRUQ=","LiCIdbx6wSJICPcscWzQXuMOPSA4D/amVZddoSc2kgs=","KYnzrkd8L9N2oLD/PX36wa4uO4lK/Sn2SmDRqoWSutU=","ETYc5UTpQTeSItEB5vrAzpGBBqRjKQo+OnTDzqcYlFk=","Ho0BS4bLWn2lOeEMFz9qddEiqCK4+zZsNMi9BaIGFDg=","Fz9lreyN7uJ7qBKtKVWOI6DCMkFn72yRIS7iwo7phzM=","AcNtqvnwHxuv7ovQx3msPl2l33rUVJnQmRvWlTEO3dk=","E1OssIwFrbSqmrHEhbuF//J30aPy/ImUSm9XQfOB5WI=","Llq9JTcgfK0YYOceoRiO5ACdM960+TrrIPHIejsGTTQ=","GR1cXtrvQtPQLu27erhWJRPetOs0kToTQhcmuo9pRVw=","Edf40fJpJkKComP+ptdZnYKgTHTBJ96d7nk53S3NCJ4=","BCGP3jZoKe2Q95rV5nmXlzRFy0zWvG+VG60IUobKyXE=","AHB3L3z1JFMEg5fKX0eiAgJ7c7SJMBwyJ7cccw121t0=","A4o4m6712afIZbBlaHodm2doGpjNBRY0wdwE2+PSuGE=","CaXu+rizaoDNpEaytLWczQ850AlmpQvq8ZhgeJAVpuU=","AbWIhIuLR8i5acFFEJtLWD2eyZ7frLdInRYhLHWEzYw=","C4RuSjkOVg9uGvbfwzQUGVReWr+jI9gX/tkeMNQpVKY=","I6ZnnH2a22YNQ6At25AAQOsVE7w5T8T5hcq/6FznL+M=","LgN0ppkZfjQ+XKo18TUen0w0Avt8hezM9y8x1v4IklQ=","B1LNiZ5S3E1/egivTN4/9kuMwLEXa7nsN9QZE6eie0g=","Bo+IExJymdrDSaK21XOXpQJ1FCtmS4AsmeKHPdeuVac=","K6cKECNV1UlndXQWdDSz+YaHLQSilbW4s3QzDy2iArU=","LEZ6+IdIq/ajNNHfA7VSEwn5CZuCXdKJuGCecKC1CCg=","BcXyC+8b2CcBAJorRIrogeOlLC0aMZVyltKeV2Po9Jc=","DcY4X9xWe+WEKjgfYAbixgzQg6LGSdnyOsjJ/mG3OHE=","FC05g/Pcf34Z1JkRuGcPpwN41bhBUNJe0lW6qBFLNpw=","KaAe+y9qqJT9fm2YyWoPoPNvhqepmqNcAPoYwbLfZ78=","BSX/7nN9YFE4xKUGZkTsYwq56K/GRVW30qGvBOthOnY=","HoB9yoHXlYHwdmd8oOgidn4WT2FJECZO8XfPQjgwHcg=","A4X7P4nHTcmTUQgWRyR000wCI+D3M6Uv26VggtvYdXw=","A3ZA3Br8AUPhpimOU8rln8+r1wFv1u8a9VjzN7qw6gE=","E0GZmh7YaRnxKmxSYIKe7l/VbPAx2oBQt+TA3olgdLQ=","Bp6wdYZrCvNWkG1Lr7EK13Ov1kLv3MVleyRPZb7Y7Oc=","FxwLgeYhNuOVs46OCLPmRtJyYQHTr6oC6hkJphkDNpY=","LIGBTJRT9Ry261XDEXU+hMu9yzm/5pb5VXUQdQKsztg=","KdhDwEFdNdnjsz+tzydLKrBLOQMq3Kks45uKhqfDpgQ=","CF1qEHDzUT2ENrzNq7eHUNjhXqWUfyzap2ac8/rncos=","EYIDY+1UHaoQpEumZb8wLNvx3U5nBrAsnipc2kEvw5Q=","IBk1pY9cV/wCtg1hqDeFvd/TFQ4F8d9dEFhAt1GhYxc=","CowoIMVpcariepUqvTOgPUZ5Tu3Whs2Oz+1hDofALpo=","GAY4/zAaZMoEq9bQvXUAtmULZf8z5r4f1Q28FjooGHc=","CVxxYmbx3lkET5cRSkFYo/hcqKk3z77GPpsyGoEt02s=","F8MeoC+8N4Mg2G/+1sfKFYO2GMXBpoeBjUCHpJfXNJA=","BbhsS7jvMYtqcifkGS0UnTwXqXZMzWYN5NUKd/GSqRs=","JlvJXfSkxIdv9w1+ov3ix6sV9KauDSN81s50uphsens=","JHUrR7xsa8jZu+SPX+8vaQhwFznF9bSz1siG1HFceSk=","FIFKHg9JKk6g2G5SepZIIXjWJLmNqW7l5YO5Mk2XTv4=","EN75MQc7ZHm9YFdzePKTgZl8jgQdPPs9x1I7ypBvAL0=","FPeudwv36V9/cGwNirTtA/oLiA0oxp0DG0WSyYYQF18=","Gu9QoM7nUbWfkmr0DoA10Z3sydQo6+TndcXMnc4c5Yk=","BBk1YHFy9o66ZcpgBo3+OwhsKi1X0JYClRIUtX5zz1o=","JoY+ndJCVdFXO9CDlZuFbAST++/oPIGYN6FR079FLLg=","IDbvtvmDCWXrPXoGi9CHyfWt8lG6YgUsZSc45j/4s68=","DHEql1t03J12a2OaAplpyjC+T3WnU/hUsA+k8bT07ps=","CAFNqzzRZn4nr8mb+sHmgHr9/2RWSSyjN1cx04dTlpk=","GY0HGS20+sKoKkp5g51qK5fE3U03tOjztTAJ95s05qQ=","Kesd5Co604GyO0ExQmiXoycJsp1Tu5Rt/RV4TR9j5XI="],M:[["JR5/35lZEIAICwrxM7nkNp8i5XrOPNf2T8b9vPONfaE=","JftQtlrPT7BHy9OxwX2Xx/4m6pyiONbjSFUEhukcd2U=","KT1hfX2nIQI1Xznr9i+RsG3rUyXzZ6RVbqHjHtV2eDM=","EE0ClasAyF6WARGsJdpHQ2ZZnldam37fYUXxS6bTwcQ=","Cqo14shLrxF96j4zbNlqOXkrOBOVT+m/PtW5Dy9pyXc="],["KnC58dS7zNvAPhfB0dzbAgUpA9xmCeppafZhsut0yDk=","KBFUZRySHnRjFamTTxuKG7qfkq2O9Ll5EVuOLpkczXo=","KMK+L4Jk+V8LU8cyE076M4zNj9ue4rRfuGqJT32zbDc=","IYiAQeb+vVRtQnyJCxiDu5tibYy03BjcxOyPp15TChM=","FN21+toBcduAGVuVktjPK+gQkw4+pFdKNQ1l4sv/SUE="],["L2mnGY4fvMfepDJlMGo37VW5G/9lKtaapPqEeJcNQB0=","ABwe3WJkW3Otkxq4Dje7sme6MSs0FA5xbWo3R1lNMFI=","FbmM6T5HvGTOLyyWxpZjxDnEDGAwSUZvp/mksii/wys=","EsfirfpSTllY9lvi+6yAn8uoRYso5E2SZQUd4zFjz5w=","LvwrkNaIE0hJAYIi57iSLq9nznmBbvRoUx7C3lO70Wc="],["DD8FCmv1rxUZgeVePhopoTw/+kVQvSUU8a/Wxfch+DA=","DexU5tv3UgX6dbp5kr008Isu/i7NQkpz7ad4QyCho24=","HEgqJacp9d8gIlgVA0sZYJg2ShH02Yj7fMdc8y2BNvo=","JiXOSKezmkJScyYk5KuUNggSrC/JoUpfuLYHrp/YUUo=","B/AXp+vVbdCG981P1xDFCe1++OMAuai7n7nyivcQJR8="],["KiDjpKDlfZL5fJ1hhsbD6nxeVcIBRiWb4veMLMwuNZU=","EEn4IQVmtR+q+x6aXWPA7nAWc67YINnEQDsB/rcnpUk=","AuysaH71tLVoACvZ0blrS+81emnj6GtVYbkpm4LWnI4=","LToa6i5tREZoCPiMm6kD073La1i6QEQe1OvPEbvh43s=","FAdLsUyYLIHJrRceTzX+SbOcSnpy27bZyY2AO/7WXmQ="]]};return Go.default=a,Go}var cd;function qL(){if(cd)return Ka;cd=1,Object.defineProperty(Ka,"__esModule",{value:!0}),Ka.poseidon4=o;var a=n(ln()),t=n(un()),e=n(DL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Ka}var Na={},Po={},ld;function TL(){if(ld)return Po;ld=1,Object.defineProperty(Po,"__esModule",{value:!0}),Po.default=void 0;var a={C:["FEhhRZjgD5jnrn3qRfvYO9loZT74OQzeLoa3Bq1AxlE=","CreykTiOXJ5DwNwfWR+4Ps22UCLhtwr0O4p7QMHf98M=","K3y7IXiW9SyajAiOZUryHoTN51SjzvWxXE1UZmEtat8=","K8aw3b4dcBtlcEKL3Byhvw2ln/O7u5X8K8ccDG5nplw=","EjpVoxmAOE89ILLOy8RO1gw4wR99IOknHvq5qQXu/Tw=","A3UBzIydyBkwmnafTfCY5YiwGFi8jrfieeKIO+n7jFM=","HCEW5H4DqGuxFpWwpfbatrmkYLHrlRqwHCWeyj/UfVE=","LBghNIkDLoWpyMuOmmWDm/rtE+V7wPrknb2uv1T1b5M=","Luj+09TSxxoEKer9jl2xcY8p4iJ5hf3yrYcDyDW54DE=","KMZNj17XqsAEySAp2em/kbqUNtHM6UuTFtERxwoMFxQ=","GKAdn/t0euDePoPHB/iyT2gshPFav1cbNCVKA0eGZeA=","HCHZK+8ZfnOyNOR3e2DbFOZCpWzucVFdVOGscc3nK9M=","CtQEzLyx4ZWJfLYMgJgeu51mpmd9u+2ti2RV/mLYB7E=","Cptt6DMGT5O2rbma9sAFlFy2VMt70UyLl6+LYMwfs4c=","ExKeP5MK7W1HaQMx/wncUWDvpY3c4sPmGA1FvsOqOm8=","DXphTImRUIqxzkiVgTuxyC8Yv3v8nigMzKGAeYOTh/E=","BTL37DbjAEGwSGmGh1yROkm93y9a9f6+jDHy9AlP/qU=","BrvLjo4YAgEpPnEvSVDxsLvugIydZCY8hNnYrhVcuJI=","D1WKTbGjrAf2Hi5r7pR/c1hr9A8hHOtPaHylZ4qdyzM=","K+FApgtbXy+O3XioGKlpsgxkPkGbzwtXfCSg0Oes/pg=","HEnEuanwn3ua1fdOusxxBRK46Ge6zifLDeoG6JuW9jE=","FwwacychsSzefzPkdqOaGqd6gcBuLqxQOEewDVl2Uts=","GcJ9DlL2XKNPTjGgaOSTMca/w52SQfnUwwIEFhXPJ/E=","LxvcUlT5Igwacx/FJ2lk2rJrOF+kC2sEvtmWDiVDugg=","BbQtL7zL9NOdK+kznKvp0Nxtkh6FXNkRVLY50o1KHPA=","EiAEBxWkGtWfT0EODAWkLF/TKsUv6dBviBiNcfYeCTU=","JflSZSYVW4OUZgn3u5UH3Ukl74cd7pFtkUTrtOzhNDw=","AXv+QoQpmud0C20OIElR4xSopdBFJBkUeXipWzR0JEQ=","Kl1HZAIcpx14qWdMtnCPFYjSzq81eMQRHPizWe7wic8=","F/Atq3RfvjwIEyH+XO+EXnuNBwslFNKbKnt9icwIFdo=","GdpiYm23GZtl9K3PV/pKPbqhdkp70VVwjubzeMie8BM=","D4jilfou2BtCbJH6aTZqc+33Xzm/GGNM0mbsQDiCngU=","H+McVUhUbHlI/k7hvXQS4ygO/30gywmqhfSfJ2YUgBc=","EP3BYTvb9n84vd5WGy+R5MxItZ+Y1kNjj9wK+tv+Em4=","HyYYwuvpV0UIucUvAADjPr/drRoD/da8pu9/AJMSe+8=","Ep/n/D76xqirI9um2IbzlNoR9ZU8+Y4oJpoNuip0XdM=","Fa/UzfHk+CDBYx1KuFykujuvz+5yvq3p+uYFIxAkSOM=","Hyx0ulw2fjcNco5x4VsmiFGnu4tFUoy3NJVgeayZsBI=","ETDhhy128vk2nPWble35zhnwH6icnDaybgne9nhtrTw=","E1I9Fz9+a623O2P8HJu9vuJCxhvGhlZJMydTOlwbHco=","FNpA0K9CemXxhBta3JZThlM2j3JUy1Zn3a27rXpXTNQ=","AJH5ZADkKX6oW7GGwXswToJjjlf9Yx/2MVl24aXdi4Y=","MDMpv5AxxVFbmjTUmmS7agJnvHtUoN7KXEUCd6ACzcs=","FO1H5VwdocLwXTwaGy5sGFCfyDNuz+nbc3kW4oP6ghs=","EWHxCzV3ddgQrVO8xKINWt0rAyUcdH3rBO6UxWXljWs=","F6ilCucs5wfyK8Bw65koUcqRTrlMxo6vu4qWpxTrgiE=","Gmxh15Xbr2L5klCzfsXfiGRaHBU3kdtjErky3CUOT2I=","H4vSq4qoQGZMTu4ZjEaE3EsFdyuyoIadpnIrFfRHoTM=","H/y4UqTwAnqXmfExzXS5jM+4y8BjSdj+/MYvEMj7Pi8=","A150LsUvGbNtSJxyD0Z/+td81TvC213dskayMCH3nxg=","Hfqu5BvflNeDqin8Yrfse1VnOqgY0wX9QtF1oF8uPYY=","KCE3hHegLplQBaVjUIhUCUW9Mz8tFFXwOKIZuMR5azo=","HbSk0PI4pXCxBhxu7IHALzH/3Up8GedjF08jjQSJdCE=","FL94iUV7ILehNns0o6U4IX1pO1JCav9ApLtyiTsXhMo=","LO1Swr8pb4fldBDD7JqUg6eW0WT2BJEnEJ/w06nAhGU=","Hd6sWAWn9K2k0EQe0QjjFJ1M5lhPSa5b39RtZ2buozQ=","Lja05enJe0YjBOjitfnciOHJ8hYboEBnP5ERI/BCrnA=","DGhA0csGZtxZ6JsYZSddihZLRHxe1kNHyu5jUCwjjV4=","E34uPonnHUYfTJvD6PEhgyYqTR21XFibLK6qwBI49Yw=","JQky57CtzyyE7Uv7YKNra4LlWqlHURV7HUV5Swgciq0=","FwpykvVjTAbdO/CatcnE7NSwDVzi81+XK0VVOR8WtC0=","DWjLvnconnjVy/UdcPG3W6IV30570BSdELLFDypPO4E=","DK90VjuQUl9kWm0gNuzRMG+h3GgLSdnOTtJMl0mXMXg=","IKfRwKJ/zOeP/jcvTFgwaxZvlFbtRs3rJV45W30w1Co=","BiPzImtUcLJ4m4pTBA5ERDOF6Wuc+gvk01AVFYpGhGU=","FjIwhojCXnkPV9aKU1AkEkKlYwU0feSlAJzka4zcuR8=","LeR5Om+ZzRTj9mQiEfTQt7z6NhWXxUT/y1pWfpB29H8=","HU0G0Z6hsJyteQhtUb3hFyWlVPqZVZyi8J87tz1yjGY=","BIDnR5pmp82ephyLKJdDiZCDUKvEqvwYzXXjPdEwwUQ=","MEMLAzaOvKqRJGlgSQvPkX14aBRj4ufXRL+0QzXawk0=","C1ezcyASfUxQ8mkSSw29yysfE1IkGl0SEDKD4InAx0I=","LPSJBlDSckDhlfYKT2mO2iSbjdYUsjN2tQF40t9tK48=","HiIcVSaJi/0S3oaFGg2XA3UaLyOQCKtfm307aRHGQYQ=","KOB0ha19mS7RpY8ynKEq3OTsaT6927KVLlTTOfLuvaU=","L0TWT4TeFtxnvV6tUe+x3IOByEUgwShU3V7zoHms1OA=","BQp2vDLr0d/ivjMPME7ces5xZ6t7oVFvQCHGLPDU+sI=","L1jEXl1lmmfXgTZyQfbDXYy0Y2HZeyiUfSlCHCcFlKk=","JejamuDkLoQOBLIwNw54K9tnU0hEMlujb8fl4WDGanQ=","L+xzTaIP4yAD6gTxJ/hEck84o2i6EMKVRCUr55YED38=","KIpnePOoOYio7Rcn8V6TtMsU9OOju7kd1tH6yv/9Xu8=","INzGx1/Yklm+f0BnULPbZ5olqM0nFdJFuRdTkKySLIQ=","F/QroQlC3yXLilQXgqGLb9Mc+WXREXjHsErEW03qXdM=","Ao7rhdEVqQQCDgxhSO7GYD6c7avGZKvudkqv1FWYa6U=","Cx187POnmyrT+imPbOp66V2AwCmezJGOn4ycPTjVnUA=","BEAznJdkzsecFu/bg0omJh244/Es4c9yLSPA4R/0zwc=","BspkfClyfBlioAIXfaLVBPSwel9+tXx5uI5reru9rVw=","LqEgqGT1xAk90ali6PATx7jvd4sE0rpb/DyrKGGbqeM=","K7c3VGxK7nwMwrqHwRV+KnfEeev7Xcdq27Oc+Gl2M/0=","DjDaZJBiXTPnnNUBdvVo+aLCjC9EmivVGiXRVoaAOpM=","DffKcnihNlC5GdhUl7LrsPcQNafCBDDUEx2QOrf1dSE=","J8xYn1v1hXlKus5Yn7inSi94TAmQuA/KppRAl/hw4tU=","IlXDajjIc13kXO30Uq+oQjMtMwQveOYMQ8dFVCGzJb8=","Ez2WAr0zeNafaBwnsFvf/Ji32GzKY9c6YMrtSFeE0Ic=","DhVI6UKunT4mhgaZuTcnyBeplIYWyT70rM2YGx3D14o=","DyDw5V2TaJ/gnsMS9q9HYnSC5L3goWAqjiyNboTopq4=","LlIyhIPLW3/y605FsS5RsmIyybwXtykpVMCp9r+lG7k=","ArIWLVM+BZpu2iq7dHEu2zp4YL7qld2KSr/JV2YIBPQ=","GeCSdxXRzG04lCmUf7Nzfa1zOXTGsuE+Wz1DJRlRbHQ=","DTqABFfXd4VjYwO4uU8X3P/LRgSIcqyfdO9/J+5XNwU=","LJdNGVJVehqsX3uuSZZhbaYZtz9EHE5QTcj+nPtVnjI=","B2a/7u3izPNwjhtP8wcUwiwdQ0zb6PVVFLq8LdXZe+8=","I9rI6lQIL8Ex4XOuVeRjDNTKfIcbKgpHnB505/GR5iw=","F9X7bCyzcBDj41irLVdTdocO0zGGuOrkmtO0fjQKjX8=","F13Kx22KgSYTm1g644hTKQJG5D54P6aQPsgAfxeMACM=","DE/Qj+3l0iGtt6v1SYmMkeW+foW/H9KmEb8YLMLnFlU=","J3k0uQnnLTo0dbsex2arejitWbEoMD/FAC8Cplvf5yk=","Dog0mZjf5wPxsYRST5w5TWAEzKz5y5UolujP2wsHi2g=","HxsgeLYLD84Hgk4qK8jK6O5nNRSwBwqLRXEMx4y7mUI=","LrFVlWbFNt28MW9kgtUfo0BVdldwD1uKhG6BKg7TNNE=","HE29wzXPZ2Q1Ugi0ydJD00VB1iPGad7Cw7oGa76vZ3M=","I3SmstpvjKuOXP6NgF3Tot/KHot+ul3IV0Ah/RJB47Q=","Gd00JTPMxgOplzjj+1pWm5TvcbPkn5D7h09hYXMwcvQ=","IX1m22x/s+/6UIgAWH0us8bQPYOFEy8vzOfzXycFzM8=","CBX7hZH+AQOM06OziyNvnvynfGGNO/xsKn+okpbH5k8=","K7lDtAwr1FamwXhTscqI6w/zb1l0sv+aX1CT6b9joW8=","EaUVP85llRPufLmXSubLpYHjtM0UVwxXCf7D2NP8guk=","G3K/0HY12FAbLv+HhaJJW650x2U8+Q5tXJ8URCaDbfQ=","FJAsBwDuyJeuF4uoyvhQ15Px2HUSvqDs6jnPax/uIz0=","CcE4xuCmFqSf+Q1DprBD87dFt4hlhW3EwaReL9hMs/Q=","BbWKPc5XsoGicdaYlQUtiHRYpxV4PoMX4CSmGjXsELw=","K+jSlSXAz91eazEl473jv1WOVfvoZ/AkRXqWdlR00Dc=","Bh1y948bqdxrTX93hCJdaoG9/Bta1sJDafnAVgUj2a0=","C/GK78rP+r30ES7drcphRXOLSAOzYUW7lRbbUBoGkuk=","LnPdEF+osuyTHYzfKexnnjqYAakwcafV6jBlklXwO8Y=","D4RA72Z8mugTN7pdjJJ6U0fecpaGCyEcrR7L+101mO8=","AE0wOy3qYnsnMb6D+TrDTn0U0XihOABVjKc5Y5XrEY8=","I0VBrXIECnDaKZajUmkjDJRpnu8xOk1IBQgAjLw9N8E=","DRI/HnLSa5K92P1z0UKGwxKtTCOstGsuCMFXEEQJ4XQ=","L7Ngd28N551wmO56pBI8Be5rBai+Rgp3TzoEjhOFRbs=","A2hcB5Q04WcnbFfTzHlwO339xBwVbqHot/mbaValUyY=","Jgrw4P/8yXcsFjGxeTRFZrR6qto2geuQNMb3XDcFwcc=","KGK0E3T4m2lSdLM7dz8lVJFuK/+f9nJUX8L0lWP2J2c=","AqmRL+FwMQInGJ6h5pHQNi8Ys4tACw7/GSyllRPrqNU=","COUTreaUoNisHz6/GpZEDTLHE9UFjhIk4HA0jCgfSm8=","FApKQx4u55QA7XRll42EdzITxigmT/gPIax6a2c9Cas=","KWr00BnLXffZWbKdVJw/BxICtOuotT3F7pee0UM3eSc=","AYMuKEp/TIFhSIK2k5/A8YVXO9ICPj5QV2VHC7gSs0k=","GoTVame/3T2WWr3NMpqnjU/pNDRJby0QOGH9GdZtcmA=","BAy4KEd3OSfSrv3AdIkDep0fdjHsp1yfsN2gy5294UM=","AQ3PCEzCnLfK7PJqpjO85O0rAZ8oh87nsaePidP6vi8=","B+3CKgkR6iFEJe9UK3dtsjsP5YF4ENQMcsqYqr2a+oM=","LupKsIrsd18hSEeeo2+7lpNtpYuki9HS06zUgXOqq+c=","HkDA6CV/5KYQBc3PrRSM9/R9G1z936oIJzhpVRgkXxk=","I6J4CVg70epR9DbeVEPhCPadRM31HcHwPiGUi0mAuHY=","LkZSsETb/kDmO2sjL81fPzmr+9IFHuaK3HVAgNSSUKk=","Eeer227Lr8Ln2M3v6ce5xQR160dds8LK9/fWf0hXdfI=","GZ1SNQzDDoxzgh+AIJbw5UehNVGye/a4mTlvY6xc+Oc=","D1ddbuZ8vs2YNFYk4DKjfIWafL7zCz/dyUnNCXhIQQE=","HEtvmiritBjmJlrLqclrBhhNBwKOX7eE80da53cv8Fc=","Lctc+Ilt458ijhV8DFWT9GJvubwiUgY4PbIDYKvwySU=","E0CrufThExhr3CbL30vMpQtTGhB/hjylRFdePPhw+OE=","I2jmkrcnh8uIcOqIjnFOAG9Z0rRGDPt0xIqMxzsdGls=","H6ua3ZuqSk9W8jFld1xvLZIqdjKpT5Y3S33IUnVvVLY=","DH97gjANPGzj+JV7oeSt1UxMAV4g2XZdIgVxwWq4aA8=","FdY+hr6s2Txgg2iOXZyPPGlHkp+fH5mrV4pMOpIu/wM=","C+hDrl+bB+UlcheK99ro7QXTaxLAYHhikpNV6nQCPZ4=","EzJ0nFI2lMtpNeCWOgfoGwWWfOHZUMC3MQWOySp6DJo=","JUOUCIEOB0wL3UWYuYFf7okruVylECns8Am/+lubloI=","BX6NGd2ZmpGNopsJQLODup/RXbCw9kmW3/Z/61X5p0I=","HgFON+mxF887SHDZmfK1XTU00Ka+mOnjV/pD8B5wop0=","Gk7STm4DrrzWvbEAUz3JZll6/hXIUbS4Y/boiQhMZHk=","JTQgAHCD8aqGOtR2CQXBA57UERyfBT8ncQRS+DzjapA=","InahRBlxcJr/5tKpkyAAHsRexyFVxXXd7srA4ydZqwY=","KJV90SGOp5n9NBHrGTJYU633rorhKB91MwL+fTHfp7A=","L9klcmq3lMiL11eWqj5/HmaS8pFM+AImfd8B43kCoAg=","HPilycdqhLFHyCONklPNVbR8DEPYKWbEY2ooZ0cF/Zo=","A3PLvDBuG6uecHc2hxXmIwtLLi5KHbnGdLjDWaQekQg=","BgKD0v5/I9/1E9kRCz3GJEi8SPUxzgweq1kgvyMpCkA=","DatGXW2RB0DzPvbMDq3HG/gRm9/Vo1J9yLv636pAJjw=","DLp7y8giSyqOSroXl3IwpobNZCHcDKU0bzRGtiQ5xMM=","HkNl2weQycT0RbBlPEZv8h25bDi0B2uovWi8tN6mkR0=","G7LbohmamrO8hu9fnef2xcoT1g6rQs7WjemPxkOACo0=","CtPBhwxtbvQO661SEjzRopE9nWLoC/usroEuCCAh+co=","AbCYyR57DLtcNFiAd8Dd+VMA3fYUk1YwwM46JickUwg=","Gf1cDqwU+udZi9TO6jseKZiwwWhJO21yrkG1duVbnD8=","DUdJ15zBY/FxEKQEpG/kJ8ZDTz/me357TM+mq5W9fhg=","Hrv+gRSkG7gJ4LMzmSQSMuuUCthyjIpRbUCtpEDb/c8=","JwTlthM9l2TW0/F9SdgzIj45N/gOufrqu/upuvS0wbg=","IWXhyAJzBbGuDjI1cWNeXVQNE9cQw/mjkLaRPxTQNeM=","LjSX5NNf2llsBq+mO8Og8uVdTuukrOtg5lCBrWOqi4o=","Ax2kNF7s1ttsD3sHx4Fdet0f4FRtc49NeatcV6qEHt8=","CJ7OVOR6pckI5D5fCHN8FDaWcIkAasqxyc0Z6sSiCHY=","L1PBXire0zxH9VoHBIPmzH84Ifv4qkBnfQVS7Z0Q2Ec=","FCqjT0suitDfeiGz45wAyLCqKFcJSAHqr9cr7+0Hf5M=","F66k2kx7zw11iLAU64tAl53Scl7aTmrOMxmCRnx/8r8=","DpcMGdGXSNjEZRBNjwIgA2P5pBeG8C8YJ3QrINwNFyc=","BLytnlU3lWQvWbr3FKa9tDL8RaCgt38aujqYI0dt+bk=","JCwL+82qdvcV29S6glxx/P7WccGxkB+khMh/gQMV0M4=","JdsTQ8JBBAcQI/tu002ZCQeDEeHv6FrwoRsZEU+p55A=","L/5NnEIKWenNx8Masr81GHyhR8uJijlC3rNnd4YDaoA=","EluwOvPizxi75vW1kOs7+NDRumO+aWSD6Y8oO8fNB6M=","CBa+QnRbfbtM7/5bjiTqYP2LcZ3rpQA3rHt1lIdFxrw=","ERFg+az27DYNG2pxIxOg28viPmRCAFVHHS7kxd7bNdQ=","E3eXjhsfaokl+o57eUG9+PtZq5VCNCQZKD2CA0Nck5E=","De/B2IghZu88zeU6TyNvuoPThGIZN87lfkIaUT0NM5c=","L4+lx4xwbjpdSgPyp6OVMEbX6Uy4in7zUOZ7W6Dw3r8=","GiqVfsCnI9phwhNLqwvxe+sA5tzYRpDCMNy55Y2pSCc=","HN+HEJlfXgNBK0p/aZUy+f0B8OoWeo38Hd834oBa3e8=","Jv0xRxgow2rjbCe3SAVLDAxP5SObMBaZ43Ze6+zBiUY=","B3XZlswsRFbzA6LB+QB2R+Eakh2f6j97kmFDuZ0voL4=","AW+5M3cIymOM39qRvQ2uprlyJO97IGJnKt3RvRi7iQA=","LDkvvn0/3kL8pPlHi7Q5MxJYJVNW8YSvb3bxGQVBF9c=","GHoqO/eaafo+UInvnx/Vb9tHxV7s53qiKKo94bSGvLE=","AnGoY6KAoyZB/6M1ELLt0njJhjA1lTLz5Qaydf1dIM4=","FVdFnJx0yUqgDlr2mh4xEvtpU3zol+wMcYlY2WUW8qs=","Ko4myo1kfZpjiFFuqdz/iQg9U55YFowqUMba4w8QnyE=","Ict1IZTPQ/O1GULrAEDrqd4rz7HCo/rpeSS3EPJoMs0=","LCba+Za+JHrNbdSsrWDTi1pHHmMiGI0CwTfny0hDd+w=","AkAXbuDnmC7r6Spo0+OjjCaCGswPXQWM+ME3vKLSbxs=","JjbglzyGXBvZdN142qqNCoTNr2vhrUfs8qDRjxFzGPI=","GehPTyWnmUlgQWYdxdl1toH24GdEzuibe+XZ/eF0SsA=","Dr+JBko68kfKHzb281cBiOJx4LMmxPsmZk6J4UVMoRA=","Jcfpe0db4A6LVZo4xFI2T0ycUx/suKxpj3/XPOIucew=","BETJnlkjU+WuyqMCrdkBwU2MVScKFgr+1EKe9VmK108=","E424iHgwVl8mk9Dg8C5OeeFEln8LpTsDUZq6dktcmUo=","JNQPRiEU/p7gKq/PdLT8ok4a42XcdcO1K7E8u7LyHt0=","IeZdbY7kN2C8pA5zC130xM86inMtsUj0spUbTGHWjow=","JI3XlmnsCdvwNQoV1sdcapvarO/KFNUTAJePE9GrbRw=","K4I4wVSPnL4p/TXPkee0jw69p+Y57faf6NWrp5JNU2I=","JDn9I5JX84GBx7489RPxv3I166lPa4lCqUy93s9vYvc=","IAlYI1KBphuixL4KoygqGMdLbSYvXefC4z0rs+iT3+w=","Dh7KXfiO5fYM+n4f5b77txn62CEfqbLQL8wjMZDBfxI=","JrU0J/mz6ix2nZxmD8YIgaFpwScy0AG3FY7ksbhCyiQ=","IPOz9Kyv6fivPgZmGzqPd4+igSUiudcKZ0As/42ysbQ=","IR5dKznWJSCnpifs6MrLrJ+XUG3vTsKGkoumwn1GOxc=","C7dD7jSAISnFVnMa7Z0wLc0IUxPOVy9iQtE4MuU2tLQ=","I8smYbSI7nHkx1P/I65L0l2KRAlPZrZTKXfiIUDrpcs=","A6NaoxI5Ec20U1uu0zWfX2pSBbnJPvMdNTI6R4B7i8k=","J4A4SKCu2WqT+pQ7ZjXkUCF+E39K3nSmLXkXMicUtpc=","DLN4OcLJp/95iEy+x19B6b5eR8dtYVOCMb2BYpltb2c=","HwAm0L8fjh3VQjzC/sH7XNqh7NxMPLIY287vd8ANL5M=","AqfXu5cLim7S7mb6u7qVa22jsQD1tfuSju9C+XCCc8k=","DP1/QhXkNMjaF+wyWLC8YFrRqy6QqklDUeTuQLvEkfo=","GAsRtyBiKhVoSdxvf25/VxZZvmloIjDF7ZrDOXAKfN4=","BOlqllvOPToKJKSkV8lRWCyHE0nOfu4aq/5XipTGUBE=","FZMfeCtF9/tlbyzb0fdwXDU6I/4dMKWkahUi7RYN860=","LiluV8l6Uwms0m/r9VrJY6VETBxfcDrYig17l7ndOLE=","JhV7zreOhGu7Ji+aHgbUJxveWlvOjwQZlS+X/9E+rKg=","IZTriYR9aw8Yl/Z18ZwMVrYbEySO/zyjbjT7nRx57kM=","I1C/NUd2VomRUa193pbqeFfhVQFEcAjatrPSfI/6J08=","GkhvCuWRys2vCcWKScTReVQFQ1NAgZ4APwRp0RC3dSs=","G1bc92+yPMSoNNRVpAZeEzVxQCt98wnVm8MQXUKowwE=","GnSdeWSvC3ICkT7yBMZT8rS/tlzqt7aFIzq1nOO7aSU=","GK5ZAHP5aWlq92L/pOjw67+X+Mx4fjfN3R8yG+O+rbs=","IcR7J12C3eZGDV52mplCEUSxxanaWSlK3py7MXED8kk=","BHPdvVLnN+UnNk6OtjIHl1w41f1swysnIQKwgs0VGPs=","CxL6yVttOogdiSZXyEJOZFrE5rAFFfkC1ZRXQwKybgI=","CK52FqJgz2ZX+Pc6woRYjSxfB/9CXYN6p83O9j4+IQM=","A52vaHYoC4Doc78qMv0oNKg8aXV7rdWKiI74Gekmzig=","Jeex10cKPHXxPwtWVGyOCfLY7+/wbvdm+ceDyoadEw0=","Ho/TY0w/92QYTQNDX5hYSxG1sVrrnHUmLaPx6iwqnno=","JB3MUaw3gIpBXdHjwoHwWv8ReJ3Ayv3XejVITgmT+aQ=","H/wxU8Vu+XVZMs6ivgVzdJva/hxPoHgaS4tAeM6ddUc=","F2MNYtmj5RDIik1Dw2D5K8D6ALZgMa3sKb2VQ/06F+4=","KYBADt0ddOPWnbVFjSzNX6vbI27BaoKkMBoKtZ6kpuk=","MDT7JDZhI+xtyvytNXJtv7FhlMA23NZI+mlDm/zQDNQ=","Gqfo9Bicqd/z2yq3ZIvgojkplc5GBB4EaA3KitcjLfA=","H6GV+DSmnmI3L2DrSX2hZ2RurhQVPYA7OdxdEfXXgAs=","DyPxx01fv2GVrVpq7l5WmTxUd+hFP1uToNe6/TMwNtM=","AWVW+sk0inNatQqgiclxUbPKrwogo0+52TcFBaFRVyk=","I9kreTZIEQ/Fru8GM/DHfKyw27yhh5uKb25d9EXl9ws=","LkwQ7F5l4vI5u8Q8EwMd8mhqtA/XmjBLBdYRuCPyO3M=","EkGLv9d7Y61eFoZK2cMv+/xaPdm3jsK3kyn+XgqNKVM=","HkqKrOFavB1bdqnoSEMdLAanj3K2vrsSk+bFjlGFaW0=","Dz6WEH3s29aHLCDqCaz5LN8Xo+4dEzFIgJLZYXbet1U=","ASw3gCB/OVzCHesKvZUWge6jJJjdumzol6j58MI1cGc=","E+qxtOZyuhscG7kBdpMB8eVlnQPqEMYd4kd/8KwiFCE=","INxmSrsgt0VsBmKc43oeyxonpOiyTjG0i5xGNaowMj4=","LGseLP6njiw2eF52qM+xsFfpRx8k9bORF1w97LAeAA8=","GIySYlX1t689qWNVcpwqhnCrTCxwQASBsqyQN0Dgxas=","L5kTII4J49bp5vumOE/QdquJ8mYpduPjDghwuzDrVPI=","KzOAPZCIlwbnFPcgtWKNJvtgtUWh8+nOSaaukSsCQIY=","JsyrwQ6wQyfLXMPd4quzbwlwhsl+c4wTPJ9XB350iwk=","GxauDXxUQIy3X9kx8kZ1HysMPcINeegqJTG3bCK01d8=","EdC7RhvYryhE9J8PhAyU75UYslETRHQtH1Q4/j1BWuQ=","IzAxhHtHa+rQEY09szjokTPsQg1nPlBK1kclnfZVVx4=","H4TpeJW+5DjrPJLcmxhGya0pwWQ4ewautu0YQe2MTco=","J39/m1QvDCu19FvtBU8JYkU2AQw8+UUtInMZMyf4AdY=","HvyckGnlBouqwT0uZkVkG30n6A/CMHcWFTXERoLuV6k=","DW7Ed3YeLvusTxSzvz1SV6meZMPyX+EE+vmIsg/l/0Q=","Dg59fFUBmZt9Fhc7WbfK4fIDvvIa6/ACUYgUOcz5MBM=","IXvvL08SxtzJHCBYojORy3feU8puRNzcbqPTb+oybqY=","BXgMiK3wFTG1D4F+P+RER9KbNaqKOJxx6M8SJqzvaLo=","GHM4h6ays7TJDY5JkBluI0ReR9fqWTnr+4mj7j1ntL0=","ILrOY6z8rgscnyvuJLjp2oW6WX03sJBXIMTxXbIxsHo=","Fm6llTdaZ4asUn7p7O1z7Wv1UIdqvK86yStCyAiwDY8=","MEJiqe/0BArPQ+Mi1vUmdq4vhT7C56gNsAxIjPkXx04=","ImuscFAWbl9tt4zQsS028wW26MmgVRFK13Ceb1ckW2s=","JrL1OcVzgp9qypG6qVRQW8XD604d8dY4WCcX+98jiMw=","BqD79M1S6Tul5MbEr2XbAu6WKX+K0gDy8c/yUudptVE=","LLnCQRLTU0Gs6siDYPtSiSTli27KwyG5+ynmqjNo/yM=","IOiKTWB1Jt0H/gijVSpEZpEp64f8wLE6rI/or9kwFSE=","FURkmivXPjunLzlt+R3WVAHdj69R3jJfuu251TatlPw=","GYAHdFeZVxLETafhdxMljj+Os1S/2A7Z6vPsuvaWAQU=","JdHSL/E+dwXTwIX5f8Tk9pFLgv+qXSCR7GTaxCN2Xvc=","L+yZDvVW7+EDWkZP9VgedAZ0Rc1Uq8r2uMA5n+DSTPw=","G9lWNQbZVE7z5IMOE1RQEsV5N5wtzBMwQWxK5JvE7GE=","AK/80XumADxW36hVcfwpc3siWoDUgOfdft7AHxTyMBA=","I2cNuu+WaIHwf5GaLYgxKMeyPPdnpHeysuB2K8DbwYs=","H5OlMpFzlMfiL9F6vupjicZv164t2fAvhg9tlpR/Dt0=","LeQun1N7fWGwITdxwOdPVVUSvge2pQk0c04sW+tAvjc=","JcVX9FuZeBzTfTuyKTFmKmf3izd4LIhbRWu5bVXohAQ=","IHTItwlwXJiIU4p/ijxK/2R3Mb0W+OJU+nTqnyvnZiw=","Jzg1WVYpgTiUnkQhcdak5LdO8gZXQNt8/DoLYP1XOss=","E9Nq0KTr64GWl3hkllnGXLfQxBzFGYcf23Gp6moMqlY=","CKLBi6QTgTSMGs+/lhdxaAa0YqFpG8LjQ7ebgIXjdrA=","BZCS/Dla7ShYB7v1V62aEEH1nAeYIrEIhFeIL+57YSw=","FhkkFRtaWtLYysEZUiqZGpBvFehTHccFZ/ayg3HMJOM=","HGjKj3qhdlkHVAXvY0G45popi5pNcvO7hUswnkuoehs=","J/XQO8ocggf3I5pLLPc65VmhWqN+e93fOqsF7sXOVZI=","Dsv/SEaWKpddNH6pqPxGX7RoYVV2IvLCVkp+Y5gzwWk=","J3xN4jY9i1tFbPxaf/jkb/LsjapZhV9a1kvAUh86xWc=","GxGGLFKs01G3pGR5P0+7V/7Jn4MrYyJvldF1yNL8CLI=","BqcZxYTHT/vdchjrVly0yL2GyS49+zxz4VJyAapRI04=","Iw5K3uy3mYd/fOmljINrmdUzWEoZXB13oxOr4cfRJr0=","ELEJuGSAnEdnoTPM5sutbIhigXO46lHozKhYMMp95SI=","DiEReXDc+9SxUmslNjbzd1ONO0+q61qLJL9iANFMxZE=","Jmc0mXhAE2L2sXk57rDmT/VWB+vbNccHHbRrs+e6R3g=","BQAPpf2lBeApoTv+MEwmew2GxywDm6v20/8C7iRr4C4=","Jk2eCUrtX0GmAkIiCjSihAiQh7JDapv86BdMyb6MLiA=","CAdvnEdD3mEw/2Is9AHt0skvJL/hFPPF5ySJF0YxXEc=","EyNwq927Cx3VfypSDCUza9fO3pS5W79cIVHW2I5kG2Q=","CP8RFreiJ7/f1EZaZ4kIgrYVyMTBfyjY0klY7fYC3cs=","K8sLDbi54+ArfpwclGD92cbNmFYjMuZI2KPgq5RZdSA=","EupozmiBvsrX+KaxF7A6uXb3q9WX+QOwvyMNINIalDo=","J0OcmKdmiAZ6CXsZtv3X141fiOJ04Nj+peprdAb92n8=","AvQNCtBfVlLjHvlECtcevIQZ45NJOTfwXwBJnQKpnjY=","L78EKEMn7k9oDwa9OQ4wnQ0TrMdLnFsUtjBZuMx6v/U=","G+aG1T4qitV6gosGUUJc/Gl4xwJ+2/JH9rZyPCHfhuc=","JoO0JehaUI+WhS8UtCIPz+n3rYsXv+/A40jEfKeLtX8=","FtrOmy6AEuMdscfr5nLYa75hoao+FpPg7d/A3gqd2VE=","J6Mh+MfTyQIuli9/7y48hItFOdu3WqE58wQw/lRbzts=","BszXIQ3uHWsOIreeEtGQgtgHi3iNcQB7leendO2GplE=","CkHdQiIWU3Ur7zUPbXSpF7bLsf12o6EhZvTQvpeOQCY=","IgoCiB5NR6yU2VDN+DhidNF4LifL0NhFl43uyRKY8WU=","DiFVpUX+Xzy7Y5dgZYnqwZzZJjkznGsBcpikrTQItLk=","Dw8ZxikeUVRqJnxgzHdOX7nQiLrFMHgtiR7Br0uEcHM=","DpJbzRxt20o6HGfsje771AxTwNM+eu7xtGeVrtWUPJ0=","KtAAsXSKu4Es1uVBEoa5/z7wpb09JZo25F7wW561vus=","CmWqIy0y7W6N5j0c3/68Lz+mFkZcJ6r5fozT3P9khlI=","AmPYRwq0scYddNjoliQvTyYdyxZ6OgaSOJPXyyyT1qE=","KQHZRq3clLBA/VgATZpfjNGSZUDHqGEs7BxYy2DCs6U=","GInPqCCfSVLfkCLbncWDtXF6BpbaQc7mSTfQzWMh5pM=","I2Bk1xy2xkyEdHrCX8+NiBUC5fA7/4dWG4WhFrHzmso=","L/ehdP/Owphi4E9dvcc+vzZhVwAzV2KQwMH2zYztJ64=","GeckoddCyrEDRV8AQO33RaJpanEITJPjInFUUN1Nb1s=","A+7TiStvDmxdoQWcXzeTmFg1qig1AKgSmQSpTIfxYb8=","COK4Jzv6MMGshQMG2R5Gip6NBQkq7ky8gMaHJIRjujA=","B63Mp22DN3KIOaG2rDs+1Cr7h9cq+Y9S9Bby7FiyjOw=","Fx7zeJa64rECCgpYOb1ReEzhG7QjfVSMFxFp0y+hm0A=","IP/fy4b00AUGTtvClpGMMy0y++/xcp3lBWomq7w6Nfo=","COzXpvFzXu2GuqCU5gj0iPONuzmPz+1LmUODoMqORkc=","HD9dhuWSH96YkBifHYxhh1QohgDmkovBgqxNXkyfDMs=","KcYRhO2dRg8zdVihr2Oap+PAl15AFO2OvK1KJdUeq/M=","De/UWyiVhygiituy29rval6bGmSQKnNPQCuM77irO1Y=","CnTqItigkzYGBhAXmsHYL/+pSS33be7U6mDgEzsIEag=","A6N78S2vFADSl6xKwTuiTBfcJi2xbIUj3u5ODM3ppoA=","Ef4XkNWrv1k1/yIxjk9//mmWatovkTa1T4MOrLCmU2g=","AYFlhC9AY3XyNGaGkVr7FL8f4FZMiFjuO94Kuj3l9o8=","Jh2yXnz/Wp+3LydrH5JgtmcwD7fTYbUP1cDotplbBfk=","KjrDMUsrZueW++Nt93jF5GlyMgzEPsgHBIgmtnBLp8Q=","I8qkuA7PqZ6dP+orvB2782nRv8iTfQPQdAYcMP2M12s=","J9smAIXiJImN8UXyP2NfIGbY5OEk5YHoxiYZKbHf4Qc=","J09sX9NKeE1rkV7wXUJO5sC6u/Np55qxOLgWe1YY7H8=","LDop4TqE0moJEckona8apM9YQKraBwHVfiPfx5babaE=","HqIQ8gAaM00+gB9OUycNQtp6rzF6VTtCgqp46qIoLm0=","JU2+tSiEtpnBun+g1ugNYQkDsYo+UJw2NRzMOwJJRuM=","BZ54HWWJbr4OS6JtwvKZB/R7ze2kososcT2FBeox/V0=","C1sc7GPULV5hXcJpuIWiTO8wPseMly3RfNuz6RXMT/s=","KnwBXpw7LFfKi30m05obzIXW/6y32fvWbSqPHWTtDJI=","Kbc2uRHXGnnPY9im94bxG9Wr7iQWHcVnp8hR6uHkO1E=","KFdFqQp/49Ca9agIcEvGnG8XAeVzkS31zB4mXVlsQUE=","LZAbgZXDyWyMNuuZ/sATTsK4MEroEL0w2lVOMICCZxU=","GQXTUYNV6rp4WbWR7XuMnCU5gPBFDb31TXp3groFg5I=","I+gTAm/AuABk0ZtcVCiUL99+/qgL+o7ECVJyv9t7TJ8=","I8ChmiUsh+axwcIbGnmAAgDD+/8+MwDn5VaAcd6e+4E=","EcSuYHuuSSQTv2LNqiwoaO0f7G3AYxsGfKYPqxJbnio=","LNBV67fuRoY2XepFDwRv9iQF+uGxr8n7AXB8+B2g47k=","BTyf7y4CH6miD62iL96hUFtYoxWbu0czfb95GyFbFFI=","CjW9dOh8urqr6JrRMZ0snoY7TGMcIZOMmlOVv5eHKp8=","HBFQVlOc4gzVoE0aXEPisA++g7JZAb429d3EZm/Dg/4=","JClUBH5Xcv073tWQ7IvrTFQvLiZMjD4oTNxHNQXFGpA=","Diq9MVtHwNyThJwM3yZ+gRy9vbIApufCtn7ffLAXQhQ=","KCs3AgwIkNdRw/12lQ2AaGaOHf6uYh3VUtLeiH2i6nU=","KJM4UiZrUtnqa1u5I9nZTy5aW+XHeOdeB5QsI0tkO9k=","CZq2dlUFuhGY7xQOd7eVTU++eaBWznK6zjnASMANo88=","KvIR2OCsLY/af4SbjyKaIlxhhrVXYsensq4tHdhcV8s=","DNBw8jQBSigJq5DHHB2mHpipYyL+3Zm2qq4coQTz+s8=","Jnk+KryNPDDGBib7qhWPJjWH1r0Vgz1EixFiZLkwJWo=","IlvjbtDuheH4Ra2oTldIpWaZFSET/2G1BWtti95gwZ0=","AhdPSe2wLVFU0r7KLckrnMWVOD2h/ejwnkte4+paBl4=","D2SJHCyLAg5Gw1lMt1jwvdzb0JvQMIgW+0FzSoaYcsM=","GSqEyi+Z02mR4tKx3v85idHBVsI54Q6fVhQOGFRXYGc=","Kd/Ne2PwWr8nU6jDQda3pgxiQ7BMmhuLMyC7oEpNR4c=","HuJ61rm1qGdzOvxhorPnalK6PkvV5let6R/AOIGduls=","CrR3PxUMP4rTvJU49DzsOVp+NzGulz/v62I6CSF+ZMc=","E8NSoC9ZUYYgLLC5n6WMVUKrZ/m206Cv0QPe7/bYD0E=","KpfPLBDEv7/SmfZ8UqFp+SwFt9rFakHE3U/ofIJGzhQ=","AL7LtHBCvX+Mn2u0IhYtGu0ImihIL3/RarBqEyhf5wI=","AI5E2iHXOGkbiBdX7zftKcW9n3pEUPz1MpCpLMLKIXY=","KyBai21LcGPZMfO7XTRkBThD/n++S4PBeIP4ZSeIKhg=","LZ4yp8kFVv4QjSVawB513zOPzWOyv4TBkoDUJymIY/w=","KaMiqEwlvS3fbi5CACKNlavWNJoCJmrB27pSBzjOypc=","BnjJv8by3wEvT+VeM7torBTO0d8NAhUnkgidBG2CjEM=","D6/zpedCV5T+IKfg62FbixdgOUt/IwQoajrkAJEk2yM=","H49bYRr5/rnOqGwIQFgSBVPkBBA67iE/WkHR0CVBwNM=","Fgh12EeWAvlvQKzC0ELuUsFYi2op3kKEllptxskw6gc=","Fth6UYOjFqHXCvyVHv4s1mfHcyj8/aRYy/X+MEX0bZ4="],M:[["EkZm+AVh7VkW8vBwsb0kjG1T9E0nPZVqDIe5F2kqTRg=","EZJPAv0ZsJJVqqHPRuoFGOPXv+70dCFglJEBHbC9CwI=","JH+n8CIwShmU/1BUVsIgHvm3FzaUmNP/zkRmAe2d+EU=","A/17Ge8shh8i93/4EPVOJ3vJTrdsAtedmGvj3N8FHD8=","GL1BI5w+cVeaZ3RD7P+9VVqB7u6mk1Kmi2fIVjwMKgY=","LXjDpdKN6f81vwoldjUZblcwyn9ASTJ3B4zXXai069w="],["ClFKXCJ/TOyV36Ap6N0STDSJWqRrsnwJEfN4DVAVVAo=","GS4W0X2VayV7haZS7v3y7glYnqxb6AkVd1cj0ssdoG0=","KYzgweMRO7k1xwWOd3K1M7GqnbDAkmvciRflYFyjrBA=","CUy06DYhr9Jx5BvHFyfwFY69YSI5rJ1pixf+S+Bbf8g=","A9iAOVvpPCfWSa9f0ULnazORjLiEHVooFzvVz30yh5E=","KO6ua1hmrWjkQ7uvkWgNt9fiswN+OP72G0LLzP/OyoE="],["J4u0mntORK6kbrD4gstpKAGm5g/dW1wjxjzWXMzk/go=","Bj7ewb7YMfUGr422SNb96hRTRYh+i9z/EJA1odm2dNc=","G67xy1UJtSakIGH7U2V/mbMjJQDoVRksvoyUDgaMR18=","EyRWSse9+eIhZOmFjX+o42ixZerqPa9Otn7lnA3y5dQ=","AFdhuMauyxqMpOpN/CyDdgZKSoAEzu2iEKVSQFYt3BM=","EMnigxWdWMtMsuNf3oOjuh/cKAAu2ZY9KpnxhheKFI0="],["DDmen2eqQHB6ID/u+wuVi72tzsXKNJAdJT0CaiQZ9qI=","CD8N8/GgNR0DMOw/9gLKjMNTt/bnYscQcYTNe0I0SfY=","Gmdk1ZQ/xKcgtMChn9uMcRmEMHKHpYubX59dWCEssmM=","ARpjom/qv4f6Zr3mbMJakiyWOC12xqf/SPFTe+rtaDo=","CMp7ZGV8NUjzK+9bY60kKIpBwLJRCZrSf5Q0MH4+ZNQ=","AZmCcEcek2GVVEawzbi+qRXsBnXxzWSN3LBDA1B6RIk="],["HWs9X26jacJvgl0jYpM+qjHqNewKd8H72eAcoVI+RDI=","EZ7xiLs90NMjBpdsGZQehmS+aH56aWkton2iFabwbUA=","LZ4KtcBok9/f0DSBOBuoa25ikt9WCdcfLGSy2aefgJ4=","JfFmMb93Bg9+o0CHwCW/E1eEMZ7wjNouMUGe4KUp5lg=","FEx6EdpafF2rrj8z+9A8rYbRi8WUx5pJfsuYlO21VPE=","D5cRYmJ3I/P+rayyiwwQTLj3TeUIdS+o18DbKvE96O4="],["JL5RAJVDYgbdCr0LDLuVyIOrMEqlJZixppMG7JgaaI0=","IRYQ4q1KN3Qm+t9waLDBpsKZoWTBwaYD6u2USHDQubk=","FaZ9mBBBsfbwnz+evv2GTnedOvCBV3hqwHdQXlDsefw=","BJMn+nnSjBKiyCQGlH938Gd1sCh0aLMTaHdwHb58lZg=","IwlA3MUjJlj/nClpej/UFtFw6MmY8aqF3qDELXn5Uao=","GxIcBJzRFZ4okAfgydqZlcxLq0wm+4iOw5cqii5laWQ="]]};return Po.default=a,Po}var ud;function RL(){if(ud)return Na;ud=1,Object.defineProperty(Na,"__esModule",{value:!0}),Na.poseidon5=o;var a=n(ln()),t=n(un()),e=n(TL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Na}var za={},Oo={},dd;function HL(){if(dd)return Oo;dd=1,Object.defineProperty(Oo,"__esModule",{value:!0}),Oo.default=void 0;var a={C:["IZdwP860y/B8bb9GxK2T59FOVU22bQkQL/hIJHQ/5Oc=","EyLw//x+SFS9i1/CPnEGtR9ZvVBh2LVlrKL9Pv5RL3k=","GeQU+AOAqi0iITMRjDN9gqjFiUwviIYe5G9Ej6nWE1k=","IiQRmaTfnLfWUknZViytbGXxZGDnmnk5y/3W17kgnZo=","AwEGFzU4Tfzs+aMRwireMntRx4shFhX0HHf22F6KQbY=","Ip4dhsHygQ9KJjO3tLW7YbfcXRmslf2NN5VI/ytoUO4=","DjHc+cUyCagX7rKS6YlyfD9Wv/ZYg6/l/cKKw9++pnU=","IixzGOvpYwbJ15rBEjcmPGuOslJy64hAfowpo1i0Dyo=","DLQWtCxTqCnPT8gjvo9P7dElkzlM1SkFP/TjYEl0osY=","CJJynQlZSo2LGt+/Li7XU5ne5hKEK22z0tLCqt22wKo=","GOOemuRfFLqXoVvWcnEa4SQ3XZ9IKkSHoOM03uLSfHE=","JWDJ/2cubqaduzOETQ0ihwRh0Y6vD4mS1NesZJ7dZhA=","Ib7iuO1UtybvF/dzZrHc+9p8zx5If5kW5flj6BTFcxI=","MA4bKNq+vcDUvbwZvimj3uTtqEJd0MfG6C/sFHywcLo=","LESl/0Xe6mndKWHWcBGvSYK5QF+f443kpzLSrq6IzCM=","DI1Z/ht/VQleaqrZ47Tnsck9h2ujI03RrF7GQQgpG/0=","Bs+CvF/RFdNIowsMRTeNkMyhZgRGugSXWfpTED/NeLU=","L4DtAaIRjQLiFFERw/5spw79+V2Kvq7ogpKTNH3JBhw=","C9/n9oA+Te57Am4HkHWQjLhBTj1lHdEv2mffCN3tnkI=","BsxI7YgkBVlbNNOROPULtbMaljoNumau8XwZrWIuKbE=","Kmfzum0VlJkyrFYiz54rSTgBvxalAzakUYJYvMaGfJU=","JXJyWmfGBxjfZWk0qnj764DI85WutqIM2DPEsU/vQSo=","A7t/bKQ1RbEfGXISZbQWFmV5y3UzMLGHm3loXR3wv6c=","JBKBXoY/jzvCi/y7lX+qXzkzALJRM+kiG46zFW7VwSs=","Db9k1Y3yEuQweHGWbeCXpdsJqT5bwwXOvc0GMPQzr0U=","J0wGwBFY4Ef/SnkeJbe7PbGQUp349Qtjhic/gQ8Vxqs=","I89AaT9Sq/DtPYQve8hdGiER0Kvs/Bis0P45ke5f0z0=","HaqpJlKPM2j05M+SQWa4vT/42u+8+QDm3MTuY8QJlpg=","EBA3idyUca1xhle+u2eB45vZL9IO4aMtDePqKBegFVU=","AAm8JQZQgObG6ZMuNL/eeNEIXxnp/8iWWkZgpNm21gc=","ExLHJ8tUibsXTh3LgliO36sxopmbN32r7ORm6dzWr+4=","IClKRix9DCWutTdGGOXncxZoKuPXJoJPFfAPfLmnAJ8=","JeDGvom7sEvYORyQzzVYjw6dc/2wYln0egVROteiPpE=","AISguH4LM2yakRBp+J2HWji+MT78Qg0ouewofyiBD9M=","KKA+4p9hKqsmj3YkHVTUd6HZf1gHui4YEvTTUNfG99o=","C2eUGCtyOhLgs192vVWn0QbuakA1UnxNMppvMwaNfto=","AVuaaYRlQo/GhredtJWchJW5K4USL2ppMpQINvrOqG0=","G/5SKJ+BH1w2GfFIZhOK6aEnm7dujOyaiTb9w29Z33s=","HNV0/o1eTEKLkrI6lxc0IXbh0wmn4lkFLDG9ya8JH6M=","IS0bvfqvAgBzW8WFGhVq3L+k9gf12hIuH2Ovrs04yrc=","CwR54ogg6IPZA6lR+VsTCTeI6eHKZN3yq7lLE/7p7bw=","ARD1JXwhyTedc7dunKlcUTx3oVzI7g73JthGDU+72qo=","CMUulAGpdk8MJIff7TTiFcGGtsKDjjjrWlDMpPC8aZQ=","LkIrQyPLTAr0b0sOUFL3V0TFOKvMx2Q/M5RA3Dqu7KM=","LhJIK6FgRy1FVJ/3nNBK68SjJ8S7nXjCVzuDWwXFX+Y=","Ek+l+cWpbWzOks/HPqJEYgLwkQDu0gOuQmeqY3oDLTY=","C/ZR+C+Dyh+gN6lB1OKks+CPXhYD+TOhcjrfQTV5bec=","IcZ06nuDR0HLrTmyGyQquaVVTGyfkugByx/kOCthlGM=","IU+R1sSu9X6DGGtX/Z+kihk+HK8W1/bcFVnRRKJxs0E=","ID4iGDiXKcJsb2YhPyJpwmJ4XsaMdZWZwtjj9oA1BVs=","Gqk0GYcTzhdlj1EpP61EscIvyAORQFznbJKyNJt+s6I=","EBTU5d3ZwXs8KyloRHav269/xW6LeZYWpnu8ZnjkU1E=","AzwT7UW0dipH4dLUXX/I+/nU4kVG4g3FlpEfuZFxA1g=","CbwcMnTFaeflxdd8Uf5psjt+Q1E49PMhcBai1wznHV4=","GAMXHJ28BhDjjYMI2xAdapnKkBN/arjNqyqRs2tjMio=","C6YHGqmK/sP73rRqiOSl0XvURUwOfajHSxWwhEiM/c8=","F56Qq0sIpOrSgahwkFdIfgd7cQh5kR8hX71ujr+Djpc=","HLyoi4qz8FiP+H3uqXjQAAitutgI5lEIlyOOoAf0kaQ=","L1CyCzNpK7D2J3feXjGYN315I+8vqO3giDHhD36bn1o=","FboDDo8e9vJgVm/W/P/80hoc/BIy9+xxSP8HbRumhwc=","Db4FPaAapLfA+tg6PMlm8LgoG7SUD5elUWz7nc1UOm8=","Ii7KXXVK/sqJl/Mdb8uUpdeZr7eV5o1Niwzm2Dn23X4=","Kr/6Q9dW7yQtt/WEvWJAWZERJhg2Lxspoz7iExtGpEY=","A8klJOvmcwDQ3QqsRk8Obs+WLWrUG/JoXwd7/XiOs/0=","KCJBdYreTvj/OFgwUojTtKUiCSldGkvInYhbL13DNBo=","AmNcuXPXG7PSE3vYFoDdO8YH/FSH6JjEwtg8HcKBdoc=","E8hmqmbo1QYHncJMLfex5pGZSIfTViL0z88BS76iI+k=","FR8AB8z0Kn75afG29jFZkuZZS7U0TSg5/uZiC2DiwCM=","HBxqXrzO6Mqk3H7xjhlCdPbhmNKxQN3Ml8sVySuhQJw=","GDMMnmfWL3hhqZbX7Wm7qQSw3UWfKyVPx8xT3SjkWmU=","JrdHdAyVvxOcsRvfAvpjpL2ympDxWJM6GCLN3lOHKQ0=","FHVnb7IFCEJG75vHI08xLCFPQmhS3LLsfcN3L1ea+LE=","GwOtkIDSm3Cq8wu8MgDv/+c+4mncAy0uMr0ZB2e8OA0=","IcF1+TfC+C6Zc1vHwgEoT4lXeyeh+E+iRkLs61UvRFU=","EZLgJpprZqjFiHUnqkR0wt6Rz4xx69qDXfLNzN1KTks=","DzoSwO5S8NNPK0oNzRNUG0ius9USHTERE7upeSpFpY0=","B/tSGIO994szaJIFtF5SJpRYoGG8uH7rOx4YPG1+tbc=","JI0OgFHBqWVkDJbG8BDEkx/mSLlvle9vW45HT2TPMWk=","KrVT256tLILOkf6+GAUp7/NSGHX36Qqbi3o8TeSHfNY=","IR7jvaPJXxlU7vIqCoLC7ehETkKnKoIAurahM4RtW1w=","ER2ztRhP90EvecEpkEqcrE7mWlHCBi1mcy9UvN92e+Q=","GnOEMmTPmjobtvto73YDfE+pgzflwQCWxjC0SexKX2c=","HC5aLZMy9lEoyFNYZi1qfEQ1Ot0JwnzQfaAvkUTahV4=","Dis1/hAhuHneW2enRY+mGIu96jniv0aKGiTjYlyv/5g=","LlaFlOXfv63ycrjW6Mmb14XE+pTOnof6ipo34yx6KN4=","BwQ8dXHLfcUgW/2kLWk1J6S8tYI47WpqJI55F92vDDo=","I54YoMhbhF/9a4XpY0PxqDePPGkdrfsijab/eqee/h8=","JeJHryUMVkwA9f8c8fK8hgZgDxc8tl7weAr59aG2dsg=","AxujOFZkVE4+CAHxaYsVAzpgSbJQTpzcLG4+sv0SEA0=","KjN3dzniqwrfscpWh9seBZsgNwy+7MrTLaXDYJQx/2U=","K/1vDp6Za6E3STJ7nFzsaZA9QTst8pt3fQU4Sz56+VI=","LUU9k/s2+/jjZ0fuktkMrZ4C5pLQdIwH/UPq/CzF6CM=","GHvYBD+GQs2itrrYKVjRFYGIgOuA9rcwOB2XSsXVA34=","IaymBfkqSKw1cI/lFAcp+zXD5IzOxEEhdxOwhklEOTA=","Fz/RZPUiSsBsLpnz4uqmN53xE94wqkhei7zH8P0tHgM=","BxxmpkY8P9QpK/HlrLbeYRFC1zzR21kOibYbV9RNab0=","BEpA45aFW+VQ2MzOe4LuLKrvZnW+vpImbGZpgv9yu/g=","EXbZ9S4S32fwhxEKFar5jR3tKT/9+ZWZ/t7y5RVp5PY=","BujrfdAm0lexXGYkvuLzfVtntKZxz83+5Xl+hFe2ORY=","BpaqSMHV/oTKXPWQCasLqu+7YS4yyR1e8wbe843FZzo=","CFPDOpx6fDs1XJLHXeRENl24LSQe758/rEFwBKOhrMw=","MBbAujRnjgpn9Zz5bOFukIFU9fmAJZFxfmbpW6Jat38=","CvAIYB3JVSUX8wP/niLHk6aCyqkyVvLwmk90ZUJgOw4=","BMttdrWielquOHy2R3kDGMJfwW+NfRhVo4dl+Ef3MbA=","Ls9ww3LY5e3K1J5Y1Hh18mkz1iYU8mbmtPWGF3FIVl8=","AfOTpu503WxNUrDnggpxMvjEiJdCMTwGyqbsxV891BM=","Lk1M4/l7+W/4a4jpadE+QV4UchKCdp98+MOnNyPwlNs=","MGAA7ySn9anGUuOpNnV4VU6lm/jvoL2LxXdkYMGMGt0=","JuWNYodnjz25wiXB07k658Q6aQJOvySci95AYXwrPUk=","Ce7gn4c9G/aDlx30185WyPC4uY3cBblhLAoNMXMQZVo=","DwiHnf1PoNwR3tVW7wHG+UzG9NGFU7CLyx3WBDkuwAw=","EUWffp8OPHJ3d+NNbZPsKKJb2GcXFSO61b4NWiACnrc=","BOnLtvbo6AWiD72AGlO3I/eMH1rNIniA9/N/TlsFKK0=","LS/zLregwCZt1GvVk5yamq6Is+mvXa0BpzBPmGj3x8Y=","I7d+sPJ+lQIApZBEfWRacj2bQF+iU4pct2/F/a4W2Dk=","LNbSxWWOwHktruIGfi+VjWhJiGMYpsHCcjOkaemZjC8=","CuHapCC6yQeA0MgwJr/MhK+DlT4m7Kg52naGHnOYVec=","K0lbhUVT0Cp1todjvabdjvDoH+MrXLBy0/WAqRSWe/A=","BW+l184sMrxXNTUdLUivXWySVqS3LhKjVkC1PqlZ4pY=","LsvhoGso7HjqfSLfEc0iSg4aCsejR2xcw8TlDalhqHs=","FDBTwcOH+TU71nfl226ZdXkr/+7PAtaqD+j2J1ef5s8=","BAZLJVhEmaAR6nSsBHqLN0lBibxjNCuxGC4jQhLUK9s=","EA9h9rgVQhVnYKbSmvXdhkTILeq1uQ5qxm3otKBpVko=","GNMxsugYC3qnBVwCn6d6/08CsOKiB4v/Z2iO1ltR1t0=","D8+bieGbGlX5sDJVz4DMuftqr94rRiB9hz+sgMzvCFw=","JU+AHzyJxiQ272PfZ9kSwfIxux92xse0l/dwjbz9wXs=","FtjoXleBmhCmFGG82NPTyWPE+Vr7o+TY/Q1uyIK50WE=","KclWWqcCCIvUQ+RiDYS7K/uTJTqPDwTlz0CMkoIK2oQ=","KU+2gGRkPYvrI3vXBaVXhxtfFAhiTtpG1HtYOmDSnPk=","LCbzCDFAwQS68kw9+SIxdYSqEXcEUeaoRt59x5UZcxM=","IxgRJ5hUcH26pTfLJyQecCGpSaHZZxOAp9aUTIOJBMs=","FBk2Wtu5Hx99G7CqiktdEcetBXDMbPNji+nFoqJ1tJU=","FnRCXy6fyqZusAH+ykjd1LKinobUUfANF26jW04C+4Q=","KR+Vbe9ZuHgCgADO8D17VNzC/h3Vp13BgNbVvtiYzTA=","LxMCiU/momtbwD+6ppxNlQEjlNeN5JRUnHBXt++WW8w=","BifW1tlNChmhfbRcB5b3243hPSeKKyTJmsXZLQoaHOI=","LuKXZiuv68sB345ivV9Q8DAlUVsQRl1Z86KU8L+7L8U=","EYAplF33c/Uv71Qp2nZrkC7q59lnBi/dh5xgob+rp1s=","MGBC0mL2JounietDI8IWknl1L/7GuFNsxotTvU3w6Fg=","BHKhOsfanr4RMuBfnvYJE1yCoOvZJ43vKzT4znCa7ko=","Lo92sntHQYDwDFpsLWWFC7+WAZvw1227R0OpcPQqEw8=","HjOYQWX0fCBKM/7jH2E1RLfYRqfV6kUoDt5LNiwyqqQ=","F/IuJyUr3PkacrWesnamZs5P6nrfussuqf3yhSS3tD0=","AFR+fHDuTj+0pNOGyLqlXYI6DwK8ljtDA5uIR8/25sk=","COpMy/gVvjJczRVJTzjz+XFTqwnFSoeoUrKplIByTiU=","J3y0Xz5jJxhnO6BdSMcS/nQE357/VAHOvkXRlMZ/qNs=","AVnsfqSarbOosKI8HboAI4B7DQmdPEC2nfhmqS3Iezc=","DDNIkpfiRJVt5XnFwRKrQMf7LYmGaihBj2YKhu4YUk4=","AbtPy64oovM5lWjGs4Sdon1t30/mrau1kRUWee030h8=","KiM0PSSpz6O49BP1LuGyM85MHVub80sD28bXM9UjBck=","Bwem1RWzutA6mwbWvgSN76hQE0qs0SDzj6kyZAFrd4Y=","GDfbVAHdbsMLprhmGE2lbo20Of/QQVTsRptiEgzjXLQ=","JEhyoNJ2a4VH5ralr+q/GY4UCaDwAm3jbBAXk5UvbPs=","IE+xeSfOhzx2EZY5X32kb2ecozGDKln93SrjHoTrofU=","BW9TA31djvx89qb+uhjRAr+Bi7unC4bdm3Y6EgcvTC4=","HfS8XXMjn17DuJ761T35zYrY/KVDvgH19A/qKVIHG9Y=","H/tsy7oAEVXUbhZ9H60cE78okqyHzZw0fHNKte9lg2c=","CO426IFJZTmwq9ZH01PlG2P++R/JRIgABvLCbC7PKiQ=","HDCAwlREMzKj5ig9W6tvf86KqmhIe57k43LLxswXJmU=","LcYEBQDnMp91o876TbSfm0cIWxZg+Ic7PoG3sa+Cr1M=","LIvKndKTu2fbH2b/LoIEeuk4XOZ9fzNWjNTCFqiZlLc=","KhV7l4b5Ikz2Nkiq7BufYcenCH7W64qyDGxUadQBt98=","Hg+wzdilRZHELnwmuQJ7d0F+TmUitHK/5h/4nDm8QOk=","JQFE0c6gM/14vXPuTqTP3NakL3wA4tfuZ5TUZCB9Kz0=","C2s/6aelJcpgRDxLeKjoMJV6rgQDEW0imDouaA7t/2U=","L99hPmfRdlafR0O0lj+MU+Ukgvoy5wUkfrZQvHvWFuk=","BI9ksUJ1+4b8VbPARpzYkwZ1KCfDwERjvlvqZvvXs4w=","DyAnt4HCxSSQ4R7Ut7SU1mzcFuaQtqSzySTcnW6FSDI=","KWUnhRYLJhwcIMdBUkomFHzDGR8zt06/F9RM4viLD5E=","EXaQngKls3v9R4EPy+c6+H/qEwRwqkS99rBYxNNZ4Xk=","GA8mxs4qOkd7rw2ljQaXacK/AVbWNvIlXhvDXAHpiZM=","Kv7tzCzsVyha0i5zT7f+PdZfYmAcHKSISobHpqBfCD0=","DdIah+4iYmmY281z3XUa/7SdR6AumVpBvKJjmRAwh9I=","HSG6oJ1/UPAVn6igtuDWFEbRx9tdFWZGnaaoWqciSWI=","LcWcTJ4nXNjCUGKCzFu4QsAUvqQjaxvCeoVjUbSK+AI=","LPYtCFQd/wkZumiml/RPR5HELRRHpBUTq51fdV6x84o=","L1uIU+LNLkep/t7qQEfkYIPJes1LaHrr0iZOeg6zVLE=","BYZTKKmy/UaRcMORxbqNtcZu75k45NpbrjPycDxHBzA=","KXYcn8PSxMwbEmvh3ARwqXuPJyXTJ8bRypI8KqgJKx4=","HT+x+Nw8d8tRXDe8gQ06XjuWVS1Lu1f9sBwq7rHZoEg=","BfL763yuCjXuLzpNKWTSQaDO60ez98TIe7OwUshwXZA=","H0RQFKDyZggqUCVxUmCcwhkGIVT018EyiHRpVLl5mPg=","LTWRfLHQymEe43z9kHjJJPyEvRpL/X2zzjngWzj2mLE=","BaiaTrQDh7hRLy85i2Um7+dnFpUcUA/I2ryDV3UzXO0=","BOJqo/AmARdPRs7RVZQynk9OW9XX1T1d9shjOpTdAd4=","IE1YfWFSbB4Efh3GttQDueuHMPLi37e8c1DZObrFuQ8=","IcjKIT0vRERq6Qpr2uWEO3wstT7WmfNmdeqCgKKkIOU=","EwO9kh8y+kxOc68hRXxGttaeLmosOWcWIXeHtG6CLr8=","BhOCPFtqvu8UOHRlMX5xO0Ws55wORDPXxNNSCX5cg5k=","DyfFMF7pePT3deIT47oSqQH1EUTOHqibtQRpMPXsVdE=","LK0RxpPGpidTGVCjB+B7MOqKSVEV9aU4iCd5ISDHvbA=","FrslaIPETPNzZmGORsbbTj2pep1K59XFhZWd4ycvgrE=","Ka/lC9ePcsx2NpWXZBAyS/1nFXpczbeuRbAAMuHVelE=","CTKZAuWeUkOnJq5co1QIogcUhgmrNpgTlyWu/imusWc=","BLGADmAMkOxHdrxq8XZMy9wQv1XDMU9CrNBTGtU0IP0=","KY0BELuQ5MNeKTx6fazt737pNCpZG0Mw4nJ2qhO2etE=","Ak6m5oyxqmtAfgImSaoy0bfqSjUOUQwH7uQ5KTleT4I=","Iq46GoHEVQ9foBFuE10t8r2faDWg8NA/Tdk04TIKPY0=","Hw9e7p6auyovSuBNb+CTEf4BFcHhmcKOInBeaBRC7Tc=","AjyGYGYW8xevAiRk81C0vugML8oyBkvL+D6M012sBsc=","KonE5bB0++Z9BMsD7+GMS/kEvsR1mzPa1rLIbr/SudU=","BLD0jE8uBb2kuc+AYHX5wnXfLPYLX9EUcOqnOUqCcn4=","Dt3losATJ60EKmhvRDQXvY8QfJnrfAKQDJMae9jLNJ4=","LKysycnYsABNiTIID5N4tgZ1qL2FOq0dxQZy8TchLME=","CBbzNQhiHy1WNxFWsKP3cxAw5LIY5EyQqIzsrwcXDew=","LvjgpFXUcrSb/9qTXI077hrpJIYI4qUtU/S3YxPJeSA=","FxhKivkZmrpgXdHy3RjrwC4wVc5AgGjsyq8+p8CjNK8=","FjleFTk3qDZg2294RGy5lYNkNmAnd9gfBgcTC0SIFEg=","DhdAiCI8OOlED8dzB9ZyCsMnhMnS9ZHiQ36uqbj14rs=","GecPqTd4j3ohJ1c9VsgZe9DdCWFA85BkhlxlwxtH1AI=","DkNMMp1SQq29qyR4BJX/lyML6zRLkY9vjWvX0hsDaS4=","LIioLrh8gbpCohG/LvPBWHWsFXx/OGj/81r59VqMIrw=","ER3CI+PJ/HRSqcLeRpODkV8zrfTPW0n9LgHFHQnM9DY=","EGRzU94xl7nLSPRTm1B+RTk7AAhC6LqhIYrwl/hxuuo=","DlPWQSHAqFHBs/B0I1ggNKvOaYUl0KR3JDVMBxUvcDs=","KJGTisuD7hk3VJafSqWmKlMQgdvKTewiYljqkphLQ0g=","BBBvleS6P7dNvkvFOrwXAmK6AMfGPtjEV8MidTLBLOM=","KnPmG48bq/uzixhvQB7tDZLFYTuiXdL/TQmffdPBn+U=","GOFrJGQvGRk7eYuSO43SX25IVtayG3Ka7SKBqxVPfF8=","DV+EmxZqufb8GmRGfFVXAp81mi0PGUAwxN2HXhKuNIU=","DiUlDFc2WinGOk8VMbiw71I+qpPB1wrNCqfNeETdBEI=","D4E9FK8Mhbzt+/SAs9gLnzNYU8YBiFJtgHYSdAdKWZo=","DSNWqS26rowkqM6+1kKAg+8vRpRg8Wam53Q3fngFVDU=","H7bc60lb+Q//Vsiq1wtAv3c+oQA83Qkv13pDlh6dfcc=","LApwzteZUadeI8WjI/1wbCq4fDgc/DwmkIFid0HCu+g=","E9xrO9sFFn3OtLEQNwZKxf0i214inkxrpV6DgjIdxe4=","IQ+ot3eQfsMLuI29fA5sqQBOs0JdSYAl2myQpHw1Alw=","DFz6lXE5tFpy+7+ApBCqtUVKmCZouvJLDdPATk1ZnNk=","Hx87xMIdYzQA/Pi9t75Zt/Zc7cBrsvyTqHO27xLg9Ss=","GI8O6Vqd+wPNXj+zCCcFfpM3EWRO571XSQN0wNZ1MuE=","CCOHfr+KhCt36ODztEhz6UCXJxAbGGyuK4DQz6cm7Iw=","D+gWA945zPFIymOQ1vi9yTlcovP1CHgoPZjx8OYbGv8=","LvYf4ZL1Kp186/QcE0CY8syuNcq8qhKWNWZ2j/G4NwY=","DbbQdrLdG59NVtL2b6tNe/xqOP73+a4dTC+MRLFRD1E=","KhlKSuhYPygYn5wBHRB7gvJ55qD4yovJywqlgYMcfQY=","CuU5+pymfUr0j7KS+RiMnnLy7qri5QC35yAXGMjajek=","I/ZqiUsd9NJqi6ptBbGs5RH6/9RgWzbP0Su0xtwrtNc=","E3zvUirylCrumk+4AXvzMOZGAfRmtW0yJFZp2f5bpwc=","GHqvy4eEGy351kwXZ3iaayIXZ+RjTw1VAGOgv5J4jDI=","IyEudfS4mZKjZHA27jbXSTi7mphR4T17blLa9mxMvSU=","D1TL6Wd3DfqdBosvxTq8lkibt9JmISZU0ybea5rxbWM=","I9g6YLmIerQ1m4Vp/zohm7gTZ5Vf3nKmIALTzVEQH8w=","LqZ2/n8h/Fg6sLDhiQINQssi8ERgfuFb+sfdZtpevnY=","FvN/NXoMWEgho1arVqFtQfBFApy1FfWO3gAfBagHiQs=","E5CTt4/JYDpCiK5YEe0TEb6RbkyX01pc8Y5LfkfROwM=","Cqul/K0cBHAwyL8kb0FhC2jWC60oXMFfVZAPUneKEbo=","FhGCeVbzQ1wfxn3T03lUolXqoBls3cXVphh/oKKDnvs=","I9tWNi8kiRJCHl8IetFuDJ5tK7WdswpSgY5Blkt9gSY=","LyFeZAIHqIsCmZyY8a+PoXMx0Z6j3h3s/o8uR4IkIJw=","KyomGRfA/s8rzhkCH4UG43jp0+GvtFHp0WKz2T7thhI=","L2YuTN/vX4IsuVbfdbF7RvF7CPkw9UurQySgNj4jOEs=","CHDuqy57segsQmwqsdZf2iXUJnSaU4tOpmnqox9mGgA=","FpQY3/yZ8u9dxrEBNxfBNECTSdhGRXmFclsVrGoVL6w=","Ah08skDWQAM5rVvFNbT7tAkZzmuQFi5R7GiVp8q7Q3U=","EuRcRsRbZgtq3cFJ5CFu62+xlHTIzOTXjjTDzBgCSvs=","DHyGOUt61h2MNI0YVAPcdxUv0xC10FlwN1oRtavQNUg=","MCTniyF/hdjv62AAj/cNM8PoTCONnCGgQSG0mKL7sTE=","I1l3EBtWBxztMWPB7HGHkJo+12ebtUrUCBG6MY4a/IE=","FL+IXmb3wB/ZdO/cC8LWKO15rW/GulEcWo7Dg+GnOnA=","IjMlrn5zzwk+HViRqpLtQ/gmEPEoPyZfVlSLOAcvONM=","I5pa4Tjc5qAZ9EVg73wZ0rgCXa3wQFWSJvVIcNMYpX4=","AdzDURXZBX769GjXyKfUYEjgE1nJdIVbyZc48LJHZy4=","E1mkABLFMyWHpN61YEpDbiacKCuiQMygptd7ND52u/M=","Cp7jlxIiPUwMN8JqlvJnyF/I4xrK7gwHNU03mNxQA+c=","EYEtHKNnGuaIqYdyM+617CmGj3zXxeEydTkahBZ+AjE=","JDXNaZvJSYWUXYeJYHcPkpjUDA4otrWXkGngWQlS8Lg=","K/AgeF5BF6HqWTDNU1UwO/mqsqHqDWaFOR9A7qsq8KA=","LO9seFd8npenaFUpLKkuQmmsU+m3Q53/usLtpcZ1gCQ=","CaMOAMnw9vJg8F8CnNqnx6/KUGpc5WLId7O41UMTVCk=","H9hZKPjIBTybJkp08SG5C7+a6AY+DolnAWW5umaj580=","JEgiednvpXhips1FJKoonmlQYG34zfj7yu1LZ0/a3pE=","ECYKOc+w2CrYGCppUfnHgKRV/B3kjEF9bOayfzZGIYU=","JSB4J6dgUtSJuyaYcw1cP8lxkqRCBXjSR0o3rn1+MUg=","KONrY07L33uOT54aNH35XXcfFdl/LVxAHt9qbjdYdL0=","Bz8N6m+D1EPuO6J8W38AZKt8wNNLq66Fn2v2bUah4WU=","FMZhhWn3SP9lUUQ3rbz6l/h7mw0WkEjoTFU7qYiMRR4=","DHZ1oEK6bMdPpYigsm/cTy0fEZoP5u8RG+ai1FtLvK0=","A9+tfbPzLG7YEwxDz/YE2+HCnb/yUMaEyVXwnklfs0w=","IBFCgfvjXBiBZPxtQUQgD8HZ7EM+/Gd0gL0s3LNbZOY=","KeQvUhix6j+tBqSOIpLA/j3wiixKgjo75LmYlV2ooh0=","E79AOUiNlLG2pn8lYpba62x8gPrScm1um+EeF8I1KBY=","GEek42s+rOE95Y+kZiqfiMnBekZObb0gg8KTjCJ+4/o=","CnogVse3k4Svn+PGgmgwFF9R9vjKXRo0Tilcp2Y62ic=","GBJ4yqFb37WUDP8rwyFv8GpFli1Jed/A1slJk7t96G0=","CopvT7ui7gmjbTkPuxSF+3ic8/n2QdrgEVIMjxDlekM=","CPa0wNe9XkyH+8aHRSDjMpwGe2hB/IM6o3UUQ16YfOo=","IgaywY8ykuepqRA5aDpV2BPdkUsMfVIyEEJP8PKBffc=","AYbO9cBLOmwy2iZAWhbN01nfV76Okykay+uj9IcynPw=","B1r/Z1cOoXx8eckRTHoQ1TPGCAttFaW+vRIE/c3ncvA=","KwbYOJupYhw4adLoslrBXiyXOJyq9/l6NXAL5mwWVag=","BPxtCmtndEQoFhy1IoqU58DpXe3oBLK0ehgFWs1zeus=","JeSilbTnotxxOU1B7CqPSxJOWMI0RIoCiiw7xq0l5ps=","AJTCSrAcbbWU/akHtjmns6VDAUOTQOiJtsqctsugZ7A=","J1GCGm47IgbNa8PNXZjLrohQdF7Gy76kE+clTSpRRUk=","FFquzCTjh425qNdxSbJBntW0LfAl7L0ajpfYuBeQS7k=","DSqgDMblFn2EXuGHe3qgWbXlFRxX5MFj2jQD+alXVfI=","JCM7aYYccMRJ69NuRCDd/DwkK2n/bj1MYJDCvQinZMI=","LFX+GnUUfJyCb3Yvg21WRaxBhLoZJ91Wp23AVqmJVmc=","GXebHLFqnHllQBZnSXi4tu4aeLZFed6T7S1nueSfCY4=","GAdyG6YPuuR2/2ASDB9H7AvOaSz8ABAq5QvZN2xaIqE=","HAII9auhJ1CAL73DvxLqyeAK2nCPFn1LFnvX1LA9dvE=","CQtuKP9UHMOIaavi9dv7n76IjSECHynSvduRJ9PCc74=","GT1sfnatlOtZogAQp5nHv5ao3ajJCIfWUhTIZl7NoBs=","Cd3VvAsfjUxPGnoQLBuhLsfnVAzaKFpWTqfEdTr4qNE=","MAod1f2hXRqc/iooeAGBcWhyHaL5cBOVSeFoEfVVvh8=","FSCQjfLu+6B1u0HP4HQOHloe4YHOSSAW4VJwbkk89HA=","Cz8hXVLoXsPGgmmOvLYigjOulRj5RQ9IBonnzzATeEY=","BQmWoHr2dlxWqO4vc2ZQ3rSXK/zdsZSg7+sZVNqopNc=","I6WTJtr1+U87UZLBjtBsxYzZYI5EE4aGOZ3E8e6Aet0=","HSILmt0FkoZomM6DSxvcIAOXboFcDPfT9ri/lnrVZJY=","GbScTaPZ46JtNlZnOGWJI0d8UE52o4qCsbEkcQT2geE=","E53sxWewa0lb1vPPAGwFt+HyXVt6xVREXDfdKFvqrno=","Glp9i8qNTwfUzW6bzQDACeMJnpmvMIDeu7IfkPjltCU=","BiHjgR09y5WE0Ki+QeQx1YjJMnTIVJ5iX5j9FZg6gJ4=","AqQcLSvPFGZKATCgIdqm79SjsMOt7ThjW/+X43he1r0=","Ic+1S6cvwGeUlHzDvaM9gVNVQW4qrhkITYRHHu3KOZ0=","BRFQk4lAiaICpM+NCuoynYPL4OznQRYPmXXPAbfIXcY=","LkBUHKynZTISgnEpVZq0IqHAam9IyXQpFHDGX8Bw37Y=","B+6t1zAoT1q2B3iQC2AwDSeXAAGqY+Ruu3+c2hFXYA4=","DPM+SWTTUK3yBR+OLoRI0zJNJNP0hYQH9P1g0zM72Y0=","KHxgSD4tsxPxor2pLB4cKLZe8Lmd9Kz7dXCe32o7/Lk=","KJRA9Lf9uLKyJmHQdC6WlROcGh7O9Tw/694LX22btKU=","KRvaLDf6yWKiRVWnq+s22Oi56yUiL5f0gX7y5bC8cgg=","DhBUSViUEkBM2nuC8U1SdZT/mdBM6olNbswxURn0K3M=","DmCX8K1BiscSOufrps1FIrf/qNyM9gofg2viPkHsJeU=","Iv22dnJAF6+oqAacYtMHqk/1LBRFrUG5TD5AbjPg3vE=","AgTVlK14Va0PaVB0KxnmDCxTOIF6q37nv2McOqkhYPE=","C2pkPa0/lTh3EQUX97M2UYyPwR2Gi8cuds12w7L33Bs=","BBiepsK9SwD6Y0mt3hcCfrfXY1OhC9B9CUJjlEfLQ9M=","I7yESdiYp1JLLf3iYwNsrC4Uk1E0+MO69/HhPqLe7Dw=","ABfvpgjZlBvGTTngslk7dCV226JX+rMj1MmcekIQehY=","AvBhR16diIizh3+TCOd1ihb5Hjo0pYVvFa0Lny+S4rQ=","HyV9TW8yd2dKBhMw1z1roTXafLDLoxhoaHL+HvbVLiU=","GVNA9sH3tfYViIS9I3cVFJzqSI7b/YD8m5zGHDhIU6s=","Jz4gAXnFxF2GCyaiCywIU8EAj5QkWdXNvtYz7eAxqh0=","JL0OzqHh35evDylsDnktZ24sjgLoCKFYvb4BQxxeSkg=","DG5vD3wggR9ARZnUWK9cbLQatnFZnWNQ3zjoIQS8aDU=","He4TUkcCNc2OEptWEfqVNwa8CNWPaj7z2ANw2NGWg6I=","G+DMMDQ6Fo/afHV6wMfl4Wr92/tyZYeAgHJaEvoSrUw=","GkSav2RPaKZMIXxqBCojEQfKjZxhkghYDrdrvZIV2YQ=","CAEX3eWPIopFn1nZDmS6vi2vR2qaLKAY+qPF/sqsF4k=","JKuaFnthhV4PLGC/8JjV630VFm+rUfK2LICd4xjW0XY=","K1asqdWVRgUDNjKSvM3IDoIyAfcbVL2mhMk+sIk3hPY=","BXNh7CPIezAID/HN80Z9V8laEq+/xIq14eTeAWKkG1o=","G67Rdxd6Jey7+vTyBNmSHq3jaJuhN4zZNizBQUUIn5U=","AMzbbV9JE9dlaInDEpdf2+DgMJqEGEn9gI119ZOnFIE=","LFL14e9X3l3eUoRxzB8O54OZKd+Y7nQ9nv+WJRVWGRA=","AjSkoy92fy4cpI2tOi/dP/VLLKPVPOE/yQUkFK1/dVU=","GCtMDFUasM4ZkLRyJ495S6nMYqvMkKie/dgHdlWONDM=","ABqyu9vQQ9LX0aTrdttN5x/d8Z7fENfNuVUOGEblP9U=","IG5s0eMVTBE6dipijiSUCQe0HpDnwtQ6olbqUkmXg1g=","J4Fsq0vsGFd70zW9r4KYeYomG7F1E3F31GupXdA9yLs=","FoC2MqBL4+se1k71iUQLP5Umsq2CzwuIOdPnsPWFvIw=","GWsswObgdijfgjT1jAJ8GQx1sDQlEe/qTDckxP7dbnU=","KasLYGXrvvxoRgisxr87X8aTdww4v5G0vjj+b3JkdIY=","IkzoFNOcOC2i1l7M2d60gFbt4Yxe/LjiVRW3J+VAqFk=","GV4cso84qctXsscZtQT1/dHUJVm2o2gmT9D7/vpmVZ8=","Dp5etw9EkLptvRwO4dZyTM3Vis3xOHhc6Y7jhI/7eEA=","GZXJyOUgAU5EEuxlODnXgVSM9x9G++tRkZWCImy9WyE=","CIYJXMN2yH+mUwACg6bq4RAImC8nEEr+4Zj8N38m4yQ=","E3YeIGs+ibI94jQr/Khg+bDZo21IaqEVVl+fUjacEk0=","IqjGz8DjilAKR1FcUZrWpyUG7A1QjeJZQsEPUfDfq4E=","GJhenH6m8aFpYuTifPGqSqMIaTixP47pRlpex7697gM=","IVtSPOPwVckusUjAACfRrUBqKr1kCBBD4NFUkoRbMaQ=","AQL3jHUTsJO4hXJrffLnApiAGz5AGc3UIjnXZEhYjDE=","C86IYC/ToPCriIWJGtRARQWPms4R/avSTo36GwpK5yc=","B0X3YPjUZvwhBD4ikubLsgtiJ1F/UgAlESnFSB9S+ks=","BAbeOAdEXG08vfexdMQQqZihUw/MqZFTWiomLeTi7lY=","Jneec0Y0kGjbumb3hPh+JDzCfKtZ6If37XoBF4h9Gs0=","JRUGUqCK+MpXTHxcd//Zixclmh2RSm6kHbdQFCZ5Sdg=","ALuNE0OAQPZ0p57UIgLFv25n3m/D9rZcqDfOq3lfzG8=","DB6/QO6qw9Shkt1Q7iXABn9m7/YinQRdWoAQZ2Oczyw=","GjlzHrMv21HdeTdU92EDtcq4aUeq0S1JDUlRky/yByc=","K6rT1BsYrhDEY68WYuyyjGmIUk7d7TaUNnKg6Fe5YPg=","LneNoVGLak+tLoM+QUZvsv6C9PjfG1whjN07fkmvZ+E=","FW3HF5MNZJAWd0ORHpv01GNK4Em1OtqygWmGRfixbcY=","EX8u8XEmkqudvcUdtJaLRfXgEE+eUoEyk0nZCLI+Ixw=","CygbXZ3SyhqS4tg7UIe2oI1qsIMw9HUSqgR7L4i6aMw=","HCgDdm3ZCWVnozZgYXZPjJFvKi3WQLbuwJQsy3XUB2c=","EgF01TulfRoUG/QOTHBWg2aL1VgAAAqrbzR2a3tldaI=","DDeyUCD4x26lU23lTHIuR9AXldMbXtc0ZufYuK03bUY=","ClCPNFzJqLDDC6J2UbocOtg5gCWkAApcJQAijET6kbg=","Eq+kn/TYtMbDcvfgZYQHg8uUl+6syEejQPYfGCPLKo0=","Kfw3617HzQBICVFreqPHFvT39ud3L0Q+BzCwHdUHGlU=","IEj7nB/aztD9xRWUkNspd+V9vL/3UUrR5SonG/hN0ag=","AKbEIjqr5YPombvNAxSkdDGB8dXgPbwRyKTQJVD6tk8=","FfRiq1shwxVX4l2cItjcagzKk8jtaKNWVc/3RWhnZNA=","J7wcmvaO3443MBlxJL5VnxRy5+O7oNNeB5stG55Cce8=","Gi7BSPkA7q44wNPW79pk4UaSnHHrgtoxOaOoWWjsbrw=","BP9By1U8phbQYWVFki8gMLcbI1S80cVdfqvK6okEwi4=","LyxOexioRfzWrdZwCfwjexSphGGSYKez04cS4DoISbc=","IpJcYGofCRwdXHEi+OGo/+pqFAAxEGgmrFOpxp2EwKs=","EOKox7Er9wJmwldXPKJZTYgRYz93gi18IysynFtOcnk=","FxIxlZWuRkmSUkv45Ii3g/pFs1SM0/Fi1Ya84x7HGEw=","LpYWmH0zMziOpaHLVrTBYfJ5/xlFSmSt5D2u1NzaXAs=","LGghDXVmDfXZqDkqKAXqFhL8YTfPWzWmj8HwOs+/5Mo=","BTzzcHKD34cwtuH2N9I8Z7CzUzBho1vLDLD5u+TorcI=","B1d0kUg9A9d2nazHlge5iXCBwAld7Nzj0ifAWd3t22Y=","BWObIyTAsK+BxbJWymstRrler4Vfwmztv5BBExLeShI=","DskJROuPw2xS8/0TdjcU9BzqH/SH6jnXC9lOm3+PFtU=","HpbNOsNFuy5b0+dVki+Er68wPW+yJ/xo9wO5NmX16pY=","BAhCVAXGa6p9SYWObVhx5bQv/rsN+IWoJJQtoeLjbVg=","KE13VmtC85E9QeuwUouJlCbggFqtuZV6U0sCKwgaqXc=","CwROWYSIfNozf1jHylCngSbetWJPZEUWI5QnlI19Brw=","BIaXIXnuNJZ5W97RwvyWdMDD9xtYFQycUlBjpvKzQNg=","JbdWgxbEsv75tyVDtgM7MXp7/kBmI+R8to5ceSlua+4=","DOyedMNEGYcDzv8opNESdfbFwVc4qlpUoZJpJh7GqKg=","K8w0qZNFF0yXpl6JeBlEhqmVfJ1zbwyjm5gTCAHRoRQ=","LdsuvArJj2SYwPK+LXPoanhpQKHoxVjY2+2Nb0SwJVE=","JkK0ogjlA+NIBxjU0gU1H0PaGD7ShO16OF73zcqAvqg=","I/q9sJtIG8dkECroXM8eb/ccd2L4utBKLeP3oCXLUIc=","CuTtDqatt0udMn+80B2/N/X2xGdIDIql9JUSTPcLgj4=","CQNOGmRtZnS+8EGvp3TjY0+vitzHxxvC7W4DsLRJIBY=","KBfqILRxpL8Tjex52E+fbAAV4MoUe2UGg99LM3K1XvI=","Lft/gUJcLe9r+k6DPlHpEimDl954/Sqhf20d0vE3nKk=","E3tb23RlI8BR1oC+CNqmsNVMn/cJnyv1zolMJKjvHzc=","A5AOx63I4or3BGgz260/oQJOOCrr4CvLU1JD3cohqoU=","KyhbbCOyXFLyB5hjx1nmoQwz348ZFVHq1T6lCFEctVU=","EkIGe+IgLRssMrecRk4tbJd+b9EtizUoHoTDdYZGE9g=","HoaQ9bCocpuVNu8pIKvn5vPu6AUjexWNmX22OxdSXu8=","BH9RE+Eoe1VyyC7bNp+w9xepHyYe+dgXZKWyea2cE7o=","LYgA8hzWd01aaqWK4s0yWTWT0XO2hxIqTWHER0OQIQU=","J0uhUh1bxcWAZH8Q0aTEyt7vCIaF0ZdpebrYE3VvhLA=","F4lbfBDWpHUxDTSgc3767d3Kjx7unY1W5/5JNMi1ZEE=","Bu7RGun3DfXO0JsabbJYl4z1vsrS9m0Vdhv2Hn3BNEA=","MDa1IcYxzl01meN/al2vkohCzvy80sa/hOLbXe10jwk=","H1LW6awol2xab78WjIGEeGRckNcuNnYJ19eAWmNnSC0=","Kg5gNWh11qzhBVkys92e85w92HEJHpajI8FZbO2zXms=","AgiWM6YZTz7Tju7CyPVNDH9DSTj967nA4YMNvlMRw48=","F4xz0naXZdhTgyg/2w12lFfP7wYSuqljM2usEkC2BMI=","L8ILyrqePZbrzdcQ47NBg31dDbhJ54nyjEvlAEr6GaA=","FRpCO+5n+xTVrSefQlIT234PIUlJgt+HI1TAHw9Kciw=","JdYWGeE1aQxOEOSv609VeK0PjiXCBzU2aJWzHuvN9H4=","Fd1Xm70HVCkwHXKV0+aF2DK/nzbFEnfQnyw6ZksEXNc=","I2+im4FnjIoQn9NhwcqQrfRCPBPPW4zBAytyg7zJWbE=","KoDLrJuITiA2hpG/FWfLcyBTepd9oQ5TxbrqNEbAHR0=","EdTLiVeTezYoo7P00n8nbMDBebDCKywT//vehf2RI3g=","Eom/jsUHv3UqB8m3HvwPgApS++sWN8UBD6VOratAKUY=","JvhCsamTlCl9JXmfLwPcnkkD530t3APsL7FVRm2m8wM=","FZRLmVS2GCMU6Hj6L54JHcxA6txI0305vdXwmQXDo2k=","B0IWbc2OvYV2pr/g8f7RN5OSj4RELHRloAEvWEQm+t8=","CGA9Wg6Te1NTtWsFdo/VC955LnL9YcBjRMvXNXB7aP8=","DKoXEcZukwG28l4hoxaD2Av1jYYDLQO/0luXd+23SnU=","LWUG2mldIIff+HtfY27mdvqwDDKuRcdbPbNF8/50oxE=","DZJEsHr5turv9vhAScsuAdddxMtoUzYG6Xa4swB1jIQ=","JDq8PDOC+qXd4/HDtDIELT8DDvah9UAao3rNFcscjEY=","FoQW4KbSddMO2jmJJC4HIwJHJ9OweRsG+OG/6O/kAZg=","G83u8DaT0a0OqAxlaIZUr/5jSqFMsRrjpJFoHZxfjus=","AvZr/aPSob3tsKuL9+scTlUb71jZT61/fCMRB+VlOQk=","AZ9oAhcauCpZIvAj/ezAl+uKwf0KHtNJr+mnuUKYl1o=","GVocc4OY/u2MdgRooFVsIyZFod2GLYfB9QjJSa1Sw64=","CjajpG5uwWVn364fhT82Dm8kkkgQ6DjLJO0bD8438eM=","ACEjwp6of36ns1wl+ejdPoG7w5dMPBfGB82EDAnzdK4=","AqcXSZy2wx9x8PA1Kw9b/vMAW4DpOlILbkKzmFeJ4tM=","D8BTWEsKRgeiKT4YuqMJxS/ckz6bqQ/TJ6qoyM/E2qE=","ExDRlCEpc3sy6HqG9FcwMrG5muPG1xuv73tJR5SFVUE=","G/ra5T/IKQD1dhxVj+5eEhjmsqZlfnS1QJae60nguN4=","KMCKaeXzZBRg/yxgt1eTlWUMW2r7OS2hQtMt6Gd1Vuo=","IjIi7kK2ypl/RNZD7Wo/KwQPR/6M2SIWPZ2diyYi2Qk=","Bk2tR1LnCP8puwhC0sRSpxRItDlJNFaQAxyxJViIdqA=","LV3cIXlwQ5lrItyruaG6bIK3HpobxZGduL79NUEQVqU=","JjFfzZteGiZuyOn2YA9abgvNsi+SbWFZHoP6IQacDgs=","B1knOkF3/N6rI9o4tHj68tTyLoLzRqp1SwoTMbyDce4=","CeEzAOrecFaPoKhA6pcpiW3dhMNk1iedNKC50UePzyo=","E+l+08FvrWy1t7uVTyePJDSyL4zAVEY6FFy+AkDU+Lw=","Bc00htylj06yIbwsvtuKowJ83ldllxux9hwnLFqlGtA=","AFzlI/a8Idrx30aLEv0+hmXhwWl4FqmmcaOythScfeQ=","IQMGbMXfVeZ815FAKBRftx8InWccg8W1N6vqSCstjLs=","A5+Ad72bcfkcoFAurMwWcsU59yMpMXqvgXPS7ddjaSg=","Ike8DMQ3NwW4lnKiIFNG5q86ZCLoG09Ihdw698rcxcU=","J7zHaL0xudAGh6flPDzlPEJnYnBhiHkOogsugZY434A=","DZHO9Rp296YsUcc6KAlzLXmsNQFZgU6lNkhzaM/f1wg=","IKns3GSaJjiNxo3AI0Og8We61G1qoc0AhTf2J7oUBzA=","IxNBSaDUVnxt/JEdXLgMGhAWIg054MIwMl2uKUH1KLs=","KgdQfp8DCkLG8pzPHJzE8+WlsNvwWHTV7a3AP+dLlHQ=","G99mux1X/XiOVO8p8G81/bJym3GM6BFSzzqvxklmEQs=","J1wz0H+eczjd9QeDvxWNUb5hm/d6EgIM9WMLeOfg0Lk=","FkEVVOVf5gSh/xs7W3r7aiv9DzLEBwtVvxrSNOiygRY=","Bz5qx+avInVXJJyhpcVSIqNsZBvChRoN/Ptggx9nWag=","EKb96IxfYh10hUPHaiGPlcICu8O6ygaDjzEzGwVW4S8=","KcWGWiZYjKiogSigcshDTMl6G87CPhNvA40p3PlrDrY=","Iz4O9q0TLtIRsZEc3VaVdv6owXymTk1d1Rb8ygchLBo=","CW+bkrnPLH1mRAiimGA2X1tq3CONh4pHa97T5NLguEA=","L8eI/oqtTCi5Q7tXy5Dt9tex8eg13h+/MZLjldt4VVQ=","G6wO1gkjMUhQN5X8XhFAdu98nXIrxkjdAzjZaJ9uAjo=","ABw1JoqgMNbNFI4Qbj/CMJTlYVc9jHKmn8ODZD4q3II=","K7H4/l2ZjQuLkoN/+ye/56Oc45/5T8Fn3cyVpyAuNLI=","GphXZFCkPl5wW5r2jNDBRUItojlFYwsQuOgh3WH5orI=","JxTTfuUG77wrqZQQQ/sj8Wr5ZvEj1lPzg4i8vdUOYDc=","F10EgLoUq/C8uAdaA/SioB/37XVBORe1PlDqAMwqStA=","ID3kWgN7de9jdhdQ3OCNor53CXAeyBWMF/wCb9CE1UE=","Jlqr/Hi3DKmFwykIDWMpoSVg92sBzD1DGnKDAiGTq/g=","E1Ro3763Dowu2v+shlimwisq0VIKwIGcEnry6l86h6g=","IWpB4kMp3tplqKggAchM6ChsYXWER/8b+p2Sk7ZxH90=","KIftSXl71mUr7Yu5muNFrXDRonzbIblGC7b9DU/kguY=","A+K/gmkMgEu27jx52r0YkupTqYEeJCShn65Ea4rknK0=","Dm3OG75unkZcvhTcxhVhGGdBRnbdiozplGZJscToERY="],M:[["Kr2eFre0gomqGc3+xyb6P6FcwWJRAq5RG8pF850zfp0=","G0vFiF0c/I62kYdTANtaDHNirjgYmKyvi2PK0E7LNsY=","CKcvu1Xd4+k8WBhXGkJKVJU2lQKe7bz5Hq6wEnUcf4M=","D5U1mh9oRdSSGJL4PlALuxs9N2PY/HYkAK8Dmwq7g/U=","FvAXUc6YUyiv3jTYFhne+0Pmx7Xa31LQ+CRy+853cNk=","HDkWJjKEV/yvpinz5tM+JVXo2IXjwHzsyK8fTVZZZBc=","AJcPZxubo14+PGQtHguAMgI+1brJHCwQVvA5ZaQsUpc="],["H+n+tcf3x6Qmv/AyzWoxWCeLbGssxXqHEhP8r9ZCeYk=","DMfquxVKp5VerEehn2Q3orjewP6eVoYVD/boixp7S8Q=","A5Pv2WOZqgcm75r3m+i2xxXkKZBsoNFQdrWpkP6nWs4=","CHEjODW3UuoDDPik9DdxKW7rM/aX0bCCXbR9OayeWVU=","GgJ5jwR6Ubquo0/Psmymr+lqX60dLbQnBJe25lBIkcs=","BVZl123zzQ/LcTwjTqedBqMdbj5MO8xlfbpMZk1aDaA=","Ju6WkaY47cfJGIfjAvxV6Od1goakSEWtiP1947sQUsE="],["AM2y255PnXMtIXxeMRSCEWXUnlotQVVrzVPQxNQzIkw=","AS87spyXJ5MYISP1xJMG4Wo6eHxLzZx5ihMbcIVtHL4=","C7qQBkBMXt6CtSdnfa9ETtQ/0eDb3FUo3SzR8XrXNIE=","F+TnO/cB+I0hms8cpjkMweF8n4SxcTggg3ygcL6Eotw=","I0uKB371K1OjQ7jaWyDMNYrWB2DdYCdtSFAV9z1T0gc=","LcP9dzlLe1rBy9G0bm3tW4NdchekxQpIeumjWn/UXZ0=","FmhHdkD6sUxyscFv8BkuSM+ILxIna9Evl/gsbuLmHkg="],["CWZCFspWXBpE/CuYNH6os2kEs4d/IVncyZmJWt601ws=","ER/Y384r07e6DPqT4g+2hav3bXcwWFe43zCRTkhJ7O8=","GfU8ClkrPqk0l6UR5W9mdTWYJlsatndNpI7sBOTZNCY=","GbaDw507AC/DUjt77lpgFIsdvfGN0cMY5qVB6M9moXQ=","JUcROoGHefE+NEhxnH7xALgDa7Pogt1eZFbDUxHBvVs=","AM8Uj4BFzb57sQE/cuvUEmo+NcupqXBEG6jVvHaUOws=","MAhCHu12egkzIqCcNzOXOgOBaMsozS4fcJB2wAuGlZk="],["FGP1HUpMseuhbbwRVWaqSP53tDwkTJmIo8ZY0vVkk9Y=","Fq/Y9MOQOLgAalnSkq6oRzHA+DgyphuCJQ7ZARjo/sI=","IpY2HzvxVO+6uZaSGTbpsd/4NScR+VhjgXIFUzPgdXk=","HDFg666xD4CfaYQ8+NW7rKGY0fjjQ5vim+uS2QnsiRw=","CUxmvc/1Q4LNkhOr5DMS7bW01BTG4JrMokkSp2NUBMY=","Log71AjEyCbQBP93fXwJOENKtbuE80IOXZS4U7F0b4k=","Ior21CXpGng90Y/Ymms4vaBT8vI8CUuHXyfLOruiAws="],["IU5BeIvSuZA0fH8qj0dhLU386xoebaOBZYc99mzlH1k=","A/uoLT94NiCHPalOn06EyLUp129U5LXX1IBScq+bl3U=","BmeC/j6GneLOvX679g+0NXhTKd+xKtm9G05G7TYolRE=","HFzWsj7zNr4B76N6J+a3quXRZD/O6yEs3/UViINftTc=","LztL8PEF+I4nJIrwlOKf7tn/P62aeU4VgwvSsxFTlFM=","L0CF6qn4Cmm3Ofwj8v5AV/ZHKbMReD/PqzoKNvwf9DI=","I2NgM0npT1IPofmP4lB/aq42GTQHiqWaFiFMCIGFY4s="],["BUhUFyT2TiASgmCJmr6PvN/xhKGVepOF+3FZI78Px50=","IcXiWmmRNk5ZogXlsByBHe6wlWgKcpKDac/S3nGxT5g=","EcXMU/YzjIJYF6/3eSou+86P/xcTANQUVaLtrDdmPQI=","J6CUn9yfEElcTuchSqDt0q2O72j1d9qLlvnYejlQS/k=","HH/Gjz+95KI8RV7w0NvODOVWoBlObVUsBFXLtbDCMOI=","EdD1b8AOfYWzopOf0zmR3Iq8HO0MPzxTDL+0UA1j3pw=","AbLp0g2bVd6wSMq+Fjbw6WNjvsiGZ5y9kfMy+yut5E8="]]};return Oo.default=a,Oo}var fd;function QL(){if(fd)return za;fd=1,Object.defineProperty(za,"__esModule",{value:!0}),za.poseidon6=o;var a=n(ln()),t=n(un()),e=n(HL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return za}var Ja={},Do={},hd;function KL(){if(hd)return Do;hd=1,Object.defineProperty(Do,"__esModule",{value:!0}),Do.default=void 0;var a={C:["EjmS3zudqmUTnsE/u1L300jhNDM2hMFZb+sOjYw61ZY=","L6RvXbqZCc6ZhKAeKvMLVQ3+yXi+krSRGaOVnH9iNwM=","Idj5TTvZjwtjp6rLF1ssyhOy3YqM9o/DbZSuKUAbLSw=","GowGxhBG4Pjcajm8V66g0H/X2zTmj3NXnaieEWr4frg=","KYzXBG9YwMq3dSOlim/f0UAbieeuXu9JlEQtFn960dM=","DqxzeWZxXfSiCzGraT7ahqB/PoMPykdaZXTWf8Xxn2M=","Brm3GLs7bUXgy+bV2aLwlqd76wVoIXUNByJirypwoz4=","C8za1uix/fuoRqlVP8eQWz+W5DXWU+7DlyVl4fu8MCo=","Gz/0pryEkJk6u3oAI5PNHBwAf0kkD/wq4fEFfPzYx60=","AX8MlFLXDuzfXMi2sLIF7C2h3ll1DW0XCXUYMbfkziY=","DPGrgFvEehA0mudxNeqVpBRKbtBxj97tQpccFgeRsmk=","GNysrGExivZEqw8uYe9IwpqK7PoCgun8MltcAocQPOA=","FvuzvfQGbisvBQuJtoXUCHEWhdt+RjjeyQqxzHlDUP4=","Du/QuGF6Hs13Ef/V9sTNBJZIehsRRunz1TJ1rxj8bG8=","A8cH0YNQZvow5ylaCXpv9GO4W3eMoR2b0piNQbYAquI=","BjrT9uP4RD4JCK+ZzjLSwJYG6EquXjrTDtYNemYHOMs=","LPZ8yc06UxPZkuMVAQ2Qy1AfeQu+NaFmOSpR2Q0Rc1M=","Km56e/fBkNTk9/JY2JDdQXgOKPa3Hok3FvcBQPRAazQ=","JhQEIACbbYxzFHI+ZpJbrc+YRA2mwrl7ZqUrmMvfHUE=","ISxhEUnQV7L/78mTirFJjTsmU5LHNIC5ywInaQbkRbo=","CJGKtobBoWClXbEgELIBUPgmMt1ZM+J80BEpUYzZ6VI=","Fz73dndJoySbAE6seqfpTasg1GXGXr9Lq0IvdD8X2LA=","BJ2Q+1SeDiV5D1plcHVcaME8l7GNZ7uRmdx2U1X8sf4=","DRqnz+bKngSKxs4s2kDG1kr7uMFafNngIiVm+ZIqFUc=","LYLizNi9Y7K6RLwPTLXsiBQqRAis8drUUqZughn2Z8k=","Krc6hC4Lv+Ip6hFUv4rrSM8vwom5OUcda0ZbcgLrI1Q=","Iz82uyBd1Z0EUxAGRAjG6vcQFzoRj57SEVPJmmsHg/w=","GMFKUFlbjfMhJL9X+LjfQwRJ81mGJCov95pkT1EM7yc=","GGUI1rdceQLtahlI+RCIx83flz2M/NtOWlsMrGtbItA=","EL9CmQEEw5sn7wukUbUQy7AB+Ow5oxPSWb5DCdZCm9I=","Fj6HX9ngSyVZcQcsDS52FO4fPH0rk3maoVcL9zFT86w=","KSWln4LBRyuBIJiOOvbPJMLr7JqfD4MLtcgmBhxl64w=","Jcr5/2VD3MNOLQuMKvOzbr7z1MP+YuKTfOWQo43y2hs=","FMxBf9Z0CDCQ9EY/ZhgOSj84yluof0iJ5RCtqST2t5k=","GCVQrtf7O32S7wuR9JFqx/fbO5QxA657ouCewPSghRc=","IWMFhSRnR1qfk007ETKplkL7eftruR2UjzkayeHD8cg=","BCO3cfchVxbPl7OnLM/+FWu5+Al8d6K23Ge7WEhom40=","IkfNWvi1zgqYOu3pSfgdx9P8Wiy7640WrUP6LDqIJTc=","BJkM5JEj7R7Kkt97yisnHQe6SuWjDGoBGfd7UcNkPS8=","Bk6LspzAcq9yevG3mvUIlqZUjexBusEPAxn778G/750=","Bfm+gzUaA39XT9D1TU6a5crbkwzrUckbB4lPAWD4+kI=","ICzhfpbLJOiYbNCTUauVdtWlFnFo+dXzh3xMXOA2KbY=","CYovtcsBhozeZCTEIRuVSbj1UKfwPn/Ni1EhUWs/RS0=","LL2UflMs2g+PG4mf+83V4LawhFHmN/5T87So6ngyqic=","Dg+kYgz8lD2oG0C2tC+G/nTlWQD4AGRbpmE3trfHKKA=","LhyggcltWr8sxAs3l8OLCuio71125tA+m7BnQcIYQSM=","Jxzz6nsGtOdDWFrmiZfAFDVC5AXHCFV4cYEWPkrCC0U=","Cd6hJ5ctIQnK236Wq7p1d8CsAHcxK5VQ+Bt3FqkvXqs=","GYLMcW2iCxGVJcZKP+hfXjG6qXx2yCN2mZY32O8cigc=","ImYA3ou2Wzjs+Zbluyb9YojGkPFqXu23MNk5MR0MP/E=","Ag97d/u8rZmOd0TKJ8D3wMJVCj25D+KJROc9AdJK5ss=","HC5EXPyYY3quvCwat7bXkOusUCcHHRBXqUW8kEN8ScI=","JEs0lQLfSjNWOzAjfudQ55veE18LCJbw2c3gTxAEFx4=","EIYKh12AvXHGJnwdVLAvtYyJCxz/w1+nB/5qlJQSgc0=","Luxa3ezE4kZQ276lMaD+8NwyfcaU8imyUm0vMLLEmcE=","GIu3FQtuQGJLAuooIa62tSsehbW3JLwOxRL4+mQRgso=","BeVgB9q94syD1Jg3HpmtqVPs1p4TXvAgTS07bMH0mqE=","JVN1WzbeYR7VV3aLtVE3MUdKCozcbbqPBPMDGwdoexY=","HPJn3Zv7bmeKgsd0WFemPitXBmqGJrUsD9X/QkGKpl0=","EGsqQAhzdeopiLjgcA/dcdNxavK/0Lawym4kq0tMJeE=","C5eOShDbzcvH6QquLKGWFd9nSBnLYR2TtMv18v+aChY=","LtaP+6amRuUEdma4rWn2yzWtCW1tNP4cpn5TK1GGu/Q=","I8Yywv5o1PCnGx7mOVHHK300l5fwcFPfLtM1IOo+lM0=","J/2l+CbOaoNA0SpYTUuchPCk6jydM+ro1sDiOlqYl+M=","LSSqTAdyJW6QNE0g1G3727Xp3BMqT7B/r47dqjDadnQ=","BI1SxOPXFIXOavEi6hNuYAU+OH13Np7t+Nm7xmP7mPc=","DgwfAFoXWd0WEwL9sjPLrF/hUbXCGSJVvXV7PO2Jn5I=","Iw1kHEVS5eVUFuNg6qMpAHUd5cpT6GVK+NQi7sYn77I=","Av9vqDZKjPsZ4wvofUze7Z+VfdAk+BONU1xjgKi104o=","FomgR2KlqxOI9qclfnxyg4UTxX2n9UaiAX/xKK/hYXE=","KI2McyUgQlDoYy9C3r7ooxpHAxKrL9AK+8dpT5W4J80=","I5lhNa+fOkKm2zP9VTGafK7Y2i5uM4Bo149UCFUsg8E=","FdBS2tzhRQb8zSaQwzP47Kw4LStnNHJiNs+ce+J4u+Q=","FJT7ZeWZPZbDC/C84/Vtzmii3lIpm0gJzBGeN9jgQuY=","C4AO+HSfkbMHlHxYEJXskoPDsTG+WtW9pCAJkvv/BTw=","C6wfU9Wn05gRuufBp53Jl/3V8ScPcoBfsF9cUtd8HLA=","F5JJiT+obuBntHu+gzW4lCvJIa4OCCwwPjK4Cdk5eG4=","CYWnybQoBdkQqJ4tyVY+fjRJ/VtAH/TV6sddzn/LQg0=","LBkFtfAMknpXoVTEdEJ+MfPKq4GYHWIft/6lJczam/4=","CyNQLOBMD0yzDAvbbE8qT4HC7yI5NvB+9XhW8Km7T3A=","LcBRwbz2NyM+p8Xghq7X3N61G3o1JYIL3W62XleFGbo=","Jz2KQWbcP1Ox/yTGHxo7MAeigrUmxyOe7IHpL1HHQa4=","JXmIvn3CV6DF3XB4ty9pLHVfAbo8jlfYLZuWlWXb8Po=","IT0P5aPnYI+mAvW1rVuCYGVERevXJJKjKtOZHzpaYhg=","B6OD56IhvHb7FDcNSz7ujeUCYBpeTVSzNwxMUCsJeoo=","GM57PmR86aOpDQ7ZqlfrmoldWWpUlYzJcC2NohliPoE=","EjIO4Q78H4EY0+ppdXTq4t+vjynBg6vRIzkuPCgpkAo=","CT0OEwTGYP3a/bSClZKPtqgxFIJ1ZsvN4m70yHyfqJ4=","KTG5KV2W5blzZLN9rv2n3L89yfSKszZNqdxqcjTXFMY=","H1M6HktIeML8LpcG5UHShIHOQ7FifQukZZaQbPMoFiQ=","JRfLck0S7m6/p7Sw0lzwMVRm6Y2MrD/7+xobze4M8GQ=","AOQ9yYO8j+vqrUATBESrf5GHGFYkFJp/J0SS2b2Dieo=","GGvAmn/8Tt0pFXmHa3fC/T7tCxuD8h3fuJkDnOt383k=","BdIqL0j2RljhgbiuXnLhqUJ5avK/5u90rJq/U6xl7rQ=","HwBujSRjY2vKeH92X9ascjrSwuRmrmMk9dOfPu5Y8M0=","KJE9Qr32gEeP/Rc3Tolf53mdnRABlvbMww3Ajzmkefc=","EbVXyNfpe9ma5fSegjMIvW4iaUIl1AKd/c2DbLfArXs=","B0S1OSbhoO85W7BJCLEzJq4YZqaJg8Qd5W+3zH3M4pc=","K/svJFanCYmxZftqPub5RNKDYpNcq+UWEUmA8UFCKgM=","MCcEeUTsgs72JA0WNwcMYixdKKdDAt4O/W1K3dTcLbI=","HtC15LKa6wtbPrEozwMXWcs7xHzBKGZXzf6IxcQR1KI=","JjR57nfkTosquVPoLvY6fkr/SPDnMPR4KyJcsid3EE8=","GZBMhOVeGvMUfNt/OkKCZeIMG7zL7Cpci5UEF8ou5HE=","L6hGj+oyBO0qk0oe73x4WAqNowxexZIvrImrkq2Bo6Q=","JnwLSxlmLPCbhw4F90QeBC5bli9z39eNIzhNx+pxr6U=","LxUEZ1BBdVQJlG6MX1Qy01hJunvqDRJRJUeuaEuDrC0=","IEGZ1kmC9XQyf/P0AHBeClOyXVmukc4LnTH9u6HuKww=","Cgh1VOVRFCZ4DkV3V8F1z2GHou+5Voo9OQ06UcIpfM8=","Lvm4hChGX1NcsEEZ9RjRwgUiaEVfGrFFzPFpO+kkFqs=","KpbJ8gC0d+ungxb8RJfgiypDhLJsl8e0zod8tl/1Y08=","BDKT5h7xthSFC8AV3TFuLHxU8S0tt0b3wM3LDsVRz8I=","HYHg4oBhG/MJicGnQIhJNQS4GLOF0E2WrSmNvtmnvfs=","GtnPF7g2jZgALO0s9u+ThaB0xeOqCy4S9LdozEgEveM=","GbMKJxGf9Q2ic0sSergymaSwmWlMMazBgqtFP8AA75U=","Ey2B8Au+8oBJAcQHP82cgXpjgyww1lMGP2f9hkguGZg=","KS6j7yMThjoSdrHw5Jc/p4Tep4oeyY9NWTlH9qTnOSQ=","Aoz7XgxBsMd9mH5zelAYeHB58v+mUBAvL+tzXH2bzoQ=","Ea/XXchDU+L5wvBdHzynNOtFVGuSOWIzo/KfTo9nkbM=","Gq9D7W2jm0UxIL0DEvJZKU6hAbZ43/QnhDwPyBZAntY=","GdsJ34M4ex5Bhc15QAYJ55835aRljb7geF2rXczjKGg=","Apyz3K8uuw9bC5SehCeP7S0R24wfzzXjgYmvyhbAy/0=","KIHfk1LSdPDP61Xfj/6x0Ngfzat5QILiEH4bBCanMKI=","Biig+VlMFZIGx2J6jxB0ih3yzlgrdgSo5kpwFevdtls=","ImVzk+t+2fRXLCLNe51RNNH7zilcKpXxr8ZEHeYNf7g=","AGMl9QnwNicUxIUNrth0QGL8+AmGCABefQi1CbujNiQ=","Fx1kmLQrOTRdVuhmHMwrV270SbH45b3FrHLZ+T3D3Zo=","G+gvOxzJ2ElZXYXjOYMxGGtuS0y99Dzu7b8Ec1MVqNI=","FUcRvmLyPNRghrkxGyjurajSYyP4hk3n425VQ7zXo48=","Gezl2MC2zAf6ARl0bn82ycjUlqweHZXNW7jXaaZ0XNg=","JtYWLY2cnGAkTLzBu3iBQmX++XpToWjGKkO55vTLLRY=","KLuF/vn2WITkqZpjpZqQbVhs3Yi7p8USWbH+ajdf5K8=","JnzKweNCcZceR0F5xYAFJs7vLxpv3arB3iKZ6S2djOA=","LmtIaNFTkNgBQkjuwMfxDY7p7r+mQCX5Yezkmp/62YU=","FwOQI7ok43vEzeSX6V0TT/Nd3m/gk+14jkg50rzs+EA=","IURV2R/HR8aqmQitktGbLcdahGURg9z0O5olYyDDPlc=","CgdAXwNtMOx37GSwNLn8XfLP9Yd8PGe3qyO58tja0qQ=","KfaAcoS25DXMwvwUV5uu0KYGF+DuM6NYyzFoEbPYhko=","JGiU9gcfyWMPaRh8tatQbAUIQRTS788jF4C11LXEoMY=","BCJAgbkKZ3dNFf+Y5hNEk8AZJvfsJQU95WIVwUXl2mc=","DZnP52SdHf0pLxF3O//xzjZFzkISeH7TacCga2ArqyE=","H8dgIzM7pNwPKo26+7ob/zO3U/135rG9xMeWoDG3gVo=","L2DgX6H3RGc1o3F6nXNyilsgFmU3/+tlcH5fdQPorPM=","Git1CJIfoFT1jKTW7rEzRTZjyJedYhbsnuEkC4yJToA=","CgrKSSS+ppeaVuR68L+hnB2311a7Sq3gpY5b3dfdy00=","JiojZcx4D2JVfIVFZvosiCLm/f+OrbkJSfqlq9Y6f4I=","Ga1aiC8dxJcUKVRd2j2xhXscoKJGdos6KwAUulowJDk=","Jh4zYPsjwI6HuPWIvVnwjO8Hu0im8SJqZM3H1N5+lco=","BpzGfK5G3tGP3HJcnK2d1k5EXJkCcbDi0szEL9zgv1k=","Fi4hiWyNH2wrfsFvt65++MjuGSFq4Ymm7y1+vbHOYsg=","Eo1CwIRE2JVoeZlaEFozbEJI/5WBE5Ei7ZydVUZO6bM=","Euk5H38THxPDlyXEQUZpvMZMekG2dk5ofO6OUHQz4+k=","HemI5GwsmhwA2F36+x2nUJvLNkIqq2BS/R+SffdBwXA=","IALLinefk96LRNf7CM/1CCjgdx1lAR+ZVLQk5ngCzw0=","KPblrydSx50Bo8bH0pMP37FkmJwg+QXM/AmCwpNl1jE=","GeustTVPfycvXBLWxxs52J4UqqTvv5hzdzN/+jwCays=","Bd1HxpXMbJXirNG/wM4zXLMEo8M4CpTot8BwaCyoaaE=","JGvDwDejya4run5zV4sagl4WcqdBiAHMB0OVRTTZwMc=","G37iVYFbpwIPDPeM65hggVwO66Jopyzs+eP9Gmhws64=","HOBPZDvJUTMWIR/cC8I8mlK9r0vM2coYWQwXA6LRIOE=","LjplMq+pU4i0GtWdfCcFRF184QyI1zQRtycfUu1MRMs=","H5ESHyy9Hq0vcPT3RymiVyNyGolah9czlMycGAn8z7s=","EQgkAziKmdoN4+19O4c/Wrz3H4vqbjWPWw8XylJ22SY=","A5YqaR60LPXvd5vuglCGQTKe2e63hX8c7MRtyTBG4fY=","CmeRDilFg3OcK20Y6lrXThQbsqNT/N2T/D74P0/Xhjo=","HCD5vRMjcJ/aEk9x6IkBI19ExeSCh78PQ7RUQ93Lrlw=","ERq1bhknTv1HOStwFx39qwyM71tt5XneZ/V56GtQb70=","AG5riObwzfmC3kg6oEu50P4ojuWGOmiSkV0SXq7XhrQ=","KbxZ1vum1pLipehbpQ1v2bz8zFfivL3d1liBr0Rf/4Q=","Jh0TrEQbLzAJbB9/ZqbZcyRMLAcCESdaN9SbHXA0Dt0=","B3+NknP/2jftHqaD9pNJcV+VmG0mFj8A1ByePDZsy/w=","Fnj5/GxFAsI1Jn9LhB2VQyCFQjVe19tCCmCay46Ovc4=","GmW0HcMCuQb9FEpZS+ptkJ9y+3B1ALJwg3yaJJWQB1s=","JlNZvw6td3Jk0Y27TEZkMBojsQV5No9AtDNxC5f4B6k=","LpRM4OtlN0WkVjLAcLkx0I7MSXPqCR5dxnElzJBF5B4=","J+MCWi0+gmFKTdBVD1k1n1ZDuGg1kmrtLrCnqk8GIZo=","DZhI4NO4vI1D5eaVTm8BgZhuV1BUhA8jjKtMtbA//8I=","GsOq2BXY7BOwNd7PZ6aFSWqHsQS/V+84zahVh3/KfHU=","DJEBhvkS7vlf1nPq0igf/Q1c6cgMxR9vkx0MdbnAo68=","JItjp2oCTVzy5Cob9wqVTwGxhJ2sMf1UWnzXTFw6HlQ=","GnH7pgzTY7C+PqNgSjhs0d9Ga15p+TUDhYxp9ahoaV4=","FaKGm2NjzQKkcsvOxckb+hckLO3quDCE8O7fKDQxeLE=","KBPBBzH3aUVA6s3oV3hqskQ/sYkWGSQ7jU2aUppzNUg=","KqlpBe9CvB6EUgh/4T3D1VzpQGKTb95I/Cn4aY7V7FA=","Dwk9Np+tCg0lW/wxHEpY3JihkAzzWbPn2WiPZZG404Q=","Bo27xTCWd2XPfH5puL7k7gjUhrQg1TOWJshBHKmEAn0=","HdDKtxVwlB7pYr1h2tHLaKjtgCKt/zVqZ/yrOm6vWu4=","KahX8ISufytQbv1s+wZy1jrpYM0ZefeNf1XXgllVN3c=","IIH3cT9Rs5MN+gpt+Og2EbyIKc0fhHG34uF/SA2FPDM=","Luo3SmCrGiBkjLkI5gXG2FmbpgFThjXIzO4AyryFcns=","GhtovSlREx5tcZUiM2R+QWW8QS2m2Zwhl6o5fY0+5bo=","He/fFEFaeNXm8oeubknrsRgiuHNMnfkcgOCN5XstTys=","EAQMxP0gusymniYocTi+TayUBAzGIk4r/cdmYRBqckk=","IM5n8y6CO5iAEdDDOrsPclvpb8mrWy63EBL1+ApV/0A=","IC7NUMgsnhx58P4TZRiyJVHAWMIbbuzkNYW80ozE6oc=","EPulDAYPzrmJ11NsNpLwwyQzOCENFF1hh5JnmLdHCH0=","AmgJNuQCdl3WzP3+LepxnTxQenxVESPA+d1ZpYv43LU=","ECvrSlxMkD6u+eyw1XlBVGINfp3oQ2T+BYO+ebTefPs=","CNAdsY+uzRomwoW+ZUFL8YqwEtfvsmdfSuHW9eE3BiI=","ES/l0hfzPC0tGXYtKGhBNmungrS936M72oNvot5BkBA=","BkiF9FfPr+bs4pRKmpNe/ccXr/y0RJzrMaJ5LV7qZ2U=","C73DcattQpbnPtIHi5n6R9AMRM9R7sCtStCqucCc2IY=","C55ZtpmqaI3RIUPokLb9DjSADWtED19rbEJrMK0HiIc=","ClqjHU+rjhCbD9/FXrFKXC2SZ9f5hrYQFwzlVDv7MLc=","AyOdULSgEo45x2c/L5nYi1kD6xu3cExsDN1MMUCKems=","EaaUWUmhgnWbbx2mDq2vLHMMzmbqBG+PXreB58RfjJ0=","DFAv8b7YpocmgD4iK4fVkHSVbYNPLWOBfyqe/tPckx4=","Ii2dqjhK4rQOQ+J0zAfS27nraYjQOJS2+/UTNmNMkX4=","Hfj+DdqOUZcbkXsP8PPgXtSwDAlUU1GhF3gFxQ9rwAk=","Iiu4KQQFxbM3PxsZmWnG0Pm6jrdy8kl8VcD1UXdbJjU=","B5Ar7CPZ+RoAOpKOqv+WR6wDAondXqzYyv3TG5MmTRA=","LHBvBZ1qhupJbC5Gk9FxfkCY/4fQWoLXOP2Ig6grnV4=","Ba4mFpS+4kRqGBNgjt7GlvJSki0z6UKAqoBb/YQ3hvU=","GG7iynecXCahk63w/0fZ8zO3UPmbd2VQEcZLPozN+T0=","HCq26W9o47LM5to0ZbGePkpDex8gnFXm75mhrAc2vRE=","L9F9t+GCcWnDLM/ArRTZ+Xx1B/jviNxdbwSwIgPDflU=","JB+tdXBihBirl0jO1TZGwuEAruvWKmxzgE8IDeZtlyA=","ABa1tTQD7m9H5hAMJ3jKlwtAr2vid+mLcQMviU5vai8=","AAoJWEL3GOcWRbLoHJCz8IV8jJNbE1sMsl3xVB04x/8=","MD8roE7t8UJbXXzEvixQiLnS7yv0eLnpuM5v8WaJCb0=","FJRDUULJb8lOjWbZtkPgGRY8asLk4WIFb6j+7lGVZmc=","Axzbua0o7FfE4ayP9mx5HQSyWiirytroOlVz4/PUv+o=","DHh9/wEvE2uJzjUWwc+GeSjXEH0hjWLVGwstjMmFBJg=","CyCzFJB/Ui4XqdXajBD8+Iy5VlVs8HdFfB5KmtXcCw0=","EdXK39BBicbBSknoumeDVArcftcL8lr+Jd+eL/2bw18=","CFIwnVDxRTjIt9NWWNibow4pqrZiZTGqoRhf8Mq4of8=","JXOV58GQs83OX5NNvqkHcFAIowWTxpKT/XEFYiYCYEo=","Cq43r1w6VCICk19ZC2Z/l5+0FCc8yHkxYQpLMUSuv7c=","HBZUp3/q/Nf+66lMMmBfld7QPhPAimJ0xH7bQRNOJEQ=","FIDMTLO52fyXuZ40D+wZgj3NLt8Zj3CV7lxwqSAJleA=","GHEQV4aRiRJviFNqzOpIgqNHl6ndlqlMyHuOpGJBdlU=","DpxHNe55e5xwgzp6a+fCz8uWLwcMqqZJRm/fm75YKM0=","Li44zOp+9sKakisCfTHZhwrA+dJ94Z1wA5u9H5D/dPw=","HWY2npXC52Aw44DWU4qTJ4+R6l3WDloxaz3O0n/BN6M=","Ke+RArXmce3AX4e8zrbZAEhOfudAKjLMx3/eLnhmoIM=","IQOwTBc191Eet3XHM0oLttYm+2CTe6N2Ha1zqER4490=","DdG2uoSjwptikjdlBoz2PHEbwda7KO7+OKDkhhrROWM=","HqtMf6q+xYq5tzsrqvIeQogLd7Dw39MNOOHJVendchs=","AC4aP2ad/JKbnMhNltSJ7OEU1b5duFcUafd0z29sgCI=","EhTKQk6hUXhRUNfbV7k8xrvI110ZKZOEYKfGfwx5HxE=","LhdN1Kr/9hAxZNkWX/gxnZJgyGIYUQpNkQNB8LTgHTg=","ILMvSkI2F/7xRtpfGiaV/P9kl/+row3s9v/mKulSxDU=","KfTdRo2whzSRRotwCduvx5lR87g6tk77jdLlbMmzGo4=","JRmAHeTljkFk9/DYaZQxHIfyeaOK/EyzxNJs9BxkKvA=","LKEj+vh13k6q2A66c8sqAPIur1thCe9Bpl0tKG9gLME=","Dv7WUaYfowtwk3venQK5tqMCoaq3Bmh7IjOumyAzEmc=","E+Idu/1+VSa9xQdec97grvRaDtLIgLKbfb1cnmQ57j8=","LCSG2FqtvDWLEGXdexSVfoz1v3RRr8s5Rll0HPa+WCE=","LJel1bl1GUO8EeBMLWClbEPZRblrCYLIo/XmO3NVDWs=","DTh2sFU2lDgK3AhsyScuF3Di+Gszb/eAQEGeXtzNjPU=","EjZcfN1hbSWPmuNQSzfUTpWMgWoLujdCeOi3rXmrlnk=","G2A1TRawGENUC4/Glh/4Sljr5eQrRtIq62GOLbSt5l8=","A3ePxyPM0DrYyQwxHBQZY96mOdJSStly2EltEp4cJDQ=","Luch3ehSh54SOMt6eSBxR7PYZObIoUoyfi5Vi531dmI=","EQINBYH/jnnI9apNUL4tx5KgOLy2GuxMzqLsTfLQr0w=","Hg6SEZPjWzxC3tAD3Lvtjq5GcS4V5jrscV8/cDHPT48=","KmwT16/WY2wtTV029CwJrDKGtncDrE0sJNz1o63ZAg0=","J73e3qfY05i0tukVLhfC0JIhdgmxCcFFdPkyuwLIhEA=","LhP5y8NWco5tK3pcWTqp7Mm5ALuYkBWT0CHWHrplVaM=","EJrzN3PkFhVohbqwUT3BmaAEXUBdgb0qFRaQva+6O2Y=","C/ehIamF0g7r6/Yk84NzB0Fa5ICVS/SVUt2MXz5QMBo=","D3i6fD5tFdESkt0SGq1FlIMnG1/i7lamOBTV2xkpBWc=","FiXfA16qmS9CTdxtyIwbcArF5tWYHirQ35spCla9UAE=","GsfR8zu1mP6VgaxzsKrU6azpnq0BmB/PLFAqca/VZ2I=","LTcpbvDNVnbQgJYIujQM17IC4uHCVG2YlBfTA+wxkzc=","AZyqYsUjjgPs33W7LCdr4YBb4/5EqVfYqjvwfKzxwRQ=","DzLeoQQyDODwCRnZD5xsdtSWiCeRFGxSKorKzq4+Skg=","LOXSRSwKWp+2WkpkgvNJmIZb6aKfJm+IqK/6hQ9exuU=","E11ZDegKDnF9pzJceBqhZ6JeXDENkt+DEg6JHM7SSos=","HTzpanzXnpRJLjK4mD1i+sc2SZhQci9/590ViXBqtpM=","DqOh4fXco/99hnHy/s+0Z/ak5lFsgDipMGs23IGDIbI=","HtCMTw4W0UQFkQDwX7RjCY49hp80Lg74tKR6/nSoOiU=","Ct9hK8DCToJhNcfeDbqQ++G9JJ90JPGXC1LouyTZhu0=","JAxCSgJOWb6joU/Kc9e2OGnrm2h0atnDVrk/tuqj4is=","JN+rcjiwW/CPZvvlmXY/Y9XHChgafp/jXa8EeeKxy9Q=","Fg15oDlZyWja+3bqPgj/0s4RfQlOgg1en3zh3r07sIw=","G2UhYYehyhZ5ZC1MQKoFv/clv6UCSKqJ1X9XDC/pNFo=","JDUDutitrxSo5WUBOGPBOnf296D/9XHBJ1sY9UvXc1E=","BsKtR79N5XTKz7pRXRjdr3gqit360cGO5DkRY8VBpiw=","IUNmZz04cUhXj++JQ0vPx+DOTrCGYZBAJrMLoQ86E0E=","HbgdmLTU2DImrkExMByONiKjLit4hIYOhSV/X3t+beQ=","KdK9vBmJbo+vDOFdfIg7y/qjiGHXySKZpr70L3xEPw8=","GSlfcsWQfo2fjYzez30ZP6hkBMu3qFUi9/wzhXt6nIg=","C/AVdgdwy+jm9pCA86yhgljyzQkuM9PtYtjRnRRLrKg=","BsshqsC+jcJSjDl0cks41zqRhTCXb/EY0IdkzULgskA=","Enb+LHUbpJ/Vt1yrW3H2SqBYjt6AfbG9WDw9auaUE1Y=","Khf9gEHs12L1KNEgZ6CSBPkpbqVzdIBsOYlv6UmbmM8=","GQTiv5wFEsclWecePxMvZSWQWPfWi519baGo+fXK9nQ=","EVteuZIzqKIgAXBzPEdDuATGAbXY1GVqE4IS1m64nTg=","AGtYiF8OCb5rqRF2/IphcrwW1oD4iKPZLzGjvyE+fvg=","E8ZwTpBTU1KTTc3ASDtLuXTVC+t6W2vjCvDkb71zJc4=","D7vLlsyvQ8dzuhznBhOJJUNzL+zMhyl1uOtz4/tNVKU=","BZtN9j29K7ZuCyqCbFy9qWwzj8w42/npxGBBkYvdi/w=","J9hZ54aMmdgPmdGB5u9+qTppRiOom75Xpsjn7lS+If4=","IerO0I+dC0LG+lH1nWX5ZZjpylDWzR3Um4T9wGRu1o8=","BoFbejuAlx0F/ebX3FzSgjNj840K9cD/ir6qcaMjoqc=","Bqd40pqr67WjzZQLHDPwVVEhe2AFJI4OcWvVoQ1VjG8=","FP6fsfFnxiV+oBAIgRV2nmK2DvOt0POiLJ/npJGOlMc=","CQMF3/MUF04n7evldL2PDI/YWEPn0mJ9tgeygW41fcE=","LOI9++uOGHS5uolMuF8Gi/sEl1Vc/T3684iKpJLSBEU=","Gw/ZTdnP53TZFGvlhO0LJcssdJWnCCR/V2PCOA5cHNU=","Bgu3FrpyOk5fX6oXk2OjZ3RhnR4M2Rv0eJoarbPmEqo=","BDsQxQjoaBhD7dwF5zuVt/VNpak7cBy6TWgi+cnc9DY=","Emc06VArqfrkoxS2et5s6IkOMEpDDmyfT9YMuK1plQ0=","Ju3TXbl8KrLOJ7UDWShZtDF6JaaI+XQ+8N2cwmGdt+c=","J7Il5KmBrzbOqGP1kci8WqlaS+ttXJq8XgO6kG7XIGI=","EQJyiDL3UcMTrGYQ+uWLnL1RG1HWEhs7+mD0fbElGNo=","GCdssBG9xtdescfV0GzOEMfJB5yMmSD6OJsRZiDuQUE=","JQLX3s6M19egShcwv9KGj8ZPg13+FDzuGEgMfD/K2nY=","BrIL6qV13YRiVGlQaEhGEbvuGuSChbosPZnBTmJYGiw=","Bjq0oHj8shInX/X9BgQr29F6zq6ZTiwnobqHYTn47Bo=","BjctWVK7aaRgvxMz70rGsgsHrUq0Ek3UBmps9m9AaZM=","D0HU4+9V2nHPQDfEnUTApkH1KloXT3q+xSJHbjxiPOA=","Dw7phBshubIjwdGpBpk71msOvLfa++K4AruBZcYBF3M=","Ad8usvpCPwE5bgczkBBMrYAEpqXxQKKxjtZYBoFnUho=","HOBbxVQHyIOlpBeS7zSG/yLkA9OEdM+pD17TDI0wGYw=","A38fx5NLvV/cNDiL+9D5VGclTl3ytbYsrtBQCiWU3a0=","G9amFABDmPMptwgP/mnT3/beBsgZ/t6iSu0W5MRxZOc=","D8Llz/fp79Rv7mKqOz8ivMnxo72JF+Lhz1qjNNKdKgY=","J0+k49hufviw/fGoGszo+e0vLrRifedXgagT8Qajd+c=","GTrxxfoFfOaC7HKM6pBzWTWiK1r/RuovgDopQhqpUNY=","DnLDPtYFVHGtrWHQJ8WsG/dURPxOFJiLQiaPB4fimHU=","HHWASk7xyByDaE1ojEQpqxp+UX38YCyaJEPFnzLulhQ=","CIA/adg+DDOX4J3UeoDPn05CNDcAjKutLlARBFbIxg0=","LRIU7Re/gRYqXdQ6P9zxlfv0dCYETLIttThHjpQrB+Y=","DIWyS3mrV1BEIhNfscsMXh46XwoGEDwkhu5qPu+scog=","Lin1F90bMLeRv6sDznR/lQIC8OuCZ+8/cczsQOkdleY=","EygclKZw/lqwl3OvQmBnQFA1Ce/XTB7Zk7xq+vPWQXQ=","IaIRQHzvewRCFgrMnb/OGh4dWMnpjzgafrSPe9oPHgU=","CF7x53+Sm8/60ak/kgwdjIs2MuHhoczU7LAWAnWeCH4=","K295beNQnqcDyNpiduPqFUtQQXDFmo7EWB6XV9dLp1k=","H9pQdPpbrl4W+08tGNWJpyMLmhweTQioBp/I1Fsd480=","AtIqPA0yR1DTvjEhmvMqgoLDct/eSGHvhu8VwxVdzxQ=","DCH09L2uB6ebs6mM+zUapinzI5xNJK75Lqeb+snC+iU=","G3IewcHfgcg6zXqVrOFrPi/0KXqrtvWBALXasG09xAQ=","J+yenpI+3uWBidbH8wPuPlJJxa73h1jH9RHPh7lTVh8=","Hs8QYDZt6pUG/aDQHLoBbbliAJChYNWnYKddEtXXLng=","JdQy3zEuAFxpoGofAE7ImVdQNNomOSdg0XrMgMOVBs0=","F6DqUfmiAboqD4V8mWmn9rxvXVvA5JV+HA3+SyAuSiQ=","AtNMR7hH1nybTcMTvHFP8iOrARJ4Bv9ski2HY/FCAks=","Ag5Z5eW7CVGmYBIvwa7+opTnzNX5x5g5KC69nhGflso=","JJychQFz26D/6jVowoQWAgEhw9mZDf4ukXN3RndZJns=","AejsV7doHWMaAtUwya7vk3dYae8JPekgFM34XuLUWdo=","APc53Lnz7m57VRl3S1QLKJi7bLo2KbtsYOQjt+trX/w=","DgFvByT/+F14GusVSNdsVm5cJqp5lu31BOQWcoX9pm4=","J1Jwgoud3JZLuNaKYlhUNWjIRJR+1e2UsxgMuHTGgyU=","APHKP8KKrLisIaW0S76wrmTMM53hPgTHT86CD0+T5I0=","IWsvickBBfVw4JEb0c4g4GZP/gGBHLd3+QN2cZwOIPM=","GpHt+QlQyyaJ0sKcsi+N6mHsQfsGHxtgAvciZWlMeE4=","LaM0Lq85orJCcTSERilxr+U99VvtX11Q1n2ROM14/oQ=","KfechvWpyW/K8ilr42Qltyr6rUhly5CQhIJJFY4upLE=","BRlCahWlmfINKXkwIGfb0UVLRlOclJnGX2GVtVx2Azc=","D5xHXNcrfi44ZelrrviaFJ6s06s0AhCpxeDeb8CC6J0=","FfHXEZed/hPkXuuXWaifUds9J1lJhYkLiMm/J2kiFzo=","Hwg6wFSaGrANS8kGbwVJQUj2DJVp55iZQcP1D9as92A=","FQXuT3m8gYeFbV8/WiTel6oIK41FLGOxesOlkUUbdH4=","DyCHbXEvFH4vufe+alHzRuooRH31KetBNClI/C2PCWs=","FpbRLZrneckhIO5xX2uNoR6pOvJnNxWi33cx25HjYNw=","KEhfQ47sEzsL42sy+ugtpX+0AGvX9bsVomfndGs3utE=","J4BDb52hJGH74x2Xllbm0aEzhuDmpTCbBQyoGeEK2UU=","Jx6oY2czMt8r8kcebIk1sDfqgxjqWzI3lYP2EeBrPaY=","KfG6SynB2uy5g5vcCEMbyr5oORylQPaLSEpPjpap3GE=","KU9MxyjdQj/a83N34Gmrpm9NMADxpVm/TESRAzBgMeM=","FGtSGxwIyRgSE+vbwqNPw+/Yfd6xv8Xl0XypUfVavRc=","Da4K+XPqCw/N2BWOpRue/e7V62ZLhO9n6qJV/k5V8+I=","JgTMzDcPClDz9ybt8SQrzBMd3fJpeFMnbAeev7iD2MI=","KHOxnbHQOJbT1S1vk2Hj/a3l57Lmgz5NXORmEYa7u58=","CwTQkLzEz6v6R/YAQ4Wa618zpt4gXf3w49CZ1Kg5Tgg=","BQihlcDKWD7BAVbyBcobtvaRcxi47W67c0e3fXLc90g=","CSYt+oCqoLxhxYkcI3pRnTgIxT/AXc49cfF8Dj8qXus=","DObSWxxsG4n6AFwjYZ2Hfyqy/ecI0wkjZppJ/iWzx9w=","LmloW0bIBQJo28EEDiPHOdchayxedhCBNtaJXe093EQ=","Anj7PfP+kTZXvMzrVTE4+nuKtuBipd3q393dWzBf+CI=","FtqJKt41dU5X2PA/Pm9BEKncFjnZtt5l5HkWXKSfek4=","FZdUkk5zNIVP+AOheC/8BZkno8JtxD5mHgmhJhvXyUo=","IhLKZIe4RbpNFsCeIkKX1LGhbjQebFk9f6utraOSnXo=","LdCI3oMYUtFpruHWvmm1LF3uC3Phj8qRzc75uQOWoEc=","JKtCrWdJoU/i9wfsU6w7AxXe7PQhuXUwMlM+KEkdsw8=","L2Rm5Q7zxhoOZJOxjTSRFAbi6X01UYh6+AjWfhzpric=","H1iG+4YYyHEewI3pR3Vx8OtuRiuPXlNJ+FYx8FlZRIA=","Bbo0lTlZeEpXwAGekW4q3l1qUjEQQ3zqnCuURT3N8qA=","J67mejxu94PLVZFRZaW7/dhrwGx3bxRQSLskAdzxc0E=","D1fvwF6fl+f2jGlLorO/IW7vvVxxcQpW9GBoKmul1e8=","HTXrSkCkHdd1BthypFisk9czbcty8VsYKmcCylO5Tu8=","GKMwZFhtWnArxL9k9wtEtad5GCVcLf++/FN+QL1ZUf8=","CwrlcW5CtEC3QjvYmTGciApKZ0VQt70DYgfgBqx6LSE=","ETag9sAEosV9IaAMQN7G8CexQLNtNZTBzcGw6HB7YvE=","Ic7FKsSyqn+A+Y63W04CgFkZd9ULZ3uP8QsKPQKFMqw=","KEpjZ4b6Y1ebFUF0aQHUjkQM8MWG8bCJzEXouDD60i4=","HUoKugysUcMmH3xIPYlijXZ0iwgzy6a7/KxSQ+S8tNo=","BBCgZZJekPxw7RqqRkd6isgZOhDEi12E+16c8hI64k8=","MBRTsj0FXBhKZa1qas/9n1IGN/51H/e3aUCdUS/JLw8=","A3gnEEKH2Uu9wGWE021NXixGxOoiT04NwMO7VB8FO3k=","KUZBuooCdoxeO39ULSgcadwsPy6AMvhkKVpksIqT2ZM=","HBL5k/Dx7dgJ7u+uaTLluIc4sza75vl29fegoXj/6rA=","DLLZSNOPuOF8YLpsZ2CMn/2RLgpifu51a40ir4ueXkM=","JvH/cxJo2bvSarM+WIrOwJ/VpLcNYLVTkE9eLQXolMU=","Ca74ogKfgrdtgK2KOSbLbhF02Li4nFlwfBI0cxILTH0=","G+gMqxL0vRc3eWvHcPFwc8awBGwye8vzo24mQGx3XHQ=","JHbnvGN/JD0j12LLPizYQw2tiXYldsvdkYQop1gog2o=","GW1wfKWp7cwOMQOu38YKvdHJ5Xc1TZML4NW20DYXwgk=","HSYkhyN+hQOQjVN1oaeYqbjA+szAVu3diqh9CmawfSQ=","KiHgPUEVS/MZHxqDS5r2sj1AvAHQJ8K0hB+yPcn/cVs=","ApxkeCKhrlZbK/EkntrroMuzrXMN620uZhj7+edNqtk=","I+GXEXW4+7JsCYneqC2PSj9wh3TChuTtL4367a89teM=","EwYYi3kjaOvaHy4x6EaFTLs08XXgHJJFeVnuHG2g/z0=","En0PfrmAT8IKtPi5QJg0rlIWRf/6hrDCIdkiP6Dp0rI=","JEGYW8rONagbH4H8ZiEhXfC6QkQeRQ/GXjUZoDk7EZY=","LffU6xFRFFRKxPUvyjbWsz8J9jklPp41SdWYew4JcTY=","D2xVGPku4uVJ0xrbtOeANu+ao8IWTDF6ypIgPjuZ+UA=","JuLMnepH3GgH+HzYfFMbF6fy9eqGrAlOXVoi/DQz3Nw=","HHHjPIZLCo3k0Q3Cb3a+1Vdx0WAaDgTTmcsjlwZMXPg=","Ki8LVjtAg3Zsi2xghywy7v8rIHoZgcBbHzlhePASB68=","DBrwvFVGJQp/3fHL0+e8269067l5U14LNDZ23J+UM8o=","AYvfLnB43ECvHL5IjLVi/TISBJnEyXKm1DuSzhZ93+U=","IrNoWaFqjNw98QryggcViR93lmCh+aJe9lIBn2QL7wY=","EOaX27xDx64gMPXUmXT4NE1eSKtm1jW0HnuW+8fGKJ4=","BX3rT+VjkKu73NiCLKtdoSB6CteUI5IGIrDEoS/vNVI=","ErJ8FjnxYvhG+zeucUTykTdoLufrFjLnkbRiiv9KrCM=","Cyx8dtAYQ6LRRlXCPoCRr7bzVZ1mw7vz0RXcnXDbWvI=","C32WhMDI7KDowxY0yftosug6vnKjZ5s2eKjJsaE6SJU=","E6sKf+qbLIKHZtL6v1dCSNLX97L45g4mHO8pzZFumis=","LeNXnXkKw2f2bZBVe1RmgVOlw31TkekqalYVydYL6Xk=","G6AQttY7lTiygb43ZOjmIxZCxqZzXYnJgI+re62iH24=","Jv/eqKjZiU674CpwX7dQbhKxp/EAxZAlhOTcvh8hGaw=","Ef8WGaSdaru1Y5Dj26rwwcsBuVGnNCGLPL2k6AUsy6I=","Jgw2uAiQvvronLs0eLn3tbP2sR3tR6riwNXgxI2OUXQ=","BcqIhXyw3V84Dlkqo39vlPfwwyYhMc7ymUihpJ/RhPs=","GLODKhnrfuGp3PV0MC7gY+wZBGs7nrf7J3pI7oOQ5IU=","JTUpHwPa0ePFQOfyYgHC4zAYj9pYvngwZ2mKFzn3k2k=","AU+DKzip9Drybl7C+r9sQlAIPPh/C6hrlQU+kYLRNz4=","JUjmxHZ8Z2ka9VFi2c4OReieoIpCMvoKIj/ehpv9PqQ=","Aj7Nqj+UK9RbpG9SjLyBpRzhQlA59EeBp2lvSNKd+9E=","FhG7WaOyh1a4QNsxiaOl6iLsFoRUcqvWhXCsdxyPFe4=","C/dhiEUBMzD/Rl8SypUHmrctDKnYp+YzBIwRvyxGx60=","FciPouuj0If9Kfbeb9hkuHVmL/pDgUQ1LWhHF83NPM0=","DVjRJ5irVS+W8NlR6Xy+74h9hYZWsfavQBDIAJGwxmI=","BAbuzXu8IesE+h5WV0XMZUReT4L0okHvuLqwbq+cfLw=","L6iO2gZXFLmuXhhFYTDjG9b0jQKyQV7GHtIJrY3cMWQ=","AXSYY66rE8pRImEQPquTtD+sU99rBAIsfLfxdjj1HCk=","AVUyY6MY7fNEKdkB84eZMrcvXDKtVukAq/R2cvhvmmI=","Aot6i+R8IjkHmgHdbQ5X3cA/ypxqWNPfbyNN/oL5aso=","LEib7w+sGbsYfl+KBk5nY280sonC6K3HbsvbtRBfwck=","H/VIxmkPUifVdmaP72dB+ZnJkUz0hC55P9W1GUvQw90=","A8G1UchJAwQPrz1tuTToPa/F8O/et6j+snVHckcno0Q=","HuNiDo8N2oxvFVzoGpN2AJvO8sjY9vJm4Et7gKyM+Gc=","GORf5+oXH7EdDEr1M4VomQ8iFH4UQh8zb+bgvLuKABQ=","Jzk0BFIaVeDhpOWMVhGABAwYaCgUiC9Fqt0TG58IdT0=","B/9oVwEaJLINaYrUOl+Vms7/9ymUDjRqsY+dJgD4PQU=","KYGzooi0Mng5VCxXls4vCa+dAipgT/rWH+AHfXZ0i/4=","AN1bC4FY6Kc5le/QudiY1P01hwEfpYbP4CzoAPMGQDM=","CEwF+uc8vWQy5iLPmIDw0oM3xodLh7iOwLRaVdOTYj0=","Hi7i/um5v40/NyLnAo/zr45exjGfptiZfcEV5d4uqLE=","AANBj8WQm2KwKW5utCqgepcQUJOeme43H2QS5E4O9Xc=","HEmUotQSWAZDdr5c88mYh6q3SAP2fBLGTmWq9/HvVrI=","BBPCs4czlh/toKaEk9PPRP6813lSuIBv9YPoxAsxAy4=","AcRq05RVJVUlsme4oFM8XGZQT4GulTS90JHqmJlJl/E=","Iy+iwJD/Pd6oOtyguc0OCRjJRYt1sLo7fWd63YIL4ok=","HNVwHIChD0IOs09TRzjA3M/Mtsh8z5rs41q6s3zwX7o=","A7mB/gxxiCxhlEZVN9XkArgWEYqulL+FGOsHpSnk6lQ=","FopYiQAQAAZENlimHKnWWfCsRR0eC/1abGo67oVyO+o=","HlH1WLztJAxlt8683LvbepqwbjWA1G8xjehO3Hleb4g=","GvpajF/OOW3lbsl9zwMXprfLw+4fjpo7zNbYcAIrdQw=","ETXv1j6PjMnMBmHdSdNqyOv3kA2Q1m3V+oFgVNQBfco=","KRTSHC0oRc4rFOlR9CEDWZyHVQFWQdsDxU3zNxA0QK0=","IMh6LXWXSa6psvD4zAFFJFLnEeOer1qLBxAKGXEn7/Y=","DbB5IN13nBn8HqjsUyPVrw1RG4adtn3uBAh4XtkikF0=","DWMfGPrazL/dOzvkZ3KjvO4nY3jNLka6upDVZGjMULY=","LFAPeQ1GP7E28tjUyt5iKW59fEm84YOVswFMn8ctAFo=","F2qeupdjXR5ZsZ+qKzMlpbGic3ahbexzF6rkr+4Cv7Q=","EgL84aUBuItFXKRHiNVSFLrrO1TjfRzIDz1uwOCdR0c=","IilIN37p0n/GQGAH4XJ7VmuCXey5UJbJrt+o5kU6XLw=","LsZvwn2CqrLJjrUOZ6CTIhDzxuEkViadV+qQlfQRZus=","L1wjPb41cYNv2sCRXOZZb8CET+w9C/WpuWjKWMRYRqM=","E4ibtZucB5U7UvZhI8jBOA5vJyQmEDrc797029KGXaI=","HPePJfqlLHRzEtCftOmrtPHlWj2jScyNzG3Kgc+ZrDo=","LA6uKGbWXJcHcEfQ9MQ8KMjX82r2qcb+B+yJIZ8cxzU=","KLgWzYuMmBYzgAZtClDYsOBv8caQuBuRjH3dCKa3Bmo=","HUbZFmnOW+ZVT8Ps7oldQf2u7hia3uOBq/t17eFIjPo=","GEHgO5/FJ0UORHCqjwiI2eyFmdtrD3Ii3KJs1D0iuwU=","LS6teyB4sJCFgFwnd8kPbFV0S0mnO77wTImTE7r6D1c=","AYMKjbNCZ2z3SSKBtM/HsTjFXUTarkexT8iI5b90UJU=","B05M4yvRSwH+n2cp3ioS8hj+RD+3CHOKhg8ZEL36Rng=","H61MsUD6TVWc+VJfsk5/F0lNI5r2eaAw59G3yc/6lJ0=","HlDGUmxzJLl7fzOHUr1wDKW9bA78siUmAiRVbXaigzE=","As8DWbjaGr///XP5B1hkV5P10REv6Jjorwxh555nPls=","ChSuSXtJeFrndx8N/vS/QYV7sv0fJ9FcPLyM49+Ylc0=","Fr+gL1dzVmLqwcH1ILSz+cS9Js0nkhd7J2BokWlUzUE=","D2+pXgEXtzRXn2jcWXNsf5r9nN1KkOE2Ke6r/YRSXps=","HVnK/ie9/Xj1ZIlDAHY0Ntr5P4Y8MhPBqEnRwxabp3E=","KJ451qLUvIF6sQREO4m4pgixO7uTs63ncqY77jALvDo=","DUftr9ao1GUcJ/a+5I6XVvXWUVrxo6NRL1np4+vcwzE=","GY1qqQcqBt4TEo17FxV/hZlKEMSVcmJ3DMT1nmxtMy8=","F0uA5CEPnYG+e/cOOrCyHegGX3Ii6Ay708+YXWqrDwU=","LXgDa6CUh1KueLETi0ucS2fw14qciWXhu7+jVhWFMr8=","DB/0BFma+COQjzLmB1ZPUht1gSxnBUPjkMsC4wh86SQ=","ClYbV49L5MUzFR2hpSm8mPSUCqW0j4wBKpwYHYEbjzQ=","IBKm7SReSM9lAwKJoc0B0m0+suQ5u8TxbyVq3OtAvew=","CCRCKrtkt1j2AMGOa5mMGdgqn/rLlfnv+eAY1a+zC68=","JQoJG8kTAbsTk3gqfiHuqBwLyOaBYaOk5eSop+MJZK0=","GkrbyFMOrOThlpbXegbh7t66PewuRKzNOs/X+ubQdrM=","JaUR97hZWxInjysFtO1mhO4SsdKY/OJ8zWeHtahuJrs=","B98l6PdvMtmbmd0E2SfBsvoZA3dmNuOPcYjYwrc8OlQ=","BZQhztm7kiYvl+fHvrgTVTndZrzW8L1BvRJKkpgj91w=","JuHNrN6R4RJ5bfcN06R5tZW4z+fEyVtZVu1HegeBOEI=","KYCD3q6eDMQKm2DklORObv6TqOD+IRgcsTUdl/wNlUs=","DwH8e/TS8eyMsa+P8XcVMW/EQ4fVFRhfSaJEOtKhTt4=","GGBJVzsyhrFwA/nlsnuKNqeLjzLvvwUQ2fzI+n5zxfA=","BzNYKdjjdYy7/EzEm2Vex1gIZna005Eto58szcSijRQ=","AZ0HLW5mqm4DSEPMPXylHEffUfNdu/SpnTQpP8PVliQ=","K+o0CiI7ZmX1vm3eLrVbQKBaribTSabErwfjRYq5vl0=","G5D1wOU0Cfi1cwVkOL2eY5X1JW+rsWAGwAm8reHuzac=","AZMsPz4cRIFCDGA+I/FgKdi5dgNWX2MUGEd22GW6Ln4=","EuTp8xvjNnd1J6861EOITjU1Uto2KSEHTgI/FFgLXnM=","JeegmlVpiwxzI0crJAllTvEvKVmnZWwNzzWtmnkm8/E=","F4ySOPuR/lEvaIXlEuKlm3aGo0rtD94d3s5rHQjUItQ=","K1aIMuYmJijDHkBTBfiEApSLUV0ohh8N+u8kkh5+NSw=","FGyg2/sPu5jBYuuEs3Ioz9cxHg0V0uSN74X50ge9F1s=","AJU3FnPtPuVYkuNz1a1cdgJoyD339Q1E0p02bh16k3M=","BRxXzDc0OYl0QnKGnNyUwGYL/PbqHBx65RQn+ymMnbQ=","HIvZbKOQcUorAHnsOOJa8P56afzhYg83b3cOEyWqZd8=","FxL2foL5BEZVDVHB0uTrsUddbmBDpcRu2jFwg5eFByo=","HDNjcV3+qVfelhS2zeoXBmw4Wohk2tW0Ov8JyWNXOSU=","JnK4re90rbC3HAFm3nZqOeXhyuA3Ga7Q/M+3/0Mv6RY=","EGNXcaN4UMJBfJa39fpIqYc0/6WQONi3E2y10MZG4ao=","Cxb9W6l/KPVhn2mJzw1mXpCM/oofwk5TJkYZc9Cb8Oc=","ACffJ+FhgnjtIkl1kBdWktJi1Kr93+NL+NthnDemYGg=","A2q43h1993MB0Wy1dqE0b9GW0lU0siZn9QYodprhNuw=","BJqw837FvMcko+oyGpGVH5DMAK/a1bo9UIFwbfXnXmw=","ES/j9mSEmvn0lMzzzPDUuPHkpgDCljHQWbxuw0NFDEk=","Iys+HUcVJy1fGKA2wTfwxvpWh4yaoFTMMwZOKl0w9Wc=","BWyR3OrOQasTGhxZzkoyCFciSgllftgvcUHnYZpdtUU=","FEzZg8+iWVFjghSOKQ2rFLqbXY5udrhN2uKrCG56eVI=","HSGq1ca0B+bu59C1Wqks4KMqOekYuzK8jUXCgJSmNK8=","F29gvlohuY00aeEzm9XHoKjuhKDTQzm+9nXQZObgpGY=","AynQSGWNDu/tfzqqm8FDsMJmNvEyYhdtZQoaeiBE00s=","D+8o8RTWQg0aKI+WD9ndQL1KWgLVgIFiFxHd0oh8dXs=","CIGIE7o+mpMpJU544AqDs2DJBccgJFnPrQq0dlgnaoE=","AgoSi3ESmU5SxISbuo0SF/E6lXu00LpqDZfPGRS2Wwc=","CYDbPH0siGbpygkCw7jgoHhYWVHqSsusJFthz1WnA68=","FPK9bcMX/hkSa1g9oY4tcXXPpwTFJnuEii/5oSuxiMQ=","ESJv6dgfqmxqNdOhIjDWMkUGHyBFNh51eqDFunxbMVI=","H8FEqidcrZUO5OMYK7h3g9xFkGsuhG4nAyKOXVMowfs=","B4WKPhWt/BQUEJDZcs3aNGGQjb/RyRt+m5kXYMHUd0k=","GShEide1PtJUnF/GYzHHG5sxRG6zZoxl2FrQlHJ9ReA=","BYdwLBm5c3hX+Zz9Ah+Pxq9xtCjjrpD59dLsjnFA9dg=","MGArKWziRQ1ysA7ozs6fiWhC/zRwuY4cuiobOth1Oes=","J3bb7AeaUDRwDNnG4hQE6r98E/oX0GWi1p0ph6cY544=","KL3QCVSal/0MKenDD3r5VV2GSu4FrRiG+5GNNxrSnpA=","KXkaLhfcIEr+ZFMG9YStdn8r6UmqbQYfiG8h0EAarRQ=","IqZntlkIaZoi7cFpcyS9N/+w8Y8AwLpykuyOBUcPvXY=","IA1IY7LzWoU7fV3NwivP/Y9FtgvQNsL5SQfYc+XZXKI=","GL3MrKEcihChK+b3zJbUVX3Zzb7NX4QehzA+OjEuniM=","Em/1AnFLWMOkD/o9lt8N5Oiv81Q5dSNb81EMerItiXw=","BXD6TRySzykXA2+y1HdyflW1abSliJGgf5bFAMKLvOI=","CMhAANuPclZV9HQy2zpN3lFNz0m0D8TTAaF85dcij+s=","ByEtqK+zU3akufk8IPdBnscEsiyJiyDrvzrJ8b9RMDg=","KMa9hmen5TNuu35TxySZD8ivagWTkDU77hbYyNupceA=","AXkOeoxZ673OGOp7m+JhuISKj1xps816e2OhsebUySY=","Cc4QdRwre5C84NYuj8sp/TyKDShuk0EfxmWIpwoUpP4=","ID7FeUF+vV8FbhNGqMW+NM2mbJkB+7C8J7jXc95/Zl8=","IpeYEQC/0L28SVVyquXtVnbs8raT4zkTuPz/5l9X9M8=","AOP/82u1VKAX+U6IEwlXqXXTQ9FcB3KmfOiLsXNts+U=","IiFPncMcF2Z4SEYmCXHQUa7ukiJrbxPixGeGie4TBLo=","HuzKrKI6FEYwnKTD2bfQeWLb+LzYs7NyGPQZkoEmMyc=","G9Us8Ku9MuiI1AKqwKNYMJvIPrdCVu+hftwautGWv2M=","Js2M4qznkRTi7pb8HKOAHQEjRcaHUACXRXNe38TinXE=","HdkhAT5lGeKbmqD1LMjAL/86169qGH7w6QY1AIQG3QI=","EDWOHLisEuVJiKZL7k8elJIfAwppJqANVyNig+oMCsI=","HKEWixZ6pSmL/5bYI1a3OH69HXBDHDCxwMDfgfwECMM=","CNGrJpLSkarvLlCYXIaUhQYVeKLfw3mXIiyB7zAfqUI=","LVl4DdCgCoaVFsagswDtBvb8OeD56tYFB8skwUREiZw=","GbMPBjVWkK+neWk/f5nEpHD4q4q9aYmZPUiamxcYDLI=","G5PJNn1Wsge7Gi8XG1YgjGqhJ5viVywaWeZTRdhzdo0=","L4tF4eB5RIregYvLeFsMi8ru8ATZVhQjR6CEZ+GWGAk=","I5r2kbfW7fJ2H4je6uxmUWnemTmc74GdzDe0YJtstOA=","EmC9KZ2emTIVYQkFWbP5Cv7To282xNOXBy3ik9NM+LM="],M:[["GqTUcKvqojVweRKdEUurEXCUT5KfwXghathH1EMPPyc=","Dh9OTSbp2l+O496vSLSTYQvmHX09sdl1T+yjCHmtxkQ=","DCmMFDVqWn8ibFpUnlkYSQA4Wq/Y6kHZdGcplk73XzQ=","GeBwmC0+5nXhYiyiDROyN15Si2dnBoguuPGv4cUEXqE=","AzPikjmS6J3uVwplASXtp1ogpy5p4QhjoZ0Xt77qkpU=","GUSqxyv2+83sBDYSOMPE2VENXwdDmhtv9B9lKZC+ATk=","J9gCrQGaQv0EiSrRZ9noNZanMGBYkEATGWYWdXNjWfM=","K9BaBAoJh6xrwB9nJC1Ut6LFJ6lwrSgVsnNHHrliPnM="],["JUuBJvRSQ/FN2CEd9B/lUWs1lS1WxiZ4wUjnPNutNxg=","IInFl/6qTKmiAu37yCN2MQDilMnjMADlE7KiFkkdR0o=","Dd6qkGy2Xz6cm+pjRN2o25DCU8D3+Z7O+IeG/v4OXMM=","ERTJEgRCdQST2ZnU3UXb1PO3WrGDIJI1OWzoPY7pkW8=","Los1qMKeY53ejf1JtLNH8A7kZ4Y/bvyzVfoVNO9weD8=","IObMYTrmywpRhCX1PbEpin+IWe4gqtCDINCk+bv+hRI=","JCDdEoH8DfrBdqdS0VkGtV8Te5zDINXV2qnfPz1D0+Y=","F71PJyZ0jZmSWvmi8pKeIxwYaUKME7Hjl7sAmRkXI6M="],["JwcS8YsVGPr+CTZg9JLNvC+3D/qzHYpNihk0vmh5I2k=","EHz++h6GQEWmaDllJu2fZ1srvycspjXY0+iAEJm7l9A=","BLlqKWo1rPQVkpuHhLa7pkpjDSnf8otij8mO9wgjC1c=","HwRlqcEzocaAXXBb5rPqmRKi0GLDTb75LeRpVbg+e9k=","J6K39VSeXu25AQXA+OIPBXGrevCAHxvdI+qtkfIimhM=","AxsK+3qy8dJB+IIXj33NrUhZHMZ5BdZR28r86UsU0HM=","IuAyO7vazl+8dKCz3t6m4eO/EOhN/HH+OVCJrBl690Q=","Hu821i8/hk6uZ8YzJOR6Y0TjOi1b+4LwW++ZAMVOdFo="],["K/w5gaJJrqrsSrkAFyfTLU5v51WY7pZPyFzzDVDfWEs=","AhYw7D8jbtIZ9zzGF7n4smfb7pmmPFKFROoxsnzeSfs=","KIkKAxmbcn/t5e0AkO1pSUwFPJeTD7tsUjWLDX0QTBY=","G4Dz9Dk5bC9Ga46bJXZaAUlwRVob6u16b6MI2sdftYI=","Kku60kWjPl2XAVN/dRQQ5P8pe48dHZCY/pxRjCYaGwo=","HkMfKxt+2uT4y7XTB79RMcNSwqIVqHDXOWF/SwF8bRY=","JVY5iJolnr5Z90qP3y785/3h46Zms12ObsYB1NCyJok=","LQ2KgUz6FsIyPxdL4ty+DClYKfxZvyqJ8TtOrQ6wVqg="],["FgYKF+GxH4Uc6rIEZFcrPXjVguoFABSEMQFIX2Wrcj0=","J0EgPWbFI8djnqcTsgNGEZyWHMHpZZpFivdMvuFtcb8=","IgjFAEgGx6r1gxRZC8vqFhaP5i7ASXr8a90pOMEtmiM=","HAH220NdxIhe75zf7RkyULnT60zuNmZ0sHvdGU/zSf0=","Hw42ws+awsQ4jnSWbZ7n0aCzGGkWoIz6MG9rs20h5Ug=","GZ/CvmDknmeewu3mzzNF3LO5GOWz4Hws2BQTM5NOF48=","CjjRY7ii+jCSmZwXl7GvkJvZcaJaZWuu+9vfo2KOZ48=","GYlJ7vKyfCucPWmeP+V9o9W1CcK2cK/OQAq6Gqqe1R8="],["AOcyF6EGxALkxsFmzZ7x/SoLFqwctDZGvBxyb4MXd3A=","F7IJKw9jRXa2VMbeIaGo2BK9TAFVn/+DIXEpCC4rKyA=","LyTWCcsjcg7aVfrinsbxmQLELYv5BPtlYgJzbZey62k=","LfGD/ivJuLdXc/qWHI1BF+WCqAtlavXFh2PnAk6kGJw=","Ff6WP1vQ2Sh4wQqJThGAGNuC5jUor6TUcD6Yge2hGNE=","CvWU3EAw6FCXAfvT2JlfcxJq1yp68P/zRO7oKjHOd/8=","C46FfZ+x1VTzpOwwetkH3npDZDhgOvGyjU5O43mWDOc=","B+vNJaEOVmk6KBVfza97NRnZ4OCCQeIXiWlst27gYpc="],["BLlZygfnGCygjyNRoDVFvXq2dvdAsCMxY36hQ0yFRew=","Bo6OY0Ed8rOp18Vn9mQZpYDTuhW7/dEibv+j/WvUezw=","A0TQx3LC8FNmSnuSZrGdSK5dKrPRwaGBUHVKtLg2r9M=","B+DMoaNe0V+9thm/rsx6mo9MUSk5J1YqzqjquBfGuEs=","Ii7fPia/dLL1A5gxiSAdTujm1vrTQdf/UHSN1zl0nfY=","LUMItII7Rl22U9NoGBgSCdI80S+ET3L3VI1J5VBVpgE=","Lo5n/IX5tNAOnhGXs1vt9Vr9cwCkw3CYfIPBXPc8rjw=","IvG8TsE4tZYSjOXuW4GElkzCYjGOF60h1FxVJHf1PmE="],["D8nMlSIvknFc90dgECJeFMw48xQHHlDg87yexnSoqsw=","L1oqDNDLJIlslIeKgQbVfoLGjc8eIJFnpFrpz4Vw/tI=","LNGbXFW6sYCeUsyfwaA4wIk12hnPxWPnBI1r0ZcKDI4=","JP8phngf5ArmHo9coO8XxaXqe928En1DFUfB9qj1zt0=","Eqh9DFQZ9EhBmEDl5aktJ2rOAJY9mH8qEAiRPZiicRQ=","CvPO/yyGWpAblAbV2bL8WIM9ZC9Gxkk8oDDvWVBh7Gw=","J/QthoQvTYqMOv8vR//B4Xnwl6rszlW7oLD9/VsZCqc=","K2s7w0DUEZ5Xgx5KIYcBPxIWqztjmUXdkqmElDJB8dA="]]};return Do.default=a,Do}var gd;function NL(){if(gd)return Ja;gd=1,Object.defineProperty(Ja,"__esModule",{value:!0}),Ja.poseidon7=o;var a=n(ln()),t=n(un()),e=n(KL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Ja}var Ya={},qo={},pd;function zL(){if(pd)return qo;pd=1,Object.defineProperty(qo,"__esModule",{value:!0}),qo.default=void 0;var a={C:["IIjOlTRXe/OL57xFfydW1VjWbgwHucwAGlgL1CzaDnc=","G4bmOQjEsSr0POxoEDVslNIcnjfXPf/5dCpY4Ow1a+E=","CcoCK6EULRcPdVIS4u3J0KSs4z4Wgl9UDV1Q1aAhoWk=","J35p1HoTOAQkH2rr6USb5uIshJxtitjJOOr2E7wa7NQ=","F7V+oDdU4krg70Jaoq2TGqybpUV6GM7FlFRaI122smk=","EcdAmDOV4PSgJuLHyTkjY3XJB3dV6xo3p31aH9dKusY=","HNhVKQEN1+L7fqQDUVurVydVakecWbgi78WoHrN7xb0=","LLk1QALOxLy/qYXeNPQ9cCztg9GXqjdLWh+W+HsS8pI=","H3r5jgj2h3kj8no9rUDFJaxS9W+72HhQZUT5rNYaoy0=","KxUXaSXfM6RcnpmnxPJq2UaxB13ljHBkwP+SxDHTHdU=","IsiYWbTTmdOmCjItazmbiAYTWEk/PLNlP9qUDpiMHKM=","Gp8nMMgIVNj23ZgQk2PUBVlwOTc69QVapn/BjlsZOP4=","BAuuLFf8aOPOXilJmOoGDiVj67rFj/j8ShoKQFdfDtM=","Fr9PViJylGful0nMOAYF0rxNiFy5lpmqLdhWXE+vi34=","EEXs6gRLocscO/B/9JaDkKPqB1ABshY37H/O9hsRMpo=","JqMZ/mt9bgjdbOqVh8/j9SNJLs52n3D2bTthl6Ji/Qk=","KKVim0wggzh+rLCcFXElbRcu8e2cBzhobahCFrqBvW4=","GGviK2oGPRjMh2DbpjsRnPxtiJfjLWoLGd4oBTL6lyY=","LEHq+cASjEhsVZWhztaz3RW9m3MhjGr4gTfLiqXFdOc=","EYZCZdduiHO00s7M0Y2tpGq3ITMh2+BoNyf6LffjzXo=","E4PnNx1/Prdfl0Yf95VlU4Fm7eb7asaLAstg2DIkZ+Q=","GgBTRuntxZVz45ifNMME/xNR3pZC85gWNgLhOMWcdGk=","K1QTRbxP4VidZJJwzu1LLcYpnGml0ktGDjbztOtIYFI=","IT5047iGkgaLQg/ax6YvPpD4fovZkzELmCiBtOp+tY0=","AlQ3D99g4xnfXSe5hOIdiXnIbMbJ23e0fp4DfUGuK4Q=","CDtzd5h77T+9DF7jJ5zMsxmtqmYLtqec7uYn9aY2nss=","Cismu/K4SlW8TFsJsgnUp3ut5OywmZ4qcAIczNT7zhw=","KHCQ1AfExSk81yvdiBrOGkeFxRiJrJygU/rvBoUz6wk=","AKn8whojS8IqRzwEkx3eZkdgAepuMpMSd8pM2rYqhYc=","HXn8xQZv8qYtbsDAlvPAYj+XIsXRDWQROGuM8GYG0RY=","HS2mdggbewp9h6V8am8skQIqgikZNK6NZGgU84t8nMM=","ASEYnXNi26kvO7ooc36iR+hf9LPOq7Tq2sJvennTca0=","A7oBvcfzG0s2JoMdXoKFKl2lp/Ry9JdWQ2LuY71tYQI=","IWSHrE7qgeTYNbIgx/Hnt6MxLfXtC25gahab3siaNcs=","DrXrQkvHLlsgd51hOKcpbcMztNmOTO3mmMHY8wafyAQ=","FHYIfuaIY/5p1TjekPkL8nGHX6/sOqxoMfoXgRr8RfY=","JZlezwefT4GSXOgFDmvdC0QOet+wDafk39ilquwAnzI=","AbWQ6hRd9hUv8Ojsy5fwV+s3jT3IWFqBlaj8awPd2yE=","Dr/tEnd62XR3NNgvt6tZ68hfB8PQVeuYfdQkcOAWvVI=","LgO1Gf8HDjG60c7SXQLeGMXAczVYkPJtZDfJmQo+Iyw=","Ao7Ui++3BTShV8C8gDc0eDD/b3v/7ak6ImYxF8MDgQk=","IdVIDvIojPN2Jwg/XG/1gGZF14eDOXkhadEJlFqoecw=","KgF/TKYnF/6dYW/Dt09CaiJmaiaO7RkMklE2ef9TGGY=","CFzxIwhNa0sLKzTPBs9viT4KnbZklYVg4TEC3KJYoYI=","Acqx62GuWpxPGx8PTPcQc9Bjz46m7LOjJrw/LyT8MKs=","CLZZpzfAp+GYxR3gdDjn+u6UNpcVBCNnSV8DBeibuW8=","ArOt/vlWAHupSeBEpoEVsKnIlagThudpdE57WywwffY=","GlAqewiD3q+bJKe0Uc9DnZsExAry/swXKwV7T8AMr6Y=","MEilNqKnWvQaD6WWdSyD7bGcRsAOQHJRaizOM6Qs6Uk=","AdAIIWgy93c2ufLI6vGNKuaadZWj0uhyXnWz6cZqsiw=","BnOJ+mcZu55JNCRXbTDWJU8bfVTmnh0YlsGxXuhcDCA=","F9oEy1BghhWIpN7mDazsQH4I1rGWUDWUUnBWmbzcq/Q=","HhELJFJs8ZRIoEtx+R+DTZA6CNOnZY4F/wEEzm3hSvA=","CwootnJp3PskIjHHOE2blsRAZwjxp77CYWDiNSqCDjQ=","Aia6Ijv1zIMbymBKL1WzJK0dSym4GuM8vXORrQ3KDGE=","H6UG+ucfYX22oE26IetiJKzKxffP8UWUcJO/zi8/XPw=","KXJMwpc7WzTE5T+5gfJzWJ5+BGeltLWhbVlvSIRPA5Q=","IBhYFebVvUPXabHns6QjadtE+tpEU0qeQaGBp82QysQ=","LLXsq5Si+viZhrVlVFST1dhknXOp9TEzthSvbYk3ZhI=","BncnBKamw5by8YYnLbglE1xZhvvbzgo/2Hm8J+4hNL8=","ARK/9HNmeaR3RA50TX/GGR4Wjv5sN/0L7rbmTTBZGFE=","L6rMJI0vdCt9xQsBO+nEsuqNAL4XKDKtB6wOJo45Glc=","EV6gU5FckjHWuacbTzQ3520Ir26P5+QqOAATZJjfQKo=","A1PiwoRcD9/FP1g5Ti26ygYWTRDbr3VhJ2IbWiIYEjU=","KbNoWQC7rKkQNjrgzexfYcrixSx+3j7AEOKv6sdIcQ4=","GnO6mFuCQgnQqfMQkgeR+tkieyG/2OijqfHC+on6waQ=","J0aC1jodap616iLgVYsUX1ubXoRcjJ3OuDvpQzCaMF8=","JJ3mY9/fZoLdwSLgKqwNeTmPOOYInZLiyJLM+Un8r80=","B2NGpJTKSZkYIp0vr4e2ta/UmS8NfUAjy7Z36kN21OI=","BxIVTrQ7Cj6L3ZTimthZOeIg2vaTG4RGR0HmTpkmtQ4=","Fbt+EnufyTdkJpKpLYZJYOJJ3fMn/GySr97dib78bDI=","DUONiFw/zlsGqAWEAV6veorgXGAFLBCrgNgAdoANjhE=","K/+4c8mwR2Ky42LWGVyAE9z3pf2IGJS33Dg8iqNKngw=","JOpCx29zUNCOixAWZj/ao/hVK5Vk5botpFt2ZScH1sA=","KmLqIaCt5HQLgIudg4tO8gWxGTtXns7ODaNFI8SB37w=","DEl3Smj1J0tGjOoPMiEcyajKhkxtMvLGRLGrie30dek=","CptNPTJWTYPCTU4FLcMHLP/WHL/67JVxUf6tEyRgc8w=","IhF52EiuPCm6oN6OGa05nPAA3PzlcqwxD8ZL1NIBw6E=","FwIpQ1JXmkPRnaFd7h/csqcKRd4lIDQ14jQGkvf14KA=","BZq3iCc2AGhc9t4E+Hyp27zrGu/jf3eWY6fvUBnU2OA=","I69ksWIr4Hc1rxmZaROYrWoDQCmhCc5DXxLBshtB9Zk=","EJ7SHiRWrX+UoMbKbtlC716BMkM+X7pu2PSbIDhZRRY=","JtnM+lN50/1pJ6WJWDONYDeHInHYkfGfZ/cMOeCJMyY=","JOqeLbNYwb7Pfc19DkaXmmRyB4Fq5akB+wCmzNmR0P4=","ABWpuMM/zpOuOXHRk6Qwvpjuyh0nc1l0z1Ar+yDHG7w=","K7s2b3m8O6oTjXmparXNFIJr06hTR+VZVQvzUfKW3Bw=","Chx2ZB7e0Vfqob9KrclWeR2eeynrFNB2VK8FJoa3Dik=","Coqfnujs+K0LXNhCF68m/c4soWwHvHR9EDq8tIqyH8I=","JtaFK1kX9OIpxGgk0AtERCt32OVm/js5Abpt4gEd6tY=","GWAXNMMMsqRO5KMjs18sFx7Wfg88H87HCW5fAfuuaIU=","B4lffwKfhMPxfjWbDukm1AJQVYfzhsu3EHC8F8yH0EQ=","BYB+Ciskc/O4cTBYbHhoIo602VA78lzCsPNak54O9IM=","Gsm6jrni/eCnmIaqjH29NiqkkKNV4HmCgovj5QmdL94=","Ixx1lfdv6lgoZyr8W7tkY80A56BzRuJYivVjjjsyG0A=","Lj0WdzECF85fzFj0A5Uy/5RuLv8rgNF/WBynjwBoZy0=","CXQWNEFxKXWjO0CT+SLX3xeyvc57frAseDDFmARkAA4=","HPXBpCgIIqWd7suCpkuqtO24eXfpjuKRObtRZxuZGbI=","Ea1G4TeSFQz1eTOqlHbskYS/1fI95G8d947X6UzIEok=","CCj7/AlRweoMDz1a8v5Xlu15Kpw8xAArQeehu45j2uc=","AscgqEhucSIwUwTs86APmYVFNcT/QE/oLjDpnoUA/PY=","Cb38lC+6iCTAo41vUl+RdjYNKIGqQlAo8c06f8PvcsI=","HZVKD5MlDlWBxriX+9cvTyqUPd5R4mLn3MShssqC4rs=","K4KTUuKXqyEG50+f5wL2ljXt8356sOGn+S8UyYrtVus=","EtO5F+WPH0ThurqjQdHaySPfrHVILhCK8cMzaHNKkE4=","KKnmxl0G7W6kd5W96bF3tVCTBfhTJgYq1QFQd6/ku/s=","K9PDOuMRwvjUrYJQi3bfiQwxH8jSMvvC3FNfpZMiHKg=","Jy0A16j7FGO7Yk8d13TtyPOgkjv5BZuuPYTaI3Z9aHM=","E1WnlqvfqpA7gd+uMhAaEwaPUHBEBVLu4KzypNB9A70=","BzS8vOQYCuFtSmaJublPKwLMfXTKjvFZLNFq/ioDNyg=","B3jUphTC924oGZ2YmpBS4mJ0ZLYg2R57bT0V29R5nVQ=","FrvJgKZ7KmVDTQh8UBhZ0SfbN3rhRP9jTLhXT+i/hpw=","EqPn4ZewUExolDZiRb7WXjJtt8eq8sHA1Z5LrBDWM88=","HzX4xEMfsNv0LZ0HM0/Wf5kWD6n34g2BH0uP6n3V0z8=","JdW/GoY6CmRBz1XnyFuPIy/xVW53+8xtcei980m/37w=","Fea42at+Bjo2OCFq5HEXbofuTOMMwkytGVh6IzMjIKo=","AZKe9HxzIrd+vQ0aQPnsTUHrJkG/ujWpy6e3CKU0yco=","GE9R55Htqi3qeREVEke61LDoZNeo9njHcIrGXFHju3k=","JgWt9VYtUFX/soTfHsDU43Hu4Flc4UIqxTWkEFl82GY=","BubUH+uDLC/gB+G8zIFEJYW8nq4WEri8PSpJJcI5rVE=","E3632gaJVc3ijbauXngLeuHA1jPN0RO/D95DRayclU0=","LpeTDrQZ9zU7onslh5dT/mTX0YcCPOLeS/nnDrpum7Y=","E69Ak2IIeGbmLWhg/asVkgdAW/nHWp79kyFzah2BJBM=","D9L5VASp6S9G1XyAUHN1cklmJkVg66+z/y/RklnUfWI=","C92TrCGu3zGCb8MBL8j/8UOErdUh2YE13zznDkfTgRY=","CD6meNWlPoqbYBkGvvvvI4EaYTd4i7hz/v1VIffZnwM=","CKmQa+bpq5PL8blPCQ3y0C32xsz/Y2TC7WmG1h8Wryk=","GHscgs+viARJM3z6d/YY4+0ZxgTmX7dosDM9jVNeqkc=","JFAF+BTjglB1EUMRf14n1cFz8MpOoqgbG48+kNf+xPM=","JapaU+xecfP0f7HPjqjHV/q2mmEnT7Nuracd6vFhTbI=","AcJEou0ZInU7Oexrd18HytkbFM2bZXi2RJLCzEsMi7k=","AWZOXIYSFsTLEM86O9Ua+g8+WeriT81+faqoU9RsOC4=","KvABopbBEeQeMnrSEu0wI02ivq2gRJ6h0uDwoA5CQHQ=","FgIr3WfSreFfZhooff4jkVQzsnDyjCTmBm5FA5rtgTs=","Ey18pfk18+iGQmitcj6HgN82kWOEpUuBLHSnSaJoJvY=","IL2rmCnkjImpnQ6LDWm3mkonOAiAet5OxduV/RhMTzc=","KNtJQ1CunIGrUtcZ6gX5jcKv6HvBr+VWFh5hdyJYqVE=","GfyS8dLB3AQ680J7d+p06Aq59gQeDlHRsk2cufP7PtA=","Fr6nEmuPByq2yGr8qAtgbLkMfl/QK726Hdczw8uIRwU=","H8V7FopbrcoVpBfrtL9b6yj9CeDf+IlVChJvWDPx/V0=","GtINGj7lWbYzS+S6kR3slX1WaZzzfde5fSPcvGW9mv0=","IXNDCmhCBh8Cc5OkQ7biXlmj5bzSCJWt4PzXvrzYiIU=","EWcxcwQ+FRNzYdsFoLBnFHoj1/MANoDz4VNLGD/ifNg=","A3yAr17VHBwiGB8+dziAaYRJPrmYrdBVVu/2USkln/I=","HXC5YSRtImLKzYwJVAQFSLY/vSXzA4KFw29rROm5/18=","IYREinu4DRdtvj3nPzg6kJY15GEMJYZLLGMlIYa2xEs=","A73KayL7gM+eezFxkOu7n2x9PJbBv31QE/NlIaXbp9A=","K2WHMxPVv/pE1RDcs/VQSENvTuqRoQDsDRr5Uutkskc=","Kn/QLvENscncA8nL6C6FfPBvN+oQ5+P1ObU3eMonRhY=","HLiAzqGSFThlcTVl7kJVznLaI7PSFC0mX7whlvuLVp8=","FmKLb4P8NrvB1gApppyEPSdIT1lKfjuo1HzfpUipGlY=","JvqbhOhV8QaeduA3EE+Ihrdg1JGb7XmOLkuNvgCA8W4=","Duhsh73w7NUm42psSsn8m/BbkWGFbWWMG57NgNqeloc=","CKUXmZOoBWQFUny4K29hmYTGPNEV/+06ZzT/qFJnGR8=","BHqmHkvwchrE4KLykeYhJLzCrTlJ3Pluh19F337rVDc=","JjpRHwM+H73G0oK1JxKgm/XR/sIeqLv+LrHvW8TyEUg=","ImUgv3MEhuLYyFm0SbvadjG4ZDKiwQDdc4bJsfmT804=","K67ycQelKFR4jwxalA9aTfDRjTi4k8uxFXs4an01Y1c=","GAIsyhfyaBjVTmDjALXJSdnJISL33lZRpgz3DI2l/FI=","B7qtMB1YRg0ebtEPUqvxvXhcrvhWV3f+2U3WfeZxfSU=","HkdhBsS845A6WqxuEQ3yzBp/cbQTW+NmL0sBBH4kimo=","HgGd6lAo0jst8GPCEEZqiMP8Hr3tzLgEXH6dG7bnepg=","DdVfAGVZu2dHslTSmnP16nF0xrYGfnMKX5qZCBhjCOI=","CZMIWoAkpZjgyQWdO5GfsuvIG+QIy5b+OKSKlSwCkYk=","FD88v5jkCXGyEVST7gbibHiTeHv8+xOznxZYaex/ubc=","BSX/KPokKRuNAzsCE5V1T6Aw1JcxLMF8qv0AhSTtoH0=","LZ/cGM0lhrn0SRQgF5CTkgJQlRgtX0DVkR9wjrBc2FI=","IwmXIC/NbwUeG/Hlmp0BGI42IdYT/g545t+0AO+0P0U=","BEtWRp/7vJ0MDwdeIPOQ0w0RmBp2flB7gK737WnnFx8=","FQfYi74QshwjqUVV0eTTeapxZy4AJFA5Pq96I3NhULc=","EE1nUqdhtQAmN37HmEBPcRUbPPap6hvpPGhAWUgk6bY=","JSdjBc3q5MFlWN5g2nKUFEap/SImqmBNRLv/ErHg7CM=","EPPO+wVNYwvX3Ex8q9l5QNymg9rYzDWm0MMMvZgSBRw=","DkBsv6OExrJO0EP/PLHWiRuv8Fha/E/OzHzM7ICd8D0=","GPNgM/z2TxvaDBJhawC2EYY+/biWbbftNTTP2kCurw0=","Fl0CKjTPEK0yVXI2NaUaNboqbbB1ctuhBtxWymyTfFI=","IjyMmu0wWz0YJltW7Lekz8SxDli6oTZYJ6U5xHgZQk8=","IQP+6UZ0hAsaoYWh+CIe5FEaK1Jo8ayW17KMiYT95tY=","HBOWQzu56smgKr8jkJc8FyPsXNVSl6OHqSgG947504Q=","G+/uJABaiNLJrpImFp6JgQaZb9Mv7LcrDLTezxCfG5I=","GtxJ8fG0Bd9yemTphnXqCsL8dCyAbw1ZUMisQTUPUYQ=","EKDgyrdtsLagB5nasfLkp073ORc8+qstA+riQMnIR8s=","Gpr/YtbGb9/tDrkbbE+XTB4EfAsn70mxDSkzrxrz+Zc=","Jhln9oQJldr3QRA0Um61rHJfleIfw2yO0ZGHOYX5XLQ=","EzgDD4X80vrgnrAW9CVAhuGvL4j+fb4p0YPIntUoYJg=","AsU3RdHw5mSZ/xCed3cn51DBE0kUy7TVK98WSceRGto=","J0AQA1RAbeTZTrhXocXfHA6I2LC4LRDBJ26n2fYqBdA=","C4qRU9PWQ/Cp99wI8k1whj5PFQ0cMqyJBaYiaIfJvO8=","Jd1z2B6okYycH/abC4ag7TgB7RqkBZ2U63LPVIsu6h0=","JT2BPPBfL/HH1mIr25+q/yd7TQMSpYiKnc0SiRrRUm8=","JSMyLS0qeMxUyUS1d1K92NLI5i469R4CDrLBXtgw9fY=","KsnC1g1FaEjo39R0mc29TyN387SsmOEOKuPk+DsAcbQ=","Kk418d+DNEL5zLjHVSOxrIqXFhdPR/sIMNlPm8Q4a88=","Jw5/axXywOCSYUfL95pzMLZ20XSstltzBSLcywlvn9s=","GTPvddS4YvInRjTh9aTlDOiZ8VIU8Lj+rrssou9SztI=","FlEw3fd6gtuEJ4oxhBEJ2kEI02S73GrLsbD6eqUXXcU=","L8H+Ax3NRTjV2LE0DQ0331UF6WW359xMGYlbn2/O2mw=","Dh6tK+b2RVnZA+rrbgKnyF1UZCLncw42Ch5LzA9i8W8=","CpgzYL8yOS1d8wouSyJTWk8WH9o9BbGlBn0njiHI5Uw=","LifmGChpNgfBfv+bseXtC67veC6HnFIwuG1qedcp9M4=","DRzqJqCCB+UirOUF6DfKos57EFy9BOfIOMGs0Ab/pT8=","C5WNq8moBm3p5M74mryC4zlqA1aDdvtEzN5MOMsqGUQ=","FvW0LYj41PeH//95a8+BdbHNzjByYd7IbPIDSpuIu+g=","EraK7C2yYuCmHw/UuXawDdvPdUbvJ/R9dDWiiMK2xjo=","HSI42Nl2jcY50Gylhw41A/P4HvhjMAlEyHt3Yoq22E0=","DRZOMvyjw8jaOuMyqDHMmpXnXUgzriMq44K9xreQ2Ro=","Avzd5tbqvX8voZI0+xV2YbdipcR7V3OaYgANf2yo7zs=","DxM7ix5U9DSEV0ZHgSyjd8gCoVkN9eW4+cjCGQjvvjc=","AwV+qJMum/fRpLrYJB4U8eYK/RO6TpCvtHLZ3SnEK94=","I9vLbstIB3QN69yCX3dkVxvJPzNkWCXQ5FyIsAiKnxg=","AbkHVKIFghfNtkq0XiTC4pQjvDp2+CiVeZJ+zfY+2sk=","KNuACuFtcDPI4QfhmK6qu/nQJxx02VfGu5UUoPA4+pE=","Avl6Nu+Tp5BMvb3Dbl7zdOWOrze1uUOUc8vkd8P6sXg=","G60dljemrW21y9Gbp7lVpFuegInRaXRFoTB0PgPtPK8=","K5b1IN2oJRqHiyi/ltKBhVucQyILCjJ5F5dT90DtroA=","BB+X92xgso4P33l0v5IregmZ4ODkDGVDeK4ShDISkJ0=","E7XPV0dQV6L1+20ICTEjlzrvlybL2YNblWFsKu1ViOA=","LKQ67VrqFi6Mm+kqFeetCvhNRPPS45i190kfot8S3u4=","CJ9rHsi1HNHm6mm5ZJUgpvDy+W6hHfJwqwxdmttcPfA=","BPUQz8flKDcLq7jtfFDDTGBBdyYneToPNxHRMAtNEnU=","Jg4SxH0KtSVjr/zdXChi9LrVt69O4DfqX4Fk0PE9EFk=","GmVkJHYOdUaK7dhRWzER4WzA1g+NzkUfe7NbEt7Hcrc=","AMyFDpWcVnvtIAWLZ2n8J6bHDPcvIiuAh56b37xnEak=","CIlHkQ6ztD69hohpXGSsAg4Z0LvodafzoLaZvGDxjKw=","LCXCNrtIA19F/eWxeBBWVazp8/mvsJBx55DcS6vchr4=","Et/hvChlT1ybplhldpyeR/K94Ned292iFwSQSykF2mg=","BWRbaPmaVk/wj3ReFBO9g6tbBELwuO+qKphqbPsv2Ps=","F88+yYMbTW6tZA2RLkG0xy6cJZEmv2MQ+ksRDkOGTHU=","ErFfKP7+XW+lGaucxnp4xX3XIatEryhucvu9Vommb2E=","LaRPchBSB3nL2s+qsuHvAe3aju22/m0Df/r45ZhCoAs=","E3/3Mj/nV/Mq+hZfEViLQDvTk9XJqWHNL32i5dmolMw=","ExgQX6n+FUnwTvSGecc9Rrke4L8ntEURld6UXIz3iv8=","FAikJZ31KkkXdZNrLC1HahIXCMMS5jXvjR+EPDujQ40=","EM8g3Vc0wYiA3sW+RK4t3MT0R/IMrJjJUZPrdXFYXQc=","J4f+RiO9MmTgyLWkcZdKwf6x43+8OpyKTqdNYBC30I4=","G5DiEHSQdUXB3sPFnb8qax9wMli8A3B+M9tYLUWrFy4=","C46RKl7FoL+3eaCAG5CGPt/ZQpp7NjK7UCL9vEBjbPs=","DZmCN4zZqDcLt6VVw03zGD7msNir8x8fVHo5kwRBiNs=","Hkl7z9XJXN/WMLCvv203bymkaNHNPs3lb2lAIh0kivQ=","LWAkAcq7xp3/PdVS4nHuwppaSsvJNWhsz/mhUHZYW3o=","FwpfRRj1hUQzBnGtKjYfLIA8DTVfPhCleElR8qvvpwc=","IbOiPDpVPUAcCFAuykl76Th3avZx7f5Ex4SVas+Yhl4=","Ik3Ul786Qke5xIyaw87lMHSQ6CShQgTtiMKxFm6OR5o=","JlSWWjvzySQi+1TmdqyEAbqvD2jUJmTjAGJKN1MC4O8=","HVJfQQX1G2nABoKGcOd4W3Julb4WDuGj4plneCCDnzI=","KPiNCJ9CHKK/5pcnD8DzT1DsQaHt5TYSxS23RHm0syM=","CC5iEVPuNDJOn7f/PRI/yVYO+a8PoPlI2yTRyObwepw=","B/hXgzdSOGex2UA+nKYa2ZwNfVvN5PGdh1LhKk1YBfc=","LlLzDdBZMa231+hSVYSbBiuhzy641ZIItb2o411pgZo=","FMs+VrK4xmBboEJhqLEXeRyvJvfCM7sYP4P3LvTI80U=","L9a05siSYJ/aIUFN2HEt6EXqswW+Yn3002yNMlyb16w=","AyWJjIQ098oy69c/U987GtsMmUCmnpGR/ZlqSpYVe/g=","CPUKe1hNwCK4XWoWoNPf9rin7E3PXsBm+Z/EZE1tXUg=","KcW7uOshT7KFyjCkPP1xQdnOuKGf88lw8rv0ybrp4R8=","EmTL2ewAEXUhHihWp4kB5AiPHrfq9ZNJmeGZcwfnQyw=","KKDngZqgJR6c8r2r9k+tvVHclBZTOuM/fLl/0XdohQQ=","GpvmUcQS/ubIAISEd8u2fkxS/CPlGt6cSPavMH7GIdY=","G/cKJP5/yJRv3eb1VrPtSwPDMAXL5/NKwRKW5bDHX20=","L1bIwDh+XkTPSSGr0zsVkMrQcZ6TKjYZXFE44Masg8I=","EQnbh7doT0knsq/u/wBgivXyEZIOuNY446fJQ7KT/t4=","GFHCmAQCW2+cacgIkQNVkKUdEwMs1XbTMsqJIivHV4c=","CQnkzcC8R/LfSJgQa1xA8lxxN+HVrJqYbJ9m/V3637o=","KuPpDiZQ4obVkT1N0ecdTyM2WXAbMZqiKOFq+fAQ4H4=","BqbAFflRc0QfekDU8b3gTrYPvE3HL9q33YHsVXI11TA=","L2q101zP6eo2baJXyFlvpv8w1sRoFqO9PUhMl/jSRGw=","AfnGAwgYLrbUqD+ScrwiCodF2ckScFCJm/ZCb3q1fN0=","L1FMQSv9l1TmeY5MPLE9XkxLKWCdPqVhfe01vAHXmdg=","FMQWK5ye77l5QbHxM7sYIl0oKU0JLLiRevyz4Iq82cw=","GZIf1iXGbsZ+zYrz1v8OCjy2UOHnKz/JiISwA1QIWzI=","HIUq78kpZ1PhJoc5rBXSxtId40NsgW91+TuN6/N+tso=","BL9KabGqTzBK+qHdG/YN4fVZ6BZ+3drB64itnQJ0X7g=","JAp5HzuLti1dmq6A80HLVp/j/nLnGD2OWDAWXk0SN1M=","FRspW0JC4MCf73vF70Dx48hVFlQYbWLMZj7k8o/152Q=","CG6z0wvE2AZkoHSglzncjEl8k89+ZXlUsMv3Z2Fl8j0=","F6qJkte5AerefqzZWo6JOCopKnEhqw676+DdYmIsIcQ=","GlszRaTA2HVmNldge1x/+DL0ibI6PEOWIAhXD5brjeg=","LwO0bZ7u3Nf49M8s9xDkjOPzHRNk8DNFsqeWSwHmNHw=","D+9YPn6OEC/rqHn3vWAkGHCgKRcjqjVKNSWeCkAFDUU=","Lge11wylg89Nm6/6zQLX2A+l5SOrvYlQhqNiiLlp+mo=","JFmdv6HdH0cU1YUkjPI8oTlLhYr46QTAUXuu2/Lxdt8=","AKgmr9NwvLZbZhiejZhnd+YTdziNhyfkB7UA+1KR+O4=","KHRZUIcLwYSK28X0vANBXwor8j6QXn0zytA96QcIHjs=","IZ5tzaWQ/IjUBWc9LLRxD4tXR7Rt2ZFNG+QIFxTKzlg=","KWaSB3tC6XI5nxe6cf/t7dlRhf9yU9nR9BdHxvJ9vmo=","LMxfDiBJ1CaEGGLzL4Bigp+12CampIPdUHjehZ+cvOs=","BPkVpPq8irIIphXdifogfTZ3ALu5vAYdB/qQpw/v/aI=","LgS3waqFP57l5Pu1zXtuYMzqTtWSijT05Z6p66h5Rwg=","CHAN9RE4s2wO8r7RK9eDQOxpsEouG4ZRCANjkbS22zo=","JQMzY5jxZb3qjUkp2x3Qs3EEFv1j16rc7EG7cGLCR4I=","BWM3haUKnHdXOrENiTNBoMwt8HLtjquaKZakelJ72u0=","C6QITkTFDhQSpMmC3A2KDUYiUTt8lun8yyw74tOQHhw=","LW8yy3YUBt+p4D1/+KQ7rhBtxFGcYcOZbMnMzY8wfIY=","L5Wcgwc35jE5WEY3Ox99ADyOa6466i7bc0kSRPg3Noc=","FIY69ZeSrbG7QJAWZDSSF0mNmZJQzAqFjbJ67VT7qjg=","J2I9EBsfkiiZ+cV4Ph/bsedVKCbk1rWNbfjZhpN83II=","JHMopNnOgWA+N+pyzF0ciVwh8JMFMBvxQRwHmGAqYmg=","GSGQmqrQPMeKbPvtbBBW49k6JaVJbK+soSr0zjJMYIE=","CoXANYzziLR9FNQv6vvdQ5LfFU9km3IT4pzxAa7QDYA=","AbrARzSlkg1l1nqu4EFl3mIb61b5AspIOGD3B3U3US4=","HdFyCWazIxuwCwjWuLrGx23uVFT3hBNLk9jHCrPu2Zk=","Iol968brKn82vuHn9C7UsNN61pZTXYLTnM+76S6GwI4=","KtAbtCuV0ROzuRrYjGmjPB6U3IVRK8UWjucwZbOH4XU=","LoK9CgU84Dr5qpR99fExeRUppX+DYKLNaX6qF3xgALA=","LS2urqqTpfnYtlKfAMTG1pHDvE77/I58LwiuPkTh9Ls=","CrCJFLLeVzl5g7rOCzJ/mMGpweWMdu8ucWzDBXJ6D3I=","J1h5bNHBeO0MQzxPG2sZ1C/6G8iEw80czKEHyyvJGZg=","Bj31sDSQFue9pHQeyJjHTkow/E8bWftxOoJJkjEeMPQ=","I3EwFlVVRnU9QavWnm+5HkNEt8BYOASO0GQc7cX8Zyg=","Jr38ColJmOaTt+IFnWpSiqhqtX6wMblrU/6LWtt0wHU=","CIlxGPdcyOkRXaxYG5VTy0B6HeE1tjJUG7c09TmFKGo=","Au+Osseyb3pXaR7LHhWkCvqbOlVXq+gRRupvbUlgw0Y=","JU6OX8EbmSNI/Xosn0paC1hryq8SYDZYslkQ9jzwiwE=","AvQcIbc91Oe1ENyhbntLQncwHaX7vVnbA9OjK4nFe3w=","JT8Jzp7P0q7q6YuhspgGvChx5fxnv/E+MD25lhjh0KA=","BDletlVYLQPyV3XmauZ74Kr3xjzv+76pImsEsOeVv8k=","E3ESNcPSHddJ4+Qb0EijK/oueW4mty4FyZnm5hJuQCw=","CDx1EXUQo31DtVE5Y/vQ+fM1kN3MKX483Z6kKt16F1s=","JsybVxjYTmBlgtNdj9valExlJd3NdIjP8h1NDYI9zqk=","Dol48EeSmxqUYBSZY0qNoCC5pG0LEYfVRQTtijRNVuQ=","KxFCOvOaXRW+OXQ5tcpQqpptQSNKyr7SAGJHaI9vqAU=","IaVjgQQMcC3aWjGlqidc5pJoViXlqne7xDA4JXO0ArY=","Gahp4Vs/m5ZQFv7KLLgqLxTIAJRbpJ23Sq2Ok0avB/Y=","KwHForqhb5Vp1GcAmEZvBb864Jeqkwdxt28kr6a+UNU=","BYYUhXO2tWYX+UYC/WyGrUpxs/xno1RI1k6upTJYISQ=","BANS4ZgJ3ZO8eixUm8GcsAeHLgWZoxJ6PncEQRiU+Yo=","LWSGuOe5VJ6obPBE6JUP+jaXToQuH++HZWHhNGxaiTo=","LqnS4bfQfJo4lVZYQOJYQ8nevliQRPMFwbWHLHTlpJ8=","EuDcQQWs2GkrfOoL122jSq649tAOz4S08GInBBOoCHo=","DanBBlbm9Cw858mApwydeT2034MHWZozpJHyS2NoKQ8=","AvNVHGpkg4faYpyWYz1cyZNg2bia7CPBisdq8hsRqFA=","IC3jOm/Onf6K7qNK8e1cdAkzhsilU9Oj2kbhNHMd3hQ=","BzctQQVNvACePpH5AtV6IT8ENXXzQn41dopaUkgrG3w=","AvfjWku+lpmUmoGSYpQ8l+jpOM2ZnNkRqe28cW4kVPo=","Kie4SnQi4puMxzv1S/U1sBFgbIGbS6poJLYSMDbXP/E=","GVJ+kJOzE9XSY4yGNJmDn/XY5fmOdLMS+gxjr/cWGj4=","CFcaa4tzA2MplmYjHjxJ7SMdHjVdk4lMhWK6AzFH8CU=","LA8yd47f6TLZEpYcgdiOmNT7ZMrqLMLU4/ITpdKhue0=","JxCmPoT4vzsV2gnmm8JMVn+EpFd2ELGcxYGRsrFFPqA=","LUuEQPFodF7YTD45P3W9wLD7PxSOTud7Ul68JYqVPdc=","I0kB/z7GXgpPYpv26W6vN5rqfICMqe55treWiVkXaE8=","KKUppifPxom6G7M3IHJRjHcgtFCXUznoeGXDa+Um5eY=","GhryYEc9g0iaakZt3BhV/cboPXO1xcD+1VSvEcbO9es=","L9WU3BSZfo4BI/OvFskonQiCZMwWqBGejwKrcnCVKSQ=","DTVk5EcW3owC2Pgniw0vgZZYI0vE21kUf6Ol3CPuyDM=","KT6axEi62kI3fdiwLVrlaV6Ibg+OQ/AbOCZqraPPqg0=","IYbpYd8HKLzXtmfTXpXzVM+x7hKIrvt+CyOBKW2uzbg=","G0ly7gOyeHonIZzeq3rNtdzkS/g2igxD4eO4yKf0nnQ=","ARBa0mZR1axS6BfDLYajsQ8Fc4/OmWsvqQXOHDJ5Uio=","Byt3CnDaskKsMNA/XSR3WVz1Ibp8kUeNcuRTWFae8ww=","HjmaQhlqgGEHnp1h7Jf/jINxlbuTYgaZf1qTAhtw0nU=","JPUMzDpoqz4sukU+xAqHlqPFlzXdMwO8+ttiGK77fWo=","FP6S3JIntC3yP4paCnovULwRnwHf5wi5EY91YWcUvTw=","JHE9hZUXNsd7ZpQcAH0XAoInGVjJj9QtaxJpanBlkW8=","Bc8q0Fx13jgjj2MljI384NG2mN7ef+6pqXsmPM6BXOs=","LWJpXHAIoR0Mh0tAOVppX/+q6m5r/Oha4VgNxIIYqiY=","GeRyJ+dNVWMSZ3D6W6YUBepvNIVlw6ra0IMLPvXXdaA=","IOQ/9YA3i6/iB0prL9UMdFlFN/mFZfLWXtjBXlyhCEo=","Jk5IQTCawarpLd2ctNlz4jdAbVDShJxwkb8cG/XBJz4=","Eji+rO3U9Ts1tXivHDDAd/QoloBlj7Jq4bTAsvcQ5gQ=","DZBHTCYqrBkT83RZ1PIFXa3pA96bwC+l/HwTfM4F/jU=","D1qvSCfV9A4AI169HNG59uvzOIOD5pJXO5XK5PZTrYI=","LN2kNQ81M0dzzYI983CX7pZ8KNYtDEXDTQzuQAiDSJM=","HAyMLrtoYOZNxGdVp+ByeVvCx4gyphi7ai1dCRG312g=","Jp+iYGnbHPDLcFvDWEwBULhWQtTyQ9XmjXJAuOjAMnY=","CbRDsKdnZXW5ptPwA2Cfp8e2ImNBrIOJJYiB2ZT6kcg=","GRtGl6jilauA+BsldD/hPz+2mY6RMemahvIr0z573bw=","C0iLaodfI4vDJPBCiK2GXIV36PkGqXGtS7nZF3VkVzA=","J1kosl5QPJyVwBsYpdMAgbsM0xw2zRcr3h24Mof19eY=","H94FPdhykdfhTw8ue3RhtJ9g5K/DnP3N5l1w9lw7Am8=","KbLDhoFunT92EA6PuVQzKf+IrCkZmhgTWNwjGqHdPgs=","BJh94+MSGBHsPBBCEAXhM/4c6cKqfXxUom9CXNGXZ8U=","GaI7qXQmv6gbdX41qjVZBQYoZl60lu2HMtQJlC+24Ws=","EjM+l9Hw4ygLXi+dllYbLATQAdKzk3kahh/cJsG392c=","I+SKW2RtNTiV0GkooYHXWtJcladnLzofSRfKA7r/Mic=","G2v/QjMX0sJyGWWXKCPKLpO48rsKUiRc7c2UWH1ZY4I=","Fq8POHubqUwLptF23zBwH/N4s1JGgKr9pPfE30sIiwc=","G/rZwakiNO2XxRrH3C2A8ukIwJiyi75xLLdbknl6IQM=","KbtQZAc+mmqux7/ZTUj+IgfZDqiWJTDziEQspNleYlY=","HL5FbsP42ISeEP6jZQmsw2R+3D52X03nSJJk9eNAM+U=","AIejUGLb1zVjb3bO9vqztBJ0l4HwOzmxgUlaYqrkJCQ=","HxIZFF/wvxXZZF40eHmnNH+aal896pqb+UlRdNIovMM=","B/k/tBYF08rhtCuS1SeyznzvFK0rkHcCr6E9ds4C+Iw=","CuPeim7dWJq2J2fpLzwZ778yEVZ50mKaXr0mwcfTQpk=","FbZojod3JLQc4I+xdpU0e164hEQjxxqY68wYjCOIjcs=","ExzcJS8Az+SM1ssbFTRLb+yLF2wcpVhNdtb59q0muxM=","G9Vwz4eLPcFhbKMr9V4LP9iYRE0OcNZJCex4n/Eeju0=","HlpU5x73ueq/cXwB3Zm3Jiw7Q9HWlgCUuOUI0eEfA8s=","IciN42CzaiT7ZBAU/s6s7pSFYjPfvMvdHp8PNcnn/M0=","LvOH3BASrpSJi4r8mqVKO+H5GCC2GrhvReyzriHiOsM=","KDkU2pfwNjSZNq8RV8U22cKHP8PBVDr9v8HAxVzG1fQ=","J2rU97ozlx5Nsiksf/cE0VoUJGpufXbqefEYkGbdQsA=","JMp/1qIBTZghpiS/B5UOj2T15oktSOSnHNT2Pp4sY9g=","D+jzcNJJaN5N7A+uWRnY9PZmZz7K54vX4i3CJ2Nkr9U=","Lwu+x/aiVVEt80gSLfS5F3h3Ws5YnUZX3MEiOq+/JYY=","GAcy7m064qpIZhWPVPTYuYABPMZx1oxppy1ZVWeHA9E=","BaCwuha3sGMdviyS+RIShJdKcDOmm+MEB77GsVNZBwM=","KQiloyBKmhRPZWXlYbv+mktmTtrrpBBuGlesdykBk9s=","GMhgpdJTeoSUShB16ATDLsZstZeZCKjKjNfy2KcCnA8=","HvgGF7AlvVTeU2HcL7Fs+5DDZON/eh8H3bmrKSr8DpE=","KrSVIVzN/aSYUQ9tXb/awUKUZOd4iiKf6uVhvj1iwsU=","JR3Ac78jAQoGvqJVYOG+PMssOOZ9ZOrGgK6mwZlSp+w=","AiAcNmKlloWlEeJVVkNWffUHcujBULzsCUOorz8QaEc=","K7kne4AhxdNUMA2gkQHSTHKoQvl2J6ggZeXmeiL0Zfk=","FPXuRoeOYFWFs97T+oubf9YqIBe20vMO1hM5zKQ140g=","EUV4ZotZUi/H15SrzSSXuqvYVfP7pQPV9eBIYEe/P8Q=","ILwGo1/gfNUH0N0KnaaYfyKAFwVQlu5ozTPqs3c6EUY=","GEgB9lXoL40yuU+wYSuqTsmD0c2UytpnI3ZwBR1frF8=","FATV/HouiUB3gVj7LTAzZIkhR6ZL/uVLJdOQarWzSQ8=","JR30M15RZPy7rnO+uMtXuAnXHLWdbjA9sFYLDB7nng8=","CaRb5J81xPmHtY10nHjGkIJIbT+Hd+ukED6scZD6rVc=","Lt4ii5uWsh3V4ebqJgqH+QLABR8fIDx4j7kH3wDlEXc=","EAoxGOMkisQA5qqw5OaxDwfpbeWCwskjqZzRTkXW8gk=","FYctuh8QR6wfrqwHa1dROtkv9xtqaisy8nrc4ISJThA=","H2ijXYHAVzOlcwdszXlGpAOdoi5ClZUgc35KaEMoP6k=","KhZaGisBirL6TlgdfLVn2bFRXbJ+pxCvNoOokZ6ZooI=","Bk/5S5igWIqpJOlDymJ/y9LvhUxm+ReuUm9xn7QMZ1k=","HINJ+JjL8tH+bbk2xTvTVktnO3LWc6qjn5aR4IKD1e8=","LkYoqGVdL8hKMvEOCpXpLQV2c5wHBQvLAVjxVttufFo=","AGgxbecf7YAhM4CodXs6nVF+fqHkgAoixRB1WkoewVI=","Ip4yzflS/UndrIusyp7AqFufXx6LTrvZlexbgomlQok=","JsmvaatKfggzXN/fM84QKhTPr7Ba0ACvpzg/Abm1uJI=","FLxRQFZpFVGPINUUmMpg9uXkhnj5fBu1jhevTbjyMtQ=","Iv4Gu6zMWxi0qL8syMR+NRKRus7lxSJvvQzbMIc0M5w=","HcoUA3c1gRRLCDqpuXaNtagZAmJt4NgdgPU9ddJHrwQ=","BBUujKMp6JKkUDYT80cu6Ut+MCWlktRiX0IMRcVqH1I=","E85+3J8cfS7VMwJhUPK7bSYfN58fu0io1VbMWteRTjY=","JPT6NqSL4B0LvleFTUg5nYHsA8OU+y7sVEpjH04csd4=","JuBlmvjIOKrMNScQ8UM9nfnM78R71cSHoLPCmgHlWew=","Ii+A8zJ/9zDIylhcBntc6UZyRwdgG3pKckdsT3PngY0=","Gc06ZiFuhZ5DP2Tk+fPirZxY2ZPuFozq5evtMEmrL4c=","DQGqgj7oRsLLaVVDyEmYAxAfwO8iLjwrRNhoDop2GI4=","LheQGRjLb0+tmsDTh3V6p3xyB5JOF30IJuvMRcdkiLM=","LjDMSWOQaeIQHLR5xygehxXOXzTRfAFkMKn6db9IStQ=","GGlNGP5nWLNsOKxw0TRMbStwJJ25KnThQEaDsvAN7lw=","JZfvwRMp7j4Mi9QLSnhoFzi0xSr05V+1vlKZlrVr/7w=","AD6tjLoNJHFa6p/1RD0l7mQIkxhub/bARd/JHtu9HJQ=","HhfkWD1o8OHnI01BkV8vo8e3wEzCr6q9fzu+Bxzxyiw=","LQUJjvKCjXHodYg39clz7Je3VHvfoUM6VScWjun51cA=","CSIMpX4t31obLylxYn0adLfBuDet5ko36OHw1DYFGn4=","Iu5cbTapgLekKPivyZnrCYaK3FK0/M/baLP1+6UY4D8=","G3AVS252z5vPRBEgPbHBnHe8DKi++QeuiktKrCcIQsE=","GirZqDSk1BvA1brDt+lFMQD1jIYF/REu9reiW6p9+4g=","B1qgb0Oic0M8+O4ZboV35foohEWVsfKzb2Rz/9o4OA0=","Bw+ITV0Ak/91+wnOk0yHMwCPmU76T1VlIPEe6Lzt+Co=","B9WpMBIJ3g+lbZ3uRfhICxLTOnO+AvB497nfb5Il3fk=","AQDdSigzsSf9gA0orwQlSgGIUyGM5WWo9hWZWg8kZuo=","Fkx54pBiAuc7z7gQXFwQgpOXvLAInOA7r8Xw5ifg2DY=","Kd7Jv6KhLy+hvJFY3B09HrrR2En61Y00Fj10GSP4/aw=","J9WQyV093c3UPjxA91ed3mRfM8ewzgPVXgeXgJYlf4g=","DDLnG+AvqDAtiry4qyxqPcTpYudZVUAcHmpmFX37llw=","DOzVkepPPP4MfT7fUvT5PWCjEmQzv5ueR3ENKYwx6dM=","BwYnoEIf3oRCFvXyR4mz9U1E8aBhhKqB91qiJzNfJk4=","EW9SMqvKusioufGjrIa/qX/ihYEews/XM/Egb0SdHeY=","Ko7K7PE1WFDQP6Lxp5BM86K6fTuuMKrXo1z7Sm19vsE=","JS7oot+6qyZcBgYAs/bhnyTkkd3TcZUhH5WRjT05uRE=","I+1ec6QiPfha/pSP3vK24NPBIKox4vG0yJBU1SGCWOg=","Dd71ENLHujLkMx3bqTqmiLufuGFzYlA3uGukxioGAP4=","IznNXLdprPLa+1BzvZiL4Vplv4rQbDioLTjTF/D+vo0=","JvtKEByXwGrMmZFQSD1EqnYrWFxCK/jcs3r7/fB2q0k=","B31YdNuiHSYMsC8oDF/fePuO2eCsramYq1y4M7CdGFg=","It2yvryM0clG+FItcyZwIyhRExO0C0qegStprrYRMiA=","LnxDxiIuYyP2gsBcVx9qpio9pkviw/OBaY4sDdrck7U=","Ge4OYPwtp6KVNxxmfOhQdyrNu/oKnqt6fJSlDJxoLeU=","BNRtMsExynkljvLFJWWbgTjA4ZnOWWjleoLngPH6ebk=","Ld0lvTfeojOGoDD0vMHUOCY1ptx+o884iaXo+spGvYI=","C+Pp1HK4EYzj0BqS/BaN54VJNHtEUmiTMS/V7D0nJq0=","J/qPI122FqWQmi8xiW3I3pWUeYcHtHfzQ7SP9Sjkm44=","FyJkEqsvq2Ij7toLhIMzgWpN1kleKcpHzouW+Mh66iE=","AIoqymCeY0QIbu2KcQo1Rpvc5oZGpDWmkYJ3oh0D1Kg=","J6EGGe7DtSEbfOnDGN9+367Pe8hAmNwcWCMqwlCT41o=","Bt7y32OOq5iZhlOTVj7IvIGJf+DxrcXASZdV8lSX/EY=","DIa9WwBGe5hWO3rRs2KgWFOKf6oRCkOLnQ7HvoxQwJg=","AiN8OHDKUcDJ2vCGUkcHp4vohF30ceTU+z8ufzDZAhQ=","Ku9MFKUUo2zhr6nyxfHt6NAFMOAeKnBNcElM/Twpgs8=","D0JfgYYa2oVvAfzw1e8Qis6igXNakT0k7qdbVYM7Mo8=","HlYvKjqDvhMh7q9WT7GfV67Jxm5syP2hiZnVuqC0Yw8=","BifY9MGoyPjF4ethdZiVSqgUp1Z4LizYW3no4edIxwU=","FeWtNvcZzKg6QfZ3gjiMyjgMJZkuXNFMZw/Twxew6ls=","DMjRONCFT5tiaXt3kdqWC+UA41Kc3v1PCxjRbF51fOI=","F/9VW1LSi+GzxGyAlG31GeneJH0s+NgXUIb5ddJMHos=","D9XdV8LO3odmcZeNL9KJqgoCaTJSt09/3ui9QE5seeY=","IDFEp3xy6on8r/ObFB3vfpOh2h+54it9DGczvXLwb2k=","GXkyBSTfpFqo7zXuu89vYh4chVtXBNi/dVvtfar3IdQ=","CJtmg7H4Sdu6sPEJLKBIgPi4lNf4u8uVyt5Oc26iiZg=","LC3Y5mEKBJV4SqCLuWYfviXJCDlrXD8r1REJUX+igWI=","K5YntXnsQBkwaIbh/0ADrrOjMkm+XMa1bcNgexfkJHc=","F49wqZUBpuBb9Mp5stbaRwSfjJiJNmllGTRN3ZMRdPU=","Ik/6D50NV+sMfXGOmc87a6AbUjVI6gyiOj8VbAQIOr4=","APLuHivh7OLNiu8dv8gmmX0wTYjN7lVe9np5l1nDntQ=","JXV3QKsUypN0WnYADiQyjrGj0h08vtGTDdG6LL994jY=","D6a5Y7xlvZMFELPKbhrmLBtGde33nueafygOrmSW8W8=","DMt5Td+HC7kqnLpfhZ+zzD9OsfERfRTByu83vs7Q4y0=","Ej/G0wbxf81aQwnU/m4MwcoA/CPqlEenxraMf2ulAAU=","IhYhcKH4ResKoe57rqSGISoJgUqVV7y5/HLPkPCimWE=","E+OFpc0vval43HdA6SfOjUIsnuhhxDA2JXJCSE5Jfjo=","E769gMICJyQBfY4+uEwmmBDOz0f59X4je7S+aUEKeAM=","E+0pFQJWanAztMRgckUVahWKb8hPS6bwJGwd4FfY/xw=","L/oGkoU2r5HHrDt3FPIE4mxUEUJ0IXkhcJWm5U90Mkc=","Km32VekmxKoCl0mqp8mkChD9VaNoYkwUi15SjUMTGD4=","J9hTHsYSGj7KdNtSQyP8EA21AqWAuKTPhlHxv2ubAjg=","HqEEpE2C++G8HM/UYmzqDAZpNCKzhGs6K0qhKjsOdH0=","HWmjhScgqIdYA02VTepgLlmJEUpGZyUbDaWRVBKsX/Q=","G44jJxD2wc7v+cEIbUnNjS5kf2km2pE8teEDN9fz1+U=","LUDT+Ob546pgFMaWMNv98xafiAZ1dP/JIQ99pZnE+z0=","JOHC9gsc02EBdwzvxDNKjALwDMaW32T3bfVKb7bwUIs=","JAjy62selYzK2/+ByaRJE6wMnLXLy0tAVAF6uz24wE0=","DjxuzSgbouFqo32s0qvDjrB8E1Pa2W6H0U5eoz/47N4=","JIx8+3ui5xgZv8dV656aMGzQ9uMhLiVAkPAAbZ7FQ+g=","Jn/c3uz2nXmeefaGMiF99RIm2M45V01ytK5POdIXIe0=","K9kXPvJ2t9SRHr943RU0LrJhYDwsmvz0rYMd6fo0urk=","HMCvM9B+ULKt2jNGcjAGJQ+rrY+j3bNlwdhYL03GXxQ=","Ih8rxLfc6RlfnKnOj96u/LBUQMIN2XVLxZwRRHyuzrw=","GOvVxjsL8g9F0jj9DKtd7I2/GZa80bNInzwkmez5Kwc=","LzOLxaWG8ndK8765Kqks6OWKXvoZ3ciRvkel536fWks=","BVa5w3hBRetPL/bgyI9BmJ2lkH+McRiuSSk5v+Tp+x4=","HsEANn9laEU4vGlWgF7TcFEjijY35HAioylMveOLIoQ=","FkWindRSerkaS3mMcJboMgc8i6rG5duH4mwhW/RI+E8=","IqeKv31bNip0PtUu8nN7u93Tdemzv7QkCala0QWsk1A=","Gpkh3q0mxVqvs6yfPzWsthpJ1fGB6ANlQIMLsYaG6zc=","DrhkWw0rjww5J9RkNXTAsaWIJyRl0xnhX8xsMmIZGqk=","DkivDLJ1r1XeuCWjTKSJBKR8MbVZLEr6kHfWDl5+plU=","F9+6xaJvBv/5Z8/vWXptoRtbyJTua2LmJqYuhaPqS2Y=","Df+9AW/9K3lSJqg+29s8Wm94kX1/vbvBs2MQJ8hmqqE=","L5SNX3CFa18jpDONJE9rp+fr/HUOFuvR4sLROCUJQxA=","GUyfdhXL4+qg+IXFnkILuJ3KYP4XTqMh2AQ1MBURcTw=","FugaBUAUPLvmYseucmBR7GY9YhVi+zcBJAy/u0sXs88=","Ee8MLYgTH3FeR+mklT94n+x43s2+7TS8jqpCkn6m7uI=","CHbkWk+GKQG/xiClWVGAKh0dXD4UFDCNt9VIQA9mhTU=","LnjTXh3YZ3ak3a7hGSwFWqhnY2O/zzFlMX3MmAF+bHU=","Gfblibo4TbPDatrkvANPuaRE2kIWS27yiQCaLNfRWm4=","Cf7ZCx8Q+E9nOb2xtLUIlXrM6trOaHqnNdyfarFEBP4=","BV41u+985e56NgMiLgkAXdUZKtzXDcM3IXFBNyIfSDE=","BejcNZ7pjTu2mQ/ZKOzwVvm7c24NR87CKpbnysZamCg=","DHMil/iwwnL6x2lE7paZMHUqe9OUPHuX4Di80jFdKQ8=","FnA/uLAslK3jFdW2KqG/eDTeJIMQiH3BPP0T+2wqELo=","KHFaxSZdeoEq9OOeQ7+ayABZY10B/W/kDz8eBZ1/f04=","L2g7ACeZTglece7IR1cw/iJ7SApqymerFZPOb4N7yvg=","CFTZw75yGHovGYWQ3s1DlDxaphQKhY8hWVuaCNqFsyM=","Hj1ZK3Gkc8hbIQSswdjbjLkQGjzOVcZoAaDTeUl96t0=","HrJzd8+jijlnpx5pdyXBlbwdfOBH6D0OBp3ui5Wppwo=","AEW5/R4PEVgBIyx6qvtec7wtZXxHsSL04+owplm92b4=","Anrv49ETDpOUthqATf4iMdaClZEN05JF8eHeZah9umo=","LkxfoaQgZOVW/FDdf8p7SGJeTBaUFUh9TfBIKpsd9Os=","BXZ8so8QGaOWJ6GRlqfkZy6CRBvguQUjx7m5903TMV0=","F+RD4yqzUtIJ0+A40TZLJOs/lF6ZpoCVAsVDnIB/tN0=","AXoMDYPOrY/7cJeO3sG/PErO9KLNz9jDNbzkJ5NRPkM=","KLdJsqm+yzRmXjjzxJt2fyBzikgaenahm/EDAAiiUrM=","H1JS62KZIscPL8G17F6goOCs7kfaJsQENsPx/8ppA1Y=","KTJMQO57yF0zoFbD+o9E1qdyTaU8zts+VswmtzNYqg4=","AFZ+m9iiuUfXWzdqmhrxe/i+xsmr7eWCBU+z7PeGDN4=","Hpa6tu1vRVUPJiHAra10fC/JmISF9hhDVcMXbVwR6NY=","CNR9wjsf9SeZLJ7dyRJZp0j2zXwfYYdKCDb1memVo5k=","InM83TGBUPQNidGsFC8mdQgJoLiIyFdDr2cQUM9nNqI=","IWgXS7nEW+Luh0QRdKJP1B3mv/Sjd4AwJYZMXKGSc0c=","C0j9q6iFJO+NBJW6Y+hxO2WvSpJntdYgg+e4cmBDoeA=","GGWGQ/y2NkRSDA+gLc4jKTWkzo17czqbF6hm5Qs+yKk=","L8lM2lI4/HhYcbypeWCyme0N8F9sayijg0hl/Ul0vCE=","GlSpGondfgzodTAwPBLvdiRPz0LDjbNVE9ZcbVmUq28=","FWENjWS6ApUvQXDq9Conz7LRPwTUZzU3tyUQxcTD2iI=","E1l7Rwdlf0N+5CCHz4tYkEKyd0Z9igQ2z2bqRKZmEhI=","LbuV5RFOdAAovF7fWLLp/H44cdPxatDDhF1elhqHg38=","LLOj584WytlZbquS13L2uK+0PLZJKyw2PsceEfhsUvk=","KG6LlGi9LTktrV2Q72XSjewn3nFHzlC47f/spdcAIKQ=","Fm52KnO1GQAddTc319kI7yJiN7B3y3btn2u/zOmYkxc=","HcW+5kd9fnh5+i8zuprc6Hilf604RefJ6vS+VKuET2E=","Hxb38c1h2VY+BkyGtQiv7EHWFKvHs0u0UXS0DTh3FVw=","KN8Ezdf3nLBvvwROYxqxH635aR5OpfYgn4dRr1jI6xU=","GKpkkAR6tSEF3B5g9Eh2JGG3B104p8CyupVkZSZYj7Y=","AHargUOikHkhR8amRlyag73fT2U4jK6DV7xr2UAKuZs=","JhYhepT0BwU87zsjTMEay70uNEtAO72KJvghvLbx+N4=","IpaGLLmhRCSjTToRCA1u1b/hvE4DAewcvU4mDYFnVoQ=","CChCgCKimZA0BjFMFZcyvA/aIno+ekCkg05RPz75fFM=","B3H/nzl0ad2m8gzxhB5wLBeAoHGbP1kBdbOU84J5x3s=","DcSJ3PYauhEEkl65Q5pPRCKNBt1FZ/zhREllp0lWeXU=","EERw+Skj07na+jnqvffqojtv8Rsuu2SmO9uRLUOGX6E=","FKSQzgnJKVBa0iPi85cYYTWqZYayfMnM1PeO++yZOm0=","IGiTu3R8olBEYfskovcurkzzMINYJfuKyVY/7Zp4U+o=","A8KnOOdT81sGjGrIFxJEwj+9TzfIC6UIYYyACs9iZUY=","Ep7begEwKb6A78dAAhLNevEwgQDTSlae82RrUs+wbhY=","CHSw7f7gXYzdrInntWL5F8fs4ewuJi8ib00VJKHdwVg=","EKC6snhs2jBTfGlrsf+viYB4hBiW975BzfMK0lF7Kq4=","C6tmHCoX++AiH0NbqQUgvO2Sg2TKyYThemxypH4T/Cs=","IEIBbmhsmEBXooqirhPJga2N0CrH1GYwBeE4DFT4Q7I=","H8KVrHGRGlmoHQh/ln8Wo6iHc5187mY//11uBxDPSkI=","BZIml7BK5gjMO7DZ00XK3q9PopHeiI6bHdMsGcsah3c=","JxuH2LiVxuHYZLnNAwcp5SO8kLRpzuN7URRLs7Dkuds=","JKpAE0PkcF8ikA/uiSzKJp0MD/q49VwhxnTtude7pVI=","GwcGjK/he1W14A9wN8msN+8CaNXSt21yccYXAE8Fki0=","HjW60xmgNsxqIJTyob8tGYSit0qvPlsTpu4wyQCXyzM=","KrkbmoXOaee+po9PtbH6CQOUXgOcTdvgXv8tXnVPwhk=","Iel5+jollNI2XscLWz4N3F7bjij6fsMHqrFLVHhY9mY=","GHz/12xfspeVUj6+BlycIRXnN4SsaxXFlv3WhGnRrQ4=","GNL/iCxSs5aowGj4jD0j+dEdn5HA9/3p72ryGAoAc5I=","CoeKd95hXoPD1DDxHzJreFwawRTlmcJOWtwdn7kbMfM=","KGucY4FwAoi8x10CDqCcRZV6YVV212IKC5ryYJ05r8w=","HE5e19uW21IFmuLacJh51ImhrFAxw17htsQi2QgMPxI=","JxQWebuSYKaTuIB4T/X7xdWUV7lmMOClwEkSCSpNKr0=","FeM3xl+ljttqdP2+fN0ZAbXQGc591BRKi0nroCvwhf4=","CCVnkiGMgifsqJ9RFPHn8JHYilV8abKpVv0tyQyuNjE=","DAjRmvnDCjGs05KP+1pX3l6DNnIE7mcgnuftG8pRhdo=","GRmDmtkWBMNw8jfSoKqY76wpJG+Twkob0PnStgcJtvo=","Fb9lsCuS9AufDqiT3bsFcvSTday1lYv5RMd/9sNWGkE=","Ei4C8uAWmAmyLe8AGsx5eyAtM1r3vSzwMuOnx17wM7U=","EgdRAN3bgJhlTnGGBSEff2oh9RdtOAFB+zmXcwUYJGk=","La27uP7PXM3wH3PQzGCxXxu+8BimP1D2jQC3LYrfCHg=","FDNOzgWmMas3Xnz+e4n6DYCS7AzuJMn6MAntzWLqi3E=","CaUYVtSexlT31ErKV7F0NlulR52HFKCfD23gizTjlCw=","BI6P7qm4KFKNvGPNPYEe0Fzp3gGPSkZHrB9oW7j2cVs=","IEum8YGT90f/EJgJVwIuyqj6TBPn+k6Jcwp2JTybB/Y=","AHnhvhYi7cV0Lk+BHqLAN5v/T6gref3l0Mmg0XTfEw4=","J+SOq7DvOyIwWrcg7kx/QU6NTb9DYMgdH/rk12g/Y3o=","FVcb7Mf1RU5FrkFqazV2J0dnIV9lnJG6NUNy2ZmIHVo=","LmpFRev3wuRK+RynGS7sSu3dvSrB309RAff4zdMWZV4=","LeGfzHiAACexkyzfb56VkghgbL+KB1JEV0koZ/j2vKU=","Lhyo79GHbiCfwtYssURG6PPEvdU9Y4LKhrET8yCdVfI=","FUs/herti2VxjnM8osp8ivA8+PI778TXxhd6wA6602g=","KeWPOVVdnd57rD3xjY6usqWlBQOGDSDFzQuios9jc70=","Ay0yAy5SEDrXmPs273wGgVBM0thqEsfZN/9Rjle0w/A=","KB3gGR0wr3MQXjncF0AV1l3H/xLSCIjQLOxlDhokWjo=","D352r4AOurFCgWRdKQYH6rsGK/Cv4UGRM+H/3PcMgI8=","J+pAW9/GVXpN0ziivKmBlUdQH293pYinXAFNRig/dbM=","BXCvVD7+/f3atj+wXTHtytOVrII4FJGoDIJcYhx6wis=","Anp5fgAUMCR4pBPO3npFzYlLCiKcjon1brrsTEZpK/4=","HdDig6jvfQ9JZqUXaH/FMkNVSo08fkHZFxmza6zoFRY=","IAZERpWYdWCGnfbc3iZz5bc+5bzLtDoFwti+bFmXkkI=","JxkmOS5fHJRDev4sKWm+pP8/bYPucTlACIMdJLsbbLY=","G2B+0vEwWA2ajCDqJrM7R41uHwDMgvABdpNai1TKv44=","C3puM4CNIXqeVcI4cc/f5JXBDWK4uYF4SwSH5j3wPgo=","KKx5DUYrs0WrgM0WcEA5Q1mbee3vF89wI27LHvhyy8k=","L410WxtHUP0vky95EwlVFcSYvjFCEBgMbDB3IxImu5Q=","Kj7yDmAULxfS87gu72E1B5UjlW2LxoQJLuy3p9Vtcb4=","CBGbFLg5IuSyJGl8LGU2z3ctBnSJ1CZyuYjLY4xxoPA=","GkuubJz3PqInOaJ1vHIsjMg9kefd/VEQYUpS2EznMgU=","HWWa6+Sze4iL46fX8j42LCUARsCdUyYxLY2UzbOE0b4=","KOL7kr9tpOa5ZzBHnxcHYFZEWNlfcyquJAavTAOWn48=","EPTsOtbz7TOHcpmQRWyWhXhu3o5uFLfGYxHUe4d4qmg=","KtNm2QQZEHhmUE1NNDRuCjxZXebgqlHIBScq4bzdwtg=","AvHcKaBsZMnkPTN52w8ujwzY+ANRck0xPKAq0kxtrIE=","IAhqZyw5fmXLN8+2TdqwgHTxc/N9DkoXR7fwIGUtpk4=","DvKGH07Jul/sdLoiwLevnUWMPNj5DIJcHzYRDKLukHY="],M:[["AZD5Itl8in3PChQqO+J3SdHGS8IvHFVqqiSSXRWMrFY=","H406nS0xqzLZvbY3UXDbuon2+PdNFuT9AvNnXV/iuq0=","IwxpQTlBb0BCLXE+E8BWxFw8Yxs0aFRSOXDq6lijffQ=","IGOkYa0GMVrlmSpToUu1mDZ2JK/CgzzLuDr5LKD2ozQ=","DFdOYo+EtrqdF7nSv9R0fgbdaM2iOD1kzjZZJwmMBG8=","J2Qo2IBAo+D0QkJNL/y40Zvs8/tsoCwbXGG13cU865A=","JL32EBsvIjF06GnWrsvo6lsEoUw4/fFJQ5PMb9s+QqU=","GA/KGEFQwONUtLOkoHWCTUto6CdJQ/Tdiwxk7KJdxo4=","EHJtz/hymchTIVmXZgdjPxvCrSRFPBurJrcmuC11brs="],["BgfNj/m4iXc8nraLikNmRp1HDNfGAEEGyq6VwQxCRBk=","JZFYC3PntdXzTZ/cDPf+Pef2oYolXkN2/ePrMd+lHXk=","CTz/EhUK7LNGXEyZ8ES+hdzB66IdQpEywiYN09EupEE=","BZEW2oiggSZ92IggT8b7eQRsMpfMtl+eD+DVC020TsY=","LJSElzc1FOfZhG3qnd9XVTN922YQQ9bGKM7Lj1UXO9g=","LCcpgSvp7UMudXCRMxGcsKFOG26jHBJ5t8Pkld6vEI4=","IoDW1HGPnwa1UamIQI8FFQcORV7WM3fpEL4If7eb0ZE=","Gxu6ElUFrpZ1vOx8mvV5xcyDUzydVVvjmK+gnL+V1qc=","FwEyV3FtPLrijhwnLLaqooRBNgSf+8oFyiAVIwMsZNQ="],["HaUkz/YLZIVtwfXd4P9i2nsYLaJpCPa6blkK3r+RtAw=","K7RWWJO2/8V5kTnNwVEVh0nCxl20hnKrryTFs4E8Dis=","JQgaAPwgrjZrH+fqawnmKlH2/Td/YINowSuk47+Jk18=","G0NxnNELYMVkfAl9H6hLjzwSycR1reE7OIx+xHJAvhE=","It0gHsurlKLuOTeW/vzKY6pU2aGaucfyCgvtz7nRkfI=","C455g4zTBweZnGIWIed+acD0M9VDt5xmjPN5tmI7rIQ=","AggtVkdljq5kiTbO++360s0FOFcqphIspozM7Wj0MvQ=","J3uuL8WXpTatvpwkvI7oFzHt21dMalFCwcWkjFH4LoE=","MDVMnynJIMBemdfMdHUQ529/pppxWUopDq5yk8WkhEE="],["IvM+ruPEgeZYAbdhpygykI8Gb+Idq1+l7B1Mbpndbfw=","HFznd3aJPUgUdES59tZqTaKclXB96DJ1bHOeq46HZY8=","Krjt0i++KhzTzppCEtDvsoLMrCivTYdvyUYgMHDJIL0=","JuSRVKzKJEJNX40p9lD5gk3oLreIcynLyDpWrgHe5KI=","C63Xf1FtT6Mh0QmbweUZCQAVka2ZGfCM6XGK7rK8pNY=","I2ccXR+1VgY6ZLX2ZDQJNtxf/t1L26ouliBXBNpYZPU=","Ag1yAszeJJAdbOLRB+eeH9eNbJOYunpJlvEWre8U3vM=","HYZJaZXxQmTnoFTMgiSQA2h3XD5axrX1QoX0pzwhca4=","E2lhdG00/RlgJRc8TXm/iz0dBSkcWEko2XJY/V+0+04="],["B1+E6ccZu43o5hCDKQ2v8ZqqQzdFTluoBCV3h0cPL1Q=","F1UFORxhm3VTD6g+UTGEOB5gPYRJ0eBwAX7o7ApNJfk=","KcXOl3EMFXigmQ2GLPiBut8Q5Pa95ikZnoA80cQmvk4=","LK+Gz/YFIczF7G4uLIO0cHu5D5SGRL+qj4Cwr81M3hA=","JPknk9Z2OLSr/fSM47YqtdDhslDcJ010by99BUQYW2I=","AoCd/iTH/XzUm5eycVD004o0C2Dwcz/UUwzUJptIEeQ=","JnCWiBUO0DX5WWh+33dH7o7pRrdwFz2+UDkKuMCMX5w=","HlrkwpWtWhfgD5c/E28SMKb7hWN2MbMG03BfgO/6wko=","IxDiM35NU8FjXaGKJyIXjVWvWDWRvMMX66hC3yR96qk="],["IIS+mlfprbgDA6jcr/1Lt3rbaBUWizah02OzhCVDcTU=","Bu0dFN7fdjowZfJ+ekbX+/INK06GoNuGaSoml2fVd+M=","EyRUSlQXTPezzY/8S4YyDyMZ2biMF3m4mxkWAY8/ubc=","LpI+pG1JIkfhLgp9zPZiD17qZim3Uys68kaAk5iFljM=","AAu7u4fszJHV+we2xVCIylFNaN3ZPPMcjtLSzH8jsis=","JgEKP1KVu0SBMQy8pThKR68PmQXkx2v1S4cO8P/vocg=","B1GkpK8kYlXOQSxLtH+jSlG4Yo882QIHd3XI+kiOdRk=","KNI1FhnMxvsxrUIG4sBkv02bIpKyhGPlPkdx8QZw3b8=","GBXk97QKcCeHhkCmzcSyhUMAz2/UlTwqwsd2Je9ErgQ="],["CzA0SfG/S5LSy8Jqs0tCFbbdevAQdHpwWypuM5iIKSI=","FAzdozu3p5srqoUd9a1Fnn31abnyw9pULTuNW3azVs4=","HRiyWqyYsoLhC1o6dM5cqhaaXDC65Su6KA7VF/P4L+8=","HsbDL1E7jzDHqrQufZGuy+VK6xiKhPjKRr1+l0G5o4k=","CJvushw0bLm8GCqitw+FPxoiWNVok85alI2cZF7Lybs=","J5BkOmYDjM5KZIiEfY0tou6oSWH4E0sb42lH+ANSfmc=","FZ4l4AMmp28lwRQ6W+b1P6UczzaNmXTMbZPM6OuB03w=","JIa4hDcNSaAD/QQegA8KiYq2G16UeZdGHuMoQkHzuqo=","ER78E2qd/g68/66JQ+Z5zA+/Yv0M4DtAn+zZMqgoGxA="],["DAmbxoJDU3ID+XJU8I37fvwJ3o+W1y87Pgqt7UXhi0o=","A16ezEZMtDHMksM1boqYVH6EPtEyTB6XEXn9Gtn9UaA=","AvNekh2uh/EoTAyK5zfb3Ek2y7sDoDpZGFUv5WUnCo0=","I6csJ/T15upTJdWzaPmLQGk7LbHoyj0JZzl1PcVngwM=","Dgex0i7tVP35Zv/fvOu2U7Xaw7KpH1AnKHbvsXFYviw=","BfpW1DHUvQliWobTYjRk3JC9VB6kF0jyAm9lAl6p0vI=","LW8+DphBPV1qEQGyRcnnEbsulW4npYcHhP1UA7OYZ8w=","ITF2vBoEk5/n1rwwaRqr1hUu0k8wm/85OaDZHVTGemY=","CloRSNrUVi6rGBYrORS2TVdT6WF6UVTpP35D5oYGh+o="],["HF/ZBg1ODZmSZEKaUATBZVcL0WdbCfl3cIscpI5hY4g=","Ep8GyTDt02/C+3BEpjMnUaLjvNvnVtiDcWzq1rxwY8s=","FKXOFgMijW5vreV8HaU2ZZukbRslVm8Swo3ry+3FtPQ=","FDYX7827wNJ6CR8oA566irs5OS4qRihQsfnNhTL1B18=","KIXy1Evg7P9X2SpDhO21vr+1hbsj6uKi6lCAa6uLe9c=","BHFdtthrUT0AJYnx+VIvfeOxqL1wLBZ1We3pfaLAB20=","CIiHlmwHnS5omo1te9kT6S0yaVm62lm5mmU/6q32xGc=","Et7UH4BH2j5sIr/tPsW7UtAn5WAEjbTA+Wyp+oXhe8M=","H0fGekMlZy8XuL0d29gOTp5sYkGanCBMx+iCGJJDGq4="]]};return qo.default=a,qo}var Ld;function JL(){if(Ld)return Ya;Ld=1,Object.defineProperty(Ya,"__esModule",{value:!0}),Ya.poseidon8=o;var a=n(ln()),t=n(un()),e=n(zL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Ya}var ja={},To={},wd;function YL(){if(wd)return To;wd=1,Object.defineProperty(To,"__esModule",{value:!0}),To.default=void 0;var a={C:["DhliwjL9Cmu1StiWKoK5g4z+8Z0pClX8SdbevQYc0vY=","AeH0XP8+dBaKzNCpRTb8pjFxKJU+tH2NLXm4R7NVz1E=","E2fuw7IMt0lTYY/ZJhBHdV73+Krl/+lvyPfZoC43vRo=","L/atQFM6+irLeMm5FlDXzL0nSwn3jBAEefOk1ylW1wY=","FSyMPZ5D2QrYCUgxp0r4FR/c2gsY172DdP/aaNGl/HE=","JBcH2yb5bfUCNk0mcSx/Rl0KxVl6MJVZsHVAY1GiCXc=","FaTkcooZfa5jA9DN0rbR5BFKn604pTC8pv0Gyh/8H1Y=","DL/WPzY5eMOH1lbpPxHjNph6aHSMj1TzhYh+ZLEHVZg=","H7WUR0uDNPmupv5eMj+w4Kwn0olZIaxk6T5STk/9JcQ=","BaxVNh2pMcG0xWCqjbq8hiS6IlhxvOIkrdta+QFnaus=","E1+DMUJSWF9+ARaSzZrP8232vphQKfIm3iVoA+pwTXg=","CmjyYsnhTYqe4Ra/kM19ZePfVhuzkU4xTj9D8Wf1wEo=","CoNgqDfUyXuUZjPDUymLd9aJG2znjoKjvTn7flEZPRA=","E2ohvROxGFfg92cOEtIykMIxi9rIMBVMw3MwzK2aP+Y=","KmCYm4CS+OHBywI47IW71ri2WTJ6A+jhk8FaVNu3PAQ=","G164HxQ78ybaD065XU9FyBQs6mQNM6yvyN6rFV83NF8=","CJA89raEgmc3o0isqkUuG6n5NF3pEfI0CrcyTQvLR+A=","A7i3F7oQA1oSrk3ED0IQsPBSmug3dm4aJpUiEFY12Bg=","BiPufBnqvRMRU5iJPoJu7iEdrqc/gPpToi+M5VkGAnw=","C8iyQ2mrdmR/4OonjIZtTUW8P5PosG52kBu+W/INtcY=","GjJ9X1QBkOHJyx4x2Fe1xRxcrZ8e4SbERnC3gtRsL1A=","EIfvrIe/pIB6ykEKnCl9IxhMBbtYq/1Do/wt1IM4BZI=","KZcRcwTfu0ZLXNSkGIqk9szVbenL2BPaJwrX7mmegGU=","IpZILpGfvUb3pRgVXnKlWWVZaGbzKx+EMzkPPh8OQGM=","IVLV8WTOCfaSis4lZr68YQmk9iBH5HR6BR4p3Bh1Jdk=","EFQQmGGzNJ5Bkhbxu+gvSleCOnessd62xI+iZ+5dMC8=","F3L0ApVAQyq4xpaLNznDokHNo63hPs4uoKCxV9ZcLJM=","AMKWr9suA315eYeGcceKX2AI2Yy/db5OPsPMHUToRZ4=","DshbIsYmhuUst5qymgGB3I403fMWfR41NRTsho5yml4=","FJ4kNcINSKPsVsTkXbvFg7hb1kMRoldv81JmiWLCGGY=","HUQUDctFl8chSm7YW/8aO1+tM/18UwaZu9YQ479SQN4=","A8+wVw+CSFb79BUTvgHtMnHhw4oW9hCoCXzSehMl1NM=","DyI7OWQj7cKdUeWIcrLat+o6rolRe8QZV+rHnOl2E3k=","H+bcLm6Dq4joQzekUTCWMzd0bM0BwvK+EACAvjKllSA=","BHMQ67RZ/oYMlUUXJJRA02fG78W5P3DEELx2+AiLSj8=","IYWM5poBnkzUYJamF5C/fgPhDj7cGimI33aEmK1mfN8=","DaT4faGW2syWT7aSilHzrO8EIDfbdB8xe02AqBz5io4=","GY7uqYHrJWtPpD8F+k4a7JCOV2E+79NQJjWAgOMpvBI=","EZZO/SHqB5NAxmrZL9tiuKGO4IqZkvEzpBfSO3jLGww=","BLB7GWBRgSL1clzq3AwfBgkovfD17ELhb4wpNId7QUM=","Akb1+7X3GbCJbge0wj/PHSRIe0x3WYPOpJUA+GN3Cew=","JNeNrt6TJ/SeumeVOfhdCZ1lgwYJOMsFLc5QElsBzdA=","I96TJljS8YH1nXI0pn4XR2P/eQ05BM+z3RCvivTYhls=","DE9UMdqqmU3fXz/msd8MDEIoejjJpcTHWPcmOOO9tAM=","F1mZWJiVtpR9OG2Dpeb1+vnGWI1SPHhGQzISIz9k0Es=","AtVM7148rRqARxvG7wxuTnTC5WiGox15JXsnYu56tRc=","FTnNxp/ZPy6lDdEuuwQ3wj307Nopx2rrCUN//b8Bx3g=","I1mkVFKCS6l9vAUAhruRDBLO4KkI2xwoCJed7cjymUI=","CIDl2iElsIQiA7uY5fJK4mIopa9abv1UYfY0pEdqFfI=","FhEPxsgWeTC94jDV35VPEHz9DaAFruROxf9kKHJ2TBk=","ExDIRLcNalhW9tGGaeUywta9XQHmox6ATYGi9a3GP98=","LqhoIXqZpsvnm0QuIVKFPHMw/Y3nV+t1VXZYef5Cziw=","KcUEJHHZCe5IE80aNujsoI1ODTgwCfF8SjZ6h3o99L0=","JeNu2g6rV2B16IraORTClEIXKgJ8bRdM4N37sBfVHf8=","LSEFjsRGdNhJPnAqreW987aR4/qsBCcInoZ/nthWvHM=","GNF8ODXsq0S9uLZ+/irMcdOenTRD3Q7RHZUEVAmnx4g=","KKL2Ow6UCv0seNAN4apv1pU+bWzMOqMgOzlhj11pj1o=","AmNfW9m+uv8M52FOx4Q0GKmqg2N5ECKb7/25HiPrwQ8=","H7jocmUlJoAYhF+MgmsOTVbE6cWOqSdS1YHRpRcCuII=","CH4s5NKuXJPqVhHVDDEyAqgMS0NTO0kHf7Vp+DfqH+U=","B4j6lTLPAPE8gX847hurhfvGh5mM8cFK/1/B6rEVp9o=","HFyFxXofdYf40vzvwdTpjCdBoBnv+9TFAzSwwVw4Fc4=","DB+4MrfL4OfhHo7cK6+HSfbqBjeyDpcqYzFdvdW+FHI=","IpdYoitS7DkH+UoRf2Y5FkUIx3v9vGecGz+Ha0bK+Ak=","BeBmyhJX2NXtymWikh+1teAeOi8KKjvGYix5FVIZCio=","KxqTWk/xbCUAvf7iCG2d85J6NY6Oq+dfanDX2yWjGRc=","GaVZkxCAiOA/5/vCoBRQnOmH9Cd/cpuluSTSWzngZpo=","G7ZaP5pDda2SbUTBiNz+UbWl3Wp+4VKqbMzkSBPpXbk=","H3IcTQ23WS+b2gH9H768jldFLiGNii4ZFjBn1K8SjTc=","K9MqAomUmKlzOCpNQCZtrK6JiphHwrM8KtMLzcQlR3Y=","KFhbBS0iKDZQqROdY2GwjOlNF9fI9twdVPWFiQZuSjE=","A+s0NSYQInvrJvjt/kZsv6NH15UL7kMecWVke/HFzN8=","HBNH70GNZXq75uTAGQEb003bIHq1SpuZ8HxARFieCYY=","BKiqOxgmPhcTY+k5aEehkz8ET6xfWxH3VOb+r1TsR0c=","EnRKBjyr6S4uGPAAr+8pyShYWgOvrDsvTBcUEgOUQjk=","EK9NOactLctl7uq/ykCgimmydBKXBMAhoBOI/4Zi+uc=","EDjGVrMy5Rn0g9VOUiKzSzWvEpBtE2UtHYxrD1CbJ/w=","EO4C7RF2gEt9Q2luuHZDtPtF8B3WWInltlEo94HTnZM=","HQjM1HVBV1xgtWf9m2cF3ogkj5zGCvI0MJjTXZ5PbTU=","Brv24y0m6SK6rIxivPheyTTL32hw44GM/kndOkxwiX0=","A65gQD+TqYNwaIEA3Nh61Mce5SnE3MO+Mta8BiHUI1U=","D9D3dtJn3DwBo3fSF+M6JVw5k3rCgaOw6stYsQEjk8g=","LUqzuF7m9VvBfQUfzvc5Forii35tWqSsEqLcwHubpvc=","LsB7P62+KW+b0fzRdY+V5rki23WCBo121VIYQTHggy8=","CmAT439WD1QNvT6XkGACAHd7hqV3wtLYPsfNE9sxk3Y=","DcvDy0qv4Ixicx3KRMhDASJllQ4Hlsc9j55Tp2fH6Ig=","GYw3P7xrpZgCBFb2JN/JBvKMq5FbcOtVaPF1+EI1XCc=","KpUVdw8wU2OOPAZPWQHaeswlEPsp9fNgf4rRJWraB+4=","LUFUc57Yps+akuWQgS8V+TATFj9XuAOXc8+GNI1TGMg=","Arvq5McW7hNsTO7xlOeYXUZBX8EwQwplsk6fR1Mwd9k=","GStbCDIHZvRb57up6acMDvxpr+wqdeTgcebI9V+571Q=","K74OC72pNrMFgp46dKgt8DDU/YESqn8WlnCHawKPBwI=","CWNyLY21MvyVzyJApXDNehNjZt/1RJR4RbbUh9x/pio=","FgEMDteje8qWgqyFj8jSxK9RPwLQ8X3TBvBc1X3GlM8=","JEhhIph+Fwd7AmuqgecF5dDLdrTZLdP/VLu4E/PQnqE=","KNo1qFJiWCsiD3Ji6mjDgVc6kYwQ3Rfo5WTrbaET5cQ=","HTGWqmIJCFw02y8OKz3Uu2u2cObKJNJ9kNyO+l6BY4o=","Dlb+S3umLc2g0ve53oa85hZteaCgw8aVNB+9tAe5pQY=","FF/Udnat5cOAuQvwgCD678jD0nDGvZf5KhirlPlz288=","C2cESG/dKmM7+eQKXF5AkeLUMMk3MGqzBFs5uLdOMz4=","J2dHmURzupFSJ10Vvq/kK5JN5pcoEHiYtHAaZjbfPPQ=","EmZTJMn8jSRsFRjgQKFeOhfA+D8KR5Vx2PYaR/OYLSE=","AojFiTJ/+Xgk6qPf9Au8ycpz9p5D7r8kspzVP6ERzI0=","LDs/Jm8h0h2jPkw5ABx6cD5rk+BHNXhAEj8wck/aM2w=","HQiSYPU9m22RJGDGqdn/nfWmORpJJzFTSCalV16KdyU=","BSImzU/yyF3D/Lv9yqDsrXEloD1TMiPIZnBA+/z3Bi4=","JxL5FxgEJzqcGXP36H+uKL7ZqDP9tw7ZPcYnSGWGk1Y=","J28veB4MnKBCSppRNVk76Vdkp1nCMRmdtdXg53bhWqw=","KyH/w7oWPqYbfAtxfVGcZKrKuBlX4mjhdfRodumsb2I=","LzwraHS4FTG4kKYDvn42zqrtbIozYKho8YvyNzYojAk=","BWchFI2aNwqOgSjuABeGlfZuxQY8ZmD/VUkTOUzV32c=","DhcS/ReY27Sil236oIW7mCLS0mk5g+mcdqVW515jMT8=","JsmEbHyguCJ7bqp2NM+qbEoTv6RxDL7+gL7+URnAtgg=","HruetHmmRNJfU9qz5tyggznw7/3pt6rXo0dIUH1pqK4=","FhH14q3YzP6dCTvqHVXqxiZhqayXE/pMcIlZl0Qbuog=","JGLD1VVWEa7qShRrjaUNMMQZlDwapgDlsTvEejgQ9js=","DzduuefeTEX/UIois05V8P/aAmgmqYsphnLYHIJrYpI=","Dn/4DD0Zoq2YyMUqXRnRcSUXqmWCYpGubnXgUDyLijw=","LrE/9mq0mnOqrXYPW/JxMW8/hTjFJqGmT6Zb07P8LU8=","IqQOUw3n3dwfhCyUIRksY1tDpssfg9id29PFbCpRLts=","J0C6oxjAL94WLJIKYkWw8iCPfQ7hiYI620e6/91e4h0=","GWVSLM6L0ps861CM5AQx9A1UtZwEEeXKQn+MHHidKbA=","EKDbfCsJadwlBkevC9sNmc6kKF/YqQcXwnYCMqkGvn4=","ApVIYnGto8rkz+NyHm17Cs8hvco8qg4CCm2I6tHyuxE=","HQAgbWWpJGbd7yLlWDZhxo7jE8xAoBwJDlzLEYoa8T0=","ESIiYFBSQj/W2iHZVUXW6Wh45ab0P7Jmbi/cWTeXG8U=","Jc+v233zKoby/0SjKtey/Zpg8xpE5bWtQjrlKw4/8u8=","GkKsozB9+EqB/1ufvsARrJ/a89nHPN/pUBH3wax3nRU=","FPtsTg3wBjJ104DmfCUaKa5jgCjY5gcqbk/f9OA5pP8=","Fof1AajAfJ5D60qyJEkUtlEpOAeii8Q9c6xLVkBEUmQ=","LWS6QGeriY97Q0QJMZ18rd2xQYL2E+RmQpGbQ8ibgVk=","Jl4Z4qK8/5SJy3Sdr5t3JW5AjxgM+vBVBuEaAtbUsUI=","ESDZEWpYTsrTI8uLiCW55DrRbOWcXou18RtKuOXuaAE=","E1wgD3wUXAQv3JStW9LkZhsNuIndw8JKIH9cfECYA0o=","L502XZtfn//FSRwMw55rmtFOTYeUv3bma+yil03Gxlo=","K7J8Gh6EUvMXv4amOElU+GCaKFAEWTxS/c/+fYWBLfQ=","JF8o2mmGNod2lo1+XaF2PTi04aW1OsO0V7JtNdjMVTs=","FgR8P0yiPG9drKXQHrxnIaPRVspMNeAISQODa9Eok74=","Eymd3bnid7EiJA0IZWFk0V+NFcx0g95wh+itlpCcBWU=","FZDd4p4RQkoOf31LPg/H5BLQkkY8+VRbfGImCrLUNLk=","Gf1guqJIa/3//8j2cqtky6QLOU8oGDZsdtBbd+keKzY=","Jlgo7fsDkdhggixBGbOc7uwCGRZT+VxzksAXJURO6Ek=","Ajvamjwui7GyJ7Em6ldPl+x3k82AxiykTPiy5BUTK7E=","G3cMgEv7kYsZduM1eriEZosNKqQU4Aft4ABxRxSqCdM=","HYTqq6ZSHrhmtgB0kGnmZD2qgPfeEOwnNR8TaaNynRM=","BzoKobpMHh6YLvAFORg+9kj8RBvoirHcUxWgy7QBybM=","JawJmqhcniruZ4nyWSJYzfXKjHtXOeJn8SA09wV5f4E=","HB8NwirVTanyYyG3k+AUrBuFMAHRVutZDm7FIuaFDDE=","EDdJzK6Q5DSh2WExn5bHROBOwPd8jGUFvCGhGU2mwUs=","CTxHydrV6mHIVmYg5PQ2w2rQDQRrJS0iZNBtmjd+nGg=","EtSKItRDcRsFu6c/58v14HNN9+00WH+F2FClFYwKJ04=","DRSH7nv8pG/rztuD6dxzwz08CZvzwad5M0g0+J99ozQ=","Lrqx5UT2rUUl61WSFS7LRvjg9wzFTnOfWuTEiUXlNKg=","FyYBELwPothZplpRm2ecqxV6ZIXlBiyvo9noUjVD1GA=","FLYLsbgTUzZVt00ZSPr9lMc+HgutK/Pny76ZfEDCLLA=","FEypsYEEtbtanSHXO9lX83MllTmhY8eBlyEM0WyIZkE=","C2mFQMCrInNLrVjkhRX/hFIAUSFfXOSRXYBEQDKjukk=","H0WP35KkwDvOK/ad091OJr/BZjwYd5m7NZWNNhPiW9o=","JsDD+fKr0ZOSMw7pPiVUq7J+03dIHiolUnmNyVKgrNc=","AP6CW93hq6+0gOmF1vqPTHrpxnNfm+CmkkKT0roRRcA=","JN7tOYhUauZSCmwgx2WevSpfS4KBgqMPUZVnSZex9zQ=","C7vNVVwYSq4IkVgsYdZRlRMroUqib65bykz6DvcckLg=","D5942F3t43hDevvsP2ukDI4/Z0y6pR8vxTVVd5zpqk0=","JpzS+4wDk2qm4w39CcNP94bIOZbon3BsOc+aZzp5yPA=","BApe1VwVQa0UMbLgpcI3DMCrjLKrMeYlBfeZsKU1U34=","CxDbUtaaCDgsmw9g1TxYYzMBiHfsh5BnovlUj6A1thM=","HmzFxAkNLZH1ZyNwZMV6u4Dx0YhqUJyra8I+gXZ6KqA=","EE+ZZraokhODGcoDfUKY+uT61dCc0F5uSBS3UuUfVws=","KdlvUw7VzJLJBNIb9WDIKSO/ZWmsuQq/udaMSVy7mBQ=","FrkXokHF4qGUHXRWZtit/t77SPnP/HVv72ZnQ56rof0=","KASdyHA+futK5ct+7J0LlhTzPwO+ylSmfXKc/2WXH6A=","K8I2cUrv64ZFTPlyZ2xkagcecJWdU4caI6J7zEpRS0Y=","DoXj8LYt+sBN7+iTJrHxycV/ldwpnvlf3OLdEwsOCfI=","FXb1VlDg36gZoSc+ag+gTB8a4Y8fhB2vCtWiNXk7hi4=","Lm0fmE2Q13i8DgmQ2+a+ZiWK0ASHEpqzQ42pDJ7DB/E=","ClIWwkA3gITXQQzHeIAcWQORxvYAqFUU3h1c/S4p+pU=","Fq8MbshXcUuennkyrIprGwH7QlMuUelXxzXgJAPs1JI=","B+84KbIehtzbw6oC/SRrj6jn5MIVeO8FhIdNNt5JGqw=","Ahzf3Ksf/awrrwFd2tfvb8GWt0QugrNwoRh7SE1dYtU=","CRGqHOYI9CNP87nzXZvlRvXnuUvwol+LzLNTXr8cWEY=","HIYesBxLM17P22MgfFFn8vKi271MYE35c5CCxduRcTo=","Ayq1wAk6/AWdciZRUgJrxnS2mISJ+hki0/ahMObpjAs=","Hbt8TjCzvbOiSOARjJJZwxt1vrvais3i0RQxHhFmuFA=","KVchmHsqBy+Wghb2nhSvwQrHzmhwoc72ILnjFnEh5WU=","DYSLu1PqjHLIygqTNxEGHNEcOL71IE4Zh8bgAWzIdyg=","ElQ39hBbVzKcBFN2vpgB8VAIg4SRarV+6Q5N8mBTPkA=","Fqb4XPBwqTQ3ad+96M7DDWJQDVDuKUFnsM/Jr0cHrCQ=","I+S6Fm4rWhUG353U3HTHow37efSTreOL4hwKYEBz01k=","DXpXDVwTG/eAMcZsiuX9RUuphV+rkur5yjedCOhWQU8=","IXk9RqaW7lBA9Zn0gr2YRTVsAuTCsHpkUKEAVUNmWCE=","BM+fEheLqG+rEcEtaQ5iBgNSX/ffy1YG0PZ/CnJQ0KY=","HhyHFK66fnVJ4IR3tDZewtvr37tgGJN/aA08+ttbkiQ=","El+ZyB211+dL4MbmtEdt0OUDwccEs8fT/w7TVvmlv9Q=","ERvDIVs7sqXRclf6c6d4UdKiTkgErRrG5lLwhYMmzrI=","Cec3cfrqAGXIBlPfqov/QC7rC+NmiDQ4Jvr2OfaEsxo=","CWT2IZRoEKEjRp/Oa1RP9hzJtzMDO2MgcNR7yUdPSww=","CVMr+fEQUfhjpOgGeXgrBzLWY5RzkMErApVJGKGOR60=","HRSAjFRYOmIOZYfCS5k7GDig6wc5XDCFtEnTE1vjIvU=","CbiM68y7KgoY4tLnmed8q8tKIxEjwwPpjNiX/61ZjUQ=","JP9as470V0hEkwVMm9PsiUqFZkkakaUr14g0PEKdCpM=","E+6uoimMok7npzFi7Doh2Be6hvl3K7aMBGHRFVNdrsM=","EWAKNstB/eLdJqfNSpjNi+rgoE5G2zme7FwdSQIFEPA=","LHaC0+5Ow85+H2fM6b3rpKH2afBNn3pL7hOzyX0+qjo=","LZsdskawBOGFsIyVPcCvT7t8fcZ7I3jv9wdQey2wbLc=","F/FAfChy04ELdHS+vjcR9yWDzJWDEwG04+BqPKligxg=","CJ/VgFXSBgK9vCFxrkhf9I8gUwEGWTK8nVJv5U0pfwI=","J3nq9TcQ86WEio3/vkC19EKooTxRT/l1Af3KCA+zuvw=","B9bD3bgHuGNMia7zVhXac1lujuGoyrSdAi8LyoeA7BU=","GykY2gub7qaagLBaFR5oFyLLZvuO8ffdgpOemRzQIeg=","GiGhQJ3fypnjwJh/l0UIQPlYUkr/6yjBj95znIGJyrs=","H55n45eRldNoFyJnpro7RIFz4jefJcqhN6tpZHFNH+E=","B+V5MTmbzEEZ2c17IZF5PeDuaUdHFrCACKn2ikKHh6Y=","Ce99Surfe/WTxaeSeenmVXjRQxXfne4HQBaT0ZlZlII=","KF/jsV9LQyadTMAYP591sLT+af8XCsZBsYx/sQXS1xE=","GadoK/7P4Y+6siMBJziVwcS5qZSHfdd4ZG6d/WTyTbw=","CreUtEM7XQyp8/kjYVnue58RKr5x06TRk4UgLCCVAdA=","CP9k9bueP4voFXMRfgEcgD9p3GoJcNwFEYqxBxoomAw=","Lw1FS0ngNmFx2VFCIwAC1w+QyMNwR8ayWMB8DJ0DiKk=","F7Rjxo/LpGHhSeVu2p6NsaS8XHuCibDNQobetck1VMg=","LRqDrIMuSSgN+UseJ7q2X6qeIaYKSO8PRVfAP5t9EfE=","HhgkEVYMgNfUxIDk/WW5mXEypO0p+ajcPYgiCbY7B8I=","BLxcGcuzEpQbobcx8JY0mudiTso7g76IZHCA95TX+rM=","DxChMZUIwJqkQn6nkHHaAtzkoXReE55pSfmSFqzYMFo=","B1edlrq3k+8fdAcT9w89LPSvHSDqVg9I5vjATfZPIHc=","H9i1XQooz9AJspizDiJqo9QkM9wUgxjJnE4yrxPFFEo=","Kv/VDGrrpXaH2CSu/6VcIX9jPUaEDJKMA3PKRkMvpzE=","L8FjS2ncaXtmj60+iciBhqduQHe/bRFA2OQo6ut6OHI=","I6U+UUqyYuIuyn7nIkl4GMBk+PdMzTMFA9er+oXwFdM=","CG6pjopO222FALygPVOgOiL2m28TLJnsr56VD78myHs=","D0iRWFW00ZG3w32F6KXUkWSM1OU/WAbUmajeh+4Q8uI=","E+C7ldnTB4wQ7S9zH1f16eQMlWN1dOlakz2fKnqlbFs=","K8NbDFszXfxvGpNi5bOJ2v62XwzltEVIKA9GwW/1H+s=","BbLdzIaoUEsAgIrLtKZDsWnbKwf8JcnMMThGfKdQtaw=","F1DRpH2iEdjoOGwZgJW4P/ZltYmsJ4vKjA+gG/xoPLo=","G7UyHpXR+6KyLPTXXi6iw2Q7he+78aOyzUvg59EjiA8=","Kk6K1N+idlKDnOF54JZMxNRzL7VTcJAbMpLWY73kHs0=","GbmEotWgMjuVb64JtSm9z0VRIsRD7qx/8VhLzdYyeH8=","ERBfgYzCcjKoRF/4ht7YOP6YADhye54rM0NqVcL5/Ts=","IiggVzL+a5rygbWytf2i0H9RhMVV+1Kn9RTGwbH6gKA=","ILTEaLuOKcGG5/Rf7u+EvYV9uFZDqnmLwmRRnapGP90=","FLzS/Vxzkr+dk+SbWFW181xxfUzlETe4dRuCg4anpfY=","Fhyybm+kjbsFpcO9q0oaUkRp+YuNEBgfKEgCnHleBXY=","JtU3zNjU8+Yv0PrEHGokyUEfTW3cAydrrCYXaJU710U=","HefT35fRGggRBqS9Ibl2A6dq3/FlzUCsdH7UnmHGEfU=","KYAPsAIK4Y1O/Y+sHe9cdgevNfTiI5BKzGoU2MbRSsA=","JxJx+FD2kqNQP7chJLWDqB8/DqZ4m+Olb/tJd2V56yU=","FmlL83/kITQLGGy8gX0LE2+XLJNVefLaMA2PPGY0gfw=","Gcyvg5vN4/uXZOV7QPi+A2wdCtbdI8r0Dwwt6nZLRTg=","E0W8Y76OPobT6s3MTPFCVC4KxmD291/jTTx/NFOCPS8=","B+cz42pjscVORTBQrkMHjIahgDubwZhPg22p5b3ibPQ=","Bn34X8Rh0eE7CnRMT3iU0xJtQAwPZ0EV12SgegU/ZDE=","A8ICXqTuLBmy+Ni+CiuQodL0NFNRXsBCV64fxs5TNK8=","LL8dx69Y+prbi6MbGTCEdiTMT49nzdi8o6knbB8G+7c=","ASA1pSGbkA3trsMvYsu4WiIoo+cbU6/U0v5rPJZPkfs=","G4xxPJDWKzZzgsDO6+vimJMVes1W4QdV0QaZko81Ba4=","FEdfdY1dsBot4q3UbEBdk56xrwqza88m/5PkhgVB3VY=","ITd28eD6yFX5WMsgqgkNT9R+cP0Ok291EDf8M8+cQSc=","Ks9CweyhoJPxAZjdWha84Wv4shEHckqUr/LxkJBuaYA=","GRlLaLiYR2WWqeLUBW4VyVpmSCNKu7+cpZLMLFNwM4A=","CyCh2aJHABHrL4GAIVQAtYPLux/Qhf1TvdHJIXzFo7g=","FKfR1wZe1vatcqDvO4SNdgNPepXS2ioGQzxsQWDvnIo=","GRQkFuOxaKu5m6vBfOaCHZWimjHZK/dKEiqO/nmfm70=","LNFXHfsyq+bl3+yDcfgTDPd1ZqntoGzItkZv6eGzxSg=","HLHrxLQgUodugwQL3ns4AjD18UX5QAtdTXE2phxutFg=","BcSrcs3R3pVBlolmHl5zXhWz/8rsof3IZp5z2KbLyW0=","JMjaA82PtJfk8EUAabXU3rECtk5o1YiXckg+jQ45dNc=","DegZWAVwb/dMslHPsLrZueP90FnQGl/HxwXWCXH6SEA=","MEzoyzzVUZYjUgpIg9NXkiVtygwS3B6FUVelnapFCPQ=","Dza1hphNGVmnnDig4GRQ7boAPa63ksjU3zB8VcnvqLE=","GoMl1VSAZGrH+qOt3ssuwO90gvEKCZxbRlZ1LiRVGGk=","LX9nRNBhlq4IefQGgUqr+IkHNQXe2oRmUfr8jCAYWuw=","CSBVB9/DdnLdlxHXv0Ln3ikLNmtd8jZ9Q3qC3J4IZoE=","HCLpvT8j38P3Pcc8kTHhaosHaBj8iCNCXMsbcyv1ST8=","HFl2IzdQB4QR1sk2gNiHlZbfr1+S1I/U3ZTuXSnFHKE=","B8uGxpc6u8afidJI10QUfiZpCmG24x0Q6YATeHnkJnM=","DDyYgKgkhSC2Ee5N9/3MFqZq9F9S6wEEV1eRB9zJnTk=","A5KObeZtSQy6Oh4+NmUSORmTjv+n/E+MmzG73uHkea0=","A0D3iFc7U2/h5Cx/1AnTZxJHI92pxLDzuWLgE3Zn6H8=","AwplvV23nwCcwbP6wc5GTEwNVDOFJS2gF7EWFG/oDYI=","KkKoAt6QhdksO91AhjcaPxftA8CKK8YbPkPgU5NX3hQ=","FUmhyyUENWmbOiRn+DkBEoCURGprulJtVHPoJBtQBKo=","MFAWRdf2fW1OH2S5WjRKhbxqb5f7Nh52ksls/VSh1BQ=","HD6jad4Y3NwzePYd1WOhqvJWmC+snqCZSj7uJsH10Ao=","AE8tJDclKg1NnKTBsBtmCDxwEoHCM4B+dEkQs925cfM=","Ey/lKeSqvQMEEpYkgFYslcj7PEq63pMm4dh77L4TkqA=","GfoQcVa5YYhvudmewTvNjQxMVE1CQMH39Dx3xj8USFc=","LV+RzTy1UtrH94Q/YFUr3ob0Xou6rkhMa3nM/zSsXuE=","La3ZpprRRuZbur+6rDN4r5xVQNF7m6GbspxIyF2/5xo=","A8kAMHTkUCCSErO9FiLaYccaug6KCUp2YL4fRjjqvIs=","C6kXKScfa4FDeL8rhHSQ2LBrRsoxzFxPx0wcsEtxzxQ=","DuWD2BfxcFrHrAua4EIVitDV7zZywdE9x915SqhPMGE=","EUACalq9icQBLSxDpHi1L7tG7Ahhzls7fBz2n+XED2I=","F27Av6WLOXYpCsFFlUQYxXftd6uH+5+CKBdamtjm9fo=","E+WJnEbBT3AE/Q/Tdkds00qn07E0cP3FIy1Wo+WbR+o=","FnMM52b2XAbLYR+Nf0/D1TxmYuoSykUCu5aIc/PhT4Y=","Fl2w64hf/tX3elV7PrIe8tSLSnzGIgcJ3gDmHNn49SU=","DEKCeMIXwefnbjEQ9+GyapCV6MjLwHoXFxTpr+4mcPk=","LvGDQkxZCgpdO4pjnzfk530Q/p4SMncYuOzCtAoukr4=","C7vgn7v9p7bgbK2GjLGjifulyime2VRTUcl05hL1/dM=","L0IAPsyrO/8NzisiqHaaW6GgpvhUxzp4hEO8E+j6XqU=","BZETqvkorNkVTqkpWlpp+GQUnslvBAlnO+hgzcHt3tE=","H7+q53vAYPu9A/+uq64s1NMnk2PF5GQ3g9+5pdWUaCU=","JbPO8dUkxIFW6aJKoNLCDtMvtptN6+HBLeUNskbjyAU=","FebwMp7U5E0DI/AnRLT20DIeIE/TjJnMtyo1eEuUAm4=","FuR/ZCvxPOZsLCvKAaJ2PXBLRt4NfJncsrSAcHwaO/c=","HZ+EjLnf24HK1i3V/UMVblfEuhlOMrQhqgfengqHAOw=","Bw4gaUb0yywqfFx8DKhP5T/9iEJ5JZ6u7uAGJ92YXP4=","Cl+RrtEVlQzmNIsPDwAVaSQ8hABBuXTk+96sz3Kxnac=","J3NnR3ldI1WXBHpXtSTdTB7Q4/QnmCFbqFBWvqdlVA4=","AWfB12R5EGlTKC+UXI2MtyFg9jEEcKf1Fl8VctbCfqQ=","G+zUV9IboJSATEfDpohzS9VDsubXy1GuwMqJ1sHjw1U=","H0M4b+c55/nGP73LuCvM3NQXM4/qwe7ULe9xUNSiE1g=","LQkcNYF1WDsyy5fFgWjzLYOmjJm9+nwgCNnEVLDq3hY=","AXJXxbyNrVfvb2bMBBoWBjUJANzhhMMSQmBlNG29sbo=","C0rcA8e/0xOQLdpnjC+iUVIqkqf8bktH1PH/mOofIcQ=","GvhFJEQawD+i2LWzkafDcfLZzwagkAX+puO3CMzOLLU=","I+yvgShjNiUaH8xd1EpKuf05QKBI53HuRmiDB0Slqb0=","GHvHA8yJPiy6Ivu1mMDneMIEatvliz/yUte2Ne2ZDCA=","JgsC2xEdY5mLavCagZKPYs/JfE+MuiboKP9cBXoOVfM=","LwIyqZQMTEzdDkTjxHhc7RT/E7X4cc4vbuNXQq0FCs4=","BQrcTV1kgH9zDQ9FDaVRdHmjeGo7ssjeJFNqfKXeLY4=","FquPaCpAg9D5mfWBb0HMftvOgsDVm8yqicJUcpRA+YE=","ESf7LwypzJU/ux1Hk0dCY6blG3fnLDixFH74ZUFdTaw=","H20ErZfy9LcQ+R9SJqjFXsvBwlr05MqLdsxPrSTuxnQ=","FBvlRL5MI7NiXvqIbaZeZ1tnmQKNOnpt3h7RSfqklng=","G/eF+YZxlLReIdx2sgAyXOS9Zkt842mRdLKMD7MkOQY=","JNm+fDLH4zv3aBbhmjweSoh8mudNFadxLa6AKGTAhlE=","KKSB74UVhRMg25z96BaCai6vmUrvilUaPQAi13IFrWw=","IFc8FYpJxUcx/tt8SU66fMoXl1y0pEjGiLxWSVkHJh8=","ChWxVlkpcmQe7ylwkE3j4TNDdu5kv3bbS/XnyFQsIcA=","GyvEo/P0SO+/ohpOQdXW4JtzV0c5tm6sJ+Zaof23jHA=","Gnml2Doou8TBE2AAOBNehs5hiN9N/5OBVTAVk9TMc6o=","HhXn8R6jZ1f9z8xVjnxr2MfLhIQ4iiyVJY4hJRZN9BM=","KYoDvB7dd27DNyyCznPESz4S6VCcEkRZ8V2d94OVOBY=","CsrtGGvSG2vwGITC6A37hGmeC9g7d3DQO5GNJKASkxY=","JSnE/7bDnP0apuBIAMtZuuqjHaQ5A9M4WyqyWGSBKWM=","GcR8Kjcnjxg/O1hCcRQTmz64LAuJDEGZcGrZRDkfpqQ=","DScBvfpXz5EfHNH7Q1/uBoyu1oXGNjgiSd2az0XUyYk=","HljjbgrXtLrSesf3bTSrSXSI0WYaRE28B8ucchlAnxI=","Jpiy9m+xXzsWp+UMvYNaMfu4PgtlmC16esspccxYJbg=","HDqONzeFZRQHGliRt+sob8yDbxG2KcEsm2Gnam9tvi0=","KSfOUXMIZHP6RF1TFyoFqmao+dmhafaFxHqpibng9aw=","JaoX2CRYDW1TMjZBKkiapFqjibPT1Vo0XTVmOhsUO/E=","D88REtrMMReYGdZldKXLje1FAD92Zn00wdNBU9j8qZQ=","BgMtblDQWQV9RhR3mZ77Ssq9Gp2lknMaQEiujRmz01E=","AeQOgZ9Cb649uwCSan1lVvMNhJNMyr+Z6YdjUdFxa14=","J5CEltCQb1JMJRZTJRCYz73Je510F+Q3cQ4af0uA0Io=","AtsYFPFDXNB+5U+MMgXH12Jiy1/F2mBYNqCNR/P98TQ=","GTd6Rdal3gB1HqkBGY4aCsxByoqZ/q5e7Af+UjPSibw=","LQBPyC49+am4kyGCNFiDJ3DsgPh1iVo//iNwwKqlz7o=","F7g2JWp95BPNz5OkxPj7a3aXWx7+MK7vCsEqg7NDTA4=","GyNKKNq5FJ4s05uzT3lKhd0SXzM4O3eEG5ExKMuGo/w=","FYhh/Xa9iliVDAxV2VeMnGw/8a76iIA/MncK2xpvF6Y=","Du+AkwLTFBWEKFYYsP8uajc7G+DbBoW+Nxu2AYiKrLQ=","Gs8+528Z3hV5lnaNr6/mBOGFuyM1a24lkgMutzLbpE4=","L09V9Xt3HswVgTUm1ztSsvocTwZVF7m7+MNlgEDhILs=","BiKWTKZaSLMNQKn9To+nV/1zfwIEWedKUzzqVYKQcrw=","HIyzSbXrpZTj6W7gQe634Jb6zUIfeJvX32rq0DDP0es=","HvUZ87gvKARpwep7JVHTo40+UK0rDFLtAYV4DoNHBpc=","Bx+WbFu4cRHh0PA9F+KIXd9Qt7XayZ8s+ch/JaE4M1Q=","B2j5SozIIi+dLrNquurjs1GtfI/QdZcbyV3mwkIv8qs=","E2+50IkXD8s0PdHyzyVEaBGMl60slRtrP+STPVpPqnA=","FCBK1S4X78yNbDspzlIgpeqMaCniqdM/ZG3yQhLCyoE=","GTSaVvFZGPHpxsWHzSO7P5M69YMyLdXA+mFmzxzVjG8=","L/0VQA49V68dUDdV65fTMYFKrprdR2S7fpUYFuBrT9g=","ABiA1AbwQ1K6DnDR6k5VMC8jkyfh37sP6fp02UfAQwQ=","IZT9BKbT6AoE9TI1pfRujiIl6ZxTAXPMKPsVd6Drqk8=","E4TM3eV3QigaPRF8DbyCXLfRt+K1fA3uZSHTFdYNihE=","CrgPZ5rfh4np9oYV+OZcreEsnBnosJb516WKbpFVr8k=","G+OlVwbUgUSHJovxAZbugACaxp0m6qSua4KZ0/on2ms=","H4p4iUBEZCd+P6fa0UOOWlXbK1O0bxCAqyWzG1OKzdQ=","JjyFxYKC9lbqYZP3JkGqLPme5PfkfxvBuyLEbO+tuu4=","AQGQmSZ/8e1yTkY1c3AfTC0HQzeyf0dAYNw15yzNGKE=","BCm+vEMNQGLjhzNhm40/3dXCbQWyA7qbzV+5BYx1Rfk=","CgPhE/dPwK7j5Ublk3v4xWHBInT8UAjMYxgKJgBBR98=","BoiIczT0g0IvR6k5fkVmbJ/cFeUI+9T6g6XnIr6SYSo=","HKtzF3/uyoyGNgF0W0ATjYGwwgkzSqxYlRcJJ4zPfD8=","BYnhEvQ8l5qzuPExp5CaKE83hng6kgUnH3mBNQCCbzo=","CBodebIm0C8+3HnWdWsreNBrdnf757/S4cc8WwVc9vg=","HRJrI9omvSYqC6RcuDt4rhfvzxqluXR42QhD8KYY6SM=","GdAsyvH3KMNbiFkuMA2vjGy6bqpzNDUusEeIXbIvl90=","Hn4h2/ZtpHt2tOAlu9Q4plTWZe7M/5KOKd3QWHvavew=","Fpygn2HRAQRls9agTqbzI/8hJrLFE/Rz4linOMNOhKM=","GvwdDbj01D0yGTNEY0BDvTzVnsPJ6Gflj3yDSJz44bs=","IZ+GBL+i9a69GW7OIfuqK16dWmKFW+2oeBr81mg1fu8=","Dbcdm+hUgTOiYF1xO59QzHaMGrKCQwOxQfSy8nTG8Jg=","E2A+XNIMEszxLaT30E6VVc2mROXZq9D1QX97uMbCRUQ=","ADXENWBEOJ6NjT2EYZJDtX7DDOzDuox+5m2O2Yd8QNM=","C6aMVq8PBF/uGyJm9TmAwxzuVRh/r5e2EtzZMM3bRSo=","I/R1noz4KvTlGxoxIz3FJ39TqiQiQ12iaY8bZalRV4c=","EgEoebn1nezh7Q4DsX7JSmrG8pGRV6uX3B1f7G+k8Bc=","GRV5elS3A4M2MQ5G4vqgtIuj4aLUK4tYe6uG+AuVlOo=","GQ7Rh3fOiKqK2F6OwjnYJZvw9R7YmWM5dZ0EU0KbRCU=","JOBAgcFRnqw5kEOdX4bylnaF/oa43DekRE1fvyq3AbA=","E0XNq0dRD9vn/Dib4EJWM144fT8k0qpzJvWTmaEMhf0=","EZo6x4A9+9pVZNyBeKecwe/3hZespv2Vs9u/SVJRHnw=","GXs1ltO2bK2sbMTYjC2h3jNllO5IpPLoLO79nIEme0k=","AVdAy/W4DAWPZxq3sUsuC/OxWkTcpNZA2kBFPQ68yxM=","I9pkSUPW+JCjRCSfDUmXAoOAEdxuRTXEeO/IoOfqGvw=","I0T3ahvo9LukjZ3sAvqItu7gHRxI1+N9chC1qORxKB4=","Ltb3x7QYis1WIwIrRhwmcgVO+PaaBexY/I7H8Kj8YIU=","D1qRnoOhA8xipzUCgZ+hY0lNkC186t9hPX4Pe1auli0=","FoUG+1riFwMx7kY3CK0BJMUN2obBq0ZPE3Edt6L2xOg=","BlBkriwoRrHoxzlCvbHitALrl6OT4YpgC7jtvI0CmvA=","FxD/lMB5rsVYnXoEh+4HT/pJ+ICrsU2d3dJznuat3is=","KvNVTJu+WVs5YWZpyhmEwsFD0W+e6e0xYim09aCgEDo=","IpZPw0ebIOcLPpgwbsML89USgFa2+1JeEA9oQ2bDiRo=","Jd4LTNYcgZQND+qH2TietHPUafBBXu/YG1bSBI66y2I=","H9V12hxTUtquI3sOj3ZyPUSjQTtJ4BbqEmNIdjEO2zg=","BTO1avMpl2NQZFx8t/opweDDtdiA4l9aUndNBW6WWKw=","Fn2IXGRb2c+0otY9VyaAALc9iDmGFvvb5W8jG4sryCU=","DMLyQ91gzUHgSyQwyWq+QPIeP9EJ56GUYTGIBRa/hvg=","A0FxW81St16Exg7dRykmEcRwP4+Bq7RfWPhv94l+7hI=","HMxtgwGsFLy32Muf7sIo+cLuve9XePuI5pVxN08sJIE=","JtVM/NUfHXbIpvZ/N9/ky1Nl4zAX+0zU1arf6mcrO4g=","JEUxNECiCyllCgDi76dDLszNIYqLERpn4OwoxVm+csM=","CCh81wmbcYpHPjotv/c1Tm9WpU+GDRUzsooMA0B1WLc=","JsJGKDVqZ8CkUM9T9gRT3vpYD/vsUpXaxvJth8pnpx0=","HRzz7qnW8jwXIgcSQTZ+6LBVYKevGoJf54hYdpIJGqQ=","KabMNA3FCTIajbmaHkpvku0iUYcY4FCUaiEbmwsDUJE=","IrBHLY0Y4iB8f6qBnmRqr/7AKDwGzMsEVUiZwo3ds4U=","CspjfT9xOT9ctdAeCDd49Rm4Ie834TNdZdFLL61VVWg=","DMBs3am7rFih4WLvXJEO2fqYYRY7W/9id2W23o4elxk=","IcVHco/JZMF7ZaYBdtoqGoKS0NUD3BalxgUTv4iGPEQ=","CFEt9S2KlDGbzG2qn4FIU+S/WPV9FvV5l+th1qGb/78=","JcDZ/rDAKmS3U7ylfMaCSKXexBSb4rdZvdtTtvdZPDk=","I1LTlE+mGixO1chOwxj7uuBesQIHVhLCaw84Zw5pmV4=","JLs5Pe2z+BFKzcd82i50qX/4z4nXUfv82fUqQodEF2M=","AzugkbxmXiaLZajyJ4qzET+MSum2oLrMtLhAlpo7Tzs=","IctLRF6KV5xzQ29uCLaySHrQ9cRwbw3clUX6YuoCJLM=","BKklrjQmDf3rF/XHk+S2crj1wNpp8Wv7KUA5JujX1Q0=","LfQmZ2EKa8ZgKromdGJmh3B53DRaefbWc9ZPsn1/9Jk=","F5k0OGpkI82zoQlQ+2XRx3doEu4ZyBP1pnICvfNsmAc=","DA88wGQ8kFPn6Hoe1ZDeqKcObV69kHVDyVYdpO6fz2M=","BRqFje/AQOrwhHvFcU/KPWN3VwnVSGqZXpMzYYT+Cqg=","EKDak/XiTgLh2jtwPuzpf9Ogj0OgR2z+/XA3LWJ0+kc=","LXvrQGeEC2VFaTX+gI9XzJcbb++34J7JEzYQPi+wcrM=","E/G7tqhQy7U2oBl8AWpGcj1zh+mRtn1YqAZcPk3BjFU=","BB/ZgJcdSJfl4/QvQ0LbEOUX9jmFX7ryHAuVkLI72Ng=","CWNpJ/WzSdKQBnAp90BQyXUO9XJpFCSooKAWY6RcUDE=","KvNucEAB9gI6y+B1djf2yw+suo4FFbDfXrMXod0OZb8=","L5dVj+b2AEEJrEZYYJptLNGyLl3AmaLqEy6ICH5yzKA=","I8xMD5brkVJEdEClXjo9C+GryDg02f4Ic/ydcUsOJtA=","Kltr2Iioo2V42GJfW3flJ+oG243BtUeW2A+xx9spO5A=","JyIL438iPILvMVffWWt8PyG8wD3oxKuNfx1bqq9jjww=","CbktBcBZCMXZqvTo0jRIH5aEBmvsD0eKb39B5HOPlMI=","EDaG2E9iCVcs24KbeqZ5Yr4BdSiZ3bcXgx32WcLi9gs=","I7YnI9WO1cLGuoGDg6zTlkzzkkMojVkaS6CAOxW0hzU=","GIcPQ2zLZaDh3F5oNySEdK5S/SJrF5Ihu/5z90fq4Tk=","AoaR0vDDNhSLW18cXcBrQi00BxcF+aM/ryYTyQfzMl0=","EZH8Y7edhe2spqJ9iOktQNiXzArQUhNuYLW9Co5WAoI=","FmgLgvbnVdi0GdHjAyA0V7VHDY36IU0CNXnLbB0Jo7Y=","GA/WX4xzfn4H+9DnZGwVQcjDTwvYoeFiOjoOODykIjc=","BsesVN1A04kaFLSOdCoG5YfL37Zd/0qVXanHHRUiQbI=","LGXJWnJXE3Omq3oYt/Q5LBrvKW61gVQdh2urbDv+ba8=","DZwACKTwchTCT9DnM4ZNfFf04TwEDDGSO94+kohVK8c=","EtOgTzQ5v4W2UlIho/MUomY7m4TuKQ5IEWnasrCkjQ4=","LHXvX87iktBd7np+on7r6Hvt/mWCZE26D7URjP3yVes=","F8ATMLtXCxyplw1YcsGqq4zaJLMw6UosldElSRaCg+M=","A1+iZbp47+wbOJ1Q8YgBkcNb1AKXfFDSUokscP86Zvk=","FGpkjkcViALh/XtuIRVh3jzhDfY0c8JU7S45lHlvOyg=","BcLy1zGPkfA5irVBxyuavkzUgQWYvQr7Iw/Nyijw3Jw=","GhS6ySa8gE+qsK1i+iE1g4cilP8x2nMG6KCS6wcKzUc=","CIPNbn2+O7KTINsdoRdhj/n3YXE7eweBT0u61xYQ2J0=","BvmNK760WtgudiS8Pjh6Gw2Bj8yUzp2W9Oc+gMqiPlU=","DC7JjcDuZ22GLMBbCefXQ4n2hE70Yt4zb2qLaT5WjZY=","JVGRz6gzzWqGKshp5SBXXo2nDaMOyXBlfDh4GnsAJkE=","JjbD3h3XeeVXfeIUs+bGNRcR6cwTSNvFU74cjWi4sGc=","BkNwN5NyGPz05zzpszi6ygw/6UjDmM+fy6JawC5lKVY=","EAhVAoQ0AXTR5HrFoCd5MxHEKGfjtxiySkeJrPt9bck=","FSuZFZ6H3W5oGq7zi/cpVBm7h9tfn7DL83Mg7HJtRI4=","DTgq3psoGi5ybLlttU0m9DMliBh1O4jiZigPdNjcqAY=","D1ROJFnmpjbY2iODTjF+qa3nsqB8SrlMNo2jVs2ITm0=","KmEir3wc8pRrM3NdKp9QIMxd2GaVKed9AGnbNkzLCMo=","K9cQY4+gn6cMsKq2vN5WysrrEaqb7GiMAz73gw3QzQc=","F+FysD8lyY6WgM0Lus8ZM6lC2DTZRfuYgPrpXSWUk54=","B1msycuXWu+xioM/9MhN+DRu9jxOtn4iCxGw9TUMYzE=","Ip9B4VOkQJ+iwMfHWBGBPYpxkw2myLG4gnqmSL3Opjw=","DTFT1tFECqjo3AvxBYZnoY5ZMa/iT6kKwZEf4yLT2fc=","GYpvF5+SukJ0kPuQuM80VfafArdW6Y6wfUYBpSx3ozw=","KcK+B+MNk92SfoCqScRN8Nu18FBulmdtLUsakVcLx+Q=","E+dbCVrSGsnRB7Kn8eYgiJdCQFScC7Tn2DzkYwzavc0=","GG0eJsTkFciqswXxYvANindUzBp6Sl8vMYt0N0ZcqGk=","JEYuF7Kz/zkS0OQfF1DP8WmAa8FYZI2oIuG8n2ISiGw=","BMj/O5oXT8BtOzMC/1fFEK04WAw19OO1r3niQFVmK8I=","F0om958m+nxMJoLOwU2nCu1J/nx1dw+HpStaZyQTKJ8=","F5TID6IG6Zhi1+GnU9d1T28XeVgahSAf1Gpb+3uqlS8=","AltGMtKXcGZ9CfecM7sqilr2akSdbTn2/b5jyXbhyhE=","Ea333vlsU9vf/QaoXWMUXw3SOVBj6NMyvkLqmco2hUc=","Abkot/KTvqsDI1DdPqTEtIxKBP3/CCtPVC4JTZc6OZs=","KBGHv5ikxaa/kCAwksauy5/C5WGXT3n3SBqm0pkYMro=","JHFozY/A7izJ/qVhvE4BrT6leHR1b52dc0p/vEXAALk=","Iwl9dBJeBCeOX9DhT1LuGTa5AcLeZKBbK4CZGh8/Geg=","LK/f/2QiI5OZdTqWEQ/qqKFWJku/WQE/HYGVowg45kk=","GlggKA0cxm4su5kyCinYDnhEV2N3Y22MwipbiYOLXoE=","BDmvGRyCR3W4a2rpzd7WngrFJNLXlTvOZdxU4RZUakc=","BZIW3OBr15ephwmtK5DBXR+feBd/CtZtUACXJe1oZLM=","F0U/2M6XxgB589AKopvoubkMvMmiFht871LFmcYobNI=","AjoayPOgfIbpMYTF8IK+UamPcGttFGfc40S/4mY5fsc=","E7e/061RkZDUm+snsA3zCZH61AppTvDfEuidYXJj65g=","A9N1RhRyKLX6+VuggLK0AialiBBGMgi5s5Vm8HMWPf0=","BfO8+43ckXg1Qwoi5Qz7UTlvFSQqX9DH46wVOABNGe4=","C3VVj5JWf8HsVOmVSjPvr79RhmpYlKdlUtE0lSPPZf8=","CUFRg98QMdrSMpfDNO96JVgZt9dDZb5PNTqItCfZBpc=","LcLH8ZtQJDFc9bDHZUb5Qy4GjvtQ3TfDlfuHRHccDjQ=","EVpawUj/DCmQEiC/W5y9PV3pqQLIxu/QL3qSyx1O2l0=","HseJQusP7RaPvlW3MGdfPd/KtpwSLZ9soi98+nIoC6I=","JLxGDGlyV7swVStFrTcxOYdzniUHnChC3N8vl0+btoY=","J4orKb3lS14dD4chbeSPUdTfooRVXr1/5/Pd3CNNGls=","EPXEsCr1CHd8TNPNDGwR9NZ5+zsNelJphZO/UM8gPLQ=","LWlTJPiFRFhA9Sa3HlGfKVz7Cm5PJBRflS2Lr4Vy9XM=","GBE1J1NkNLYx+zd3rHM6slDdvpcdpQ8T+mzybJ4FvR4=","BAcw42hOOR1aFmtUh+8vpCqe/BVGKc5BPJie/iyHhZI=","Hrsh2uavTcfYC9K7k4mCwhXKEksV4Hl4g68qgK3sShI=","DGgCLrY8s6c4WbV3tZsX5vg2F2xZXGof2hJKBezvwQ4=","CI9KmvXWaEdbuqNWEL+sV5DhA+9TuaGzq9u+KT5W9a4=","EyXi6E4oHKrof5Bd9xnrZlFz/ILPzkN0PrPw0fzMmLQ=","Lz6joipW25cMu+2q/p2F8U8CRWiJtkq3EkskeZeO0+4=","BVVkt4Maz9j0bflu+BliKkRiv+goGwXpVVdZgWfunzA=","CMKemiLsfwJEknOjUTaUm3PeZoNOPwFfRokEOqs0EBU=","ISplSSxuKZJIQWDl4vb+j+x1gSVmE7BbjNQjfqWW3aM=","IOYpu1tsHvB++i/B+PY7EqqSv7QuOOSDNds63yZ0Fvw=","BAhv1sISixGlqlj6Kosl7V5Xxbaj32U0g5qBcpnOdxM=","BlJFz1kUjvPPkj0oZubx9h6lTmoOZQtquMm/lNzx6aM=","C2wbG63ADmDcfihr8bdhmOYaBjz9wmMPdWUGSvF5+lQ=","Ajo4Kd785E3igZ2+3c2b0XzBzCTV79lDRTUtFTyJgJc=","G1HVC58qHOA54b8zpDlfaT4Sy6mqXOr1/AxiZepEa98=","Ctori/BpsKhiK+hb7FzBUCR1vMmVpWhwI+oz06lJOC0=","CDJiCjVeExpHnRY71wLi6WqrNoj4GLVK03h2SuGi08w=","Ad189REC6osQSNPfymSTCNWfZfTzcL4Acmz1yOOnL8U=","Is+erdlYCTXwLNiniJeMU7tM14CyYseqC+tn3vXRl14=","F+O1YFUW2xG2JRI0j45/IGwucf1Xp72f6Wgyr2v3IVs=","Gq0cvdGFvForvc7vVw7bmGUg65K84rJlq4hkxRrEidM=","KNXs7Z2eVRXQwpuADjM79mZiqLW5g5hW5AlCIt+049M=","FWYNjJNuHu7tsQQ3xMrlRNvBub4P3WOf7/0CRqMT6IY=","H16PP3Fcug26bxJx4cyJQLNzBSRv6mKqfhbDAcif4+Y=","A7w6ExvOpbL03bXNWPcaksVJc9pn87au65wrKx7TJig=","EJicIYFegV42lbHobqwK1eaEaPNwZhQtBC2VGvoBNgk=","E6FHlr4sYr/O84msy1CVKkbHVp4AkgGWXxMiOnf+/4g=","DzBxSLdp1aOqDXC1RRTR3lCY4HDauYbALNkQBcN6k4U=","HnIMVCuDGpeIYOyogK1SIhBWWgZYhLgv3Zq67T0iS5k=","E2mB/E83pd29V6KEOOsAPKf/AQmzScKzEURHv+ZCDV8=","I8D03KeXp//u1hhbYnAEWulg+A4f+97SNJ94V978xeY=","DK3sNTLu9uQ1ZWQ2vffsVoU+3y7MHcqzPlhdf58z8hU=","HT/QzdypZ0nA52sQlHR/ZugiuwehoBFQbRmOuAuDFCE=","D6S/V1HgXLGHmn6dG+GMDPsHCuLlQ2UDe/FStFrAhe8=","CAHEUApRG1+bbwvLbestCJij7p2XJ88Ce7F7zteZImM=","E7JXyLcZTwzPzYWbA/dFHN6DFHmBFawd5Zgcy+6ljlY=","DI6MsTXdOBEgCHN2oDw4bmeHEADaKxvAK+lRMw96VnA=","FldirIuuZvPzgH3ZJaQzTocKm4hWKMt7wLi3y5QcBw8=","BCVDVWwyWljjrHU/SlrsQNPHOSbp47CmK5KluSDEfMA=","EIhBN+hmAL3wb4HXkEXqxsNPWK1oe3mchJ0tEq+ysAU=","JDqpp9NHjrc/xcEQezm+zZgIxuXkVTOjsmfOphKjvBA=","DVbNT1grVxmjMBvnhzFCzb26w5AcM8cfSQop8ZjPg38=","Ab+3nrNyZNZ8ErxLIU/XKNat+E0CoIFl7MmChoYS5QQ=","CCs4A3uWpH9U/qVPT4UUMPfHFnZstYwU89uO4dqnB7M=","HZLvC2fUapkd5gPIKRejK3sJEUCPjIqyg702/Bxiung=","HoW8yRky+coHs1mEpBxL/cokOhUUQeG3WMWkwK5roYE=","JeMPbYTamJ4NTQ24TPV3Oe2dHzVMjjqvzAG0eALFejQ=","Ee4N0wjGXtyIzirS7eyim2YA/68wn8bF46PWMYypjIM=","GPPKdRiP/1J0IkzeNsLYUhGwlMIPU9njpDUYluPRocA=","BbayHB9wgDKRG24NxOV9Ho7cvdFEECsoyGF+U7EeTns=","AOt5sHvL3y0iWBd7/RW6Q7xW2TYuSfE9ACOU9sY18g8=","HZY1cc5zE6FxELF9ZNRQAbNtILSGn/zuRO5XjSPWSI0=","KMRRROrc40X4c3i0MrzzDp/bQOL/z2H1uRjjrULM8VM=","J3ZTCZOhH7flIi7g31Bb5eV827Y1L/eFPmaAB3FL1xg=","IQpwBEVqTH5WZC55QCMIQv1Ut/vbjDN8sUk1Yed4/o8=","DMHLUZhqsaD2KMEtfGZWqdhJXbkdkOXa6PDdJk2fGbo=","E9Hgy9ng9CFibI2wndJN+SwnBojnAklSMdBXx2dvsd0=","HCta1Fz0GBYR7aZwYKBJDY1q480bEKFXCwC/C9Oibgk=","Je3BHTtebpaMqaJ8NAz5NQdE0okg9XYmh9LTHfrhQjU=","IwyOesP/Kzna66J4gRnNWKOpCpwkw+2CHq/Qg4PziaA=","KTfLM8kwrEvnh7bokOZ/igjMksFR9+Zz/7zCeyXNCx8=","KKOsZ3tvGazmnj0GBJVX/eKpJHbBmeHIGckHzkVoEuU=","Lew0Hu11JKJre5G6swAyM0cDjAEgbg94A0nlwsokcHY=","DoPJ9oxf60IQ1jOCHMhAvR+8vth+/96fI9RAPZuLA+U=","ES+yEYVZjnhb/w8PfkghKJIyQD+ysxtI5+yQIt8reXE=","H6piHwwDn9yAJMvd9MqBdYHG4/Jr3ieLE8NM1lG9h4I=","BOPSat/LTvfMMi7lV4eGBupbU3+h+IBEXGR+jRLJjJE=","GnDCAVvxxd+mN+jev491njCfRsN+U18MZEhplepbkGE=","Io9g3ltfOuilK87ez3s4MNW2h5/tfu2VIxxnTAFsf+o=","Dk3cUS/fg5rEi33bA+dl6c9eMgdFVypdT3AJfBB0QGo=","H45XLi4LSPm2vcR0IQocjfZVyl4Z99E7WomhhfOjzqE=","A6GDITFRwz1sWLZjHK+gwFMA913rn/lx+v01RB9crHg=","G32pgIKASKdJjN0rSewIvjutfUMnyXVLXj/WdOAsgoY=","KF3Zw73nw2GhbL8Uv7C1p42PTORDPUHxOjcuksNeIbU=","BvlS1m1gzRiUnsCKXCA3B/9FLj3zLVCk4iHnKnk8ugY=","L2hD2giPZ16nc6A3fs/O4zyWAa2luCVrSfLCJZq4q98=","G+5NnhaKxganPXmpkMWQkAASqv8DKRdHVTeBOEwo2AA=","DIyFwDINaRGrZaUN6ysoJdPjOSGkZSLlTMtrgG5V8ZI=","EZ/8buSgAOyLa9F1vJlxjatlCOmZV42F9X/iKUYSDVU=","MA0OhoHxF/tJGCf6EhASBiVOz+WnCwhxbRlQtmNc/wY=","BPQkwmRxkGCG2tLeVFKzFIqUgKZE5psNLGqONXIHAYE=","Ku6ghDvm0mNwBnLEJumCDBbwlv3q3ve+scQjwE7d3lU=","JwqgrlxaXd9oW8QytHyZburZ6x7YmiW+0rs1jLTttvQ=","C6T0L6Q7AF4x/i+/J64d8Bf/bRHyfPlSQ2ODrJAb0X8=","GJrJ9Y0lmR0QymIzsa2MxYPMHCR5lnkEqAH5LE2wiBg=","CsfCA7WwbktvVt5F+9nlAteWYrPvTBIvc/ejOD+1KvU=","LtSCvMtKfIp139MaRDt00eTvUiolBmA0TCGoMgpHjP4=","D06trpLM8HHc231nJB24IoagtTQ2Il2NbQbDCU0DK+g=","Lz7kp2cVs7w/63TlKJSP8VLQtpyueqow7T0lS6iTGnM=","CmZsy/pu0JxX9Y7iljQHI2uOvhk1cp6BFomzmKnde0A=","Kr+LnlUzeci/aPvGemfe5aIt+XOTZzFFIR0P6fXvyiQ=","Hg5KUqL+AR6vqs6D1UuS5thXY0tFEBAZWOfYBobuknQ=","E+5z9lJazFIKCYfBYeUZVyO0eF17pqAxyDV/1V6nVA8=","CU/ywkz9KFnvZsT2Jpb83H7bk6uSEnymInpsAp3hnhE=","Am/dQJK+NwkvoT4C0Ds8k9q7f7e7rPMSk0QGGQlVbMc=","Bgyw6/IJBnkAmNJg7QCnVwTojjM4b0PichVIiNVv7+Y=","CrD6jM0oCATFN9LgmuxMEwaxp7R5xmI+kSg2TZKX990=","E90i5h/16eM4f5BIgDfgbEjPnse4/ECy946DHpd/PRM=","JMYq8h1hzCd+0+7La1PaQPgkpryGGfgwpaW/hoRsHUE=","KgJceIjLDsaiM4pL5XGnxnvff33PXAd1t4Wixeo6DGA=","A1wf8HewFrgGnARKK/XMCYA+lO4BEMF6W75ZTLsnDhQ=","LyllBb8TU7I6ZyeRpO4yWiip4bId2wInjki3yP01TRg=","E7FsPMDKRwx1vCrXv9bL8LZpx2K/BBEBAJnBFi4mqac=","LTyQC6mp1UlPztXXDopArLaPR6C9JSHzgT74MfaQ9a8=","DOnl8x/rCo0g6xq6iQCDzDCSc4v8GW4Q24zDSzHxry0=","DaQTvGxkpS0Gi7xmqiUXwyPOLgDsNlI1yrsiNcMsk9E=","GJeuGiPfD5n4wc1NSAlYuVnTJ4FuannYP2TxHyn5om4=","DRFt/lNiEjaEU51oQYJadkwFPe5ttrK7XTWWZ2CiMtA=","IeJZUumPlhW2lrTNxUA818xDKDWo54rHJ6ZGdLNOQxQ=","Gj2tV+euIFpI86AkmExNoFAbVEr8Y66igwImQtO3RSg=","Gb0++gpgkpUe5xsxPBts0rAW8d7LW1HY3BSSfsdw8YY=","Jm78QqMM0E1nePUKP71cUdvPzvtutAD4WnoniuGE44E=","HI2Q2F72S/S+3eYJlX/03QB6oF6yotBOB7AwE9fJC2o=","AqwG1M29MIR6n84URyrjIOHzYlJocifggvITshnnJwM=","BSLyybCHbSc4i4tSpRAC5f4GafM9oHAU27jAqOKehc8=","Jr90RiTOV1RhxGYnDDx8sJ71wLg0LYZZhf8i0XtHI5s=","I3UQD4aPBuxhTg3tbZn3FKGzFZ+BBJPIRu7CXMLfKFQ=","C/RhFGtGs+c+Dt1JNpifQEzqH52aBYKXuUzerHdYMlw=","Dpg3btZBQl4nFvrv2O11RLFzxaOmaTYgnkr2Ka5nccQ=","L5xNlgVqE5HYnyhyCiDQoefLWaXJOoff5gabX07KJxA=","GS8gC/O1VbuseXgZuyG5kLcp1lpNKKJ9bT8A8aAqojo=","K/iYS1YmrM8Qt2Z/T9zNt8tgWgrjTW0gSsHLyAy0kSY=","C8ohwSRkJHJEsqGf0w/tZfjjq7+DNbSSBcH8wfaqwao=","FAeNTuEfRjRxpJUWw8hfmiZvjED217H4ax0ZNbCfFfg=","C7igTs+fmOFpfTMOki0Mir3gAAtQtapXxYANUt9N4BE=","IVJhIcBeCaCr0spu/ltC6/fpEVOCIhyqrmKKM0kXsDU=","APakQ7Dn67C/d3URUS9mxeW74ETJZl2WEJAY2XKchPQ=","EAknUelPtrXkm+oVigFL2ZB4VCRYrxS6TL2SWLis0jY=","ApOJkD0NPCmhc930UqZrSr0278ZCywtX2PEIGdXA9fQ=","K20g5sx8qRb1QmaHJBedjQ/wdBw9UfdFReITkRIXc3Y=","KQC0J3+zoP+DtMWPrHmohh4wXV6zE/LPV9uwWTkDZVg=","EK/cAGbdqbZL3UO4bQ7WK5s5OAB8xQ9WmSUCQM0u4ak=","MB7RVm9SIOF/vUCDpXv0LBLBWmZHroED7conL71fjxE=","J/GDMinDpZmGhpA+gkuz4+ELyWnxNCqw0C3mNf3a/xE=","DE7zX/n5BtC+pInSAcIQxTq71HoVGp5O+9uSICn7ZK8=","C6Wrkkavcjv/RXq4IovgZISvPjVF27TJMspJEV+VfSc=","IcVyvUJk2CHF4q75kwBkmciLMkXO6Vk/AsJQFJroesA=","BNHMR5UAhxkyb4EGyc6aSw3eT03gHSQpojURsf0P0XE=","CjeffW7tynxPB7td8tjqDdh/Hu/irCJxNwp/O+JwZc8=","KNrvfTekPyukQGXyITkS6rbIxg4/dWD8qZC+D/RjlyA=","KQbomWRYUE8sBE8FPErSTTWw4O03OyfgLlI1o9NPZcM=","Jgc4s9CnRvsGEtym21O7loxVIhOy+aE03zQbrz4TecM=","BfF3roxu7IuXEs+gQndmkOkkv0IkMAEe8nr4LfCrsjc=","JoEQJ/RF6GwZLorjcdLoP7c1YcjP0Qu/Wymnf1ax2V8=","Et717lnBtKlrUKs942F1ZAy3A2P++JmV80km7oS+UU8=","BptYpqpBmUoRzH3TpCj2xM5iG1sGeT9elbQDTi736bs=","DbsWL84YEr8qFq62qsfxc38tJ2YMpM3255Eh+/u2xeY=","KHuoSqUIfYzJ+JRQ8f45HMOoTyiiSyYc0dzasDmjCfg=","HoeKHy/HfL4jKup2g9RtiZbeu5ywavADhJ/QmenFBOk=","HI0e8kbddfQt4Txb/gacCNavmUPNfyM28xyJZFbLovE=","B08aZ4ywKUiDVty0d6iDA9De1fLV7OVHafFavBmUU4w=","J2blWBcqxwsfPdhfTIBRe6bhhVa/UdIPaHtmnngV1H0=","IGNjU+KfrOuu5fBO3kL8Pq0NB3J+3nqArxxQXG/11TQ=","Ee2XWqPT+brB4LqxIwQWcfjbaV/gdgH+WnHg/MqRa0Y=","GBABYEGP2Fjz5P6NXWuA4u83Zhi/5aVW8kvDJHCZxEE=","KryhjZs/JSLiHuV6HGY07BJ3TQQeZe+EMCJM8x+WDxQ=","FmJSQVM8WCubV/bglj37uppwJhOdqrMXT75xsNlSLI0=","G9PPG9MSSrqmJ4UP93pneOjYLQfKJGVdlMWie1fHgLc=","CE566KUVu+b9g3DnwT59CYNcN0ntIcKELnxGtL+tTjg=","AQW2T9sPApiHMrWOBtuACy3wmnGltaFlrSAR6/SKZEc=","BD7UNta5r1Z6rH4kIGE3+qCG0YjoREyr1SNJg5BLzvE=","JFHLel3sH5P9Kz+Ll8Sx3S/OfIfQqSyfaZvFUAMqCns=","GPN8Yk6W75xJTS8Ba7HtlW75UfO1dCCkbHFgvfqldsE=","G/hNbXDHSMzZgcIbGdVVznw4QfNCIMEHl6929i4liYA=","C/mwUfICHziilOrf0IEfBcCIUnIL3HSeH5picg9icZo=","GfH9IZnjqsiMfM192FjRWMLvEOgjbSzWanCj8NGHmIo=","GvnWOs5tt6iuIKBLd2+jneNLeVOUIxIUMX8DbllU7qQ=","GzotCNHDdjt2eLnZ3h/uEM2oCTf9fXTyfW5VA4b1RD4="],M:[["Cx55fu4/FbiM46H6/siNodYymsPDRxLbVw3ohs9WkJg=","L+Qp24Bo5huCYk8ldmJzzZ/mNo/wl+q5eqoJvkxjDic=","LnUIZ5QkOQgzZdIf52DH3+yeNZPGfeEqQlXGsBZItpA=","IyN5halrF3/3wBSGqw1gPSmZG4Mkq9awfbuW9cIboX8=","FczshXslk0/9Qpr5LJENsx0A3Bw/uDdFox2BMepbqoU=","FxAq0tmAQ+VQnnbDMeayLV+2LQdHYIBqpnV2RmDrVtI=","Ck7Kq96dHqEcgdr6jV1Iab7nrQv063g5e3G4+YnPmBI=","DsGCFkj93ESKFRKuzIrDdxSSOYGUD1VCc3pGjU2IfI8=","JVpJOqS+zZ0TfrdpQcQSB4TBIz9sX99dZcCDKvVD5BU=","Eg9EZwMBsUNSSSlNmDPVngFoKvTIZYcZcnZ4/Zq37y4="],["GruVtuMyQ6BQ5WO1xP0FneVRPsKJlKb2DlfJjTvI9YY=","CltgTJWLyQBxrRBhixdyWZ4Mjd37ZBEx/vOdqlijmSM=","JOgt9Yc5U3krrKNFt8GfYQOa3rEZBZK8oYz0+QfBpv4=","EOM0nu/ToRJBfhEP2egyB45UtfRTfNAYruPfu5BUFYE=","FlrevgDHugGUmQGMlvXFhw7KVnnJDIQ9lScYSlJfzKA=","AfuBIY/u7fTn4OM92Oy+YtZca31CM/MuBzVx/4YticM=","G+KAL76lEAOq+ugv9EmdEVg3exCPiwIMgrhGCo1gOvo=","BBgIHejClYNVoeReKO5RuixmytBINfT72B5pbeY5h2k=","Hz6TerKfOojG/kOGmKcZilIJqmrJ8UExnzuyAef9ZxY=","ARPpaHabDqMst7X/cEhKrMlvE9woJ6jl5hFpXgeX/Dw="],["EQ0hOoNkeKowG8H9Tt04hQfYd0Wzq/ulvygq/SH3JCo=","LN7gxjWk/NlUnw+RtPSptiiqcxni6qCUppOzi1z5okI=","ANYPBYV1XUhXe0ZXRt6OKG5JklFQ8XhPKftrltvY8Ow=","IWjc8hbYNppibMxhRTI2o4nQJRnzBS6H7/nMuKopnEY=","A1MN2WLvI9wW95sowfwd2v6UWL4VF0y7vzqAbeX2PO8=","HO3G1OFHZ0HBCZVX5Y5kLEKJKqNuLQp5P2cHgaIbDb0=","JpyME5pPYeFr+q6ei7scaYCMkHEIOwoznf+eSQS0Q9Y=","Dqe8UlA+IDnSd5EuAi/W0N7VvGh8b/lxlJdvOii9MMY=","IYC56xVuszytGqdQ6g+j3b+kEnKW5Jf4bmRB4FKiO0U=","GM0UcUMK2tMeRbUpSU/Ip+MZvS/AYZyZIH36zbZXu/c="],["GO2y0QW7U7dorgE3hQ3C0r9tEwOh+O5Krfdtj4GZBYg=","LJYtfVSpjDqCpjjYyCRQgT9CBxoXxsBfRwtElY9X7xU=","H0lekwFDFJiNrOXk6Gf1EJ4J+gD86Hkp0eDs6VpEk0U=","JikD82rPDcBV9hA5ffB5T7wwkn7xhcY1a8M+XDH6758=","G36SKz3VA+ZEGtqWbIs7p7kIyyuYtfvh5ML7mCRVuqI=","GoiuL94SujLl9OzKzxHCW8Fjve2qqIJEdMrlhp5ewg8=","I0B3KCaccP5xKwIZFQWdyNwhJK5kjiy1Sfx2NivCuX0=","EqsxhibVEcI9KLqp+1tYAuCrlePLF67bqiX00ITP2lc=","HMadjzTuh3g4lQ4gqdTEvT6ayvPWk6pkyuBPqiJaLh4=","I9D6ll6SDfxTC1JnCx4y4tX8KCH8kYwIRKADtxQYJa0="],["HlPpLfbFPs7EwN5bB9xMmgxVRfKrzB+r9My4SgpuLCc=","K8dhGF9Z77e2e88dPlTaANrqBn/knj8dkzTlRwQ4tFQ=","EkMx4Oyx2YCKHZHvqpiVCr6TDEb+5aMNWtB5dqW8AmM=","AEaIdyTykyGJXC74vAz1Rd93PAS6oJfDUqQWU5XMp4Y=","JHRgrUWAoYY56tppuQTJGxn31Dh0NXB2lsQLrDv73TM=","JlQSpOO1Vgq6UC0g7YM97/cHt9QlujwJ87Y5K28fQzk=","Aq0G/J+BaEVC4EWKrhnAp8GL6U8d4/zmo+XSM1oB6Q4=","DR40GSND1m/BtlkctqOwYCsINaQDxyJ9vL1y/YAAxvI=","C1ZReYh+4w44FjHY5d01fHDuLrtBBhfSMh9thTf5iXA=","LqazKvN812XXKN3vowkYkCoh4ZspFACFT1Y5PFbWlGA="],["EPy4F+EPafcHTmTDk7gHzd3zPISotc/jP0S3P+GMDjY=","LkUNH+d3PJiJoL5V5ERTvMhEyUtW/Au4BuuZgqxVNCg=","L0Ifz1TXfdOJMM1pB2+bqt09PxlHNxIVpmyJTWN+ibk=","EydggdsBLR1PS33S2KL4pRgNLswzhUzdNfnOsHv0DVM=","FE1b441Exb+PPFc1M0+xoHwTcC2Grzm6C0Ig7Jp1aKI=","EmkbWZ0y7cSK6Zx6c6vVnlsY9L93P6EFHKvSxJqqv2s=","BXilXw/aKZCbn4UMPXS+ZmjkRErGkXZPFkSmJkmCGOQ=","EuOwSSSyz25Ae9JrPNR7ymHW/89++hrqHC4NikneZL4=","EWKlbtO7u0tnYKFqMAunICEwCG2k1ViKcJJkI/+MJC8=","AzQMrLBNWoVhTqzEvjNSk4uqP8cUwldaqdhfc5ETxQs="],["Kx2MEfxlLFk1Q7b5gAu30Mk3He25bwi7vM/9xsxE25g=","JcD4fJRvN140H3L2qN1jqU6G9K0YJxW8/L8rKN9rSg0=","BUOyvGbzstk9TBiCA53bN8cMC0N6wjrFu5ho5t8kSF4=","LdEXIYU46KywMB60Ct+iQ19b/6gCj/Uvlqmdd/6ScGY=","JpsGsx6J/xMtrrwgDv3IqwaBNvzmXy/FWh3Lk5t/xvU=","INRAHLv5KHfs9hbX0oVRywrsVS+ulRjc+SGMOMGgvJA=","LuLaJLf45wNftzsIw0FIM/+jjhSx+qwZioYKV2fS/u0=","Bt2J+r+SVGhHucE7Oja7x+Z5xbsN14VAPz/0m75hyOc=","E2D3GQNFcrWUEMUptipiqpRWVlRZfkJ3nzNADx0X1lI=","Ff+CfgNMAqkHZ/AVKEDn/G25g+SW6gUZwP9B3qgYBig="],["GfRz5AwFZ21fjVHhEzbpxlyzKCjDl8yBJfHcZntsrfc=","C/5vwI4qLhuJEa4GW5hTiPzRBaSQpKuUOyVVjPPQVLY=","ID2e5kYqWGkU/n2/wb+il3O3+bPWOupBIMYBEpwWZg8=","G5Eqvy4WSa1INMpbKjgxzJwgfU0I5L8nSnncqA5S/iQ=","BiyqPJ/Tm2mGT69wHcikWIVxyzG/1cnDxZ39l+mfcBo=","E4wDouzqGDy48mXuzX6TJ1sLuYKXwVRachl9xt3ZM18=","EViZWfwkkykvtsUHMOdJlK181tNTPDsApX2ugzzHAeU=","F7n6zb50fXxRY8oA47C4JdAS7UNXYE5xhXUNZ3xrNX8=","DGA9A/koYNqKaMbcsZJNGkUJmupQ8aNi7bLyp93+kP8=","BdVvDIRNFpJIUDE15N65/9YynVTPzu1LlH14pWhoEUc="],["D886TZxsM5LeG9/iXPuGgX7LgMUb4X1H95dQIB8fzQE=","DBguQ4JXxK1+e3nDto1gmE5QesWXy0fcMdkTp6VA/Zo=","Aloey9fniT9kbzXT4H7pl8lDVHN4hP5sJq6BVXYNuKo=","IBNf8mOGf3CO4CdRcMyXiGicCIspM6Nhx3XPQwdI7x8=","IOFg93KZii99AGTH76FYhOvG2LcYIc1TNuLfFDQcle4=","FQ3xEpG2gOO6kloEccf7sw5wSrS1VOpdjAe3CyuWICo=","F1cgKejolyAtDmXCFyxXHUuRyoVuetPxGK2SISe4cFQ=","Cv8VZQuAW/9vizUV1eKc+RS3NJr4kk55YAn4pPG3Jkw=","GpGPwRfZpkReNj7lgz3AFBEDS5U4TZju5HrolvkqfWc=","LlYYQR7+owzH3jENSHJZfQh8HhIuAuuxF9sMLf8E/Aw="],["I7AtAP4mNIiWc6fQRzb+Fbn2JlKxwGJqGa+NYIXXCCI=","L/TQuHmKgmZ3k1M3MAg8JSI9WJzdB5Ni8ejC4B1UR2o=","HYl/YOh/zlzu2Np/L0pj/e5/+dzxecCOBenlzdgjisc=","C6bUzu4hgtPyqy5KOtCPwx9/TMD+yRrVPpK/ito+J48=","Bc6UuOmmCyiUdxBGHYfHdXJGJmro+l068+qBd2tbjAc=","DDRrBGrwPLkEjCk1PhEH1rdeWQuy1CLqg8CaXaG6DGU=","L7+Mxux++zAQZCPy5nsKqUAzYOVuiLbFy67DSoC9x/Q=","DQZOckSe/BHR6QuXdJ3jkJSQuRK7H3L1QvQdYqsthHo=","AqiODDVhdmXzzC/HfZCvx6jRABxx3rzyczygxxoZ4eo=","Fe6z4FQbzwENoMR62xL231QLl01DnJPhnqTQL5l11EY="]]};return To.default=a,To}var md;function jL(){if(md)return ja;md=1,Object.defineProperty(ja,"__esModule",{value:!0}),ja.poseidon9=o;var a=n(ln()),t=n(un()),e=n(YL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return ja}var Va={},Ro={},bd;function VL(){if(bd)return Ro;bd=1,Object.defineProperty(Ro,"__esModule",{value:!0}),Ro.default=void 0;var a={C:["B1KvPG/cyvOGgnZoXwppuXSeFwaoKRe2TsLvhH+ARVk=","BpUD1BfiX0Vox4WLqDNDAcD6GcGzSLx+GKTBrOHRVBg=","JcGxIfM/TPezCOxGMPJ7YD0iqoHKNZXoAcX6fZdwoJY=","I9a1UUW9sygnwUVq9Ne+TC0hPoJcHS8Mn/mbInN1H24=","GzV7zj7z8rdq/CtYBIBa2xTPa/N/4jV8eap9azKsrso=","KOxawIgcHmQmukmUCYlKbzwnb+Vonyw1yQJ+gJRId9k=","LJhiUkrIoHtH0hHJxQTIsL05jQKKz2kOS47UAF3Qbu0=","H25vCsSut6UjQ/MEGAeLQGRM1D4pDaC67pKJHEwGWsg=","A9s1F+Iz+KdtIbL7I8hfp8rMV3dp7eoJquOUB7mvL90=","D8Mz3KQYPatHnFli6wXuS3morG4Mzp6bCiFCJHv9CHc=","Hu0oGXioOVwEKJuGGXZzsPK2XhoTUmRSfiUKXN+ZrKQ=","JWi99lEQNDQ/tdXQIeBS0wgJVP7jV9yjb6XXjzO1vj8=","Ha+t43TmMlHeypcFkdpKKFpj0Rz+ZGYfrdmgAd/4IzA=","CvJceBq/VvpM1oM1gOl8emDqqX8dwytiLold86aRWzk=","E1AUUct9Pgzzy1d0H76N1ZdXyTZ/zEj6Ed6xNUJ8XBw=","GXBF/NzxW82yR9j79shcgPLQZfkjEIVZoXMNccc+Vs4=","GjkNcoE3X6wkm5hV+MZ6J16P+KCoIdGzBcTNsTE8hmE=","F/Bwb34S+wItFflCl8e0WUd1Xl6Ex7mVdlm+HeZLc3w=","Co9fA/GdSXmbb7plDAbkrvJR/8dSQ6jXruiSTVY/fkk=","JMnmw19PgZ9bwe8mV24W0sfHIGoFmARKzwwY/FBC8OI=","ACQFynDVFVDcFKv+4Y44I7npeQcjMNVHEzoUsl5GH9U=","HqtM1W8UdLJw1QKUViHZPkRmPK+PHTHYaxVuEH/vOMs=","BmuXUPc/RWHt5Vk5QH50tJfU3u9Zi4c8S0ofMq5CXQA=","HuPfpZb12HAwpsnSfWHdF1snEXlAgjXxO7P4TqKOekI=","HqlLmsb8G94p1Yk/3LZg7WH/eyxltjikBG6rIXwCquM=","ExOINR8HltR1POVk51RZHLG64Cot1Uh4KBrG56PAac0=","GkWgF/2+U2GaKdjTHyfkCPZL4QvwXOFskK89HxOIai0=","G0oNaOVDErn6Z1UMXA/w2I/leCLd351Y2dIhUFeqlK8=","HUXTaewDmZBbsCndn+C5elztHSnHtaOdo1itImaR27A=","JhVMnFHfgFl0W7LZfZqbjMjz09gT3Er0FK3OHWmSDo8=","K3SK09pDxcuUEsxkMTyNRxElGnCA7FtZIG56yMcBcw4=","F6VGj9seX9rNnJ/Qp/X7dW4F8vL7QQSyy0jYMP7RN1g=","Jpel4iVCEj8JI7hrFSmlQF74Cd4D7kEpsrruXLO9lOY=","CbB61DNw/Ev5reYQ4a3dONnZYuhNjdsQnv26aZFt1Ik=","BpwZS1ufIwG8SNY2PI5a+kp1yi+KAJ4VrUyhGhfIGh4=","Ghl0rUGMs3LVVeya8PNIuXKc3uaB6w5EebkLtyD1Qsk=","GKnY00zyxjMTip656ymCDIW3CYiVgm7N8uG/BA3PAoc=","LgVUg53XCkuZmP2RUyf64UaF7KYj1mJYUYbS8SS6i7A=","Hm0CFsi2eL2eiQzNctI7wmeUith/qyWupiV/jLcBKAM=","CSCTKmxAWx7oca4XOUlzHmFpokRC2PjJ7XnMx6JKSV0=","FCxC3mq//1gFT2pL2o66X38Qzzn76vuNOa7zDohPo7g=","FBjt2I5k092tA/M8oJNhckRLsHEtZGqLzmey5FHuDYE=","BcXc8r1eBOplZU+0c8TUaS6ZWKWZmr1+XN1wbLfggrE=","EURkMR/foR7sFm0gKu78YB5NFpWeyTap6PGy+X/TXd8=","IbcTsP2yOPOwU/bVlsrwciOyqdH8ynWDIaHZF1wyfvU=","Fe9nyuWDilC8Zxpep46HtIvJjjzXv3bV+gMwk93JdYE=","C/iJF8t8Vw9os5Qp2P7g/P5YMwamymkzjDSQJv5mv+k=","GIHwEppkt/hhCF9rNmnc71flaNY0l5gngHcLS8O0N/k=","IFXrcypy03ytqD8E73QXhTaNZI0Jy1AUJXVDChEOic4=","GbhIwzs4drsWiEbROJfN5rC54rKZVDlbOZRqT18m0AM=","AeGXlyMpZM1fJq6KLgS9ez3BvaJbVB89SgWbSPyVLaY=","AouN146HEuFySGpLJ4rI4WaxmWVSx0vS+kv7y6ORNFc=","H7HP9zGW0TTDA1naFaUwsaV0GqDgV4ip1PsgMq/w1YY=","I70zAfWb1lUiX4XEKpRmvNfGSqk2N+4nrv7N8ogyYDk=","Dira6yrH1pROKH3HyDMBUxPT8r6rol6kwdxvDj+8jjQ=","L10IVI73PWXChTF4y8vIpwxIADwNE4bbcogmDSmlLQo=","L1XA6W3nSmH8l03w2oWxGsVEtchUSuWa12y8A4ieebQ=","GIhfc5qcPf7tOc63yO73f9Y1rVLjKU0+EmqSpkxaRUM=","EmfKzpzsPBqW+9pfIN8wnfiPnt9WhKBb/KyxEWeYMII=","KkXASERI2jGyU7Yy85w9T2xq+OPjmd3Tk7ggzexm+QI=","ImAnnDMlg6NgEZc6p2JtToHWOClnhoqWQ6duU6KyUxY=","KOyCRGrouyF4P1TNTa8H4nm8Dq0E16MTdp9mLI50oOs=","FuE1cN7/s76+EYlYsthkcFeMsRKWm8bu86EyG+/aybA=","IojoO+t5RZgHy3dAjJu9vdB35iAnmYb04vCz5frKq9U=","LbWwbxECtyzkmUYITXXyEJrZcHhagynejiJaQQ4kM4k=","L845oZ6hFfOpFwQf2yZ8G1EDtYh+XWPEju39xTNpl1g=","LGXvBVso+0FwfDJKNqiUxq2fhi/R+X2lRFnF2wvaVa8=","KeY6JMkSNdwApncLnlcjWMGKkGOjQGb4tvVmg8/0j/4=","BUIRxWz5ze5kt9qnZ3/p8jXitcmcXYtV3iDZqmEscsM=","EI6Og0M/fLFyhyODft6U0HMDKrZuLg+225eHs5VZ1zs=","D/m/tBkU4ZmlU+Bw7tlDj/8DPNMUdliRSanmDVBYEU4=","BpE7wuNyMNS29WtEaX1vgEGNfBGh0g2EhOlbBn+TW/A=","MA07dzuaQe+Bj90SIC9JnV2945U4ioHFzjvDzItIgJk=","KfmyiXIf4wAZN/bEh7sw40KzRMcd3Q+VfQLZKV+r5ZQ=","FN4Nu1Cgqv/7OZR2LRSWz1FEk1C1386wZQZn99t/M/w=","BFzx03Yp3ukon8vkgjUZ3rhX72bLOcxmMKOsYVfp4O0=","Hn3kb90jxq65St32y5mYVjItOtbVgDzviLZpPtE1kKA=","LAM/3FcjLmhavprrGKWVDln2ZlmKCpAyr89Yrqdyk5s=","EX6uZf/mY0JBJlNI2YRyB06Jyr49j59Vy8dN29mEPks=","KYjoGptdwiyLPHqdATREIvJIM2TBiZlryrB5kS0lmT0=","Db6lkbZqJEj7+4htELiZ1lb92+pOZmwPFEZeCcyt3/U=","Ht9CS7bKCKyMTN/JjW0/0EAA7ExqhijV4rOxJjI0dV0=","IUMGwBBfNj1SWeIUHpe32kG51RFQSNGshIP8aIpwNLE=","JC4AtpML5YNapQJ0k9OxHjEYdyZacCEOASFjKEUv3Jg=","KRVNASjMZQmJ2ruMoLGN1b6x66wPY/pHvpbjgyASGXo=","JdItVNnILXz7icYapiyhUFBqK/q10wDbeE0l0mCCfQs=","LyPwuimfXAl2wW6zuIMGiSYShzkj7ojqotuMwQEI9cY=","C3Q6iRO9jn5wnmgxGjWF77CWcIMVqYEgOfIViZ9ClMA=","Jk76AJKVRstOwwpiHDxvZhMlhyhk/9+E1a22Gvjbs9A=","HEnXZmOjWDh3YtII3IVADnrPG2X7sT7bNG3x8qEKzjc=","L0ByXR61GK5FYu4lygiz5W2sqlEb34LQmfvu5RELaC0=","JlG785IV1tZjKmUqzm/1EYVVrP99TIvn7j4gb0TufAA=","IZjzsKP70L+rB1eNQNf6A+UHYbqPHysBhhPWWwkfPq8=","GNTEaZ99AfoA7a3EPI4fENkqT325bC2ROb3W+xH+pAg=","BZ7bxVNJHsa5QjPVO1MopdJLbkn0VxkLz9BipYIpV8w=","EpphYUtOnkIeZmfaqbhf4UvqqCKzlU5VEohWS9KxRVI=","Liv+TXsyNN9rYmiL3LLIdnWX6j97d5L7RDd+ceHsnxY=","Afg5fP2OruukeY6YY3N+xUVy9qNV7kfNuCen8g3Dick=","EX25zJFA5GcLx05/06b+mbh+F4HSrhkdARxtZOAtz4s=","EeDM41to3vfe1VIvQ0xIbyh9sLa648r7Ix3PlRWY+J8=","Jb9K4wxE3fyHAOI2mu1/VomAxtSOM7bGNzfIL5QrkjA=","EVP1wW1WCKF9z6L8xf+S0KQdD9E4C1jS93wFgzmIb28=","BBvtOcKa+3AEzumT/CImBc3f5kH6OglsgBPzi1zYW38=","BHzVxbDCpgSumchCVA+jfUTmq+w2V2maEWuE/EKtXT0=","FU7yXmcUhtuOiCGBozGCba57lzny62yPdIowZJqkGA4=","G0g+dPQcJlj6/QgbnLdwnfKImZRUSWoppJLu5577liI=","EtuINC0BS1b9v5Pb+dnAghlss04M7d/soKQJBOK4yy0=","CUQmP8rXY1p+jt529P46+yBc+DX0KpXAM23mxC6lqZA=","LnrG+p3/r4Op67aWbvVGTkQpuYt4uPFBZcUBVGlwtzQ=","BLygehW1hc0neQdoyqOC6Z0Uz/j6V+L9qhFaRy3U7BI=","CiMKtIXngUaP2/7fMkE6pADIOeqFWlDxkWsDxnYcA0s=","FiHcPIw9uG+oMFn0o8QSmK7I7ZPEnFO90lhzObIW7HQ=","G05LxPAo/e0NqlwaCU/soNBQlPr+vWYZNI4d2fzhaMo=","GnOeVcpkTpyg/ygGIyCXfZc4s1cof+bYcn4Q/0RSx5k=","KSgA6EUqVmbNArF1aVD4BIw2eiQ5reo9lC7jwxhc/ZI=","H6Nx2RBrgapmTBH1DNQdJIGpFDmjnA+hMR/8KMRITdg=","KnhpQbirYxpFXx8L270+uaGc2l12xGO/9O8SIAvWzfE=","FSHzA/1BUJ4SLWt2YdYskR+67u6CH6LhHinnDIQ/yFk=","JCr3oQfMe9nBxbJTfl7reUxneCfFZjQYu5osnc7ykVc=","HMMNSBO7/0uRdAzIuiC9Bq+p0hfqASzhLRTgJxMB530=","I70pIrQlr02L21h7HMCMzf8BCrAwQxZkiZpKMjspc18=","FQ+rWYbu9b0f76kqq1ACUw2fVMt+ZWM81cMQVV4LOQw=","GLQ8sGS788g/wvFYrnhaq8cw335cauO7yu9hO8CucHo=","E7tC605zeHBgiJvhdQGLjy5aKKEYHXd+KqwcmTrNZpg=","GribVm3/NqlfgFDoQ0lHQLo0zTs10LfJe9LXBe+EKrs=","LV/ZDnF9ivjVsQ9zhExspQ0AWUCvCVRt6ONP+ZFDX7Y=","C4NtDVgZFCGNsOk8hZiziJcqR5s1yTPMrZhKC2zpS8k=","AuzfsVD6Luz0w0x21W6ymkSpQAOZb+PH+51k1y01Ljo=","I1eNfV7I7TGy1+t5RWTTiQJf79AGUhldrRIrQApRlrU=","HM+4tNk+XgjHxMTzBjVwb8nfdZN1//poNaTBwn8iJ5Y=","HAy3NTRhZLqTMIiB1Tb1iIhz1EQeMIN16Oa3OKHAz9M=","C3Plt44NI/d7D9/QAXOBkcMwKcBtu/b0EHdPJC0AI+M=","BEcVwA5fy5nENRicHsJLPOm4MRQh9bHzhISrdpLGxjI=","HTs2R7jqNF6SzChvG8GLbqOzqFUdC/GluVIUzyMQ9wA=","EES5FaM5olgqbn+2pm8rl71hgvmUatoeXT92TOGrDOA=","GBPbIlHj2QTQ0wu4a+LXxYA6krhzdd/Wj5dvRiKlFTQ=","KAgVL1aFv+V3yU/KnXCWLloI4Pb82Nkhgt9/s7Kzkk4=","LalAoejImm+YPj+Yik55dZtcaYe6EfP1HZpT0/0dQBE=","IPsdhpzRksh+NCVOS0jyIvmXtFJqPT+cn+31HNFnAmk=","G9Se7qrDkn0ZgoKQZaTbQmmMD11f68/UjsO8EFmVnxo=","E1ESs3RIBkIxG2sUJwTyFoTdAk4K1VrgJyisMiaJ5m0=","LJ4kXHGDLGkKfKPbHNqtzdfN05VwvtwUqHrOX3Jv/qw=","GjGaWrOyqelesMEaWhK3noVpKRhqHuPrKHKthr5z9WQ=","GhI8MfmdXqVbxC7jIrfAcPTMwfwmvs6fTz60S5BROAg=","CyP/3qBlyOdeoNO/2Wbf8TbWYCr6lDKEOVkP8+IA73Y=","HIH44BSrJbjtecXhvb+Gn7G+Hq7dh1p1OWeARr0aMxQ=","Ab/AkvRwHUyu/27TJgXMDzVD71I4WL996SI2M1SsM3A=","FgaPyJsziP5b1UGnLuvyl2idHm+XiSXe7VbyrabQH+w=","A72dwSHn6YtUlEG88HO1ZNWp1A4wIN5NGnEDnvJjAzY=","HQu7k9nJJ6YJ7/dsPKlaxulOGJPIjvKlRPtfYpXacsI=","IOni3IiupFiD4T2yBiIuTCHU6OuVQgLyuQwhHKyWycg=","CmnewM2KOZ//EZAqNK/poTMfUa0Tp+5ace/X64WU2uU=","CGfJEIUNLyMPfloDs88NwDJk1bbyZhEFtnXF/0FXXIk=","FFYD+PtaDPVr9xueb//4MSfC0Ls2jeI8afx6lMhExAQ=","K4u3bc6v3UoSvh/JQ3udQG/+IUS3vkbZpWpBDRfadcQ=","CJvFzg/UHZCxqmWd54NG4F6sfQVPH6X6fbkcB/s/p9Y=","J7rXi4z95HomTLY0gbWgOI8TOcsh8swykF2C/rTpP5M=","BwQ+5wPSsbarhkH8/67NEHvLzANKvP1G/pZ9hBf9NyA=","BPXM30A2u3iIkzX2hjP+CR4No3DS8H5vhU9nBJ5UwMw=","FbH/4SFH7nHjQBszNeeGgcU0vMWPqfgKgTBQncCCAlY=","EJsFSO7wf7uSMOkrTPt0QYc6RO29Jl/BUtZQGHg81XM=","DwfFiqclrrcxtq8IfnxczsWjeWrXTIcqdCb763/s6H0=","HRNC3c5uRGn3CpSM4QkQjTsedbNzPOfJojekxeUnRRQ=","BjW+nn6EQ9OyiG0VQ0TSQ9qpV4yCo44lKIXE87sTixA=","G9SSKsdYwPTFC7MDW37UtWGK0LcUq0aLXquYjP2MKVk=","LhoOb4TJM0K01Sn4gYRVSXbiHsYYDFgOSlhjSnt0dZ0=","LxWJvloSdpikeDukhyLkyakIjHye3Zqt+RUrndg58rU=","Jz269kXxGFRmv8mbZ2xhh/hBW5+i4d1vxkNfCj7zVSY=","HBG3bfBCOFzrbQ/iac+hUGlZGeBHtIB71umjzUtOCiI=","FqCYjUI07LCQ8J22veea81OUybPM/GoLtETfxseGc1k=","IV0CVzCtoXiOICTM4n8qU86ASpOi/GBFKgz5SPsDqLM=","LN/bCEfegJntipQYIrFe+ekfz2QyWvIgLeQurJK73yE=","CUbb6ZmN7FQdo5qdjqVEp+RJ4mpPmqh8KMfi8RiWE0I=","D5WJgrQ/j9wsN4XErD5jHVyJ+5TgxySnplwcMhi2fkA=","GFAhsZInSxthlSrSGcq2Gsw7Nv02GIobjBLlbZmMXoQ=","JNVrTVK0f5vG3LetNT7sknwOfUISoubeDqxEohAmCzU=","EJjVj+e1NSPu6BUQsIP9rcoAS1SUaMvSAbCjHIt+HRc=","JKmbxISBBoOQvEgzDBE7eSHM/wKK1QRYOXbn4w78PIg=","Eqf9Cnpu2cDqyjRlrlV88xhwUUb3L3tOSrJJNNu0xnM=","DUKt7kR9aupmNlvwHltgfFKEgImoRdH8/66fR+BxaxY=","ANXRCd4lefTlyidjo30TEJMN3e9pwgI7Fn/+pUsMSqo=","Lv5+dEovDkUGk1B3MdnASSoHfRlKAiEAIqzFnn6kadQ=","HcN2RLvs3CT4W3E/0Zr1W2/K0xG3e1/jAwqW1TNLuDM=","JDEVVo2jZILQBACBdqdUJ/2jZsnQe89Wx7D0ghwmN2Q=","KskQbl2C1OIAslewsiLLMJVzJ76umDT8QoBGoPWSbnE=","FrhSlEVwKH1uAsNaYwA5JjWCDOSIP9CTgmD4VVXGwLU=","Kd+kABYbZh9SZLQVhGDUd28+hit7gjURlDD3Z4oqKnQ=","JZCKXPscIQ86/Nbo1jFzptedznU1rtxXqu6ZQybDhrM=","FID1azpo70Hl6kTf8lSq3dvxnVDw6ZCWX8yJvcO/NUY=","LBSQ+TNeFNv66sZnVZX2sQgHvPo+Sadu/JAy9fU69bg=","GDPwzl3FKdNXan+0gdj3D6biFw0xwQMaJVzYAPyyYrE=","JtNkYaHJ86NlNZDoJzVU+B/VHMQw8lvuLMz1Xi52JzM=","KQJ/D7OBMY+OrBSvJPduFwfca+0nEDYiVvFtvaaakK4=","Ckzejz1C7Uj7Pap1iQNvSZQXbN8HouzD2vtU+dRdmwM=","H77BL+/+CInMSjH8rn2BnOxIJ4XhkN2iU24sQBHahwQ=","GybyOMe7hjZ4K8DuSKkxowknRoQBTOcnFABdmLjYxmY=","CP9N8MAn6IgHuLblXmv35kP6YMZtdKM9yETsHDRZjuk=","IgfBMY6VnkoAKtUBXTgbKZFd4iYpphKhtto4mrhvvCQ=","CfywfoIZNTm3HQoFLTl3mWoJ+EIWvMHkbxGshNXXXvU=","GWn1wg6A8Q5x/0L+Wve+xH7nUzFTZ43S7zPx6R+/mM8=","B7ZdaodPVwYoJHnOMj82vyO9+8NHaeEaw07ySU8r/4U=","CemsTFG2HOraLIYeJ2ocBmXxsGkULxRPgMRmSaZbxCU=","CLdOuQsOWzATNHUV+8/pTY/qz9Wu+5VG4eWt9Zq0rPc=","GTUXFM49Lj6T7JAVwC4PoFb2js+NHH+rpRneoRbgIXo=","A8ShW8l0iBOc4cuSj0dFBa1bx4k6U7PPHJuiHVGwBBA=","DYt3c98zW2qc8piwhyHWQCkKCxfVBg8CIvJjx0F9Jcw=","HhTCEvt2eWdq9Qw3EbGRfWWZ9iBlK4vf0kQlFmeu2c4=","IYbMbNxScSkamxEbmL3lDGKigEPZCu9lQXG7cOQp+t4=","B2jb1LkHS0NUZ5J9EYc3jEsXRoWu7KNXiN5mXygSoZU=","Bj9aiIt7zT+K5Aa6QOESB74BNhitX4Ecwxf8HlWMedo=","F4B83C5y8Fszcfzpj97l81U+tM6S6TmNcC+TjPnudB8=","JfPdC+O9+OYyr9y9QxvnrmYBVJMER1ylgNE3QeKn/ZI=","InSkXi1pBkvOZ+LrZk20Wu9PHZ3MzRV73O73quFF9tU=","CH7nk23rd6l7jXRz9TQ2zz+xzoXfB6tooCi0beqEFwE=","Cq7A915TCH25N6l07esy6r62M+zhGA8fhDeryQmd8b4=","EM3wHoxhJjtEbD96EMwp/QHtkfrZiR+cb8t7XOQ4upU=","F2YnqSBy+iu2TdXf+cxKDVvtzz8iyR/pkcxlaKT7VM4=","DqsOFY4vZyxop6CkgyjiEXmkF+sMZbG2F2ROHFLEtCU=","Lt8eoc2X0akf55AeZMDy0S95ZXQdpafH+r7iXqw7R+4=","H8BxN4Y7HTN7tdrBitkSN3OWgKae7V2gvzUGL01MrME=","A3vf9oAlvdy+1VTOrD32ap6ymJZteTCK5BTTQieq+GI=","F39olXugfaZxud2RnyQz3+XzY7dKPBYWlIHFfFtcB6M=","BtR7mSHiUCwquwE407ECiwK4X49CNiz0NnG2Cmnp5go=","Ex1Yy4pBp1PnZ+HpfO9g0AA+ScjNHw9RAchhsXdxXaU=","I2ynYjXZ5pRyyZhfhC5ibzOz/U/V9UOBCgxdIUPtTJw=","L+f4WleZFlRZB/KgIgK4Npa2TR9h6BNzDOvAbQaFN/I=","BJUjJr0m7+1kY31PwPeku1KOOjQSYBJViOdaqoj2LXE=","AMLftXe3ja0Yg3u3DI4pkPMjJbtBj09mJjorY/P5g4Q=","EixoIpO0iS1RJVmR+c+vluJRQL1rNzN+p9+tXhJCMoo=","Ed3FQNShEOSCokVRErpn/7PKPuVHEUmNsaNyucwj0UU=","L2vXH2svOvPUaIIMgKqtcu5Iozfx/j184Bu4kkIQahs=","DWoW0Tbud8NfIW8aoMqeCb3CWecVhIzgR74FakoJ94c=","LnxgE9G+YqeLTAAVRl+wspOgfUYF3KZCIQkJYWSyKyw=","DWu/GLfraErexBJxNXDTv7Nv0PVp+zZHT2lLEbKUi6U=","EkA8+Id65RC3MUt8datbD7f83i5qtIEhKI3ATVtR5ZQ=","FRs6z0zjKX2G6COnIGfHFxc4IVDAgMo/gBK7C6L+1Hs=","KhOWcCBjxi4HxRK51NGB1x2ItWgafkf9EUz7aC+vT5g=","JcxJ81CPyhhzpvhbZVC24QQdkM5TXGONK1I6Yd14acY=","H9GDJ6BILDlHI7FSyQVEcpz0BAvM7ZToo34cnjB2g+E=","CydWbOAr1M0ic/1TEzbA6/5lpbDaEjyzG7yJUz5Rizs=","Gp4VPOgr8qb6DXHRiJwktfER0mLILPNFD5yoBgjsFf8=","B8p5TVrE9A8P7E1p46PNH0csdEbk4n/B+kzc3IYFrMc=","L9r0THB9gonak3NTam9htmSU+p6eeC4OQQQF77r1BK0=","FU18fpTuBqQ2/fWbUBt2O+jcfxKu7AdSt5F5Jn1kOnQ=","LHU7d3mjkJ+gywaVqfM6ZzUyv1zzlPQLuNtexft6ZO4=","FE70DfeiYv9BeV0JWQES1j/q51w1M8CrS7muQ9YSAag=","IsaNbNS7GBY3kSdKKLozsNE44UjW2AtGnW6VGX0WSIM=","J8o4y+iy7IqSe2+gEemCMj5W2pMsJNcwlRd/5/iql5s=","A2mUwWlz6gEkQduueS+z0GsTmt3XzMDA81O+M9iHPqA=","JC19G7jtNlgDUDS1Xii0MTjFbH+pwFhpeAVqp33s/To=","GUV2VHAnxCJOnPbedipRacpcGKxduQEIvXYCG7mwzvI=","DoI6oRYk7lcfI9oCHU15kFY/yYmKfQzmhOU1/sefzdg=","CChYpNsoORm1bAvAi4k4ZyS5CGikuhcLscz14RIgXEw=","AheCJnWvrD2kqRN+CxclMohKpnDxQtpolWnbJPWw1lA=","J0xhTC45LO6Ja3hQqntv6VK3aBlZ+/15E7Q68PWFi7Y=","J9NVcoldYe93mUWS/HUlH0QOXRIBMyUgSThe4b4lquM=","KzkazJyORSs18xyRvH3ifgDT5iVBPSf21gw50Ax0v3o=","G2MgzIrNmMksqEmls65S8t42hHTc5yegBp6XzApUa1w=","IoYHXmqW8aVfum+Es8pJdOhwFoZK7WJzX/DUKMCskfQ=","GKraFxgi6OHcPadpF/7RY6Uju/ghI9yY9MCX4X4R3qo=","D8P6tF1AX6cV7jrEonnHADiF5SAj5uNuXXHwXPXzA1o=","HOmVCa8k4EiSXqrSbSlM1VXNEuHWWIF3fs2mlKXlKjI=","LibBfJIRY7W7Oq0j/63UfdDcREm5TJDqPrTk/vE49yc=","FRFqfJLm2dRvt/tRre5ahiqi+nYsaQmRgErqffXP0/U=","GKJqCAD88oiqfpjwRzFyEOZlbIe+kDvxmpLnwqSZw5Y=","ItekDn5MHnbb+8zhYBwiRpt/v90FWj+VPPz+60eoXHs=","CudxSI60vxB82jBC3aNJWJnsX8Q3khUI/SnVvyGAev4=","FxBOBECoEqM/gl/lfamd3hPBvT4Q3o7JZ6Xe7iNM1wE=","JoDkr8k/u+uXLYQvGPo6NeHOgizgKmKcNpbizbKJSl4=","DWT9qTq6XDhOs5v8FEvqV7E9EbJ9iTI9KuJ0j9VPFtk=","CurMY1E5AJZG24lBQQyBngh6vGAXCbH5I/BOpntfWPM=","Coou0rIVj+ZEO8OxF1TBRSHbGTM1YWx4Wgc/ac8Vvzg=","B7EzogFznuIEyB33iyChPgD9jAo4aUJ5TCkYeqtic7w=","EY+8drf4YeAumuW6UWlgyRFCrXxK8RVj4a3/l/hjzrU=","J1S0/0c2gfMGnt+r4h3HX0EjoMytVZfUJ3moEg9U8CI=","GQNgoDZmhxSDdnX35Z/fFfpXY09NsMLCSoDSaVHB3cI=","Iiki82cLX2XPNLKyZltAoYfzwwPHa+1SAXBzoKGNv1M=","EJ6fwgrPzs89R8BK/fupJvMOEXKl1QbRJBgYrunMfFU=","FiE7Qtyd1MnvkVAK3y74cIhReHN03O7k1FpmRaOmmzA=","JAI+pooqKwCKy8XUoV/NCUK2fOlSsOGgOtF1Bm91WSA=","JHQExI+qBubHKx0FC5Bfo+vXdFlrTP5rtNV6w4BwhZ4=","HYaCMeLfEz3AISxiSBec6hfLD3HEzYJ/U1OAYjDYkWs=","DDFHSVWcE0iG/BK6Eybk/9wzAo2OrNNB9RDx3qK+N64=","DMHDO1MgyRG0fu4DxNluorJbzSbjcR0oyxUsvFuH0s4=","BfTDYF6gnUtzeyn+6H4cK6dNMyvBnm0+i6lH8Os5maw=","Bb185EGjpyeGMS5jhmu5hq28uEewZHb5jGt/i48EJFc=","E/xMDpUCge9OluymA1UVL3wLM14PNrwc3eXzlS3twTI=","FTwvidZoHn+U31Ebnxk+KHaIT67hvTrsJruTSToGTwM=","Fvz9bd0kK+jNSYJnjLq69AEL5Hl4dk7k0U6VLcSjoRg=","FVQ10CszzkW5w7bz8QkJMPwKn6mXiJJ+UEch6gZoz3w=","Bmn6fUQOOgbbb7gMh2o2JFu2k7t5YGRkIWIfwsORxcE=","K1ffk6CW541/FOsReppcXvadls9FvIB+Vdib+YDorHY=","Hop9GaZ2syY/hahILZXQ8+dr4LblyawQehL7nmVchxM=","Km3gve0rvitYZoAfiA5H5r+mkAWgwYWJfHLvtWvZioc=","CZ7Toq4/D20KZ6H3m1WhNb0GbMMuWUKj+iVy3hNI+EA=","Hn184IRlQhNWXW7iG/Hyez2AJ6L6qBBRfvvf3KmX+/c=","LnA9+9yG9Vhu36AiHIG7aJkUMhC72MZoR3ZKpPY8Zbk=","BQWww9+fkpWaQfs2xy2Fu4JtVnJ5j+dIJXK19B83GU0=","JtH8kgq2DX/E6CYFb30Zx4J1CH/5EW41b94wKED/06w=","KzQ5wWsa8nvXpMjZ3caTTnufXhCq58zkDOapN1BtUQo=","HkXYa8GE8OCGAg3q405Tqw7nEjs6EZBHXG4l4G+DIVQ=","I/Pi9JyhyVQ0sDQhVhcuZdvGyfgyHMdenxWmbDvLCcA=","HYwuUdtZ1ulu5p9oSA0fjkjAO8h2zXkV2Ii1sKEaIaM=","Hh3DVGqGAyzfi4v3+UpEcwtmL4pWrYYuoSR7oqsPPSs=","EUfoLADfReGC1Ba4M4/64pkXjaX5LY+fkVPGleeFlEc=","C+lEVrmgPGy/q52KNLQR6R0gyxH1Yk+us/ePOCR+kLk=","DEvZo6qpI/ZJuc0cvXh5V0smb/L3wMBjtcRNa0jMo/c=","BhmMH+QS4liHEVtU/4frTx4ocdTPN3lpyhUf7V17Te4=","HukKrmimvaQsNKeX1NMfeWec60G1h/YZ1iDh9RCLg50=","EapTYLWGwhRHcRtJch6fT93GtsmLV7hHctb8a4vgF8o=","GkGmc5D5IvEM26qgzl6u9h1mtnMIJeuYok0lmH6Hvlg=","JKKZfIMvulSWGJJq+8rQDOkgeIOT3xKPilQW0mIxYVw=","BnA2yvi1fapZrUUUdziY4bIvjojUVLwfjvDILMk6J3I=","LxjoU/m3t8SxtMPw0aJXCwNf0rQjGlhBOa23oRIhvDM=","Gzh0FEkjlDvrZsqLeY0LuPK+f43Z3trG2R/FueUxhqE=","DvWEn/RYoR3EE6LYq+qYiMYiQcPCha/jobFM9xV0w/4=","GWo2ojF1P/0MCUZC4n2AuiAaVJr1hP+ppwqAJoF8pmg=","LgL8Ii3Vb+ZWijRa3TwdV3iYo2GEfli2dXbxLjA0qMY=","I4O76v05HZaq8Lp0gUZ4Z8Z605Nm7YxDtCUgxikkUsE=","IN4s1c5zPqAKfxZ/aGrmcZJjcyHMnw9KpyFHkGdqP3U=","HxvOM0Oa+426sTVLRqW5zrGYC4NRQJXWXlE7eTUamQc=","BXuN6djtWTtdIUMCzojuCPGBLvU87G4FuuwWDAVNZ0c=","Jnd6y9iOkyslUveBPmLzaKuLHWJraFUCJToQyAUKSlU=","AVick54uPv64y2wQNHaHkQH+x6Uwyhj+S9Lwlv9Er0A=","Kja3nYfJY7H0dZDsxM1pFCNGpUrki8P1c633GbTglxk=","Du2HcItbAKQq8+beWNTN2vIieL4O5jRPKndRMv4Qeg0=","K/hP7WOhFpW2OXJ+GBEawgg9k2zmS9UaMt+p8bDnEyU=","FkpgmAdZQcZGcxnCNyRjw+x626b225pYrVmmePjxijk=","IFB16jVYoXsMUa46EH2JhgnjzV2C+N+MP3SxtzsIlz4=","Hx48dvxp/YrPo6m/0K9pXBDCvNzm2PTR97dtUEGbQ3Y=","AGmYKpslvXWBQ5e208ipB4Hhczvlf3Vz8v5E3TVhjFQ=","LxdYKUFIG1SJIRvv1LwNykPUQyzhEVOg/nNeVUdKI5M=","FkUx6rOAv4H2MT8y9cJVqbrb1O23dn+ZDEaw/b6fspc=","Ax9GqLRFX/EhvBhKHDVR1FB6F8iIkx8+mdNWqaBu+Kw=","ETNNuqb39BQNFJO9GIx3Yo3MeCxf+C8ev0HKCUgVdBo=","Ahix04pv0R1lZqUv4TbiyC3iKWmOVBSza+iZfwYOiRM=","Lv/KNpzzT3QkjjeuO8dCmRh+FqdfLr5ARnBgUA65PDE=","B+VBOPgowkuYs1ETkoYa6cWHZVD/Dud2Zjw5l6jxoRY=","KX4ft9pUl9Pb0HmKFG0vq5rFsOeQbYWII4GHt5UAH7E=","FJAWpxf9hcx99/A5ymsbiwalvb2jZaM7sK4iiQDlOzE=","D556IhJL9Q2U25Ix1jaFEi+S21JorSFIulNNyFO/xU8=","GjUZpi+mkrNxbRG4jp1iqqDkO88Dx+qBlwsdgCqGe4g=","K7Z8XWxIz0WKKT1pstHUT6fCxgiOe3+a3s4/hz3t+5U=","H6cT3eOQPkHmjwmsLzTJsSN6RF1RlcXjYcW8ox7fqXI=","IBmqkq33teeV8OU5aC5LObTjK7ZSDHERAq690MFRaEM=","IlO5Iz0EevoBjEDEn+n/H5mUMqnH3wZiGyUEpG8SDNo=","HOoIxJMo9fBTxrR8u8lVkiS+HYE1SRGhiSapjgR72uE=","EjrSOWakLHKXEwlPw1LkZuJkavmtqsIP2OWPMI0nNuE=","HvWafiZkd6ZEUn6+zwu7z5LOX4DSKA2vgmYZt+vfeaU=","GewddNfzZy+bxmvprED1vnAre6yAtOM+zrWS+G1d46E=","JCZGxD1/KM84yayvjGOxsz/wfHeMKuaMVdSJOpJ6OkU=","DiyKYEVT2zuBmA/kDYAcrMz7y9eZkkMPy1CwSkLL6bM=","LnfaMnyGm2P63zgk1xiYPyzR9/iuZMiPXopQCjQFau4=","GRyjvp6sxr5ICLwWaNgUSZdCoRZ3kuM9cNNbX9CsJzY=","KibhC3FMjJLEIzE2hzYBiFC0ig5d55NrLPJe7kZjGWQ=","BaprLiW3zkwXBCcIGgEZDyNkhy0B5R6WmxTZhJMMEPA=","B6yzkE4szYesXZ17a3t7vN44UEkzceGxC870zzL/IIU=","BaqcpfIN/BBMhesrzYDf57/mnULRukQAvPDYrVOhjAk=","BBGgtusJ//vpZodmg+hquWUoAYaYX3L6xtoxDoAXXdk=","HhZWgqVitt0pzvhQsnWev4Ysr3HjSLQgJ1U6sefwzR4=","K2XpKh+R44sufxkuvwvGDNIk7HwcZ7ENHl9jT99Sa3Q=","IgjqfR/GN2ex090ef8/UsTy/qssPn1MbNrC8dNNkgR8=","GscYoocQX91ty91uOp+DN5Hnw0WJG2q0dg5uK7YgWbQ=","CYCQ9yPep7kn7cNqjuz4RjDJLQE4+Q3FVfakiXH1Dms=","Hb4A+qM0Ov9y03swImAUO/tdTlv6Sgs9CmIiPtZrTW4=","BkLDZRgcouw+Qj1s504UUGikP4jOBTV1ouvK9xiGCZg=","JFYR0NgEeiTbPXgTG97cZ+NF774+p/bHpPy9PGQiRus=","CR/+PVGVJboIDh+rVGcJstxioXk+OBHsUWHIALSH9U4=","KmF+1YhyLTrPSQCz3FAVckt8jO9FjPnbSU14aia2nk4=","EwKGipqztqNsztD4D1PxoTykNuLXwPmtqQBAr/ugqMw=","HZA9r0MAdVvgrKr567RBR5W8P7N35ZA/ie6bPvrAUqs=","D2cXkuxri70JNqu8A50qho9SOgBQ3AEi9dlmmyY0d3A=","EEWkJBZnqM04B4BnlwsC3OnDUFSjb6Uc2JLV0hM88nE=","KNc495wHs10t93LVYtVDRt16Qb0HCWw2wiBDIKZ2Cys=","LSRbXBwacy+Cg0Ru3n6EbzW+nUnLTz87tOXh/NF4nVE=","JaSZyhkHY4NR7byDbBSYunyPLhS/mfC8K4uGu4m07qE=","G+P012Y7lJQCMHuCuCihX5Qj+b4RXKmsRYTUrHUpa90=","G2frUfrO9YFKMM9XlKldStEVFGmtTYUdDDNm7WuZMgo=","Bq1pIB+UjkdJ75CVcH/cZZECLHjLb6BH+CWkHdPklcI=","CkuCiFSNX7Pd589LvRoIgeXmHZmx1S0Pgug3FQllQRk=","DrSpNC6J2c8PSCxBzmbkD/fH2PmtHejR2NSKmLAFTJM=","GmRaIjRx4s93a+G/23BgGF5aWKa2UaEqiWmtWg362X4=","AwLESZ1B4ln/dh3bMFo2bz58KwHEZXd7zq4aZ+a0EsE=","LBfgt/kBuTYwydqZuu88XC9aZE3OpkRDV6EhvCqkJ0w=","Cw422oM14kPcf9WcwjZZdNDg/6JHxU75YXqA921Blcw=","Ep5zPB3aLt6NOW2F/Wu4tuYTmfIxHAkzHH7y+b6rIrs=","LN6n6xj2FGtnxDfzfBP4Vu7QHV5GTohwRHxci0vvxP8=","KtTwIWAzAY59KlUMLggkMmFPQH+2AJfUUFzPyzHWd0U=","KqxPVCVoNbrZbuwlZkGhD8RNDWP9WGD9R1zoGCdmkfY=","F+JRMsCerY397WkbkIG1gfH3bEqG8v2cnCnSQz9NIos=","LtleSTrJeaCRu20o6BZy7F4fHjnxY+X0uZSN5bS+MpY=","FhzmPVlt5pRD1/VC//Ns08EQwzz7tEXJzztw2QgeTwo=","GT78d+p2AQVHxbzGAKEfHVqAvdd5ams9mg2vZqC4pLs=","FEmjipOM7jtW9QXxuiMlsYbiyiKoQ18kHPpEPGAA9+E=","IGDs+aox2zEgIBgn/N9rXufxu5PVUBh8otu9SkIFp9I=","BI283+L7bFCWjoJalYNXZGd5VGyTNAdI7y4FeUtIqx4=","AwL76bE6Pu2RqCOwtNPjYhQTQISX5sPC+knZyKo29Ag=","A+gZJaP9XyUIFTLymGUH4O2RJ2y69M4IYIF6x7uDjps=","HFSYeRONQ0zzFDUX3ZvyoyIiTXa6Wz5N40t+xJBAdEA=","CBIMfsNW4WlF2U5V6DXufi6R5BAxXc80dfgtJw0W0O8=","EwZGQAYzAFFoweFO4nq40jjYunUUyQOqpZHc3nv8GGM=","I+m03T0fMMN8/fs6g9ReUk9Uq6HAZ6we8azggqtDR5w=","KFs4qrogw4sEWfSkiEMSK2RzFilWJHiUcR7HZ5lPw74=","JVn99Y08IgDIPtH7Tx7tVowiSMoI5XlIBtGEHzoIGEw=","DjPHNiarHtdB5HrFK+Tp9/eRO12B19oar+IDpJ7LmDs=","BR1BI2Mkl6oyQleuUqUeL8H5uokBqSXcRMDcZ3n/VJY=","H7q+0oIIF4d4JBBSsjbwvHrpiT0kfKnNBWcumv9hMUg=","HC90E5U4vSU8PdRaL/uWFzVQpRzb/ip2gnI3+4W+7H0=","FXdn4qf98lwYR1Wy9HNp8s6STlra7lo3ONT5QrsL+VY=","D98efIaJgETds5f+tI5e3p49JPulQg26jR6m0Q2/R/c=","B2noTtF+bB6sQLXgDM0tggQoEBsshLWI7kCkQ6yeCLA=","LyoPUN7R5qs09g+MVpBKUW2vyBU3IbRPGzVhiQwC6Fw=","Cx3AT+ddyzbeC/4Vyi1a1b8lOK7RMz31bhsthhko4sQ=","F67Y0RfCd+0NHYiLNexL09wLgjsq8DfTYj6hA6IHiyQ=","FTFAqmZYbO4jGo8/2GBZdubTLd9DH/M+4FufQpwMlIE=","Kuki4R701Bt7hNUquDX1vIAnvOneJcHOWwu4i2oX0ao=","D4GCQ8w/rst8c9/CHClovmO36TkLrAd3R7u+FnoFW1U=","H2KDijC61u7U7eKrUoZttRVRN8zjJ6J/S2biIEB1AA4=","L9l5V7lGDTQUAIyuglu2EPAYxbUzCf/Sbzns8ef3lbU=","JpLRHmRpXg0hA3S0gqRyZ8wA3y0bkFVyJ81J/DfsK1E=","D8qniYijUgJof/DdppGwNbTpVApTCMluJYI9h4eloEA=","GnQrLM4hyD15Q/5rSSqbiPr/OZDkiGZnD1Kh2zPWkcw=","BzpZ4snBrrKiu4mx+5tk/EKhv+/x2FtuehY7jDv6ggM=","BMYE13s1a0hdIVqf335ew/KWSPyQoYbJflEhQM/F2WY=","HTgKrWODvZ9cS5+0sSfgdV0RmOo6lp7+XjvPEtFniCo=","DLB8vyAZSTCI4X0Wzp0U/EIE9nDWuOKxtQHR8bP9eVE=","Fm62rVhV39PEXiffkVSFPUsIdBEsRIn/eqAFDkH7uhs=","A3KjvrnbNgMbfwxyuvHlPpxyIHgLJHrtgu4gee+t7tw=","Bb1lUgTVXMa2OQvBZQMBlXpnb309YBfGSWrQMf1fezQ=","FEF5GZ26E1zF+ekbdogPNCpOdLjuZhwn1bZR9FZWAhs=","Dm/oyWzpjzzJfBGZO1CHtV895wvtYycw+SKZs8Mroco=","B6LrWIY3VRfTmb+r5MfOXAPt6DbESsK1G7PjWqlXbU4=","B2TsiWuno3T1/VocvtiivmK64NVyY54Xv/rSRZDDuJ8=","B7qexngctHT6TWIpCPCaAXZ6B4XDoUrFuikyjE2l9PI=","DDJbSYll43cCQwEtr6DdT7A2pAE/L2fzUPP8nnQEkWA=","IZ3TyjyY0WEzk4OMc8iKbGUCyiOzyFtbiVmilpHjQnE=","DrK0X9UY9U4bDUglAm//3XZIn2JgOAr0Ddq1/8HFsz4=","IwW4tav/3FUs2WlW6/pFajazXSAL0+Q84WXrOHEaZ+o=","GnyxHqlGP2OQq7cHmHYVzr5ZTPIy+16JFEB6Q65XuYI=","HmfOBSTRB5IIqU3CVIPZ5rdCjUDDYwW74Ik+GUolsyU=","AP/FOahTd4lwQy2GMbwP2wz2AgtHJLSe8DEZDcS7ESA=","KZRcnKTDnUVUDANcEGeKPy9Ryty/GbMy91zh9GtZeK0=","GctAEyPb0/2L4dqVTAKR1nEkh8aH3ZZkpLFn3AGARFI=","KF/YatshkIzERBJJ/QBcsa3Qsqv3Bsr/QhknUGYZ3Eg=","L6q/0JtjqBwc9Nv8ZDI9jBJ65VLQAzmx3ExZscx6tO4=","L8dTnEBrzib75hUXubjv02FxEMjNSyuztKKzOemFfUw=","EpbNCJ1HUOVcHAHXaLXo8h0rwfrXa4QpQPKT7AvCrJU=","IaDD2q9X/c8uiOvU0dGkTqpGWkDPYLB8wmVJtXeh8ig=","Gs+X9MrMl9iI5OO1rQLdmo7lEUdeIemC+hzlBGdRGrc=","CzVWue72noRH0YadEobg0VSCES0j0OvX+LvWHENd9hI=","C4LPXi24uIsys3l4sRdvKmTaK+pxiUAF9KyxzmpoS3A=","LIrRrMdjb2WhK/g85orJKr3p9FHsoVBRQT82u1Za4+c=","L9zEZJnPsRAvVUCAeTZYIoySrkntfYFHAK0eE+tb74k=","LI17kyP+MOwh63uOC4gkj73HDwR7W5Fm492KYL0qjQw=","DR6/lzydJqZDYmIOZbDKn1nJ6XH8l1Bjca+Uid6T6Rg=","G92SkhahBbE1HGBHtDxT15hmoLZT0PRnAjPp9ZzWMNs=","Fiq6JGdQ3NhWyXWppHOnySG2JWmSApNLCh0p/9A4/pc=","LmgdsOdMO2zEmamvviIpyK/eKTLksVIoZ5tUD/ReLqo=","L8wjUTR5L7SoHaDB/9gITLjNgJkpPDoSlQSAjT7jm9E=","HrZmGtu7Chd0xs8WN/oeXiQ5n2aQpVQW3vMkHO7OdKA=","F0BFxy9oSIOLKginoBF1YJew8+0lTP+rKSbOFZ6fVic=","AqBXXwnzKC+gfptc9VOJk/x0xO6GIclfuyyi5fLcOhE=","KC9irrFn71lj2mxvqoZxEjIlrZGyJ7iGtrmBrv2soMY=","G5q7uBvP9fFwRjLe9tmJ5Qz9vuHSSYAyOOrCRDUdfrk=","GPikZp+vnP8R3Rnz1zw3dI+0Ym0YM5wHegblxcgQutw=","Ia8N5N38RJNo21m+npJBGFxJyElu6G0Rdb23pDEIaoQ=","C5oeyf0hy5Xck8CsGRETWzpo03LObanUVdgKeAsV+Lc=","G0E/cJNYAI9Ew+YId9gQoIHZCETzZ+PdCnu5zBGNxQI=","JLTvtQKFdYiP61uLWdQONJj//OofNQgmNZv/t/1PMdI=","KxHt7zUFqdrWAAYH/8vdAniMe1gCM5vpzXTSuldiARc=","ICJ5cGCWzUL5BiOcQMZxPovYnv2fY3QSmd/1N0Xe6N4=","IH7Z9/9XuxfSePgzthz2ePUsjjIcxrzjrwgEp8FZIF4=","BQQcCI1OY3QxsqSbqjdyqbBEPzFh/kZRWujTrAsOVR0=","ABt8e8FWgiWa0IgdzLzgpkoCWcWeo8XgEvmVNPwCN0o=","HsGXEWI+vEnvTYVzJaqd1++1+jzXrVDz9EzMqZEoyE4=","Bssb51F5wZ+ImSDqkxht/5I+LCFMUKFFUYg3orAcqQA=","JxKoIDl2kxfCGyJaTgukXfY8r7SCEwNmTVszHSIhjYM=","HX0JaHOHNNBxCuhRN340DbsQFCjXIAtzGt87HCIPOwI=","GAUCuuLaA52F9TchK63j7bVvs7alVn+rHkBhuG+j5m0=","HD8aMp8A9vcRWl+ru3Ome910ys6sDlpMzyWuA3PpITo=","C4iAOL8eivouREufR86/KPQoVNGpFgjjnbzahyvelgw=","KgNucOKYfYVFPtej2aaNV0rfVurhIU3HdLqhBliWLBI=","A/EavVUeRNm2oPRED0cAbpjNkAFFnJZy5vlqkuUCPTw=","Hw+gS81jt6K/3IcO+7NpZvVD4jXJ3Vs3HF6lwmqnuc4=","AVTiu9eWaSuJQtw3q9lTTEhrpwvHe+IedMThU4Hhy0w=","CgUls/lqdQeJDn9l57WTiG0YyxR09duGUBpNsfugSwo=","BKRzky5ST8DmBNXunPO6nvjVtGOhN5/NfWrxTb3rVNw=","IRUNEccjL2FWKOc5L2oMk0jHARWhoHuIc20ErrheD40=","DHGxKo6KfY/StOqbWH8ccie+HE6XQNs2z3x8Xo8xMIc=","LZTNvgT393xa8tNsN7u4FynZUav715H+4Ko6MjIaxmE=","FORcXisJ1tYxzGDFn7XCSwpXBBqsZLSoLbC2NgD1WBo=","CrxcXISJeAKDwTnDbd36OfiO4GAWNu09bkzBS7Ox3/U=","C5N7oVE12+9zZEb7SSMgbIQDpCqADCbmKEqTuyM9XDk=","E4aa/O+DCb/UN1JhADG9DRVfD40Rv+mnFURS4r8IQFc=","BtQs71ri7DTkl8WWE57x1QSgzaJA8XYjNfAtzVjDg5U=","FVQwjMcSTMvcBP+xu5f+HoJ3s4b2XM8si1YU40MDGjE=","Hk+8TD5PV+kK1QvG56ELRo/PmgqHopDEhziX5JeRORw=","CNLKW88A6Xad/IaNHIbyiOQKMcqDloUvOXc2mvJNcLc=","H1u+vkoYhDSsaZM/uN9QULqJBwh5l4+kt3h7+uf4O1Y=","EaLc9F10BEXdHoLviIKYE1Vaz3aiGQJMpwAlASQKDkM=","KooS5osfy6EOCm0ahsFKENJuPHQW821izmIXz5Z+HGc=","BFKEjTwMAP5g1yE4BlDISc7Sz3nTBEgggSIj4UZkfzU=","KkelT1n/InRVl6z2AHVHWRE8p9uvEdnAj1B8Rqmqyb4=","GFv1dHJWLMpF+HrBsa6BIq7FjO24MSgcUfN5nwfnK40=","Ds72SJ5wmtXFh2NrO92ce26FdCF1/4br38U6tYjW2NY=","Fgiz4mJP/CwAkeR+kOWsPJlicTxqE2g/1VMXI8uziJo=","DT9gdGvKV+XJaDcuwOmHUQpkfy59NEFbo3mJ2vqUxgo=","CY7PBIThJ6pnlSPK0UjqInI3qNn/ndjY85+1gWLDvWE=","MC8Q4RwT83ZyI7xQGl+d0TD+UXtifwJI94n7ezCsEF0=","CSRxf+e6v+lUGzOG+kBFWgF3xpcxuvIsCYLPdieImeI=","FzgpZbp75wnVTXDKPhP+yiOyK55uWpGKnwCPR82/qIU=","INMAENl3+dkSvnlzd3UXiqhB2XISiqqV63sn4WDC0rE=","BZS9t4s7aZk0SWCThqJR+hSsU2w37QFghImsHHIcBwY=","LO7GwTwRu9R2ZIRDIMz97uQC4K8uyAaHlsfDdTMwr/Y=","J5+tqD+DDf2XtyiOZwRZ3AeMds8GN6iYPAYX8ntLNHI=","Ap1ZOjESw79X7Iq2h9g5j8J2/PHUYqaCKJJzhTP7RQ4=","BxdRgfBVTab/6kqGDAMSS41Qw65bWaFn5YR7oz0ZwFA=","EoDLe96brBw9f1V/J6Ws6tbkp3vl3D6CIQh+SmziPq0=","GplJWNRMND9ZSJBWuM1yVJH/VRwPRJaXtUbI3Py5C/w=","HwBANOiBDB8d5Qe37thCmDQSq4Rz4rAPx1WT604/VQk=","BAX8x7dZuMow6Sc4FO+zUMHlJULTOPJMR/2ZqUIHgAo=","C4clRctczHPSILu+Af45lA56iSmwhGAlQSMIB9r7PIs=","KBn6zKLNbMFqauoxkfgzwtNynUd8c4NepVO+WHPOJzA=","Iucl9s7PFldUzhpS/7rqd02OSF1my6eZcjJTsmtoxT8=","AdEi5GVIYcSz92w7xJUpqMVzx7DU0+ecSOOkv71izRw=","HtT1ZNFH8/qjgzagmFAi1TfTRSG1Eck2C9zRsp+JovI=","L62ZEsTK6l1EBRfw5WiGlaTRaw53s9w/2H+GnIPludw=","K1qFYfDcWG1uO7g+1ewySO0MCfmzA1JHHysLgDId6uE=","GG9NY7AU3oyep6sBp5q+W5vjgI5sqDRBMvYPVZWjPVc=","GuXpQPxdEpXTJFeoQFgcO4u9oBFbZvf3ykKYJPruTRY=","FK/giArZL4FikqRSzQEThGMtZOoYOZedPWfUBa8yd4w=","Gshp51S+iwcaPunGSvSQlkObmPRLFajG9PWui3WjhJ0=","LcKaGjF0mbQ6Wkuhs2ysFQj3lbzEQxv7DqcCjvL9Mqk=","LujQOv5DwriFmfCjW5CSauZRBjficzrA9pRtkI3lExI=","Jm2A+1wQsmVeFBd3CXBARzzVpN7akiW4UlyUg23VHrk=","Lk1m9lWUg/dvH1VoLR7bVsjD4U2vtr6zoCOQVE5Swi0=","EBI67VFCWA3GdAjjN9THc3idk+R55PtEvXMhjPPbdQA=","GVJvJbfr4sRhOV5m+Gb/uAspktU4gxAPDb/GfxMqWpE=","LnfZaoc25sOPtnuTWlWDK1EaStjYZiH5uzEyIt031lY=","CfLGyWnUjsKRV2u82Rf9YiwrmOwhu/ot9dVzJP+7Sxg=","DdNgBYFxsCMmyeTEYYyOGUmZ1sRIAIH6c4h4w+GxHlc=","GYpSuCgsrX66OjgAtZp5SixwlJ7ZZshrop2bzDfyk2U=","F+uMjoAD1rk3g+Z70U0SqUVWhM3qTsWNdqg6B7Qo3Ec=","H7nBYLCXl+nU7sx5xQ4mWOwQ0POOzvwePoeGuV/fliY=","AgLDtklaivid3G4/v01m1z5t0T+Kq4kxdMDK/XjIpRA=","EUun8SwOGjsSwrUpG9gUG9UN/HAARlCEpwH0exV2MIM=","AZrT6GrYKjdlqmTqAi0RF+HCMMAqaskAN4lXKPgrM0c=","JU/47J7KTT+ybHLNY6fU6Ym7G566DYv893E9q/f2TgE=","C+jJta7jfvqT7nm1/8AOi3cnQsYBv48jAlKSWtLJpwI=","DHF3U0GpiskJuh8mrOQN6KVjMJMTNqvnFdLB632TG6I=","C4M+yDBcLLUAK1m+ueWCFqJ6tpu8cYjkMCEx4g/une4=","F0ruMcNrgaYhK51EYGWviACmDMpeqhsW/shcLi/5dOE=","F4Md1AbHeFpTZNOTknfanrW23/Hlb6Nf8YUGxksqi5U=","Eh4cG9t+SjV0v9HDpMs5lKxJNv9UsHyqCnylPMCdxEU=","D7LKXTcGb9cpJHiRdJj4eIvuM9PtSQRSWkFFvONf/xs=","HBMc+KHVRAM3+hPllc9tQsMBYEn/rAmVfmnQtFAef/Q=","Bw7ksvepCt0TVfnNvDpVf4SqzGSGNLD/SPg95PdqWFY=","CsBcmxPR8oKBBTsSrxmHdvPJE11I+V1nyTFLLEjuDdo=","DJWhdr+bN+Du+SQmzPrdKWlUwLynlJKSJc/cQniWFXQ=","FmNaE1EocLcvqB5GSEIaIhDAspv6GjzJ9BRwqRiERF8=","DNwz6xnyEBe+ikzws3trEvgB6lxM23ejTPF2rYW/pu0=","DodkWXcBCb0xX9ky6nxpyWzzFONAPQ+T/bOv1koVBHI=","HyagC/1ne/5XuHnHHLxUypE6R5HUsE4wQ3Zwlm2EADc=","IpoXaSyM8zdyJUJs4Mul1h7V99u1ox3WA+rfoWW8z40=","Ia5xQJQ5XfZSZ6y2VJ1YAhnESb+Gwz6095PgdHpkRfo=","KvvdI1x5Vlvi9uLNsdUnvVaa3/7ODLOf4IvJ0OwuotY=","CpXBGvPvegxYXr0gaL36sqEymCGhe69lpqB0azikrFY=","LtgiQBpIWmIe4LBPb3tQrfeW0iXj6qWHvL+HxOwKGak=","EPUiacDEfj2KTIeLp3sJjRp+kT/NWPihvNSvtSCuAbU=","C6tJANwhnRpzexHGG95dpq83XTZAHBIej/6FNdq2dII=","Dw+FMPAxDLL2yZnuLcaUMpqVeUayx2HIUF7OzLL/Ijc=","IBXLjzKszqsUTZaBNuh9Z8wlF1KpNkt3WYiOsYAKJUo=","BmAZTYguN4oWe4cM5wleWtEZ9m/5dGXcySnLAq62AtY=","AxK62Sdaxn8rs0YQv988aYnonvGL/rOlr1o96tq94Og=","BcvGjlsFofw+eEVp7zJQEfg52tOA6OB3QtwK9RSASTg=","I+ZoithGkLL8wdFm+mchEF02lmzpo4Sg9lmrAqe74B0=","JiAXEweNNn1oozzm67gqtVtsEW5TTIUEP+RYz00fkSA=","KtF3ROB5tw4xde8MyG69cjjMzSgRSAOEmMR8czuu8/A=","ACJ7JFay3zgB7WQEdGQlDoGzvB0g8/t5/vNNOPqjl3M=","GTbCWreOVKlHp0Ut1lwEc59S3zJMtIHrmhMGc2Sg/dA=","KqnTU7ivrr/6u6jtCSIKgSHvjNYa0sIMyk/o1dZXcto=","LDfehEXOsObhZVGgglH9R3pXw21JNwj48VAzRuIk7HM=","C2AWtBMGj9gRlgOsCuCv35QoSRarlYJzJYSFcxL8Yig=","HC2kw/ywIVrvgudfZ7YttX9+JheS+2kZU4K4q1ZbKBQ=","DZAZ4Ge4ot1IEpmskEoUy1FqwN2qF3g5WBdwonYWBB4=","Ct2PLhKZliXWZefsgEwlmGK5l2aZeidUSY8cEMcI9RY=","GwTJT7oBYPrxppriiQH25Y8mUTfE5ur/AD3DTMBq6aI=","GbWMOKNo0b+0neiqsUU2gSOBfhXQa/HYh8oh/u5IG4I=","JoUSphkVeb5MUcyLuLncrNRmP2nmDyle11BDD29/19E=","E9JotCwzhbaMVPK8ufckV9ftkTj+38hRgaBIly004bQ=","LLCplEjjiOBPXeTJy6Uvl7nEt8dIbfMjbI+S4WIAlB8=","HwEBMo2J2Mk01yyjbIPeDwye7gbKNsVR2PvuolXNGM4=","FCYvobM/euPXZmcZkA9koThxA+1LPh2ZX9ztZnYHILw=","ATZBIbPW1kxMzbEFhLS8aw90e7tm8w12TQ5gp5bTCl4=","L/2l7T6hiEfs2Pu7lR6DYoRi4VwkY3pqX8RDzGRFAys=","G2qfnHwJNUu48gb5/kqcqOlcbkGy3ylF0u/t7TGZ78M=","KVQYJ4K4qcKqrmdeXYyBo43J0upkYvXobQgXcL6/0qo=","DK1X7BuIBZvabUHZV/FxeL64qTKim2FiZ1pv7n2uFXQ=","Kdb2Bsr1qteF6Wd/uqH4cVsTDpCKp6XW2I4Is7hxZJI=","MDpof1We1udwyahBFa5yZkP6FvSp7FwkD4mBaZ8vjHs=","IxilqADeRnrHQGhI0iun4vKt4f5n3yVc1ionza0YgIY=","Io6p7687GHAdOuvwDHQy0TpnYOc3Z8umfb/qxGHQqKg=","LtTEK/BK63hzwvoU1WRlhTNVPQzINXz9LE3PVDsim+Q=","Ha/FOh3uh9wGHhJDXJMq4fTU9szlfY5PAw63wO00e4Y=","GB+ICSFxH2Eo4t+rVEQMIIetfQI1vspJbcYa6uI12zo=","FD+6zIuUj/Vh1hz/IQ6K+CoKUAhS2ErinYQQ5NLcfhw=","BsTgZ56LTRuCSeCbriI4uRYWpCCUxpvoOTlXCkdR4JM=","FPfNqJu7zXzdd4/4eMjfZuKZfO0/7TCR+gslnHQzR80=","IbQL2z2xeK+5fmyPUJo6VOSXDHAqPJbipoCjvZzRFZ4=","AiM6+jRW9HLN/j9hDQYS8NdK2YQtCtCLgmkW06O0O6w=","GVg4zXYsKgrCN8a7ER0nS/gJAP9rSVZoC95BrfyQEQ0=","CYK4gCIWQi9G8pwJhZZxAgSLQ7U+PI0eVYss6BYn8NI=","ARy8dBwb9I9wgPSRwm0RZ2aovFHZz7bNCBY+Vp5fVG0=","BMJncL/TC+fwhsnHB/KeOKIqtlQf3V2UkdYT0/w21ko=","Idor2D7oAXDUyxI+Mi+GxKovLr+Fy5e7GejXNAzPpVY=","E4CqWbA7WMaNN39i7gs73AbBst8MaNUD+LCpXBcjm6M=","ITCc7GEgsyBBR1upust6pQdXj8fUKLsBD8BvDqNtB2I=","CHksz4jPbkUNE37XtUlilfP5zWN2RUNG+uRxf3mA5VQ=","Cu8PkIbJ6UJDIgDotZVVaVpPUx4xn9DVfxiBpV46A34=","Dgt0jVhWk2s/2PLrHrTCzSuLi+TWMYqCytPgusUFdm8=","Fy+tMlk8N0zu8aQqu9cIVl01kegDLFF+RZXzBkFVro4=","JvX5zk1yFF0+csQsl0/9/ImkjFEb12Cz2dsDubEFxLg=","EOBTM2k0kE/217Zyo70spYco5RSalYKnLBwwnvz3pAc=","HwGpiTTd3lHzANVC0frY//QRdHHKsBXUFGsF8d6wQRY=","CHzXqV/fX7nX8EMaBGZiXNtC3GI3//539boUxt+hs5M=","H5ro73HbzQ1IoSS9Jl03zAwQGMoLRee0N5awRfZaelU=","FXGisKJRWMDF0pejl3FbAL0cVDXSaGwxYY1BKMU48Mg=","IyL98nYeRffPJl5NYnJRlibeCLv15xrxcGnfKUl6WDg=","LKiYD5/c2xs1Ai4C9r5i8ZNVykuerJsv3MN98u0CZPk=","GoiBwzTzlCDUZyxQUPRdkoFCTrYVRXgqbBcEDcfTgEg=","HzGaDcD5t0KePum+1XqWoPL2fLX82SscnNyXoV93Yb8=","JBkzbybcXUmPJ5r5W019EhETfGCO7Sm1yVEGleGkZ8Y=","H1FNIvZyy7FjY776VmeHeCCb0lfKEXtRQbKeBuS9V5g=","KANKbJAc7ExWZ1MR3vEPvNgIjy9o95XTs1UZux+/Gh0=","JsK5IRjNJwQGMkH7kZgGoP75gUyHsHHVoR78LLEQPPI=","A9U56i3cs1h2OGF5HMQ00e7+cxrTJi7ahXxWoG2c+N8=","Igb0lDZAnovo9UKSbZ4pkSG0MhDnHdeXD7QoMzfSQcc=","DfJVmGB3cQOf71d6b227YQzuryBOqsegm5atIt5oNGc=","KDqJjeWiFGXMoyE69YS39WQTqehLUkQxQ20LE2aVZk4=","JqsmTolhEDncnP1LIW30Rwm1TyQY32ZUXDDLk4FORGo=","IhDX8u9D4inFYx1OcB74n/3xrKZDUXkeD+fu1ChJPI4=","B9oK/7R9ZLftxoLavlxtsiR0O1o4XQSiR01S/+ir/Qk=","Aq2CgK5c+Ck2Bp9y5JAQ+NFkPNwpnxKsCW/UTFAf+a8=","JnuJ+E9IReOSRWX88aVOijJX/oru9RX4bMHABW9G9qo=","LUb1w15agc2QL0GLS5PyWr+ALTLVLaBUpe3u4nYUjKo=","IK6OcVcPiuXmVetCpPJ0ZQImrx/hYKlrF3hU1zbyvSo=","AgubKaVkR5CloxqgpyT7V482UFkN3RZM5a9ZP0PHmPQ=","E5DB2VmRlys7jvoaNnODq5f0cUOWY16HkTlZNwEO8KI=","BJc7Q2Px9V2hLU6rmFAS0yvYC8CtuQIWrtlXTanpfFg=","JfemU/xarcSvD+U0lTvIgweiDpQdfGhrxTu+Mk0YTNM=","Ek14EIIfR3gv5r9kp8XqzwPVWXdqJeL2neKDYr4YC8k=","L28EkJ3DYNGt1QOVPBFkj3JusPYS9wOsHjeGA9MzCag=","E8LPGyG3hiOPqpO/v/XAkhiZ7xqylUiCijdeS8AKG1I=","CEwgDxDv9Zv0PPPMOlBt5QDtaOWbzlzd8RN+x9YaTqQ=","BTta1ZAt+1yjbXay+YCQaxTr3EchVGofXx6XQWRPKRM=","I71EmLTAyfJIgi8VtciLx6eNUo070+PTsnr2Azr+EmI=","K1/2Gw4f4YzYTjUsQXq1uDZoPyjfHBbijAi8T9JpqZ4=","KPd0t5NrxQled+tlUAWrh2eq0HbAmLj7uoUh8YokhbQ=","DH9tLq1oN3JWWYSsgZ3CyDJsxNOxj2M5ElYhJiEoyEU=","HgNTLjURFWUXP3a2funHE5U3VwN7Jys2mxS7XSKrZDM=","HNrhaC8sEORA3jLrUXJtnbdtB7ZClnW/rX53jMC+4HY=","JN5AZm9Z3pfe7/bTTIc7fCSY8CK4VsVR+0um/gM+Tho=","D90BZtFcD0Jm7XKW26S2OQQM6qaRBoPuRNN7CGefSCU=","AxjuIlTDiIzkU02QkESLeoYq+9/71EcNq1XJ+iT1CoU=","B6jRmhl5yPo0Ab/pZO1dPz7vGdfk0LoAfzhUtJBMXzc=","KEbxWhIUVvD3S1ByESqQ7MVqSNmKegfzDrVTQkoAsno=","EpWtLeaOBbETAx3oVJWdmFj6z0SMoQFAVAeq/B/lBJY=","J0UhDswlMwF6QzBfzRMHjWlEPQ3aNb4upQ/Ehf+PHIg=","DcJ/CzX+wOD/jL4THH7kKiKNiJy4JUxJAMtW6nhJGbI=","CXgJJc2xQpzBfB5wsLQ3VeLnBgKZTpddNMP8McrBmDk=","LvieyuEAaiD3OapNpph7uGbWmT+onkovvMu5zijtWK0=","D2/qsyFRVqw/h4zmfFlT28Tlqz0THulYJ1Mm/5TSmlQ=","IEnBvLA1y1miNQvOzCpi9P22WBCPBZvDjBQJhXGofSI=","CcUpj2aWg2sqZUTJyhwPZEjg5uTg1KjDqn5jWu0g2kU=","HUjsjXhr4o9xvXGZTaBPeH3Et3kv4lglWvdCs0jk6mQ=","B2a6PzYPnLjSdZPO4diQ9XNQwjUJbZ0FYzmS1HfvJWc=","GIk5Vs5gBzRxTM/rxE9nA29RxlKCK8DCN5fXOpPUdJM=","ADrF5qPANzxYN5vzjIcWXXFqygXhTORynskUltx0od4=","Fx9LPQSm6vfbC4bbC6W+fURRtOoKEzO/qjG+j1DaEqo=","GBlVo/7U/xnZDZR8LxV/BQ2zTIR/WfX2OsbAO1U4OqA=","FeUDrmbNN7OlisZVSaod5ZIo9eWq3qcDUWm5gB5YqAA=","D+64rsbJY3dLJ/hqVbRZTVS0swlV41hJDqFpc4+eYWk=","DdlTH3o08aAB1OvHTLTqR3K5VRkyXSmJ/JMwNcaK030=","IZ+1msIhdHlyvOZveMozybrjgwXhGrNIGuvbndtLLLg=","H9YNwMR23vO2JMIZswVTc9cyE92SXpQL9VztiCMc4J8=","H40H7z4Wy+uniSQZViEc+llUUoAfCMh2wlJdxQTFILk=","BRV0FUjro5fRTmJpsyVmYV0JRHFVurABrG7iBWmPFuw=","JTCzfS3RthZgOfKfsdeOkOkDTLbptlP+dCjXaPjpstU=","FgLoadULKAlR7Ms85xcVYomA1kg5Domv9Q5VobvK1LU=","IziHIXr2crus2HPxKFo2EnlrDL94kEY+3lSIL8d0zH4=","GEmzqp5wU8jpUlKFiYCr6PFkLsZoBHU/Av9j8P8h1kg=","GgBJeAiF4IJ0R6+bqeueZY/9Yqy6yZj2wagN3lrtwaM=","HKnL+oCMqchVWUJa8xwK7D5ZNLarUaLqJUn7wudWKRM=","KKKg8GIsKo5PFvLgNltytIExLY1Qh+LliuibNLjMk6E=","IdG+7RC/+Wyp9hW97ZlnSnMxpS+zVmlT5t357KKAFT4=","GHEU8ru6mpkyl710DCc17wG4WrvbW0fEHObs8vx+2+M=","EdCjhndcbmcKNgpv2VfEA7Q0uhP3LO3DnRQIv6c/wGw=","D/TvL0ar7yTKFdizieAs05RNEpYTG20tzpVN0R1yT2U=","IDOOR7Ug0oFEjz+L8AiqdD90xbY/mKYwoAEIRkuyiSU=","JW+g/vWFPcEK76hlxWUxaTl9VF8HWE6uZeGz5Q+2phY=","FEujYZ1fydhPBjLfKW6N6lAXMpVzZhtpiAw4ykWuMYk=","KYSYyN8x3TFTgLNlH+nH7VqvSklQpmE0vItgKUcqNWQ=","GMr54mSjLbyiPaUaNRT7qS+2L3jswthEVXNV7IpDsME=","GUyBKCjxzb8MTwsEhq+0xdlszCGLO5DQS8XxyGZf9kE=","I/k+HEQRm6hWoQOAwjMxkbMQX1AqYeq92LGryAPASuI=","JdLMmI5HznD6mc8YEFAA0wRnF9g5r1R+3D3pMZaawAY=","HRCDYAAjzM3H2u6+sZeDqsxulCJtAMfKRNr9dVYUqA4=","GUOp74Eav+ZX//klBPKokU8J391bl5kRBHvuS2mABM8=","AfltsTkqOuXL/uTBhj8L3f2VplKZPI8XzhiGnCYbxsc=","EtSBTrsxUzHU+6nfwu+QnNd7HnEmyeYlijyYIdZj13g=","J6KtabnrVpe4W0MeuoXbsZhD88dRgSGqSVFaZe5VLjA=","Bm9/KYHsxMRBXaYuq9MjBCSr/tNWcSH2VugZGnjF3fA=","FuKY9gsmXwb47JIn5U6LvPK0gjkh3rRPBjySQw/EChI=","HBCrOcsEzgK6ctmWBJrWiJYfYPjZgh0XFsWmov4KlzQ=","LNfIp43Zmu3BjI1HRStNWy6cWyEo6zc7ggyovuyXCnM=","IzkayfKcGpntb72bv75ytIhWm/miB63b1OMKOouXMR8=","MEHFWZpR7aM6Y5jrMSMlGXl7AHJnAqmKMZx8y6n+0vI=","BOZJCNefNe13+oGW8HqUjISFErU02b9PMO8JPHl0A64=","GSUekH16kDv6e+2H6wS9kh3BkGLk7Dq8noK3+k4lvm8=","GzloHCwSXK6NOMxe9vrCUvT4I3T9W5BZYU7ME08rKdU=","IXpU3Wjc1T4zbOpJ2Jkl/RKP7mW9yhMWWdMkrmNmlrA=","LAVL9vkXdgIN4/uXBbop4N8X1+Gv5h4R7ajK94dirzw=","H4hhHWwCh85TVD2H7YGCukdfbiI5ie2jXRq3RidfpOk=","IE1amCnVcOIDveSRuGKpaXnXHkgOv/uxPEyzr1Zjcc8=","DqyVxoivqnc6zkhWJSeIFwurppphgQcdHRpODdMgtLU=","IkWgln13esUWAIJWPVgVtE7Q/55DBcZcUD4P/rrl3S8=","G3MpBUZq2SGrJDDL33cqgW0c7U3qaBjcPO38Z//l/74=","CMrxpM2CbRnhwn+XDK0FstSZMbrjabgsMAEQQYefKJQ=","J9gTRCPNmHskn0vtx3c/t7cxToyD2XJ/OiHQ8WLFYc0=","CaLqN7PXOdzXCGLOYqiDfdJnwiop6wUO8kbt2E9I+fo=","Gtz7Q2sjj3RhdXqWZdLcz+occ1LFnlrqqO0kuFML37Y=","KiNU21Nf66CACtZll2HymqsxwUJxbhZ3lYPBfTy81wA=","AQMbh2/HBMMpa7OBELh0dviPVyGhEyunG6DcQWhxmm0=","C4Xp+2ZMw7TuU5k2+IWIWuVDxgb9oAeu0gJXyOTuNZc=","GAZ70IXGDaYwqyTN9Bmv2gl3iRLVx26/2d9+z/YgcYY=","A3cdvlwzQP0omRfW+smhVLbVXWNVevE9m+pxGq/F4ds=","A6EgOBsVlnzeGjOTn8p4MMqhrx+61tbL1GI1khAfH3c=","BAMk+61zkL2Yw1UyMs6mgdSxi+hXkxIY+70dOU1n94E=","KUqTeKzPcjwmJm34m/8aK9txDxmN4WiJDf1zrPeGzZg=","ID2GQEZjMs4MSTOWcxojuF93zdlYgMRX3ZzUbpm/DyU=","DTOUgc9Sqx9lLsiWeol3bpK2qhIFZ5TJ3IVvwn7JHvg=","FYvkIXdHB2ooqm9hfH7MYEXIzlxISq2hl5lLYYs3y6A=","LaoXs1rC6iHto2uwbbQKf6gf5gzaVW1zEh2/F8igXr0=","Gi95A71kPGHMXraEVSAvZhPJwDvDxZqM1/jRCwx3khA=","HKeDX08cXzWqHgBUr7EUdpqCR0svn3cSJ/Ai+nYrpWo=","BDqzyVtkzvp/l+Hoq/nbJdZMIhO/RLAbAAX+4GeAS+s=","Du0WlAhs3W3YQALGk2USDMIxgoMibrfb2cEVTlvndKI=","AxtyaqXdpFb/rCnNOLZJJr5XobbB/Fk6UOfpzThPfvM=","JlLPv5ARD3cndQ1o7qt6SThYhpU/dYMr43XDfqmtZ1A=","JKWNCHrzgabyewZV3nlbanvnNPBaT07e8FcieaKKO9g=","GwTT6Sozj2vuuAkTgtkxQbO7PQMylEE6OY2iRGQnKkI=","KQue4Co6Ke2pTOCKZ1IZHDwpbMLARO274JEXI2CyTB8=","KgEtL0QVRckU0l0M0o+oEEzaKggIRcecx9DzkUaws1g=","AdTlvBgM7cuO8KWdJUmKVC4yTPD3Eo9wfEM+rB7e1H8=","BUZZ8BLsi3V7HSoXWp+mQ+ljI4w0ImSun8OaaddUYqg=","GfwDBeHlsq/LhqdCFSuolasCSsWce1flNSJP+4B9xyA=","IdH9DCr/zmdKsBZmGiFvBhW1ux8/w5henXTdceqGrWY=","JpVtk/AXdtI7x/HjRkmSWBrd20gXa8uwPvqFOrCcOxc=","JAMSDlpoeJW8vle1sR+6DZY+sMhj2Kq3QRL1Eu2K2eI=","JmhPqblUiwiseeehS8KPjUdlAxLwYppAu8zbWQopjPM=","IWlpwiG9w9qhwq25vkVsoZ/LlI3pcl/Fl6xiaWhxXBg=","BtTlQ2LV3HzUie9GZxPBuKcDh2Bi7QNmpHWumsB3bA0=","EMIev2QtOKrz3hWsSg3jtxq5eItZBKeDJu8Jmh65U/o=","CkuOkbAtqUqmIaz/FrvdRPB50psgNKnh3YvicOfjqAM=","KxpbUrXxxzn44WeoVht8WlZ/1Em2HkqqKWXzF3ut978=","HoWKHtsJfxaPELkTDlHVpPO1Xaf61olimPFLt69OY1Y=","KDYsP/ar5PsBdFDH3TRL1OCBAK/loJywGHcmWWeq/NM=","IE4BfULmsyz/IJE2jjRCAUQIVHYaDNRjdmBB1+ONzUQ=","GCMHqm4Gvxsgy+U0kToLVh4xAxbiNUDzXxvJ7kN+kqo=","HuQArtK58e1nqBFkOMy3vbjReYaMH9am3ZSXdE75up0=","KIWQrNMx9Eme/C5+iqJlbmTL8KaMfZKMIiDbZD251BA=","AIY09kmz0lAiohJfXzANLM4svhIt9PHFEpbmtl//F5U=","A8Riz8tFFp2c6tHQcVyM7P/sd+pEmiCIKur6Su4nTmo=","GP1U1JhqLngEy8t35oEsBue44oylGuMj5W2QlHgqMM0=","Abnv4EqAmkPGJMcm6SlL3NO9HpfL3tdC4hc9P+nkKf4=","EJylkbk1DHGn8ohsblViizggYiOlfAeypEkHcckh4uo=","D5gTTpB3Updo5Ow9zktiymuvgZnXjH419FGRKoD7G/o=","IgWDSrHIpm3hvHZq3uGOr2iaUr6uhlmtTQtDe+wilSY=","KSpsq6Bxuf2PtfDkbd5NcRu0oRitDGfnenY3VEvGwh0=","DyGKxjqJ2W6jfWLqA4fBRd8vFJV7z1x7Wyy5MXqHF0A=","ITk+Xy4RIRNqJfBxRly4WwKy/hJKjk6oMYGJGnELClA=","BuItaUZITa0/StDaQb4R2iqlRR/H9M9sxYmCeKZ0e7k=","HsgRfFWQB0opoBkUDv0cYntxX8Rk8desnUfwl5pMWcc=","Dm9dLvgpRd+zkuRHE4vJTDK923JIMFWgVjREoOT23XA=","Fpq/yz7pbX4C+XEercCp4kpHovn7ESHPjG2s2RpbMso=","LR3NgljSxVlTXsYoYXiN6mDdQtf+4MzNIKauQhTSGZA=","H4pGzsRlu6lkSW0lyvmjUb59CaYo/5fqxPzu17/tXEU=","DdrldTAV58HzsH2uS+d0c5jJuYZnqhP4D3aKIgRiCyg=","HZYSBGlyeSA/RyHdCFgkTyzGTFy/GkvxB3oELr8Rr4E=","JhG78ZrduX9Ldhq8pDmZpLmNdYvHTtNxm/ZbFyY1q70=","LJPFxbBX9SwLPVQzhlnwXRVm0CjBgWv7/PkANZO5gZA=","KpJv0+Bmqft192/QKqmZaZmgkEUNEe4ah6Hg5lzSh/g=","IR3O4P7j+Fcf2W8rXFXeETmAf6afvnkhZWP2xXCfcuQ=","K33cKLK8LScY6da0x5DVWDS3eQbeLUzoswGsNdM712E=","F7pRWTIaGA3e/pa8nQ+at/RL8uVRdLagkCm54/2D4Nw=","JeErYyYhOWleUKHpa2SANTpt1qG7mAwg+R/VnlGKAw4=","CV7KNILigFe1QRjabEWj8PWuU9Z77MT7DKLpbiQQFrA=","ERKuuWIr0uADBt+nYIi6h+jZz+uD11a0CstEVOd+OrQ=","G2lQfeg0Us45d6g+AWSBFK/A9Bl0prqWL3fafuA7I1M=","GMNqIn8wuovoNQIs2giR1RsgSdzstSYcAkQzY0JoEoM=","Ay3/ZQKtvz6uHtsKoqFCwjhyFt1QGsqhijVlESw87zA=","Bn6bLfEORj/05l+iHRi457XFXSF5QSB4UNmEwmTqZLk=","GGqMHd/Z+2cxJDpsGQ10wlgHYlT8TYUbtnwVyFXaaMk=","JfEuCQSvcw7GiSASLo1+g+bbfg04GNgqs/UXllKs8aQ=","KSoFO+kBPzdBVkVHJzKcowxQeBt/aDcesIKXSRTML4o=","EoZ7tUHqF8UyzeFX6+L/bwo9PoO5VuYZlRzJmvIuPXs=","Cd0qdXJqJl6Yq0LKDQE+e6LhWyYQBRbg6rc3+3AEm1Y=","E3z9AFTbrmtjW05PnmF1Im5clcReWyVBM0+U39k7Ig8=","DRRjbXt6/RGG8LnVyPjvVRvqx7stNrJUNvBL99y2Dec=","HbyBAC2KXK4f2RBTLwikMjw1eBwrkBvXIrq+Cl9txhM=","JBBXsNmXfqpQ4Euok3AroYLNsziMxjKQf0wggYNNjaU=","B8p1ydUcZb/CypnJx3O8orrXtJg3C11Q4nWojLawYzk=","Ffq280ro0ive3XYGEN1GPYgc74zoL+SgwPhgUC9tPMU=","DPhG5nq4Fbe/slUAhzP4tF2Dk45usNvRnm1TfqpYHgA="],M:[["Am26WK3ozaGI9J5S/OcWe48hnb2STXeGsPmPt5n++i4=","ARoTGjd4w3dCM7xUCWQZ1GPTq7rhgyKn53pRGIFmX5M=","KhirTcR3fhPLg1jBxCMVNXDRy5CVRCQ6vazUVHyOw6o=","FuvXgsvPbWPDi4eyfbKkpa9YR6mmCInEz2qjGNaGax4=","ArftR/rCddNPhC8JsB75QhAU3gQMJqWRWVsie6e8b7I=","DF5J4xn7lTUHPwf54FWsyvPj8ko13LRsq2ffxkjvrzA=","AWHkrlstJM1ji6XDK8Ixe/kNQE434APxBV2aluQG0w0=","Ijx/xtJPxT0bQo7bjxxS0gzuxZIYfSx6awsUe2KSuB4=","GuBg45szjQmEXi6evrcL+3TNSvkmIX9XMr4rbLf+cqY=","BGGRq0HpOSnqUfGQ/U53OsjVCDMo1LLwSCjco+aQmMM=","FLobU4Pjczxj0Awywrv/2OVFB+0zv3VEyGOIGR7KPkA="],["AJgTyAP/hKNpTu2vSxwhcmFSddwYymVMeZpwRAlGzPA=","FJWvA9yRgMiG8OG9r50Y4y5rDRuANw58vldF2vxDNSM=","DZXoz4pmtWwy59EeAQfkHhKXEi0azEEzLxtJiVo8l/w=","CwXxYQjEYWqXOwHYLlDU/J3NzOZ9LSH4UoFr0jTphys=","IwtiMVswvEnXPf+KneecYg4Dx0exTEMvFwcV5YjWBao=","FdIXoxeEdBBI8ybhVa+W6QtarnNPBneeaYhkA5yS4SM=","CvmvvsrhdhzBfUS1HKZtHb3q80HoXxCClY+cty97VdQ=","HaT048Z5CuG4nEEYhh2MoqUMyCpOfx7TxbqMuUS6Rok=","KGCqUtwvlnwMGguUKsgeAhidAxQwwRqRmlqolbz7YVE=","Fv8z1nyFEhvO59gc/xYYkn8ckrTR0hwqB7auGLK3ubc=","G6DoNfR2JrDYJCaQDEkXCovinDnZAzeqX8EHZOIyGhs="],["ACApc/f7pb0h7Vi/5xVteykBDUEJD2PxuykMHV2hrWA=","EZNExTcH8AJDmDxtAk/Umg+K+A5YcZM+WP+Hw6H0i5M=","B8IvlvL1VlPQTtxjFQVnp6BGCbC3nuz6yxSF3Ot7yHM=","LzlM/T5EJQPDoiUSqkt2uVt0PHB2ykEVqfu7fGsH7l0=","IGNRdQA3vckNTz55GGGfxpDCtYV/i/vYbXwAHkzyyhg=","GszqCcK/0X9AYXJccS/Rl2oH53PlTZBtoWYhUgGlgTY=","BeUsD/jASo5ePH6vodCQL+Y+NYmJNLAPQzOzj+YU+RM=","LnCLqviUvFg15f6oEif6jPrvmQhtErCjp/P4W7ymHSg=","CsI/AP8BW6qxyL6akJQ8PHLReBi+etQnxF6z/xgocn0=","AhNHmPTKf7mSgBLJN/N96HQyuGZa7t83Pn/6b+DBPQA=","Ahn14opfpSaJ0re+QyYkKAyUDJv5iDwfsP6Sn3iHPBs="],["EjBerfZNrCSnkTpi2Vrv1F9INVV2xnHlb96cx8g0T/0=","AKkr1qkZ0WBWFXhvLv6AdDylfBDsgM+5JnIrW+1Ai3k=","D3FsVN5BkgxAGmLfj5GG4ZuVI+mGN6WxE9YczDC6AhM=","ChV+JE+TkSXVf5yOZvfYjsD7PAW5D1JrrAhxvKhGd/U=","Ihi+hh1STq8DuUILE2jpxap87+5y0ObvgHMu6dfm4sA=","L5vRnQyMOIen/AFz+GPwdeZrGDrYnxNwSTBBbh1ct+w=","FOtAHBCEqd3NXQCS5dGimaoPVcNRVFx4FwPAHOh9ayk=","E/4jviQmG6W5LTY5ifWOF/zu1KhY0cYfws8rcdvbaTY=","Ay+i8WZiLwV/YalAXJJWIjyrK6gslJVgeSF1WrAY9pA=","Ku3b+iRXVq0eFlhin3R7jadZOxlcyVAyT5Xtye2kKq8=","EjpgVWgQI7FlcMcPzfOujjh6lzaQueZ2G+IvmUHX73Y="],["JceDrWbWofxshHcL1jf2IHCX3/sDeNfgOV+MC4a1Bfk=","HH06ksqkNc3ZdFILtvtsrIFjTMm/TlNN93c24G12jDw=","LNaPwxtn3EX7axb0K164nboq5+mqUMXxkVJ1qBiHGQo=","HUVnwS22SNSpxBMkwDKTJbdqB3MPrXLvnkkKdIZ0mFw=","Bp7k6yC0hg1K+Rr+F4Ezj1OqNUVi7Nhz4OYlr3B0byY=","BsrQwr1DjE26LtZLv3UGbnMUhMNtH2c4tumGAen7SY0=","Hg4WbXNKphTGtT209pEXmEGjP4EFQwo+5wq8qDum7G4=","HIeclCjhlgfWR/XvFBXnb3xZ/QHlKvuASGCBhR+aUoQ=","IVwM1OPxvbSCuT5XGHnXkxvpACPXoiDo+TshyK3UH/o=","H0H8Z8oTIrN7eqAbYx/RkQUoH2xqTTf79o/BtfYoAsY=","Hc42Bir35LAJj1WQYiztevnyjojUds3hOR6zBAjV0mY="],["Ii3rYG8TzyjHOmchbYixb1lY1dKSuhDvO8LBD1oLYT8=","EvuIoPb3SdaNqSUNWt7PCIRCgnJI1n+Yn9FLXJzU1Mc=","AGYpLmTmosZGc67TZctQ971OHTtScPay6ZglkMP4QA4=","CpSi18QJPGOII7CVcz83F21+dHuiRkW1FawqJB/92oE=","CiJhKNodm9WzKfVfUsdWgt7zNpqxM1nct9IS7vyoYik=","G12oOWY2FYbogQ/tAyQ1yqgKm0dtshKQR07Rl3/O8i8=","L6dd7tKB23NPq6W3Dq9Xli+T4u6h09zuNMgasen8wO4=","EoyzFQsVy8T6qxS/fWdu82grUsq/yNNBnf2YEJ0Z7MA=","BScAsZ721C6jkuBEoJTL/DCO6h9y8qNCix5yG/wyxq0=","ItHmTU7hXmDEWdhR7580lek39akJkDgsl4Z8RbeUAHE=","JS50dGZ3/XWEzrD4qmk2vQT5Uo72AHN+mRP+S1aY6yg="],["FhTQJUcncf2HCp6dQis1ccVJTn1nmCTY/hISF31fouw=","L2xOCXu1hRvhK74scSwvqQbzELeASNaVtKrTAf/A0mg=","CKHvZfUhKOs7It8rasowUJsK+K8veIju52bAwkhxGIs=","L28UUC8g2Vip/yO2lsrDriSWdReuiy6Vktr0UYQLuY4=","F860KhnebdMuOzjMKZDmQnO1KlYYJj7r+knYRRjqO+8=","KtveXHtz6afiK5E/meQNleaJxlxCjCOXzSc5I89o3b0=","FL/jMRXfKTZwOT4dyNpNaUesxLYCSeWxyMrjdmZc1YA=","K/UjzYqjviDOfYkfhyensktypNSDhITehCrMeC/YvTI=","AzuTpc8V/7r6JybyUngkoRr45C4B06fuFZsnPKCmUgw=","JJ9Bb65atSpDXWUgEAbdiujVQmbk1WQzB1UZAkI/fMY=","GakHmpiXojcHQlJ2eRK+17djWujKDt4t06QqdcHGuBo="],["ATWL3Wt6UbH1tdCU29juCGzNz7nCf6rQgG6O9xjQ4rE=","HAbHgvvAmAueSTsppeSgSu/GaM1CVdbP4gjp58i5ocQ=","JFKWOOvN8m3ogWKH/sY3BhThEuEMA5GQwQOnXO0RtCY=","EmQcw89Qyme8k7yMGe2J1GE+nigaUc3zE8vIERkiJCw=","KQEt7/sRLrFANBWcWRYvhm1KGAO00ZKkMpNZ8PkDJm8=","GouK0ey2y4iCc6kL74saLPwD3UTgsosY4QdOQEqeD0w=","F+oZjzqyYdoAAVLyaw6w6+CIpwnosGoYo9whCMIJaGQ=","BFqqmc4eBqPAIVCASpEIf1ekO3l5d3PoMhbKlp6HM4A=","JU46zbx1rFkmebAytlqckdLgkqteVxlVG12mNbE+lHE=","EqmWq8hXcCGseIDBbwWNngbpURGH8Krf9rtkDkMW0mw=","B3ft702RUg/NSQoi3Faal+VAoP21J7Sxo6hU/jRrjn8="],["HCAH66TRYphGu2lASsyEVl3l0kYg91z82fEf7us/N0g=","IRhlt/nBx5GjPXA60ygPaXVjJDSa/IkSoZuD3izQagw=","EuS1QI9IZBlRc56iflIQZyQLgqpRpC3i1NwegiWQgYc=","AhhcekrYyyHxkAk5bxNKLD/WFNMF5HXd0Z8m9tSz+c4=","CcSy9hrfJFJmFozJGOlvf438Nb0997I/xkHvAbzHHM4=","KB7KFLvDkgkZ4AEVBFHD5E/xjh3RFxQS/15mPXSgc8E=","BTPopFS4zW341I+psKnLKVKTPhprHUI8vFTQUzpyWZs=","KEzPcIWVR/y5w8e2TPCtYuUXJuyBtY6wHBofjsep63A=","BPpWIKLAV9xVKln97+UKkBBoGQ/cPfh2GZHKtQoBpEk=","LSZAp07emvbJiI5faKhPrJKxMzfa2PxhUvqzS1VBmQg=","Eho3ZCaf01zfHmIcPcYxj0e4YjgLoANXhJ2IQAWUY+4="],["IvSdckQHfkH0CcCzU6/RaW46oV/9tKC9uIP/56Gochc=","JVQuB8HBOXm7FPjU7pPat6PcdQgGzzfywC/1O0u55m0=","AIS4ixzkWYtwHPlqM3mgKjFX1Bk8io8RV0WfajTsMvs=","L22jhUUJEc0nLhNgHnzmbCuR2AkwdJL37leK401vX7Q=","GAK5flS/Ool4Yyy+EOQpcFsDaAMl0m6hkMDx68c2LqM=","AFTMgcfR1ZWB680msWzL3L8ZaNd/h6IIHRMFT1ERj3w=","GWgbQkLRHiiqclMM8zp9FXGfGoiP/2JeBGUsd+4rLeM=","Gr/ksc9dsp1AeOUom7FDSYq7vcmvVnIEcKJqPforqFU=","HSJ5Zz9sq/ChxLjuv46ceDYWgLLlnX7Bk0iBn1s9WhQ=","DyRtL7tOEhfwljH7yHcIJ8NnUeatjW+xaBDjOVFDrYA=","L4DKFRsHe1B2coHqXUwfdFf42kRN2hbYFJu2wQYe0Ko="],["GVFSOkJwxUQD3+Mhj9PUzO+kMRTxsZ+ywoIaQ3Rxi50=","ErWgnh6V4NAfvNI0+tRz2O4rqXb6IoJ/+m3QPIslpk8=","LBhOkE17/TaNRJW54wJ/mva5MTyPGT+SmsniTRDXo28=","FvxI5V1k2DAQrVczd+okIjl/w6fmyIr4CKVm3gIj8MA=","LbGsTCscI6AAJ/3PD2Y6+JbYdBW7A1sUnSitPamMb8w=","FwwFpfilXVyf3F6COLNnvjWJF6GaKLTEfkbz5z1CoIU=","Hrf25VICFcFeJ0NVsZu/cau/BKpCbNB9pTbLP5Cfblc=","FBEadL0kcwyDNpnrQbOPHU7Rb88P7MFlW3byQ31KDJo=","LUa0jlCQwMVqOQ3jc/TJogCNsxH+MQY89P7VRikRNYU=","FfMOvfuLjuZEJBA5omtAjceo3nfyzG/tdUtwPqkt3lM=","HulQxFoML0pLZGiKeTXtK2PU/ltBSvoFwaKEZ0QJ8WU="]]};return Ro.default=a,Ro}var yd;function WL(){if(yd)return Va;yd=1,Object.defineProperty(Va,"__esModule",{value:!0}),Va.poseidon10=o;var a=n(ln()),t=n(un()),e=n(VL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Va}var Wa={},Ho={},Ad;function ZL(){if(Ad)return Ho;Ad=1,Object.defineProperty(Ho,"__esModule",{value:!0}),Ho.default=void 0;var a={C:["FRLfATW2aSWJ8HEUCmB0nPd1xkKzANovtK1cbiOtTl8=","KxCa4DftMDYc9lRLL0zljzVliYltaohJSC7T+bZuEZg=","Alhb7OBu/1U9SFR4oZ6xSeIRGuTh7LHWH8EM/hwHfzQ=","Af+Jb0wGYvSyrZJnQbSB0DuBOozDQ7nC0rxIGccLLzw=","GwyvAvQ0+j1M1PuxPTEWrItzhqWv1sZwduy8NwSqRdw=","D8t8nxPIVRengFiUrIK1fAby8VOm9R9g+OUIaE3+W80=","LcK99/Q4EuOc7yEOQukrSWiti/VUVBGCNUUE0yy/mVQ=","Ba3Z3yDBiY2ka790WUQ4vrB8mmVjXJD0XAoI/rrRNmQ=","IcraZkFmTaqZf9VazouIGRzcQZT727bKWJVEfIpYhZ8=","GWI1BFiaYPBYsESJsVMyTRbtZmZ6BN9XKxA1kLhIvwQ=","F3ZELYUKQ2oAXgLGR1ty/S1fhEUokMREFihI7h1X3sI=","BsFpH9bS7pg5ZhDzyGjXCHTyTv+FOTjYf6zokjSgmpg=","IsOroV86Fwob0RdhzCF5Snr7NIpF2F4wvFIniBST9Fs=","H3exjwbhRYh3wrGMrk6SwZbAvg93m55jsGxI6QsCdPo=","Imw9/npqZzGcHa3aG07wTkX2uAp43bC9Z+Nj5juFxUY=","BW7746reaOaIarkumKPSimjKidL7dXBvaUagCB8B9iE=","KWQGRR8gHA0JWHt/TgCn0OGUAmDUgxPegH/C3w91XX8=","IADgtgErIPCd+O7SWwlb8i514qnIfkeCh3ALWTNW+Es=","In83ZrZkLUTG2DahfDDOz/ZUtUSuhjaBjbjifbEkrTE=","JARkGy9drZciVCvxUdSX6RmYBySbiGyXXyY4XfslSnQ=","A3STrGTR3rNLm4NJDzUXDEIS0sMJJtTk7+5XuqZSun8=","GOoHSI8CxpJfSwHQG4CcmmMl7MfZx5CSK2jOXnlBWV0=","EZUr/LoGRCs8Hr2Vnx1MUfmC8h+ZThBcJXj8Sv/5HJE=","Er4qMvJ6TiA1F6sgKOZblJ+JbFvs/lfiTArwT6xyBUQ=","I+gJf2m75F8C+uxeJtxSOgIVO5756LucXxed/jA2w1g=","B2P8S32pS629l7qTNhPDU07yFTaucIXhI8jT4jI1E24=","J6T70cQ+CsFerJdODOLiU0TEbDIy7nExQZOMsBmz+Qc=","Le5K2lk9dWZU3sErhr+wQa14WlZwdhH8SEX02Enn+G0=","C1FR0N32GyKRdy65Ok4+IR9SEkM4zHDz0e2VsOnaM1U=","IRbibHCG5wyAZgWhZxOX18BzvQFtNwqzzOfGlafu+Ws=","CUGEkUerLNjRicT4sXtalzHlXy0UPwp20AAjo45O/l4=","K6B6b4TS0twvGxfiNS3qvbXR47kuQkzWWXx32f5nLpE=","Gq/vei0vBRa074zuM7To+joXdv0pVah4710ifSFagHE=","GUNMyG4vU+XbPOv9LbUrQC+ibinBO8E/MVeG0Q6gHa0=","B1UZwL16bm/kv732Gt3elNuEJ1gBk+KshRc0mAW2Yjs=","EhZdR1zxxLr2Yrxs2HRPmqSRSh2eU0d7IR6FPu+94C8=","C69DT1bLa70IoKWHE7lJtUxEHt5T7rDE+aakBHva58I=","LilbBrvvdabXbdEO26Hrk7KHJhvIRW7ZHCu9CZhETq0=","FGVnknGAysCncdWDDxQx0UzSRF9doWz5NEQuc2WEfk8=","Ix0m59PtlFeRpSAT9G0C9fTkbBfDBHrK/qvkrQLLxEw=","AaL1zkQGJG+9QqV+bVrjsiGSYeNkz8Hyo5KUj6+uHnY=","AGYcyKOdYL6bPIvNgdkfqOv5rr+YKcJTOFz58OPnazk=","H1Zdpw8E+W8ms7NiZfl33aCbQ7zImIkw27IHn7KR/LM=","Ev1G2TXUWlyEia4MsCwvwCFLQNLQ885EKijXZKn7CCE=","KSQVPc9HoVvh+mf43fAOxcgWhoyOkbAp9K+9RfxS7Q8=","HU5h+MZFWAnhm1Y9FotLu4epJnQ0b5/WKOpdIOug/0w=","LE56zsrKji6p/YSb5WLU1dlVhk0VL/M58rLHzMtOw+s=","CAMAhJ8CK1ctYvp4dYO2ybHqdSDzzEJQq/qLS2AKyYY=","GTo3+/02cdv+dZOZ0BjfZM3kX3WxdzMpTodZajBIeM4=","JeJWNoiVfPYReKXwBzq33SjGvNEuu7mj8GVuoOu4fJg=","Hg2RmAxZplJGXOcC5Ojec/nrQhfq4lFFZqOdtEoJ1RY=","E5GyWNr+xZR5nfqBdUToqQf6eUr0pBH4m/V1LzZWH7k=","EsMNX1k9SwuA/IyWfCpQxEgopBdRleR6l8vq1g0CaSU=","IJrIoqu3DrM/INXuK0TvcfL7MXpMvwBMieVanjeqmt4=","C8etCamLWd0Wd6swMC/fDJDlRQa1CExciWkaNk0mjqk=","GnRizSNTo1cBWSocVP02N0fTAizYVIq4yDjIwWNAGmQ=","DiUdxv3Xa9vr6/cICNBSUEIE+rVMTvYxWdBk1o7F820=","KqqFdx6DVZmxPmxDwCKBZ/zMs4Cq98jom0YQ5Yb4+fw=","LEKcNSGawDPKn/VDb//EnDugGk6ycCWfbpo/HD+2FBQ=","ARpanjiTSlkSu+5J1QlWTJlL6dLj62FUaLIqcvwyTao=","IqckAp8AnHW4pDWKp2NtE+rr03zHlYdJe+j/1YtLbA4=","IpI2wVuxkyfSREV6MR1p8HAnzZX8FSqEtuADuEHDN78=","ME5LiglQo5qylDw7aOtvFoUKjO5Fgv5KiCgpY1aBFpY=","CDQXinXQg6Ex6tCUJLPj6WneU7stIPlAEIg/g3yZ+eQ=","EFzEBey0CuP3nPW5vXan+XoD+aB2+KGiLBD0SSBjBJ8=","Kje0tl8IyK3bU+jwJMB+R7KIWgZaNSpGo2FUnh+Poog=","EHjA7ghd0b0k/nH65CbX1rlpfZThenJYdXknqGTPybo=","G+SburcO9npdThcGYkoihgzaKG3sfDosmcC18jXtfi0=","BoyoLRiz59u8dpopVZsdh+3QgiOE0tTOmw7+LGMxbz8=","LYmJNzpVZjnjPymPsEmCSWmhooS2AFPtuXKgWRNq1x0=","DT5BbArhKv9Z2N1c1dxQmt3T9jkNshZ0LFF/LfcVgd8=","FLKmcYH72cgTx7q8nR96fx/r+fUSwSq9DfNGaim0m70=","Is/pMEiUz3moTLsbbgtXfWg7Ak8NWoVdDIahvLQyvY0=","Gt/ppk6AKTMevS+j3vKWH1yVX1lW1hs0wC0LBivdKo8=","J1Gy2n24cbpf20DgvNp8q1sVe1VVFoIgzzt5adYTz3Y=","BX+QpMCBMEGCULeQI28j8yCeiP/ivcaiQKgS87Vxq6E=","CtdO8JdxCZwEDCxUZxl4PDnrr9XsKlX8g5mwSrkig54=","CwDC+nYTtS4l5KbPYzozNVut6kNcu/72dSPjs7G3PvM=","J5U4G+aU4JkaNp6ObOdeffGNOMQ68bxYjNxl7Y6He4Q=","CRd9GMv/Wc5n7nbT0Q198S+gux3qZgw86wBqajAh3is=","G8d+VxiCbvzlKoa4YQ2UgAdGR79LO5+jcHtoHBqFWkM=","Ly0Si0LTIQLQV2EkCBfsu8qgPS+kXFyy+CwaDASM67E=","IVv9JY68eTUqek+qusswhA9+s1ft0haZ1bMmG1diiAs=","DmszK0rluV1Rjmrrt6B/tPwJI103pBM6Ub4X++n4J0s=","Jyk2dz/Bo4qoL30xcqJHe2AeEBWsAZjcKICiG7rGVCA=","JrxNQqF6D/yTeYv78uK1YcFadGDhr9nCOvesKm3gNCc=","LQk2If1Aq3bvFv30mnkj0tEsAij47bm4aVloRhE2f/0=","AnW6DioqTDsfXXGLW4y43MS7+6G3BktrODMNlQy6DoQ=","HtY4TKneeIwjXH+/DDGlm4YaUr/yhHryqyJZJIeHnao=","LDN8gIv+DSyrVEvZrwHwj5FtlLfOBymgjMTvue7vmOw=","LT4JNKQ3FITJWN8el+fw85hLVmdTn9EMPo5xJGra0Jo=","BU5CWqAq2s/rcpyunfGQfkFhMCKJRnyTJ+0I41dVzBM=","AklX+p1I+UIHPvkKVMsGMsiaQz7LI20Y9X2sWv+F75Y=","GUtWGpEzS9DdTq7PuU8D66uSf+V4fxcjwlNZRLL+aXE=","H187t3pIeQXj05smVrkeCoIjImo8wMekc8/EpSx0rAM=","Gzo6/tegghpoT8DQ+a2d+jtVfGVCv3u8XPAb0zacugY=","K5Zhndw7KikvzrB+KqgMhq1jbqfW1Lq+jSlH4Gk5BzY=","C6MeLR6Ac3SnEM2/gfBa9Pqtzojq0KFliwtIFAZhMXc=","JdfVvct0uSt0pgTW+rOy86IorSM2Dk3vORkUboxE+lI=","HKn5EfCwjRpiBZJc3nql/TiwYQlWIRUuir0BZUOA+ts=","GpDU4JCqq/ZSBTQ1483qXepkUn5chB6pNYgl4hkbSLc=","DKrzt2kJsLHhx/TsST8nUB9ebwg2noo26sQG8px4VOQ=","HI+UKG4ykGnR6AtFeHyzCM4hSwSZmzuZUx0QP9JXfNk=","Gs1DJx1LBJdttexCcA6D+xUTWfnyYKW5dwhz48uYqQA=","BGy91N/ojGd5G7DFrHSbXN9Eo6h+hfx7vBm3g5ZHpwQ=","K0sDz7RIfBoZ18BcoVEzvinJ0/MFHksB+k3Fc+7rwq8=","GpoB8AQKO+phJJRqd+Z/06pPxv8h/1+0nIUqxZtl5cc=","CeteB3p9ARBnOmF+WTaYMKzf7lDeWCOuBojmBxQpK28=","DQBs58GH7GRyVi0hLfwp9hXF0RkFfODHIWIK9uRmb6Q=","BUvI1lmzEAGipSn0VkCpmNyq8uzx/4/T8gb+NPqEci4=","HKH/JExRBuqIBFEWCBwgHGMjaYxraHOBZq+Ofz+N2bs=","BPJU3oCT8/szMN10I9nZ4XNXzLNKPBjpQBlidhDKsds=","GPpq+TQQDNoBI/7gtWNraTaS2RzIMvh8dsBLsglQFT0=","C8F1zWoK1UbTMpjSfSzhj/xplfFT9r8FxZwJpO7qsUI=","Lit5KrtrYxDizVsYj9zPUwKNbKcGBONlaLFfNAjuphg=","Ehb8D256yPDqWb94QPxyCzeEjm3LDHfyU+LNaDOqOvY=","FTgSdQdBc1Qs0lC6fNptG+bBLESvKgChH88Hh0IdigI=","JapWLE37CjjdkuAgtNb5snaTQfOB3pwnrw7aFFMYO88=","GayeNUn/IJCUiKtyim6I0QoPY093F0KlF+ALwsx8vjw=","E8AjOUYtCC8T7Mje1rK8smqABamrVe9pqR+EfnYL8wI=","H+8NzY9YWPJAyJhgA+V3onajUmxrRfdUA+gUoLxiCh0=","Ax2b4hJCSmQ8bJvxRNgaBub8nWhjegk4ic88f+5ePqY=","GmzKB+8w00MUBHIU8ahylyi43+jA5VvqNWSSiwfeQvE=","LTue2pbPGG+OC14URlQygZMbJgo/8EPGbPIy9JCcEqY=","B9pYMlllvsJLTRLWBvtFY6I6Ew6Y7uf3dmpKNVi11q8=","JlVXHCP38c0b5nuyTUxOfMZ0uIS5xY6oFl0pNJMNb/w=","LlupXkos5cQz8VqwoCaxq8Kyy6JWxhcGtpl/61d6QtI=","MADHlZ3zHuS/0RGMeuIpBtqNgC2cR4VQUBF5JjQryoc=","EOE9CIHSewjPW2TO73LEKO8QhGebU5sFjIGhcAar4FM=","K+KpOzcr5mTuv4Cd2HPHQSKss89auqbCFYcWAbiI9Ik=","ITECGCF6cmzIUMCn3JGdKf+oth/2BjkLLrDsqV1EZaw=","FNkH9HBwdUIgW/143ydL3yTYl4lZtE2+nfen5SEUp+U=","Baz6HoV9gAHOMR/TtdnrOhyS/G5drCRmwK8LJ3gWo94=","Ej/+YdF8vWYj7Uhq8OuOdtBN46d6SDxmKwtcuYzUSdo=","JjaKopR0ZF7doeFVpc8N8e7JX06JVlCBCqd/S6cCevc=","IQUOIGDc7rVjZ1Eq8/oR89LmvptycxJVsFvl/ueT+IA=","Iu4NkMfXFTJqA4PHq/aCS52TavKWdWEpV0vHmvL+8KQ=","DkV0Z7rowTL2h/wGI1+pKguyw/3h67vubvg3KfJfPCw=","HfucsAAqVuOLc5E2NvpW4mo7TedRk51esJo0MqPiljg=","BsX2BIDADKYMAW80qK4Wa2k0MZuBq0snvrRKEzg53BY=","AShJBBV8BxSOYeVil/8E/a05SmmQ1OR6YUoAmZ5Ljng=","E9EDAKw5HHj5whXbxdLUYbYs+lo6xwppvUcL5dgs8y0=","Bj1lhEuIBdqo/XcbB8J4QExyi2ZesXICKXJmxCKpYYg=","FeO/F8UoMO0yVc1cEUnzYYZB1uf+30aMMF0IIg28ijg=","Er9d1cPKrRLgh15X4ZsQdS2WUeOl3aBcD2blv4+qPfA=","JDw7eX6DGlUEauiRYVj+U2SOIek5QA+fXrZ9bAzAlMc=","AB4o+ps0wsYVW4Qh7dTeWMmdHl6B6SNF9iMZq5bfA+U=","KtHbpVBu4GQGSWNSe97NgjzOBJSobqRS2bQDNiPzhrw=","IxN4eaAky8G0gQ7lTH+bhQRnNBRfM0p8weSlfHQMjYI=","B09vpilylo4iGJOEVj1nUuMCNdoidUgbxsOwVpN8dzw=","IrEKUlNxbRZaZwc27iQ94GJ2GTeO2/dRtGvaCxLczPU=","DBkAQPHk6qEbT8cEaZWYloCEkXfs57/ve0RlE/nr4RI=","MBh1hSya0lYhG3+fMc7Y4iVhiNMsMHLFGdcGmw0Q23Y=","HA9n0F6/1lDSLerXoREwMivBJy766YuFyBXbazGN2kI=","KG6aFzZPNpRqPSx7oGEv7z+sYLDa626XOqvrzlh6ePk=","K3KUaBJuqhAfQjO6qgmdAtsU/jXEhYDrMWXGHdvOtS8=","HzD3FAal2pjpKQYstI4KNORz6DL8DOgRwo8Jox1UFvo=","JZVG+EGfoVl4qzYAhP4KEyKfwR3GmNuLuByCLiyDIXM=","BuNhJBIa+soZiHp8pCjhLA7I+qr11zPsxpYL16pdfes=","EPHOC/V8B3i/TeYKHiusiJLea3tu8vjekR9zFJQmC+I=","F3/JUfY5/MJ0tO4o8/f/Vg1soNn5MPU9OrtV5tda0QM=","HzQDKqRswI1oVVu8JGmmai77ojxW7D3dxYNuLpGc1hA=","JpzQt3T4Yl9d51Gb5hhXzJ6+BtEGENyR2fTMVxEeq0E=","B09DeCgUD8+xrgCzjCmlCA8ND+65nUaI/4hx9jSfPGY=","A5by/OjNWrPSYB03+A/Zd1ql6fVrQG8BXZsJX+GQWUU=","LgOvv/c/sF8y9QI5kH9IquGrqBCmMSSAzOND7GY/IQ8=","KuiZRVpqfEmZfIK742Bm7x1sIthCavVNLHSXCzOtKpA=","K/7e4+r3NAoQ/Alx7wAD3IfLmXzWh++ff4izDD3vJpA=","K1CzmkPPnx2f6vBKHxADEeeJMqaAUeeSwjqZ/5UTmgA=","JNFusfye45Ni3GYzjqDSdRR/inq0tizrJtw+KxbDu74=","FTnU9heNoQIARjWQxu+xynMFu7qTXlp97JQOI226L3E=","Cehd3LAr/gcJAh3JufTvuiynoEB1p4wb/Snd28e+dSg=","Af5/d7osAYKCBzq00iKVk1H3zBbKx+HGeUYR7tBqOBM=","HTIgz3zroZeJnnkv0rUWWAeoN4LfVUOMyPzuaudWWfk=","E2S7Rv58ebyRVqE6jIa3fTQlOR9+0SSgNblBM0BFF9g=","C3DuoPqVlxxStMkf2c9v+13pfmPjZAKPDAsZBLB1sG4=","Kpq5a03jP4zP3M2OhlEOjMcx/mc+sonRWjdOsNBV0hc=","LserTUOeItHZfv8lAelFd2kdKGmEQOe0EZCouODJhSU=","HBtZ/5ISIkQilo52Fs6ucVc7BcmeS8smITEm/k27XeQ=","H9+qTaVA5Q0rzRoqCXU1D5aeNJJYQIX33T//nYgUzUk=","DMjvaj3CUNekyUu4kL55e5HwiGmpk5HK9w4u/99/CGY=","CeWV+uyFBnAKQqWkEZDLa595+um2AcxlZ1aejuniSBM=","BgR83A/4vZTGq2Dj/+ohkS8BAaYL9sLpY3G+VOY9c0Y=","LkAoikpoHh/1MY+/t5bot/Cy+s+lyeaRocSST/+6SVA=","EmFpkr9vr1FEyM5YNV7CtuIKfSXH37E0YLByJoFZaAc=","CnhCXVY3KvmV2JMNSM1kWm5rRUhbTAb8OOBSgYtbPK8=","D+nGCmTc6LRbU0YspuaL4yXYF00GdHEpWpg867HJoPo=","LnqpzudiT3H6SQKXHQfNMDMZv0EAe9xOoP6kDvl8uh0=","EEaQzwSgZm9JIaTvn4CPuaO+5hkt8ObNsVtvMC9HbI0=","LmPEISpAIoTe3fnvJgvP56OVAC4iyaYVWTBTOymVlHE=","I94MlSfU7eUWuVbJIAMVhmN4UQYVgVNRvFjTtdateCY=","JUOe0XN0QNeeS+AJQDlJ7J0yoLpszX/FFY7JfJ0yxEc=","FONQgOjakLF+crb7//4Sawnd8MDL0LIm31SVjmgK/pA=","Lg6HygogkNmuGCTOyKOJ4AGzwK/3PoG9JYR/8KRdH6Y=","Exng9gihL6Abd0Co4UBmuIDwtlCDHY9CS2rz+zYcbes=","JiuC8dHQe7GLmSBZfDklpBwKYUNrcdJO53I8f7iHWvk=","J3c9euftAIKWpXKttk9PtcIpc1slnAPUxDnsKuRot38=","BaZRiKxtZGfgKNvkuUG6xagSQOgIN6UZFS1lQqX0B0w=","AKKosHcZ7PsslOkPjgRbGOxFX2cyUyTEURnAMpGV784=","Eswxamac7QKQvslnV26OKp6bYIG7Cb/aZFbc0/2AJaI=","JaBbqaP33MKaQ99F78QEvtQIdJt9IWUDjXArMD6/EDc=","Br1F2bE68o4wk0jRwGzxU7Bh4NsSbsWaivCVoxDChNg=","L1X92i3I+vLPgwhnWMe8d6GjgpNOcWjDCh6dqtK5b7s=","GkaKGLGF3DQqxrjr5T7yZcaRkXWeVT7rvmdO6XY7GQA=","AxsPm2/8tFHyYX7pFc1tr+F6yZaJQXsdkmmGB+4AUUI=","KPldbrdUfnq+JdJIQZO7+qNsZXaxnDb74GtEVezSDzc=","BPcMNAsWboNAgK/ESuRE6h71aqjQhLIwHmLwjgd3Qgs=","D9ch0UMFsv2bIJdXdfVObE6AaeLHH9ZjqcnNDRMIYWU=","DnnrUT6r2Mo/xhCWUFBRCHnA0sdVt+Wdp3JtDVSUN4M=","LjY2oPjDAU/ZY/8c/vzIRKF2O/st4jNS6lWqXde7j10=","Dt6vNfRPM52vtX4wgMmcdMEH9h4+Dem4tMI0oyGnVYk=","IOQ5E1BlTQRjtuoWzGjSxBG/jJfa8dr8SuYQbrs0dkM=","GqC5q6tcdyWbJLpt8DW/hkx+bVc0gKtLLYWSbpWwudY=","K1gq5+APPG3VFj8+RPiuH46qkyTmNHrp/KfCo68rla8=","EQfpEtJtDEJTSWNS8UsmOjCgmyCtsx29T8v6wOTKk7U=","Ex3sKKuw66Dpgh/855gLzKBgRsEvAUE60AoZuEV/gEw=","MA7YD0kV/LXcjUIK2s3GtUF8jONdkH2VN2dW0jI2u2Y=","GI4hHiFd7ZyGHToh9D8VeJd5OKUzW+dDJeBmnn7bVR0=","F9MhhV0coDA9x7CygHxD3hiAu2b9azq/5cwsOo5qInw=","FSjglvvSfg4JAEYL4ippt/gsoaoIpt7z81JWkUsFAhA=","JxZy+7Upp98n3SDoiL8zH13e9cB/9OcgYEdUc5/VY4E=","LX1QjfEo+pbaeRFsFJHW1NTYeort+Xsk3i8y6GhV9dE=","AsEq4GSQNE1lhFUzigulV+Kh2tvYyZFaxALyN4mUs+4=","Hvf1cdfarFraL1uU3hN0Ar6KgfnJ/e+UKP8/Rr7YG3A=","GGIT5tml7MhRkteQOI6v7VU13DY02DWecwaFodfrhmY=","A3DrbS6YKCzn6r2N+tvEa3S+6g8Fq6r2evFpirPQJeU=","EE//+/8iWLHUosZh0tDL94luBTmO83MIi8hjJ7N7wQM=","IG051a9eHlC0d+RsYlNCALwEPKmFzuF/C/0+aLyJeuQ=","AaqiCTHV3lkxc06AVGyWa4uvitbCeVWN4WlrLospB98=","H0qheEokA/PAsxLiD//Cn3fk0B5xLUOjW59ULWSUiPk=","JwGgsJ54Ws2XEeXm/2IyvGSX6pemzrgtOUdQi7tSAuY=","B+ma1fMxfBrOGbSny5S1CQAxn2RbK5VqNAVjVdOzAEc=","IlBFVnDerlCHX3Wul3mmAIyfz+UwtBfeTUI6oCypj1k=","Jg1iiT4lSr0Q8OT4vje1Ih0VKS/wCoaE9eKLXySVl54=","Fau80uDEQkSSdeyl5JEdFXy23ARaWVQXg0vznFWPnyY=","CXUfeTIYI/S/uTgEkZxk5crBkH0DEIX/jaqe/aleQZo=","CLPYLPvsjME/dfd8OmGEiqDLwNzkzvjXLOOllAey4lo=","GXa8DbvYOhom+eFKpDHiSnKK9Oj1zf19KZQ9/CmnssU=","BPWdIB27Jj3QTSwvo5axK6CKSJidwkZLO9WXZTTrOOk=","K7IyQ+hBxWTnrdLXtSjZrwP+dYgOmrdutNRqAgym4w0=","L2a5YUTvbFyuW/0lEd0kVqHW41SFaavsfXpJ4eBHSYM=","KbVp8vZ/HANj9gSTbNWcMplFPYIz55aiUHXEH6fhnUM=","GqthAxBL1Q86ZetCu/kBeS556znUR1bK7yWSaKBtJ04=","EAlV8+Vr0XpOr/b3m2l3QtBlU3GFm8cE3Opez8iF6iM=","Jxs2PE9E9PqvoC2ydS3MGS9O31w5wXrVp7j0eQUnEeo=","ECHqqPogC7DT1+9QLF1+7fKmyjbmOje1zt2Yoxin+3Y=","E8aiAzIRcMBG19ROJfIcRwj1hATfbCtXhGL0rBgcXho=","BmaRoCdU29Aq2igdpBiT/uvmhwg/TsKZYAyEZX7yvJ8=","Fjea83wnTmY7fjwErQZe4wmZwwoF+93xpDA3qNvU8Zk=","LgHPmBMlKlFxYkpJY9Vy4bbmWiuTqcmQ9qU7p9V3VpY=","BaTsd6IcoV+ASu2HuY3D1fySrtecNySz6c/PXI01v3c=","ADLzurBpq9SmaqmEXoSj6h05CjwrCUGXpVkcawwptLI=","BWQWMoz21H09KRzXJZSBRDIVt9KQTHxWMbtLcug959k=","FsBonUgoyTXq/ar6wI5NkJ2nvId2x2xdzGtL1JxyF/0=","HY0j7R3WpT0sGPkVN1ZOtwbsETm6IkC3M606y4R/eZI=","GqGiHjeEuXhD7GIMqJYejGLV4SuOPv+6sqTu2biljeQ=","C7VEOdTG+BKnBYGrfB2lbZigiRYEjWtI+VQLRRt+Ztw=","JEIbc+6vYxNLRsKWRsKyTdesuGChiLCKbtHQDLkLPD4=","MEXCAS90RYkPefFWcGDDyTWWWs0OpVGmcfG2JeaE19Q=","COyGOZGgU/7tqlKBCYr8Axt1VRBl1tAfbesExjECyb0=","JQyyq51VeaJKV/qqh/fIKMlJUs+ySMxG2S7mC4xMla8=","DyW2O17rwxmBIsYGsKWy3hXm9f0s0PST+WJlNpZC+T0=","LvarxasCyEMd6PemS6NpnHnh3wyPLZ1ejWW3ktvDbQ0=","HoSJd2aqneBWu12Xxnl73pPDsFklEjQCBmNTMrXCKxE=","CJI/BbBQ5uD+wO/vTepQD/OuwwVNSysKH7rrNWOE1w4=","EWh6wF4k9Q2wYzXhh123PY83nbOlwcO59XtyWx/YQ3o=","J1WDe4BUmtq6R+CYCQdZEin1ppce4PM6yTD1vhOxVKY=","CfgMgjC8WngTj5lSumtkzmI+EtoBlGA2Okn15e/AdsU=","EEAJdG1hwLtmQ+ZN3+qi1PMIcqkkFlUqHftLddQJLUs=","GW6CH2U4Y7FLcrGaBoqsQ0pgE1mL9zso7rNsQedvxUo=","LIqKheJhhFKo0KnqWSvElaUGclIlNux2Y4afdYrHIMc=","B71N4q7Fp6z6ZmeHVO+V7qhA3Jf9FnnmU9X6MritYZU=","JGShf0NTp22RHMg0n13QLL8rLFiht96iXwAOua3KOW8=","JoMSlOM49ERArc9d0cpNFBKlzEHJOiA3mF7s9ML75KU=","Ftae465rIN3WLdGhPSedTX2nSyB7xXoVrJrJLK4uz6s=","FrVaeS8bGdzOa59Mm2G+DgRXqZgOYFDaJQCkCUFfIHs=","DUnjHifhxxwW1SSyqK2wpkhDrqXaL6TmhvGDvpXUFwo=","Gv+4/YskPWLV1Kewe2JPmgRSeT0dGhHq07uChOtl+Xo=","J9p7oQy4bAZ1jFXn6Kx23Jq6LoY8LeuPrnUl5CyWzrs=","J+G+DbH91zbSGEQ/VtBph0Q3BNGMQqlvP9y3xFNvugk=","L7HdH3Rh11+jweJd9nDBRCsAG5J15nDXPIHrYf4CgyI=","D18MyaPU0wZsmRlP6yKfDjGDHc8IC/9C/x0Ul0+C/+Y=","K80jWFQBsPf+M/42bOkuOs2IGKI1UPN1Peyx7CRAX/4=","AFxVKgLio5rw4hyJRLnE9W4VtDjPNGUWuiFHNWkE8B0=","A2KoooZaKy/pAoMcgETFSwypS5X8t5tl8UdTxYIitKw=","Apuxg6aikbk/CYl0YQXjPMZpkHJQ/XBkho/TE4EPqik=","Bgj2IhSHFXjtWKEtzE0cFSr5cOblBF95E89MQMpt8Yw=","H4pM9TL16DVwTtfKg+/7UXV5AGyiLs10IlEcA5G1xO4=","ITiCuzEpHbw0bK5Y+/3PA5eBUuFbNEiSqUxE4vCxszg=","KXEl9nKLZfGJ+rYcOJYBa+sKly3TR2SRDwWVCNfoYiw=","D3YCnMP/CGHgSKYB61KhHPG/xp8t1u4VFqRuSGW3x64=","BaUG7XOC21GFHCJNUhPHzmoisZx/96f8zGI3rxFCuxc=","FX3bb7bUJ7l7pp6HmPOVDWiI5Exg3+wKmLcmKpd3RKE=","J3qjmeVcPly0nEvYeJ9lUTUdpUDK4Dfro3VDsEXpHq8=","FJkJGujcVn+NBQoINers9LmVtTQdKcVI2gg5Hm8UU6U=","IAva4+9wp1oSl5BBzeM6F47AKxEKvTecLSbL6pFntvg=","Lmg13kSVcTDdckoKxjNbfDXor61qy7pqqxb0VZOdx3o=","CeMCIiwBzbLEXlw6kg7dgto8uoVeFf9jSJMgm7/lXTo=","CltBLMzOCjcWF9raJnvHg8oZzsBo8VXWlU0nnzlZzZk=","L/sDS/K6Yp6tb4pgIuIzl3nmjvLIvznv2hoDMuY968Q=","Hzqz+/X9JIWTgKtZqPcsxS3BqyR5oQ8z18W3EhxYF2s=","CDA9jqbErwUKkGrrrkkuMgEOzmCbWyxusTfvXcJ2myg=","GfCUXZ9xlQ9sKymK08ZG5PuemZOdwXDHNfQHFIx5JTI=","GmIaWyR1i7A2NEY55CfAPzPSWvf3cRw+2ZmV2YPEw6Q=","IYp7dF819Je0Qo5hw7eVY3UupvjIdjYdMnMpV5M5kos=","Fuzr6+WN/1mnsLpAaTqkMbiZyndptEWnOH2xGAiJY/s=","Ha7kbPy71jQ1+m+HkbNqT8ZZ9SNuiWpNRHqz2mgoD6w=","Jgh1yh6Y6JXGNds77VANOTlAtWVNNpxhFW2ykn3l7Rg=","HL9x4OvrwtFRlmrMK+ERFniIFWFL7Gb2hzWRTDuK3jU=","A7KjIOrd9I6lcOZD+J7yJyu+vbHK7zKq2tsiqRioqZ8=","By9TS/B7pVVCYVLDfiEMwdNti3zELh3WSoMIE1cYn28=","F/5iqTqe+xI2AS4soQZLG5PYZ7Daow3TNO5coI0wSwc=","LtO123rS/Ag3NPthRxYpRj1Glt3YyNzbHS/dRgq0zR0=","Jug7mop8e9aSnyICH+p4CIA3wlxyCUJbqD6ZgRUzXBk=","F1j95eLYuIhq4hNJQ0B9i+zrpL5RegHlGlGpwRwVEKs=","Iz4i/4W//LV881B3/GyBljWQ9n40hKZ9hGvBz/LL4dU=","K91zSi2KdfXhzacRSoxBi/UGQ5gEXcepqPMWaSgs6S4=","IcLijVRzOQa9E4OG1/BbHMQvZgTfiTUJpinDUfV7ldk=","A+w9tBm3ibmhOBHfosUYQNOgGWHl+IQUirP2r77Mo/k=","BEUs67DNlPcWMmaqs2WzZm0qMp1jTsU9sAnfvjMQYvo=","I3TnzTSS3eQKIaQRGzIxPfWk0dSD/zjEsM1JIUsS7io=","GKrOFjmcf9bp0hl8XXh5WY0rcr1QjgXW+Lzrfz/GaKM=","BB1Gn4W/reyWwH93VqZzX0F716iC5Guga6B1cx9WtWM=","ELPBzqMC+2sa7v56cBiQzuA1i7Rd/NbbZPkN+WTLkuU=","CG3/A50icYldCozflE11ulQoSJfRSy6qAJQAqNd6S+s=","By5y2Gd/alH0wjhuLoMNZkjEUzpyhR/bo0pQg/AIAu8=","E97dV0WQ82K4NcBRUdbXwachBixQ8URT+/zhKBLexHc=","D3tzC59avDW4dLIk6/Eg1Gm8uIPUtOdX6OtSvCaVgIQ=","I/Lf0CQuDdnd92tXVWPmmGjhPCzzmCxSd35sUzlHIIM=","JkAyyETavLAlVFMVWItFCeJ3F7jpZPYEBNKpjoxECO0=","KlBcaD7QCbhOoJ5wWxySVhh6SO6WBk0/CU0VqTHAnWU=","EhlftTFOXcptu1MBoLqzdBUiqs2SYsVQPeygntO1v6U=","K5Z0jLthR+9IYPDX2Twh5CqE2ipdJMB/LmmQF142ITg=","Fo3E369v7NSISIH9Xw/rJ5mtsEHG4WcH+fhwHKNTW94=","KT/fXpdBhRtu/dIWQYlOq6rk571LS5HXJ6gM6FBYVDk=","EI1BIv+kqb7Uhtib+c5xiOU+AWGyM3vFv72BxmgUTmA=","HTTvkPH165vppxjC9Yk/5N1CIgOjBvlhcHtKF56KgJY=","LW22L5GUnxLdffCEbH1z3p0T9XHt0yoaOx5X78eWcEk=","GLpzeD9m6PlmFiIfSVmlpt8GzrW9PTYvrEsQYRHuLVI=","ChdgPSKZu/mQ7hqVtazAia7RFkb/5pbuBlvC6mUM9uk=","D8nua1EMAL8s+qXmEituaMqGb84R3630J/t3DYwl0vw=","KCIuCJlck+OMg4m9MvOdvMID0O/EARRHxUPQUWVhIsw=","B9J6i7pzSd1xbRzyqVlXQN1BMTuTmJ3n5en6q5fOm0Y=","FEmLR8S48mY+Qi9xcbSjwHPTqheJWzMbzNCfGJJ4iow=","C9jndvO6dVOTNhn2BxEYToXBxrWWtyq7y9DR7w8Gf80=","IPrfOFQOHkbaIq5Wt1MktJgwMbnI9RmNMsUNXyWwOgE=","JpmX7q675Ytuqfnn/XnRhbrHFYUHOSinTqb1lN0uoFw=","KH2RyOsNLQiC/Fdk2rVATIqP/xaF5932Vt68ezthkNU=","CHjTNEp9FH/7TAR7fW36hahk3qpMFqZ1PB5yRUwsYwo=","LjxKzKBhERLCmxjg+bWTV/fF3Kt6jV+avpLXsrKqZ+o=","HiiNN8yj0LpVit5JzFIg72Ke9UNnmVlO3K1gVcW8aUM=","Gh1/ZVmEYMB591unJDidURjRQg+Vi+A0j+127E9wV4Y=","DxpsWH8VTLngkixcTY0nfmZnmsN+q1sn3f9mhhXMrYg=","LXgnkuPPqEEc9iM+W+MN7A3yLTbJ0gfahd28pex0cZc=","G/TcWbMcAcqd0tmnBSCsCdG4Y7TnZHHaAVRPBteKm+A=","KavhTUSnch/+tSg2BmKEIWKxcIGBBuVE7xRykQR8P8U=","AvSwIO32AgTI3HWrz7B2BRc8vGjE2TXQ9+ZU8QRpb6g=","HGkqEhS7auLFs0grluxGeML3lWqCgZ46nIU99GBrmp4=","JcuQNDRf00XHmCQGmluaBbd7lPvcJOtXgtVWItta/SA=","FbplsyNlvvovfLDFIQ65AapAlonJx0v90lONeAJaYyw=","MBoC1F+ro8Fh+CUKLn4oDVYJD0zsAjRIrhGZ/LxYqog=","LpXG8qZ6E29RJDReOkPvIu3PqAar1zHJGkwwA/og81U=","Ch3B2pDxd606vMs1E+G7dEDY5pXyzwgPu4PmHtKF6HE=","Jv6xBTOouZDczp7ALoe3zTB1N1DRFWpSIHuCzmOpLFE=","GQ6vkUIy+WzdHeS73hN6K4qnuoF9bUsdzl3T8DqEHUs=","HUQcP8R/53oYg+BpZsiYDlhGh46XBx7g6Z5WDv/1iyM=","JwKKgZaVUI5wiC3VagIukS44bbRtvg2AZOEciudKISI=","Cia7/VCmj/nxYi40TiC/iQwqGYtqWL2CLHIvfkLuLFM=","JVHjURwRQDXfSY4H2DVMBC3zGwvT7lAsjCCri8qCb9c=","F8YgPesKgDJyBD1bqSe1mEwHjACikALmVTpiXvzwsKw=","DepNTFK97CFO5OC4i87wPgYu4t3attBQsUUMC5WlHH4=","BeZgsVUtNP8/YtvFsatn6OEVbfUGw5wKsdbasfb5piw=","C5hwwtF7yyu4siWeyy5U7hYjYs+bGCQ8iGQhqQpkbDA=","DYPvk79VFVBDTcB2PP61wKthTUfLDLPHkYDOVRhJmTo=","K9RIRYmNiaAF9cG7v19bjphdSOkWKFpk5naoEdVzO6A=","JVch4S+8giNeZKEGcxwSkQkgxxv+s5vmvIIpHTIufzQ=","EbQZEO0zrgFsfQWaNzZX9Wqx7Tr6iE9q6qw+hle1LW8=","FjSv4buuF2a3/3sRsBHvn4j/Df2INPywhZaKNYcMls0=","F+mSKENZ6SNTbu1BvWHjCChTmaErbB3yL2VwvQDlojc=","GYCMflQ2iMokNxnfwtoTAUcSew1EHYjf9TRD09fbnZA=","KqGcFFSKT87hcMAZbTY+iGUGS/yYIiXVlGx+v/eUWXk=","LmorAjrHZudIW9g8uroBahMMAKcxE0v2ZpLNXXRgYW0=","BOEyEwl8skoqizgZAZoLZ2vLyB0v9Jr02ox8sM6NUSU=","BDbbiLT2beOEuupzxQW4ccecI1JgD1hZsw4hjwcyatg=","AMl+lWiO4H/6eQVngW4x1qt7sObo+dPpzQmpsbFqkJQ=","LwTIxyyKABgK5tDCny36vYPQ1mDr615688YCTT5Xd0c=","FQcM3Zm5tc3AaUaFvbBkicVvLJmWHhrplmCFFs/Qh5E=","E0444YwfQrhXuiFL51zktdMxVboQ+YNOlfOpbiXi9w4=","FxFikFPVAhuvoRGsIKyFFhzeyFT8FwoGS+dFRxq13u4=","DQcuHI/xchOyeEhVekJnAarYvzUBxqVe8B3UshrPAX4=","DWy6gYzJsPTiMjoHOGnE1LTl3ZX9BGEP/ieplof6mKA=","G7fscgEHBltddfxFObO5GvDZXuwLUc4G9q47QPEKVN4=","D0sZivKq5MHxUDWv+90wZHrQSGHePmU6dn76UDa8WaU=","Jr1dTmoV7W4q1Mr4d2Ko4lMxWMaJ7S5rFPU39/ivSJE=","Hbdiw+GLxsANroEk6xOSE1epzbKn2NWviZzlyKME70s=","JCHy54gpR+BotZBJPfRT3SKjrEH5qB4Ej9XIARn/Ytg=","C9nXFpfWyS43aFBJO6aHKD6Eg7UppXvWuPMkCUcxDNw=","Jk5RDlp+tY/jfIkRlOcihzfiwKwv2efsQW6Eu0SDUCU=","Gijv4V5bprwu5gLqhYgp1UsatxVM+Uu5SBcf8JLwhKU=","FKIGZC+ppsvnjWmU1Ecq7C1m6b3P7KTPwTOFVmKgrhU=","KRlfb16ylgXrtRNIrbcrhuGE1a8qVZeehdjDfV+jd8M=","K+y9GqL8HWoMuHp0MroYBw1NjYfHxQhcxXo2hyzc9JY=","LrMRx9lq8bu+7cgR3NDPOw86C5MtqrgFgO8Z8uyk3H4=","BrE7Dsae/sDdqA3eBaIpguRQ2ktxnq3ALo5vCuipyL4=","KVFWlYbEUuV6Ft7/7WZDuQcyergw+kPHYWxrvXszf6U=","D4CRPWqY1o59IDFJCDQhWYeQvRf7caujvmgjXaMfrpo=","D2xuvBUscUI1XzZQVhCMonUqk5ND9S1M+qGtD56oBic=","JlGjVF1VoXm5XB1eyfR5AJTM7+mRtDSC06zMGl5rxBs=","Gf/taXvpkL0iwzoxUvG2HZJKiPJaaCpgSBSrD4P92mQ=","BRT1ERKyEx/3RGvcjmA1+KFWMwQeMcrM2uV6LPLm4w8=","J7JQ7t6hJ4ew50xn/SnuPW8xAyBLDsFTveGzEK2KuWA=","A047CSru7Pn8vgEiUAcbfYb1Dd/Gi1v1nlfF+Txx4ck=","FFOqvUqzCc4R3wYLNpBvIh407EV/PhGG4eozab5Lkjo=","EWgLGcD2IsOuzjcBPZ2cawlNy150wI4i8XD9p0TuF8Y=","JRIbpKCt6ai03avcM3sJZF7mxCw/u2wwug+0V7yjPZk=","MBDB0lzOZPbdNjVYkc+mgdxuLu1trrNo9meMy0Gwg1A=","HVDJfi/IUBcEDMGS0ZnOlsrPpUGJttZq9ddZ/La9p54=","Fc3LscUxcZIoHfYCZwCKnOjbhm/vPs3MzDz60p56sqo=","C66GKS0AS2HeqR2rWt3s2EUuTcD2ZMxgDSy2ljt9+Hw=","CWbgrntuUv0YGFJmxEmsoTnXYEg2FZLThjKiDI0CRvc=","HK6S/ob5p++DugQZomHcg6oSoSZWJQv2zbkpCahRCGc=","AKLLg6BUmIzuGnqEfCKMgAZobqYqbxPdlTXbokj8vUc=","FBfQt0n9oFvIo29B8/cUAl8uSs8C9vYWBxS7TYbYp8Q=","BSxacHI0QhNONTKAblfSg6FCBG0qgykdp5LPpUsjR4I=","IqjJ098lkFx7+ZwGl+E5iCYJwIJ2oXHIjcAuhdtJrs0=","HDiCYeB2oGQ9VHkYfLbtJDG14fUx+RzbUSe6+JyDxzw=","CrJiwyFdkCY/AtnPGiNQ2dWrARShrHgmRg80Y1pVx7E=","IaqGXNAkzQIQTaF2IVREGI+ZKuybU7ZbnP9jkLKKwsw=","CwSOBa76D7LBkuxVaQ0W6mqWnSR1diudIf3/itpKC84=","HPtmT6xIsBNy+G8QeGA5jAE8I2HcVnG5jxOFXBVzKuY=","HGOXjYKYSo9bEF1ZfWWkN8gpj7QHTuFAYi6cvfOctHk=","Bocn3ex4Ki0MAgKPyjdX+oXmHzOvz1zTWYZzIhZQnHc=","DYkFgswhU0DTR2tQvY0iJh28tj7nxs4ZpBHoCbcxpWM=","GEzY5n0zRrCx7VEyJd9PiBHyKyUhmsbK3Ai9J0RMWfU=","Ea7c1JD8dwr0UbtUppjdvUo84mZxXqhbmQ8BAnkQAA8=","KW2m5eMsIK7caadD9qReS7jV9mBIl7HMdRvEJqzg3oM=","C6V2lw2jksVEdxWKvSWWi2A4cVjKz18IKIlU4REz+Ls=","GX6dUSnXE+OCrlzmZs0SdviN2q591Q2/qwcBm8Ql9t8=","KYUpIwyO/KEm8uXxJ+tXfB+N/eT2Ey5hsmkzcmzXFi4=","CX7DLh4QywGfpbqHp44xtPVjh98tzyEGOcnZYj77UEE=","Cmlq0ZmmHf+lIQ9aZ+95eVGyWWDv3ROuR3hSmT2XQ/s=","IOaRECRoYVZSA/Kz/v/+aGZ4k82IG70K27BzBr3fTtY=","J4kPMiv9D6vJaCv2BiDR/AQ0R1OU7BINdwiAQ1E6ELA=","Gd9ht7jb6BUsV6jZUkYJrV/Fi5XZ3Lxqrg/lDlo/BnE=","HxWaAJLo4TdT2aRwgsz9TpziM4j6f0jQNB4YS+7U32k=","A++K+zbdur3O+ptD0eVVfokVlXblTHsaF3/qWgk7v8s=","HM3/o6j5GM0zi4UUawV/h/hhajIVmEL1V0TM7Y+0Y7A=","EMbOWAdwtJHgTPIiIc7OXscQ+dxwSKmAY/vKmw6e46E=","FVFUNExEu65IiCq2geHkAvcmWFimpJmST5YeQkHX6hw=","Fo8o0oonl5Ree057WF3KsZKx/Ac/aw5ir6jMkWF0jAo=","JdmcCAqDbs8Kp+EpmnV898XQqWtYElR5abPwkHPTOm0=","CVWtGrEHTbEoDHh1PqQ0OtBe7kLQuvvzISxlbDBexV8=","CNRm1kuJSeS9F1OS5CGZIpc+r8v72WXLJFXtPyGG8zw=","E0mSNCZ0lDO34AFOgns1QMA8OnMj56JaT4q/wU1JK2g=","FXkrvipvhBR/AI+EtZG1g+ZGXLYjjvVAGJ9eaUEt2ck=","BhpoW07QW2WEOkHCSyNqKnty/9BgIDC2O3g8HiOSMJY=","Jdfw3D4KnnEJDHK0iwUbjY++2jk9lb2OnPvqoZ7+tkI=","IwHAwxnP1VILx/lytmRmYRNbKsbNgrDo+/fIFKnzivg=","LWmS8t97VryfoU5l0AcHY9+lxtcL8v2I5CitHfc/tSM=","AeZiGpjGXvfr6ydfaW0REQ2DyoAxAUV2uqEOz9hBECQ=","BpDljtokZleZoqFWaYbwWzw0I0CihVrnRqmqbX0L4ug=","KCkkrSq0MdUNR5wtQ5QLRxNShQ8y/Ht1ZHpTcYnpgec=","A5g6/t5I+BB9PEPY7yAFAHHmk+FPdYNefOOq/PIJnXI=","LT4s890XQF+qnKvaxVnKtcS4jAU8z4iBYacC2dCDFNc=","CkEYyxHjWvCcgKditmXP2RX7nMEFpkOYWejQnGquOzI=","H08qy/eGigmcDPMOz88lQhDAqbbdlSCQAn9lrth8JwE=","EnRWyc9LBMZOoygPGLSrnhuWQHYnBMk0PFyTyibb/i8=","IvYGGHrekdzTj5zH/7zVF1NxPUMcMvJrtQ8aBo2Stw4=","IxzGLyX2Fp1XCXY4UTJyTNWq/aNPlV8vtVeMjrb60uk=","D8l9DmX3rqs5fK/DaWar3qkiFX1n3M3q0bIxXR8AjLI=","KgfMQ0PqGziYKCC8nz2N8BS9K+WLn51VaqG3VRHMi3o=","IFYSy8El0AtKJtWix0jLe2f3905cGjr5nStTsh+QRSc=","ETuU+guzenziDnR2lOGcThl68/6wPiflXOG22ox/gVE=","E19XyIiQsQkWSx8Zk0sOMHcAGqPDmbRsvks9RVhK7LY=","Ev7FI6d74HWsDEeGLysYzF5fXKodvvPZB8kmJSUuJwI=","JPhkvjXvYFfeB4qF0elqa21l9fdgQv5GyKAoAWyZFj4=","ADKiiNJwGFvBZ7vCG/Q71pVXjPxNrE9ZrSat/wO0HfM=","ASp6Iptt4ynPQNYd4VEY1gULmyNdYHRWXJOTjPm15WQ=","BYtjZF45Y769tutjkQbE4WwP3vK+gmPiO4YD/iAEJBo=","GaWvDCsAsdoHudS1Nbu73fBS/dCQM1QWg/xU+nzs380=","CiUS//lOvQBXHQVnBNXNSj2LAkw26y8poD0KamnUcvo=","F3df5y0XhavhG3Y3m9s1QciN/Wu+yjfSweas8ooA5aU=","FEd3NRMgsTaXkX27ocJSMV/4X8ueXBD2QsQfkGyMLLQ=","DM6HCI02nqJc8gMV23MjmzHfiXkVtws4AJ0IMRHt77Y=","HINgQxj3jBh6gMeLji72a0iIKgkTgFg/PBSleXw+v70=","GVsQURAu1pPiYob670B0afDCM+po+3S+W4uAHfT+OXI=","JFT1O6T/HAmyplDN/MMnNRBcAxFrJUwgvYoZYoXPbuM=","AtD+FUqFW9aD1GdsNgd3TFBa4zsGVkJeLdIaYQRcSqk=","Gpwapl0F6QdjI3toalny1zisHuv0M5k+JzdrzcbaOY8=","A4DG/+w12RsmgFLoV1By2lELX6l2QAIhET3wrcIoPgo=","L0g1t8iTjm49Wo2FPNpeJMh5peDnp5tjqK+OPAI1l2k=","EngRHbuqRquUR5SFaD5HPv30W+JJCDw/ZXYtre212rc=","L20OIFkWkZzXxTgauSY+m/2XWqfPpFzp60tnmf+QNTg=","CYe3lWHQ0kxfzWxr8RibE/E6oKr++5imwRMF5waPmhU=","IKH5TqOdlnS+sOI3t02ScGuPG+/1j0IP6xoGKZOOpEo=","BGYklE9nKBpggtMOMaLXgiXeoAv6Vf8uvWtLaku8+g0=","Dsht9OJAS01MXBx/K3z0/8riuq7JbxyTtXGMRuMvS14=","F6mIti80MxvCPFxm/lVV3Cr2gPkXXE6VJp/yZWQafCg=","L5M6QAnDhAbBA4dM3pHsAtYiBnx8rFaJBAPHRAih78M=","KcYKbufiLAuNilHPhyFdTj3VLCPIxROoyFwhIFra9OI=","Hi483XEsasA5rrPU3KTpLeUSShqSiTqPG4tt0X3QINU=","HMDPG1pne7Vq+pKNcITJ4x1PVGkam5Ci9IIg+yb7U04=","A/X1PLNMpbZHb2HUtMwB4dEjuQ3/mOBEfIAQB+ZASGU=","Jk9SNAegdrBPcuJoNM6L1FuMkNxKkV+lUfOuVtUNtQM=","F5Axl0X3kyr8gm+MKW+SssD39rPP20v9x2PQofKPNws=","AwmacqnDU7MpobxLqrt4RQHJA3unNsSYBvHaSCkQQbU=","FgSqpBvOBy9Etq28wHV1QuTKq8rxCer3r3GOussJD+U=","EO61mhb6E5Jn48Rc7wG1POfcqPiAjMwkj9tXKKeZ22c=","Euq4z/zAbO+NESu+Xfun51U09kxEYdFi/LO6BnFZR+U=","DFjgRlPYi7px6fU5tQMLk32tJAXSJaMLWnXaiuGcI7A=","GxV/LtdAzb95ivCSquWDO/UuORsROYXKajDu1YjLpPk=","DQg30JfO4AIDRdA402Vt4U7kwoM7uc0Noa/yOZ2kNuY=","CkIlpdNn4M54oSVcmmmqYm7SIkh2PRkO2d0PPTWTQVQ=","H2ooGaZ+IBoldvCv/LCUlu1/7KC4UFhBHQmm51b/6OQ=","HGdKm5/bSfyWbgZLo9oywawtS2obTQa5b3XjFgXDjLM=","IIRM1Heikh6OyybuwjHYxtm4RtupPbXv8iAKzOPcUxI=","Co+mtlaseXvnl/QuKUs6xNnqfT1SEluf13+NRMtymGQ=","JllH/gh3xz4MZa9U9kOw84RKS3TecJ/fdxVvTDOMgAc=","HwTkZj8vmTfPB9PC/l8G6FQUuWDcd6GejW44xbztfUg=","BtAg8D2d2RjJhfHn1c05+tY/ZFkFX4XhuNZcJXrWQEY=","D0+4JjvIExkMRMOD1Uh0GyRNIT30NEw9y855eWmHOVE=","Djseat+gVFCvunz76Oigi7/2u+wJnGjVdV8JYHXCECU=","Ivt8AAQuXkuktRLvuQAiS8a81TyxIk88zNQlMx/W+DE=","GTdd2Qnl7CbnJ0v7i0AsXVjKGTF1Bb1EaugN2lU6xx0=","EdCVJGHtudJMa7CK/TaWkhc6ct7Ch/axk1PDu1QN004=","HaCHKs87Ne2gmczJ6aX/JHeIm/oSK1vFS0vgXomHAqg=","GnSjst6aFsFMAmucURFSzBF0C5udmba++fRMv3V7c3Y=","Ihs0W6S0ncuq1J/lGRfZKMUzzeu0SwlQgAZKk+bO7MM=","DeUp7zJAQRb8DdYEHIqdP3mAljFDw+J18p7GOGycK9s=","HfA0F+cLyKWBKac/K/7UdfWc9pQLpIdXyGDk1a/pErw=","AaamxeQd18oWIxKTX/pMqm4WgXabECkfpl+8NixX98Q=","Jr5KuFXvosOVoLrVEzjiQoOIOXPQ3+sthYS7OUH3uS0=","AfHH0ieYblqaMpusGaI/x99SYJNg02bgr85ZE6gJ+TI=","B1hSrghQEaNCDu9vxNUciBDUD1fOTFRWngNJvd5k8l8=","LmnKFVHkipMAkxmu9A/M14uKsOs+anWqOnzcLqlRDhg=","IdHYGD5UMK6xvnc2IFBLqZTB307VUKh1Bf1oibvHCUA=","EYZti7uM+P5YXeGdgW9EQJew1euIBxwnhaw6dX6lqXM=","GOs/0PZ5OgG05KNQUFVaef1Dx9mzBfQum2du14VQhv4=","KHThYpNYUOsrHnqZhH2+SLOXJr91oYqZiSsrttuxQa4=","BDFk5cDWGK91H5RYrWEHzCwYtOJJaGFNqpCfOmZPyJg=","HH+tdUdteWYxTaqSbhiKwDO8PA6ddU23R2WdmEUoXxU=","AByvpgmGZFlpBzrYwOKdjUbEkRszNr0Vo4leENCjk3g=","BZs5qEvqqzvRbmSRFNUHrKi0l0DdvEx+cJryUfflwAI=","LvftFHVdQ+cepuum1HjkGXxTaMydf/fEJ+PJetzq+qU=","B+Ji9DlHw+Q4C+1ZibNTaPbuEBhekR4pkYRXMN8qzXg=","D1TvgNlmSHbnuenPjOMAuf2CkpJ0+O9LpQMJZ1IINRc=","F7GaDNdZfAuVqdGx86o4/t4FZeNOuu58mVdpb5Kj+uM=","I3JNsHj9QQ9JTlOBiGooSGGP/UqMCI/VETOwvnhEF9s=","CH9gKRWc93zyKMnPE30l+k2EKghP6kL82y0KFtxMs6k=","LJG0NuIiA/XN87HCGIYmAHMSt+gP/CxwJk/wZWDz9S0=","CLl5PPI/tbDuvSZH0rx9TMkB1wdHFbRFsU+2SlXkO84=","IUFD+EIRdK1w00Me/p1AvtNhggYz4nuRzwUFqJULO+0=","HVuIVgUXF2ckqFMl9ieevZEwov+ijNALByhv46mCIU0=","FMlXfAY9TfqryO7XwyuZoYcCjYZuK5kZdObmOw+Dj6Q=","BGJzN1v0Nb7d5ZDLK6yI7+6Jra6MbiewH3eSSTB0uzQ=","H9ifBjImmQOHsBfr6YX1XU9rHlulor/W8ic9LWu2qBs=","BQIIHzsSUFVa71h8tbSzB9cwwbzRUa3sqlMwL8Lue/0=","ELqmwxjH5qOjYodWrULspmqSvlH0des4b5bAJncuHLU=","Ad/kUB6LLvQYThpNDwycx2qJSXZmNjCLAsZqyYI+3GU=","GnLTIPrq8F4M9E25ML29ju0loJvBR1RmXn+18o6j/L0=","JmszNAqL9mE255mbpHNFW9kPiqU/RVNDM57VtTILBpE=","AkSOUuBpxrREAtWVc4IsO1cDCQIW1gfeS/tnjhNXuVg=","KqJeRZBlUytlqyeAtjz28D2HLqdZZke/lResYot5oiY=","ALHVTniYtjo62v7m46NrKquB45vzoVqbH0ebdJmy79c=","JG9/fY5e6AAi1FNIpa7bqGEsPPRiOmJg3ckxlSUSxM8=","AnkHrTafxLg3LHjmqznUo/qkRVHwC4PSSp4z4B3we6A=","K2e9J3vcTAjHkIuxWtOXJW78YuAyUyf4GQx62bCepeg=","CKXpSNHbFF4gvwq/1BnnBwiyAX6PixFwRZwsdnp+41Q=","BJHJOBE4G78IDN3aIDV7vQF1XVDrhprFDr+3dbSVmf0=","C75YEMM5UF8ZFlnFH+6sTW3YvIOW8wweSz2JiEA1lGw=","A7BlvSkeKIoXfxYeNcNlLFfvcORuF0LvdQzmPSKySBA=","EfJbhduEH/dkj/DjWsC2xGPHFPsrxfKIlwYIqzU6au0=","LxT3USMhDPadOPLzK4M8rgqjEOdjSGEm0NNsKeaAFK4=","JnF58fBQqiTRd340ipnazkWq2/FkINgo6R99i6XWtqs=","AtdgqczZWPcj4ILIBN/CkGhgdnzDq6iLNdR9lVUaEoM=","BCVAEz/CVIdpZ9JznxAUk0aVdh2kZH0zCxgHKNnbl8E=","ANT81YYTUyaXXhIFfN4ZMkTK0VBMThRxFWEMOv+wZVc=","J6I1L4xfiPZD1t6nJRsCfNOqBDZPrmDj5xT2hNBaiWY=","HH6VXH3qPeFEmeGwDGRRKx0N9gPFSS8ddXRxYcIRLs8=","BQ57y/2fqcHE0pQVsDwNAKUcK8zvWxxEHYMB/cczWVY=","Grtqjq3vCUBwTWEVA8nylXFcPE6+Ajq8YIqP83BEE8s=","BlYgORSZX3j0odXyVGOH736LUUl/V5ZSGZm/Dg0egKQ=","Gippx2c/ByrrLsxedQyBvQr1ZcccvQ0zZ++nd56t7LU=","FZliK1sLdfxmzNnvIOxVm78/UaSkrOhW2PaH9oRciSY=","DrVN/CNxB0avEC3EF6NkX1sbh9iIv421yM+0tF6wOiI=","GeGm+R6X3rGt8NJcuqsJofcgBu6So261nzLPME2ImGQ=","IBCBUpQTpvH0nz1S3N38dKzxRsazL4W+s1FJR5yJHUo=","IMOTWE4oV/V8I+/reCAYalBEDJNb00pKF/Klu/8ofxs=","F5zwRhyYqZ9wxDP3T2D7pQ58L8m/2+UAoKUS9r6TaTQ=","E4y3bTeA1ClCv+AEPWJb3U1ukcg75M7D2ghb8lDBjYE=","DnBESvAZOcYqjKX/Pdzkbimx5FrGqrfTcpfezyBj/c4=","FCsQ9YIEvvTLFRExNv7leVE8EmoWhIjDdsIa22KCeWE=","EkyMYHYStfvSr4SsN77hA+7hGk63EeEfrncA68Y4f7A=","FD/ecN1r3osmoIWc2lEtr1V8RS+l92tUJCa5+8lPdEY=","JGlN5ToTmmQ17PcWtBOevQHLQDotOG1Y7HM3NswhaSw=","FoYYRmIR8F6IobdxrIlZ/OOmNSy2R9RzRgFLxIb5wPI=","G5vnEFJmJF5wekbiuj3oMi1KjnvcpDRIqwWnJ1505D4=","D8LI4fVOFmBJ1f839rX615rnbX8Gn5j4/PjzZ8D7O4g=","DG9YMyMGQM6OcK9NymdIIc7nIGkL00nmRfDY9ZaErEg=","JFYOSvSf8IoiJqfwleRIkFGcm5l2rvo1FMCwZaBS40A=","DWHwYXYmhCMcX0ae4Kwz9B0xSt1qedVTxkLc7jY+oEc=","Gt+lf07EQ+SX3jBG9k0Ymnzb4IbZjJTLHQA6WSZdQN4=","CfwiiFqwGXW6mqTIaSoE115Qlx99y3c4YpUFUyJyZRo=","HAG/j4XIvMA1zOkprq4g5byV4dNhYOKG9aNzAyy7Sfg=","LfvMSNckGmZ0gDqmQlO8syENs3ry6cA2xHl4yYQq56k=","J7lF1DmNt8aNE1dqiSiqyZrKiKGAsxvphbhfqJ0KvUk=","J3VyvwspAQY4DEv1iVnaIX+eaJlA2dsP2+ecGhVKf4k=","CDHRuIr4VhwO7mlkvXIMN30ENh+a9lztfwMp5963FaE=","EZRZyjOeXIobNlk6igkbvp3nyGGf+DqNMqVmwrFTNqQ=","J+hIm8jO1qnyCb/oP25mT9JVOuhGMqjd6Fd0+GpxT5Q=","EPtsj6trE116UMVPix+1dOsFQsBbm9hKr0rokyjW9T0=","Ha04ZIFmZso6XR/LDf8HvxLTUvCKrdHUoUufqbKsBXo=","JDmv0lQqnFZLhfpo/sb5/UjVTDmM3+FO7LftfZ4JZC8=","K+pAWHlNi9clcF5lCHXaIVO4KdwkWXAIJ3CgNUZjak0=","KScS7NCNNJvAP+YQ7CoOfZuDg+PfPBOvflc2W0jZhdw=","JBwfdyGdF41NYfUIOKabbXApyhs20+s0igsaC2TENTA=","IZGReNDKmHTJD4dUB+bedC/WR6dnlomXLPAsKGPbbgA=","MD15bVKGfplCIa9RshIP84Is2KBjfJCW7+Lpqj0se1M=","Hw8wJDIS60vsa/not5SYmrrdrxNX99gbefInMU6aqEM=","DBJYGu2WOhaf8cM3Fsi6/GvpqLbbE6JYiSGCI/hQ3no=","EUWd38D1krJkJpcGUBwEznvZmFR5eSU+zcvMqj9UAHw=","Dys3FGoKBKxT57Ywhx2yUqHdhDMajTnqApYfk4te+ho=","Ie/K5ll5Bna12RFLgdYEkOtVHWsh9l82Lwggjq++TT0=","HhtWxvduPMJihLBKQrWgLFudubhCJyEAJF2758h2GE0=","EIe+TQxHvPIKgV9gzoA9X7khbx0LR0p4HIXo7RR47KY=","IMeiwQHjQnD8GLTwXSsvWloSmKJZLb8/m2mOSnkdkxE=","LUiG8gC5nFf08JwMNi/TU1rpBqEc8BHiYfr0hzSjsH4=","LebaFVG18dF43k3YidA67uRkAk/Ck2CXIVwF7hSST1w=","ANkDSL10XlzXeaamtcS2JeG4ZVnXHFWhO0qSq6IYeqQ=","FBwwhARNK8/pWU2mv4F1uVCrNrRDOn5huBW2EBpbtwM=","BnwyQXmePIlALRBIujADAoO1B1U6BsprN6OHIABBLig=","FI85/TWla8fSC6HIki5K1cIVZg2tjURrD1l+3EKh/gc=","HdH9YIvkdk7h3OBQZ4md5T//xrAPvkdaLgIipjxoxU8=","FbsPht0KN4ArEVqB1OP2j5odP+WJ5YSLu8X1pdd77vQ=","JkL99d8fr3qmovN7M6Zl8WOn33DIatqth9+rBkk+xys=","JccmuyChugjHOAjgD4Kb0/2VOB54yIux0/NH3H3FQ6o=","HKWAjD1otRr8WG7UT0QYmk9NDlbLSWzRD13jaJZrhns=","HNquoXoteDhaVumYSWN+3X512FVr/Y8kGhH9kDr0+oc=","JVsG1IUj+X0tML3K6TzpgDJWoHI+wWG5h87wYod5SK8=","HLP/IPdDqEXENf0+LRDpMS9h2kE3Q8SnnmerbDLbr8Y=","BHoyI4Uyp6c03auxUCS4oVRFX8JIHTHDVI0eclSIZR4=","CZWyEBMZEPAd+Jdq50LpXgpatJCkq+sw/ONI5U3MTng=","G/Fu5TDJyUpAjy/9Sazn3eY1CZvP3cHuQd7x2Gra3Jg=","ExB6XqKjQGrNtlY6Xj8ICaHGt+qaBJKFMyZidfpvUh8=","LVYswGUAKN9uMMB72+wH9z7r52ahktEwpsc3/Jzj2zk=","Lv0SteT6EC+9YL7cEgsdwCL4xDovzoZCiTaY31PCNSk=","EQCYyRa1IyEeGLmF+PzH6KgEvLx2K/62wlyBDO1VIWI=","IKnVIWyqwX21q0X8trRd/s1gpwgpH1yGq4TaIspZatM=","BIyCVAkJTQViWd08p+FaCFlL6C9IjWb5G0OvZg3POLY=","GYRHn/ymtko7lQNydHwbkmrDan3U9w5H4Yi/e0EN7SA=","IJzsfuN9R6ilb4SEuU9dsgU1tVLBHV/azIAwX9glyPg=","LammkrCJFbe2GTDwEfdrCb637c/WoZxIzedC6ZzUkwg=","MC9Q7OSvoX1VI3Ck4Swlo7AVGkPjmC715xo4x0w271k=","G0bggedWxCx4MVP3OmQFT/SYUHO5pzIVOrackpRwKD4=","FRA+OYjQuvYmv53lTXWwMBotOSfGXXC3I5GwYt98tPQ=","FWTnAGLtbDs/8nLeqA/z3FfKHeaIsd5IHnwHJjdq7tI=","HlRfOIueBaRt7lFgyHBtqAz4B8bBAmDIXOBKw9Qe/F4=","CIzUB/Blf8i26Kzz7isEc+UOcr9Y9U6pHspA34AXPcY=","CLjkL6HEEERn1nx6PjhKPABD4cHVN9Br7tmX4LUqvMU=","FPGz+ecgMbp04uAygE2nho03vexlx7TDMTPc4rGZCEY=","FhnA7MoULtFC+Iov4LA4EiCxDT/1wg+2ema62r7vAYo=","EPYgqGLH7JhsPufpLuQxyqTo0xgr7yIXXSlUJ5bJmSU=","Ly9z85U69uzqhvXvKQdfxOAb3Ag8A/5u+JhCy4H1eTY=","EkrpP9sbMnVANhlkKFGcg1DmmcEK54O47+wE9tDk1A8=","I7uo/ZwdiIzJ8yaPxU7v314Y1gtB9XlBF8gA6pVk9Xk=","HaJI9NkOAFa2g+Kokodv3Y7+R0+1EfRpVa0xRTQeDTM=","L9gjRRHlSWbQDz6kpl388KaqB9CTI/mUM5tDvNmO5nA=","HPg0UNI8X9ZOpe1gA+1lA3N9/iSe+/8tBfbMKFtK278=","BzAChwO2OID6R6oLlIoqlWWQ+dLeAiKYwDUGNlht17A=","Ku45pRZpwUdjCU+4xC1kkGSYX/HhddiCj04CUukIEQ0=","I2pI/sf0hx4qD8YwW07TUWm5QvnoApc03JpfRQsKQLw=","JpF9dNtxZYAOuwuwWv2M3Hm0cMHVSl6x3trYdKSness=","IXJ5ydmtVov94ZlSJ26KdXAhmFssbBln3NjDpBmKOKo=","H4SiZgL4OXCjiv36M150DiS4+5dN2diwMZx89tNJHhI=","FCn8mlOmk38VFWIoMybZ+ZVKKtgkKF5WO2fSg45dwmU=","JTJk5bRyWZOAf3mdawZtOFAjLs0Q27wB6aDVL4G7t6M=","Hxk94FDh5vxVk544yGkD6gMlK0iRINCnTuKqIDtYfyM=","Cxeen881mEAM6YgnhCH3pettWtw2kX+lFklTc5a9+Zo=","DdPP0udKxkQ/EInEwIhKiQgBxgjBpTtQPrphU4GfkBY=","EeT0PnPBjfUGaD2JpRG0k/r7xP7hTDSoND6wPRwZeM4=","B+lhP1z2VRqX7NzCTYgQ43jJtUK7WdeUYaTCVJNXHuw=","CPJQqrryt7tYoJxs2VjhPAuGyAbDPmD0zfBnic0CQcM=","EHanhV87fR7NW9x8CGA5HFeuHq01COqZTDFTDinFokI=","G1dga/1xq447LqnNMqeFadAOioNrii+U4WUUkAWiIEs=","FqD+yOK9dVWWOW8dHPt5IQeWuFvTve2CvMK45tSmHF8=","L6k5t4/TWJFguwmzWu3d60PBDdQMKsZHFZjErRNoiaw=","L+xKp1Vj97jONprC0jlIan4uWTxMv3R0/CDlFUIn2R4=","DhFY5jybffMtfD8yqX6OQVND9Uxil34o9r4wFBjYw94=","DhGJPDLmO0KnS+2B3XHmNIqby1W/WDUzVYC+Hqqy/uQ=","D8BwG5Q1swW2EMf+DGZ7M957vTMMqUDXHVzNtzMkUtA=","D+5KpwqXWApzldZ6N/VTMLkIRw+4A/0ATUNK5mR2X8Q=","FGdC9FMfpJxISAQGSYxlQWANKjA92NrJcbe5IHFO4TE=","JvFF3FKDQMuTNcu2+x5w0MhxhJ50def5wIkLkH+fa9c=","DjB6PSC9FjgeLLnQuAIEbz0zAmU18bK3wDqwdbaBz7k=","A3UY46D9R8mh4zqRjDD+n9zk3QTcDpOBYtLDpUE5Tlw=","BSDE9r3DdbqO9eT01V7nOUk4aoE8YHGNsIyj6KrmgLc=","Gl7gkbdNzHw5YlkNMEJIa7Q5kQdgDF9mZLFFt+uMmi8=","GYYlZCQIT7eXUpz6tAOyy/C2Ym1JMKvOF7GmTa4DYxQ=","A4Z8cdPPqAOatkB6tGBTq0t0BSdvSD3JgxkEe5UaFW4=","BtVjBQ9Ql3dORWQFuMQNH2W4oKneFOKwUgOXAL26I/s=","EHZ+Vogr5ICTKKWNdHxtP/hd5lE9UNCcLjN9IusRwgs=","EBcXZnT5PUggfiOWdNme45ts2JPr+5A6KkHyj/C1YzI=","DufmzjWSVCR5MvTgPTETwuom5RqDMT5MFknM4iNms88=","Jv+CxlvkN0/M11syOFNN+lRMsEIouLF/3mi/VKeR1j0=","B+iKb85gHEjVzS7FlF4kCA+4QMWsdQhBRtS6Gmpv1hc=","EpuMaehRi9FmNqsPGj1+Oa2iil3nnqX7oban0TVQuF0=","DXlPCGvE5F7qYzfNHmU5EEnVw9P+6JRwMsQAaa7v9oo=","JiK0+o+wciZTK3eekE7qRPb5CUiM9RYFa9gdr8/WCgc=","JWMMjRBGk+el/kGuZds1/T9MY/j1HvnQlI6iWV8ViiY=","KQI/xPM8kCjN+jAFADN/Zo3ipUOEemGbam3PfGRxG1o=","LAVnLpp2PqIJuqD3wx7Fbrq7NMRbJLcJfIQbs8vatG0=","H1AcAMG6iq7Rc1JL4vKyF9a2ugCsJi7lj/YiAWe6IB8=","GboIWzZ5WlXb8EDlTDVucDIbgfrim+DXHXd9ScT0u40=","GbUdL+eIMUJw4U0bwkjAkNqGBaQPdVkhb7hkgv5pAi0=","E1Vl/dbT5lEZHX7RqwEEM3gvmwekHb4UYpurcTwiljU=","IkYe17pEWWvzp0Atyu1cJHsJg1xTSoGrNlFI4Uj9Eyc=","DgnDmTVlB3OXWkEbwJNxjax36NeHdmaoWsPaFYBc34o=","CEq4UxRAKgtozTAh4a5nkLJ2hsaw/y5JSKrk7my1B34=","FDtd6DgUgUvBVTvH7JvEdWu9250xhDqdr7wpNvyMv2k=","Kpuc4m8LhyG+BtqF7hR0cnWAsCN82wgTW67uYQpGBSI=","Cqs+py9D0AZLd2pHRupuKxibfgb+jUnr9FLKRiejh9c=","Flb/owwDesRXO4oHJoiNmSKK2DJFSr78pZjCMYo+xlM=","AUoqoqWYsuI3DRQhDatcXrdYsMkXjOt/8/poHaXJvN0=","FTyT3iTgHAfM11I25OySm276DalsaHtdwSX2gYUFZ+s=","FBcHvcdpg5jln0rQTsRPq4t/T3sgCW94Ag6Uh3ipD1U=","AhOBJZ2c0YqDfcNPuVAXo/Mnhb2RzJGFidrkISr3uXk=","HV0QwTIisXFteh3vazhNcnlIsP3rGecjsr+hKS2XVH8=","E2/57bnAVozVhbJZqqVizj4kswpsRmCswLUpDTCg2oA=","Lzq0QYuwy3uFlnW5/86MSI8WzdjOpEwU3gQy5uKIFGQ=","LwNyfQiUp03JfmDL/nTHxzEbBdAgyoeHGNv1YduL6jk=","BN34i+uRamYo5gp9qYF4HfsKXhB2KFskNX8ikSj+Ja0=","CBhRnqK3H77Gxr//h8l4r0Qn57zFdt+lwVvE/J/tJjs=","EVTRqjRFhcTs+e6TkMhGaNzpkjHA9CfoYprJBSNOnrU=","AwQpjGteIUSumlCM1Mn0yBYMN6+kd7OCmv1J1qSfywA=","E2UKWNyp/a6AbnZFTJSiGYvtJN821pSnpTMUdUitAjQ=","B8zxnIuHFLGNKApMDKDozGjiF1FtHFTbb/c1gr9NMmM=","GyhHbjTfFGtPnVMLb1nNA6vigb4psyRqUP7e1kcIPTI=","HFg0emT9W+YtR4yp2P44Or6z+jDYdr1QJezwcBJXtz8=","HMkALUEZWWr/l0MQ2lvGJyGRUJJQQSam/ztoQ4P56q4=","E9md50i0/tRHa7LW6aTscriwSISH1lgiiVpSZ7NaV3I=","IaeAq7Lvr85h9NZ9p7i9+sSUg56MOE8JBgWpTns5bag=","DZ3Ii/OGH3Bbmq8fgt+dU4cKDT+N5P2LjJZc2vZXGIY=","B4868tE+v4VehAqMhYo/LxQxauUgqxL+YTgcDS1KBGk=","Bi9bV3gEpCP/Okc5Usr38FLyLItDjwDDKsiI0AyZcTs=","JajDPXrbfd1qGd2DB6k12RSPLpYkdfJB7WcFG+w4vHs=","BDFlKwPJQzOg7XbDbxlo1Qmsc7iRDfQHsDQ7ndA/tWw=","IhI605kQhio6JTlzKePcFJtQKJ+QleciSoHV8tOZh8A=","K0MzR0P8OMG9zHzH02zkQas74BZ03kSbFTSadcuTez8=","LQoLyS4QnF/XCvvbhxvOwXimn9HiRBleLdrq71yhDdA=","KZ21+eSfSs63YKSqw2q8N69y5QmtbSH2rxomfS/vxrM=","DIE/beCBvyWAhlbViBGoi469X9pbE2WlT3k6wr1NwPg=","DjJnOmi6lqqVmyXmVblCLZhxxtW2FdFNqXjRBBMvqTg=","Gp6dw97C5xLalS+0zn9k6ZHMWQoKP88kY9zvkrXtw4k=","FZrnLoCxtl9DtQdN3GZCN54JxGdp1wKLnWjpeav1lEI=","JHmyEa2egfgYD6LUTQZ1+N42BG3yFuJU3anAQ7NNB2s=","Bi+LMS85uy5fEaeG6muwUeU3N2MyndkExRmeoZ41R90=","IpY8A2Vh3OyOHc/tbOUKcnCssuQV+zQ83c/Mt3kG2lU=","BEQPsyNUf0bGc9DeWk+xmM/IuUtk4Md2RC+x8YmtI7Q=","K9bgj5bHgB0+xzwE7HBuOlbhDpCQTCmloJZU1WzDn4g=","BTHQ1tymLtLLR5zCSQIIRzznji1josHW3rahX37vSTs=","FhHDjQfLzitRV3tkBzM49Qr2r4p9TpmSiUK2poc0Dtw=","FIYE/SNNL1Qkd8egxzpZ/ZoZxVJ+n+tBZeT3EdBNhK8=","D/sB60dSdBsFtRtjMcKxoDvK+tStv1f7Yh+P/j7sjgI=","FK9kftNr5OFlk/ioEzUwBFlyHX3J666xyd4kULx9IZk=","AR4qK/FrS3DZFUb+PpdBUY8U4rbuddWWQP1i8GBtbJg=","H8L93mxawlf0BS8BIDNUB+Uzcw2SeAmHneDQI3Jv5PQ=","BJ6JIEW42STXV+7O9mYCmHwxe6VbeQm1+6pK31apoHU=","AYuExZ6LW9yeTFWukUV75KZjMrWGmpv0koEk4XDqpsE=","Jjx75WREY+Eu/nFxV5k/1YdRzXVa0xo6dbf1JCAgix0=","DLJ80jnqXW+Yis+0t96albDqqwrQzslsm7oOai5Fmvc=","A2NIMeiw5zu0V4dJp4dfV2Q5FN9HiuwMRX9i6NFVACc=","Ihypox6KEXiAF1kesGex+HvDWzYuEEc4Y3jYXCTSaks=","CNXcz9LSFkwAhvvauRanVScVa4KrRTYSCrZUjcma3vo=","HqIvgmRp8ENPnf5nSUJ/0VeBVkNhre6iVIUEWK1IJWA=","FiWZed6eE7eaqsarigLsDvJrCxaQ5oLsqlSIZ/0WGic=","JWFhM+6R53KwINTExZU8BajOogiwFiyCtX+dB6W2vN0=","EJRR/37o+/2VY7jC59+DT3JCLN1o+TcnWcOjG1FNhwQ=","KenrYdDOM8iZVLBTC6VXcfO2UKnKANC1K2Eg2kvZeIU=","F2sja3eaqWPebig7wG9NQLIRn98ia7zE1W+TN+6UDfg=","FqAz1sJmCbBi+cNpsG6+HtrDZuhTSjO2LQ7JGYVVIMM=","J81moy3Zabqf2wOCAXQsgGJQfsrWLolHZY9GbyrLu8I=","D5ADh3nnLpiAM//LH+yrCH8wLvYXUaaoSUbJl+Y0N10=","IF9wuW1uf+10Sf8PcL5pjLW4BcdXPXcI4saOS93oUfw=","G6icJ8CRz4X5l7oOPfu4S6ldRj0aWJgm+ZO/YNhnAGE=","GC6i2QVjBWcTb4OuZxrGMVjbnvqucbW9PuCj3pqfnuw=","BlCaiF/hFrlnrSzJmZ1EIQay8JZ7v/8CyEnFJyoQBIE=","Aig/fTG8dejsPI8dtM04PATALa/kKmzIMgXAwWU6qFU=","F/ryTSOyQLw6QwZtIY24odiShxRkHnK0G3T+v/A31Ow=","CgOp/HqlCNoyYULmLH1IGPWT38UOFLi4NKuJNDGipiA=","Bxza0JDdBs6kUETyWmrbUpcVlPPhYfYvQSngtyp6lAc=","EfF2WJuCRPVVYAlqGEI+xDRR1umd4WWil3Xx4Fa647Q=","JZ9QwToXb4UT2ndE/DGv7K4OmkECprv4kxeL7ialPQg=","JoBwwX9m6CoSGfFE6XrBqfb5JtjWBrvmbCvHwFHqU4o=","L+sepkgNbKqtCiWjtmDQFjtwGTG39zdR1ehqSPCu9Ww=","JnqABMCkpltKwzuGWLG2g1ee14RkezeHcrS2bMTBifk=","JdZ6dg8qF6lDXluk10hrznoAEPdx6QncOMtAEX5AEwg=","HhTC0yCdQ+c/clJO/aOWDhbI0W2sbfuuc8fnUYnyDRE=","HBJBDQmzNkNArFcbQLwddKm0KrEAH564nNyDoyZWtEg=","J5e3nGekjE5SEOk0Avf3OdHk9ENmTmmB3xtCMqmRb1U=","L2/ueArFpYza+2U/8lCsluAsZxP9xT7lMBERMa/S3KM=","AJbYddd2QlecqRcIxbzO9hrNafyUHOLhJsOsOUylsaM=","CckYsfEoThI69KQnlZja5cROXCAUdasIPaqicOQ1maA=","FMCwYZaVvwdaI3lHvEJa3xfDW+ddRE5UKIo83IW47Rk=","JtjynMQarD4OOeNUVHxTswYn7Cbk+6M72NYJeb4ny3Q=","CdnwQ5S0svW6XC5Pg+Tw9j5MF5HvARFIyyGWkB3scM8=","FwTECFg+kt62NlXDa5DLpqmixAMmH6IgG0/muhDc3LA=","AwcCtk0KdssMnmUetXkmNxizXP5i4TZHLghhaTj/Dsc=","Gd7Pg97ONQBTCYl6PrgdXiXLzk614v7+xc9o2QODKX8=","A4xiX1Tk0uxJw4EcNwY6HRCMDVN2z5eUTKEHSWT36pU=","DNcm0IWaVcgGMFbYNWrSm0ELHh3R7Q4oKuSE1rlMM+o=","DpoNsUoYKC1DmUfvdBL+Hmru/MlrSsUOf0MNmAtH+9I=","HTsA5nASWR8/5b3cHrNldN56A1ehvig1nBUY0H1c+YU=","CXRexdJM8YN2lvWoZ8PGEpoNRMA32WYS6ZuC7vPb2Hw=","LdXi6kFYjbewHMYRUohQEUrfyFE7N7F/sqRvKwm/axs=","Cz2tcxuR7Uwq7rEEEMUabpJTYMvKsgw93s+D26p+TJc=","BJmYspT4rru/L7vsaV5NLVapkE7gUchLDuH+yXmM+0I="],M:[["LLExedbopK0bn+w3N2JTz2Q4atkF4kBXX8qGU5snLcY=","D9VHhA86MKUzqZTR/bP2CuUHP0SE80vpUe4Wonb965o=","BQGWcb2gJmcMf/qQgXlRBZY/Vs4yf894RR+6K9s6wcY=","KVLBjBVVjymyrnf8OeUaOV8XOpCX20BNt2WrApBrJ9w=","I1OmCva9YeXqwsmkJj1FH60HOAZU1HkjeNr3UuXMM/o=","DtajvUgXTjcLTyZLN0iLA6Xj9MD2HPMtMVetPjuG9r0=","IRA6eqIMjRVQG+jCNQTGqRLGEAxdiAhcwuQqUjAvRIM=","L7IyVz6F1oxTbRAMOm6pFyiERR5new0c0PtNxMJ1Nrc=","MCoIW+BA/5pwmtDHMjiw0eEeHRdAmrqjT8Rd4ptUFTU=","BoPmQOYVTvc8PNax0PD9huv34pLmP6hM8KiDwvH6qLo=","Hwnz+wf39kdvrJiUa3N1CV4BSyjyOgesn8cHcUSsOXk=","BZjDjS4seN/kkHx06CMlyxkdUmCJVbWD5YJuvr0YV7U="],["H5MFV6KEmYIl9fTk37z1rCEfGxLZGwVi7T1jKF16cUo=","BMQGGCDNqb9HLfP2TWr6AE8ehiPQpPYULMofGaTCdfs=","Dbwiw+VMkkqILCIACVEjnMJjdV38s4sn70+IDiAstfo=","L7scWenomZ2RxA9NRCMxIqs1/8l17ftDxT7Qfb8NnHY=","C49A0sTSjEcghSA6DkYK9zu+zsOys6Y/JwKPLKinElE=","AowBqfAWAbtGQX7UZr5gCFlQUveC5GhX2BIp5k5r2gI=","I86OQCk5zM82F2pb2DGDoNVKJO5sq+T8f4FN+/Jvheo=","Dbgqu806G1b3/I0RbLVMVP4mJDcCvT1X5x984NRwpA8=","LnA+qa+ZFhrPmUnaevsY1GLYW2cWVtYcLN7jpyOQIT8=","FlEsFQwdL7cjXv0tTw+tX914+NDN5TpmvJAgbILEtZc=","ApiqXVpEVlt172jfkC15HQHZinXoIu9VOxdhxY1v3zI=","ID/SB4qyqPiLdgZUMUXuNNrqsq78oxvASkdgZWl8q/g="],["AY6CIvaQfaV0Xuuc1KnmLyi4txCqhf5yn56nOj7wCZ0=","EHdX6wwHmfeBMI2D0uBX74EG9rZWtF52NhgeETos3zI=","CWaiG5YVryt1Y9/kG4ufwGA5US3JyOEZaJHrd/hWtgg=","CCBGCBSY7uY8KHxvo+/N7+uhtScqd7upz921avpTyC0=","LH7L8UstYEmmQ50PKfEOJuyXWsw+Pt23fIMaUJr1kZY=","FEAi5+B3/yKizj3+mSMQfVrvBG0KHyy182GRqwTq5O0=","FwQD1BQUj0aBuCE1UJUeI47cAJ9GsAaTzj2cWAD63Qo=","KZfZKl6bxmyE9jXoy/CA63IOzUyj5Cw6uNCIYRiAhho=","IUJ7Opos3x4ubGKJBrIeJCcdcsGLAmG+aMykSGXezhE=","JLulgIanhUGo6/1TXBB8NpRteLpssm0ifmFRMfcdM30=","Af1abrpS6eods4mh/I3T0Cg9c3wY6wbgkLb9LciOChQ=","EnZELZODxS1Q/Jtaw0RCpOyOnNeu5tbOrMGm9SGq5KQ="],["GA6STXV9C+QGb+sUbtViEuOKz530lXQyZT83D5Bbiwc=","Ks0544kqxCntgShj76Be2nRrVbuXRpSk53uaGau1UAE=","F7GGIdvWHfCF2kz4oDOV43ACacffTZjOSFH5Cry7NjE=","AqQpwtBtzzTTRzDDr4vBmwSr1lJGjeWoW11cv9nCPm4=","GX37ZBicCarvlKH1QtjDSuon//unBCAtUobWK9Du03I=","D9O9t5ytkTQyt9OCjgctrcJs9JA9VriXYgByOEbGV34=","Kbn/4F2yxS3dG/DlxTLu/nBJfH30uX2y8GJINldqayk=","CioAbjsIa/UCxbFUDqrsFLnBW/iEccttR5+0Vj8BZJc=","I3qeAgkIzQ7b2erodyNQ4Ocx4yKLiS/F9k/fqbnapnA=","AG00nWGC7DDWjJvgEFh8cH9+HhdcDTJOat3tYzenLCs=","Cqu6OdIg8wYE0MRN1Hw8cN47efW6pwo6egygKuGwgMU=","Fu6YCixn3iT6GjQILxHHG3xFlmpui8aqGh28fvapurI="],["L30HFdE5EZDnsUoSQrZ5nqwxQuIfCMoCwhdV6ud6Vbw=","KXiLts2Ufqnvru/Q7rf9Vj/MLkC9Yj6iskQrVdmNxaY=","EswnRkf8Vyu3kDW/wzMqTlZqKAEfad0IdPAcVrxEw+I=","LvWEw6ru274rSxA6YelO1AqXKUFWrX3fDeQ7hFJJ9TQ=","BfmmqNZMyhJyXdFREPdK7Pmd0w5Xp9mYKc2HV7dbdy8=","KXnRrq/fl5iFYNTrus+m4rfz0CaUaru51Tl2ReboGCU=","FTiRBS/KEpD7+DJA0zT9TOBd54rfqiyWhkiODEfOH8A=","G4x+sE01Gv9Odq9/n6ERT+Rartr960LBwjUDsSJjnHs=","LYEl2+9gK9lw0R+tfP4Gw8ZPVoewm5YKuSsU9p776lc=","EJJIB/b9xOnlhnkuOs4wAfFrwC6EraXfUde9NyQ+4e4=","IwkYkZtoJvqnEkxb0V0QwDbVZeEAtpajvnr67bKrums=","HbkiuMJJ/3v5YSHq6dlVXvd3Dz3XsFYZGumrOKXM9u0="],["Aig+2NXm+UcLP09Jp3EGHkpPx9rGg978wDSKiGLGznE=","BquGcsk2BwoQdXrbRQMaXiki8PuLX6s6T144cvtYLtM=","LH1Ti55tKy4G5y+KqrJtvd6tH+9qdAoR6ZU/jo6e4Fc=","KORiDSEFNryqQu5Gsc3LIb8hWTO65O7GOe+9UfS7ZVc=","AP4N73C/ukBnmu+NWiObOhtaUv6P1+23VK7isYLWS2Y=","Iq4CNSCXl0HlxY+wT9JdEtyPX8tq0VIjpdp+D5HHtPU=","EFwLJGZgxL2Kbxs2/Dz/hqLEMsDckyHLUKu5ihDNG64=","Klq6O0XnnrJgaypbR+uQdYSuz7/AtM1QzaHOSFQzhZc=","I6OyPV7fXLZhYP0lI7OjgxQikcDg7mZmgulGsdV5N9Y=","JmNfTfcXIQfa1rfDBo0tQ4v79IZHEDn55lqchGKiycI=","K7KO9C9fratqb/1WVbNlgN6wY64wgdWHuxWYh4WQ8cw=","CW3UOoMqto415XyY17AfKi5ZNoB3BFk6xyx0ABOD9+I="],["IfYO+xMrYpCZkLn5lPOBqcAqvDzLVMXI6MnFZkxpE9Y=","HbmKVi/NGl5EluYSZKrV6jtFX0bqvYlXumcenDHlCSs=","LzCADA7kYQEFadNrYGhaOLApEqAgvEcIWYhU9lgi8Vw=","HjKx4ua1knOhE9YJZjr2swyVs2iE/l+vNx3j1WQhPDs=","GxUjRjpFopgoiQSGgaQiwC6jc/i4wb8Wx0o3XVBgxmI=","BSRu54VLLiDoYS2gIbMHmOXw0Cpb/V550/msbHn6YJs=","Bs34BVQ5rIQkxDXn6b6j8K6T6rFxrDg+0s7bRg/LBMQ=","L5pc23lkXjRUxhfXendP6vJO9gNFTAIHb8TJ11SMxFU=","AbFiXXV3hqGak7N6338iyopQKqRGLKePfaLXwis31/k=","KL9UiKUl9VFEANznIkMCh/6OTIEBVAVusPTW/mEJHPU=","IYkb7jH7e9ifDkQis8j1s5MpmvDZgl25vnPnsgCXkjw=","IoLoat6FhV1OoGV8St0gYlxtqpC8k5Q7Waktu3e2NoE="],["HN6CrO5guEQk6bzuSaVGTuBdHPC3BGkgimdWNaxxVJU=","HE3eB9D5TRqqgyrC9XEtQ4tOGAS1IJzlWULXr7JMZAE=","EWxF5NiM6uRWXA6U2oROryd11fW0NdlNLT04tYP6eEE=","GIIDZIBNIhGTR7coE1tAmVb3kz3voQWdY0uXfZ06vN4=","DISdB7HZ5uy6xRf8GSN/9zQkoGePlGmbI/dpUq+kUUw=","K2Ck1D0SzzEHbgaQ6TFxbEeobncow0stPLDLz5W7t08=","AxYde5ThsEEfwB3PvXSKbfMVb/BFNrPdMQH3suvDgRs=","BkOOiwIgRkA5p7gCLwa+ruUCxd4mnbgvkdiP4bcoNPo=","FImLq8iBDLxiZohTFRGoRz7YmiJWnUe6WGwoTkW9CuA=","AJDfzAMnpUFnLPwmx+E3BYPF+SFBdwkwEP0/vyear9Q=","A44MLinHnM9GteobxYknauyVt06LuC5DhcBYVjfIhfg=","KDMdDTHKhnWtR2fEkCYbv+W4SttMosVZmofzMZCBMPQ="],["EYokUQohU/gY8KmWyH3pE1h4BfFs2xk52UBpQflY6OE=","LPyCcS7Z1x/0/fY+5K0Rb6wZV5T42RAobBUu/Z+Vm+4=","L/zLxAAx66/s/DqXKEvQ9txNRezri4mY8aZnvuNp7WI=","CbbACjffJ3DOwPG/Yqaqw704DGzp9PluDwh5I3/6UQs=","LEA2YWwVYAYzd3HB41X8Dy8jjmTL1p0Giqu0tYEWiG8=","BBuQmmWNE2mTs/UJqenVATi6ykj2tmOZrFxknmjdOqQ=","JcB1tB6i2CeklVtkadudQXYPr4hfLG6cCUB+uxxNwnQ=","EVqRhnIzzHXRyQakKTDpPLnBavztOQzBRDXlz++06W4=","L4+zcXi1JXWL9qpSfyV3Ph68+OFCU3lQDIJFx0G6P8Q=","KaFNxLrApMUr8wqva5uOBUU9DXlyRrZHMtUPF2p8olc=","LIncdWK5HY8vfaogm3VgUgtrxi7GMdtBzF7awfsUK+Q=","FJcr/IXeA3sH5VMy5rxbTwjzntTripch3/xKWG3Zod8="],["FkVnsN4Wt6VVD8oim6x8sHeVJDJeTKXnioYHiIFmAmQ=","GLSbdz9XmYiOmr4/aIPXBjMzg1ts3TM1gLK0v0jzsn4=","IAdCSxKa3iGUxz5uLJ15Ng0TYMT7uMXzEzD5OFWLOs4=","BEXibib5FwfaLfXBiLr4DqL0jHA2FJgPp5iXHNjsYPU=","F2gE7Bz4XTUpg1EkXTIjZUaDjZuYz0JC1gHH6OUBtJs=","JbbmXpD/v5ENGf464j0Df49k2p/j30g/xPSXfKNqexw=","L6KveXDhMffv46fHiIkKuGD3Z1HlW0/2NN1GzE3mYNg=","DI/U7OXCBRkM9shC0Wg0RAeb9Jg11ci437sRr5VsyvM=","DpkvREY+Lf0mfmpKHDMD6noRhiUu/Wyfrp5fDB9tgmY=","AmCf+X71dP1o0Wo94IcsO1mluSgljdFGmCahkdy/W9A=","FdxXh5y0HWAV2piB+Ui0DSDw4D+th3RthXWvAJyWAz0=","BtA5tk6C15dd0ho3te55MI8g6C4jSJOC7C0XYZBYeJY="],["GI/zAxlBEqcDRSfMndC03rCWDJwQbOEVF43XCH5OjAI=","CzAN5bmcJ9MyCR+PsNl88EqGpR1NIDd4jg1POOj06rI=","LFPWZ21NTIfZ6vXU2gjR6Y0QOjOI1Zp8DD3lHiYjqjo=","GfUQFxUWKXZ2bitXpYZ0vFjhuivhilmwegfkqT4DgHU=","L1hVqHajf3u71hBKzPyuUH6d3NKnIZtIenaxfFJbUMo=","LA3kSKiN/qrMm88oULb/T3AeGlONaQmLyUCHzDWTCWY=","DOWHBm6uDDRcM2jFPf8hcM2wgb7lKyQ6Hm3m1PgkUdc=","LOqYzGSr2Sbflj2lfy70xDQUHLU6xjEbJWbtuVeYJxM=","LHrkddkMR19zwNKb6IidDEuFNv7mwDiZhL+eTbsarm0=","IyOP2hQXMC3QPOVGB3SWECkpRb3b1YckFxT9OWSvXxA=","HGdP8urSfOAC9L78etXw9RI+WXk8D+IQdegZzlbOHoM=","Jie+aNnNDM2jgo1RYhukCfms8J8anMUDop7DBvhgauc="],["CD2DKt+btKJfaGq+2p8W6/UyY9z570MReB0Jkg0JTq0=","BUGva5ZSRmIITRII1xtrKo1m2RF5dFshNnnCorvJSWg=","LPLJksAqNjNP9dyFFkbufaBLROtUTuPA+tuNxe7ypYU=","BsXfj9Yeyi+0kj8KRt1OQWo6O0jBDe0TEz/+q2/RU+M=","GiM8fOv7DG63Lf0HqitTfM8pHoQJOq42zGgAL/uDY5s=","BfbWL1RRjwOeeapya/FaWYNYPspAYkBUAKzKWMqdIjU=","Kwnek8bjFIz3/1cxyOFE3rtmyoluy+QInS0iy9sJd34=","Ajns2SUXglF095Y0XbKWViIjdg+xuBwJG3SmpKgpaKQ=","KUXLheNFMuOiL8V2cDeXiTzikNAVZDCo3OYcnfiai9U=","ANO+alsSvPG8cFwgww8yC4iBxsLsAOhXaFwFmSYqPPA=","Eee8SjnScwGWtsM0+ZdQ3lu15PvKXWoZ63/hSr6EXb0=","DHyduVKGX7lHD4qhQCU2yzuCJ22eKICCrH+DsQvLbRc="]]};return Ho.default=a,Ho}var Id;function XL(){if(Id)return Wa;Id=1,Object.defineProperty(Wa,"__esModule",{value:!0}),Wa.poseidon11=o;var a=n(ln()),t=n(un()),e=n(ZL());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Wa}var Za={},Qo={},Ed;function $L(){if(Ed)return Qo;Ed=1,Object.defineProperty(Qo,"__esModule",{value:!0}),Qo.default=void 0;var a={C:["E3PHcc3xUSGiJPMw2EtmiO+f4AOKO8JqKOMZZXigAA0=","Kfn72jyZmDYBf3bhIa86ylzni7SPqGemqV5bnbOHUzo=","HH61EWogB1wWm3htnchqJO56JSW1ZbvCYiCajNpJBSg=","IaVJ61VPD4WfYdaPG2u+mqNEmmI4VGu98qHDCMnMUuY=","C1P/9wE0fRud+YtGF1gA4NMlCsbUoa+nGjSe0ZWHNQg=","AhKaxHQkFcAg2yRzmZs039urujytRxNxj5XmNG4Vg7c=","AdKPMF6LDsiNo3yCUbDI0jC2i+qUAaFfUSTWTFRUvCk=","HtMB4C4/yTCZn85tN0TCNZZwDANyBwWTnWHO5FH6/5M=","LtsYMpZuNOru4JA4WK/tsT27qffIAsg+5ihTDQ4mrhs=","Ej2q3ckwxl/Ge8d8qL9BI/6B+9BQHo+JrDGmmHVth9k=","K8w2NiyQIQrPZ9X+IdUxBOnVR40FcUHTsXJZ/tjkqPw=","H6koyrWTggfomOYdmcfWFiaRRPeQCBWxcJX3/3bjydU=","KcLxz6cqD7j1OmMehM/fXMGPtCbCVPWpBf0+gx/HyDc=","F6cyrRPxtqGv9CZkw5C5AXxBghAnPH0Ei/MAqnvpxl4=","DBjG53PqfrQ7mMrGZyLenRNUhMbPoITCpRLqGXemAmg=","GVTFwjjYowyfG6T7lj4JGsrLw+17SY3PZgD1MLZUXkk=","JZGrd4E/NNig4LewyqzW7xed0xRZfP3ni3SGnXTa1gA=","F525+4qrRhnmemqGZ8e0sy9A7YSNjjO3VsmnlLWTL+w=","MF0BQhS0EHwR/YOHBFhzjgT7jcTnRwd8DkYvUdHFlXU=","KYcj1waUV4/ikWNYmHYrzryprEVjsSuQ4f7092+be78=","ArM26bOLUExBKmgzCa6AJNCAKkXQbmSaXlNxmqspqRM=","CGh+aZtSexNB+at/FxE9ng7KBEMlHvNfCpBXBPFV0zk=","Cl/599RbPKm3mxjXnbQwfufErE3eqajaGjarO+BXyb0=","IORHR2ATGSI1NfRWbNyGylQyTFZXJlNTrdfb9PJQRlY=","AlTcMeOv0wToXJ74+rwaHNGkx7m8hgzpzkNsM6ICqW0=","Ec1kktxSDFfcPlXjP4o4fLwe2joUkLakvOvZTgdCy/A=","L5ixAmWjBHW7A0jUp4fPtmAxGaGk/hXDbcmGy0+MfPE=","FT2BTk5VrXgrzO+ZjJdCUMBzRl73B3VQJG9pxYupifo=","BNsRqeoBSu0u0I5GwGMG6HExdE1l0onlmWT5MNE7ntY=","Dpqabe6TOfXecTXKMiL9IjDD8/PgHu3TYz5gaqCxod0=","Dm2ORkv824+e5g+x8vMweZEeegc4VvrueDmIEcuXZ1c=","Ajf+IVEYZDehzxkBEGriWqwW6YRvnUH9aHlteijtcoo=","Hj09HuqLdhWpiX74Yil3bL2h2EiqWmgJNYJec/H1qoQ=","CXJBRMekrsDdy7qfmp6eybzfaIyj9YcPHubhdBeftEA=","EROZh+EUdGfZJ9sl7siPDB4CMuNIbNmgFL4/yM8GYSk=","FSTlvs73LCaX40yAVeyBl0rwSRLXyh34PmWggOqWJp0=","Bk0SmbEbGmu1Cz5ax1kqBU/XI4CvpMCSzijsjDHoDJk=","Etn70nviTrYgt3Q8/FKWVny0gECRoYA92Xd4ip9Yjkw=","CI0ibmnhsnProx1NqFdghcwP0NquFUa+8wB5+EtlG8M=","FRJt4YchPrtA3OXaGrOtxYoxOZIMGUl8P0cRm6pQZw8=","EWnB/nObxSjqwWpSY9It7kpmqZYfAe71FoTveSEmhZ0=","KnAGxoMJT2+E0SKtV3StLwyfqAtslj4vo6Hq09dPOqo=","JgfCLKmu/ozeow//BbBcT+x+2OkwLQ+VDNlAWulLslg=","JFMLCG9EHjg082wrEevAqAnb392DF6OERlkxwcWMJjg=","BjVOAtjE3peoEUgeOQwm5ck/wpoqGoSCSs5QRnyaplI=","H2+6s+LqJ5HJT1/0PKEolDZAaSFRspXc9CysDYqwdXs=","F0fKRbcoLvCZKPdkn1zIM3U34oNObIkFwa5pAI33C/0=","A+/UubTUGXTjaITjsQVacFq07D+xyOdvguA1mRIApjM=","LZzRidR7CxsyyaJBLbalmxtHXckevS1oXJazScIgtLY=","AcmYJlCqzRpEntBGBb1l/XXOOT1CTJdRgU/QNUG0dWs=","JD/+qoLzwDhIHoS3KLRZ6yITWYUa4ibBxtanuhsf/bQ=","BlDar9ADvtC+0iutoxvqcJSRqDtVyv8wAzmIVIHcZeg=","FtIMYZZ0Iot2f8YlqsZQuq4tDNFcH50BZFRwgrMJnfk=","Be6NXWYdOfFb6SP6KUTvKynaP0gx6x5PLxwSMM9dFJs=","I+vI/ED+7FJALhj4gerOv+RB3iVic//lUe7g7X5NrXM=","KSu1nnpscBFq17fhGVHDuLaxsTDzW8bEKKlTPAA6cOg=","Ez1C2fg9BU20PkNU0b1+w6ibjPlHA/3BKVDZ88IaY+o=","H9a+0NNHqI5G/LQvM5eusM8HqOcUZ+YRC5TJD5MjdF4=","AjsJGgwfCCLIFWdHqQfIp5uMH8q0o0IGIlEchn9513Y=","B1/HO8tuosFY5yGpqmw/HE0Tm1zxt1LIfZb0RCBRLu8=","AX47y6Cy0i0nzau8s2DIAg5WwBwHnLVQ4/Fp+yqaRRs=","GUKZ8Pt5UagKzplKPqMSPm4Mty1cRv7ilupvjnOtGII=","BvDlIpJKTPJdkBHUd6J0bHfozHcVC4e0LIwRjxRztRQ=","DMkcGMX+4bV52gkA8E5abDbWXw/Jd5kyA9SzEcv10O8=","Gr2UwqWyjmYTEOMxW2etv1Y/2waSa23E5Nk9BBZe0wk=","JBQskAGnv/82Pz9n9KK9Eo77cuhG47oQNE/65lXlby4=","GTG51FI8s/eL+89rHd5oxGASqnR9zXo684LteBJS5Hg=","LOO9EWGgEqVyg26X6o8GlPk8lS0R/RGo6Pmknf+d+F4=","FaCfo3MEHCOegUllfJi086ow0ZLIfAPM5HorJFPVpIw=","Cx3Dj3SnG32Qnlzn/lYBdoc4QXpXhomNoxb1KJmK9mU=","E+oi+TFrtWlNaQJP7iy5XuZDxUVJbfC9HCVJDjTQ8fY=","H/5YvRSxK5+v3DZecIGjlalhTgIvf017x9/JdLCq1x0=","Ebqx8YbNoDwB6F3+3UC8XUBuJMpYswWmJXt8dyvOJEc=","FAB+stFEC3uOCTbHlnIFGub1yp/UBVtBfwDJYyq+MOw=","EDfwGT1A9oLtliOnct5nnwQxhz6OC1AEofJCrJY/7nI=","ILGL52DofXxhSbgQ/klqv3eg+EDuV+vP4c93I2M4+r0=","Heg15mI/QmcRJ23eeiocIKYbkQv2/c0zs0Noz5bpWi0=","IRw4BQsHxKdHxdxEk5zh92sIIMS18HpH6LELBeepnU8=","A3L8LNgyAV4RnCoS02Iv1yEqSIfkvRJ1wgX64uF/RS4=","AUON7newgly+9rD0EumnJ31OXcFhzpgW8CCuTRQQ0L4=","B/Ls4WwSyXV6qmCVPe3XCcUT9vgzfiKWimXNULDZkhE=","DFemnQlXXY4fUl4BLXNym8iWSbW8QmDXPkMkhIRSUQ8=","HI0Knbd/FPg1MJ8tPGghuZIaNmRooNFe+zCPV85lhRM=","Fp2gk+els5vwiCdwctT9WNgCFbacomLMLRKl6zDAC44=","LzA0qyCvD9g6xgsCNmloZvglC/LXZbENbaLj7x4teHs=","DjG0+mJ90OXy2srxBYZad3gVQ2IPPrKP99wQJlZYMHM=","KpAHEm9n4WMdKVEvQzpqC8uMlaNr4WS+X6hr6f64pZQ=","CAr0AhW2B4voT7R6zXm1nszv6KkramAz53LCIYO9wNc=","DeiiNNIIhh67Bas4EuXE/dOeetqQR8km77iOHL8uu1I=","IqryTA8eP5QWBqUnN23f+RzGsK3AYu/mQfluMAWvNlk=","H09bdwnPWEvwcEhh6UI0zYkJhR47ISxkoLMFH/qi62Y=","EpbUZCfrLjiBal6BcTNWXU9t7U63K10KtVm9V2Z6ovE=","A/qGdnwfote060W0olWxKYxV0EXGlif12K3rloOhKb4=","CAIoBavgK611MG0iZHjknSX6z7yv9kk2Q1LUqI2Sjzg=","HVizOiqWOLoYDNNgKTCKLovn7Sc0QdXSgEVrLTuNigo=","H4yuc1nIAPMHpiW2b/IVTGxDZOhcqOAZEaY0qkrWV6c=","A5ymby/X+AwXFxpO2Mgq48O/BGLRRRqfWlh0iVhxe/I=","B09+E+dPK3sxajg5lW9L8lQerySXZTttsakzXabIgtw=","H2PPEUjA76ZW1a+FDNAqDYea14hs/K/h7FX+a/StXLA=","HZv268BGS5y0dYNJSie0V2PXpiKW7MoX776pc1anPiM=","B2SSh0YDsCGJLlwqA8cGl5vlV/1O4uBAeS2hbii8isY=","BwEjOMXGJuJn921Cg4iUC5AOAIXHhRZtJ7fsiWCCUjg=","CcKQWeIBPQzizOCyTjlGdlqV8EBSbDySJNKAGhvU/4E=","Hy3gNQmBqzdMm6fqGmnYGyh8LJ+tkJUgWrIVgroOpkE=","DFK6uG4lmjvYwGEZcCiHO4AbTFbqgDb/laZ/Q087dCU=","LyYuBheGcMT/hh9nDHtR755ikhOmQiAy38smdgQmo+U=","KvaqIzVAARRFNDXpcBDb5weGppGl2XLqIRrxLUzjhMI=","GMrWVWfwMi/W8GJstcr1Z6RvqhItMMNzgLVLa10Bqz4=","FFZn4ZBn3dvUJp22ynbQwNflfxlF7qJR+KythuhJhY4=","Lrqn4QGUzSlXoT0aNY/JPOVNi9Pb7QbiFbK/JiOyGEc=","KLhblZguvHbEdiZU+TLbAx/9U3ahKZtFuoBcS04HVNA=","F8sMRzhB7S6x8aHd8CG3T3PzQXLgZbJMloTdPP/DQKU=","JPRuy4WDypfFsBhzbSJ/3nw50ZeMpjyX456gZYjbB7A=","J0tcQJ6pgJv38Ep8te5NMi0alahsHQlhsV1KJKcYXew=","LLqJYNVD/ZhGN3NI6lW30EKzNIUk12EBg2ZGYn3tRHc=","J/AuQW3XC0SQf5fX7LlFzrurHU3HPIoYwAz7H7JGmYg=","KrIYZWkSKfpEC2UorXw5xBaTsbk57Anb7t8m83ckoVE=","KRDakW5DjASDfOeZuBsOl5LB6tAI2S/PnKhnsWX14nU=","DwPOmDZhEd4SzL5aESHJ+DCVGaflIwDjl9nZA2ggevo=","I2sDcefOlyE9iutmg/AvRARKH+2so9FR7dMSGkT6GeE=","LFDKtqhnsegBo2/7zuUhuDr7xYC+GJfcTFts1d87NQ8=","DL+MjczYN9HbrAkVHk7jePk+hUjZI9iknm34G5w/J3w=","HRip+wASRcGmoX980k7YILDb7envR5gw0K5IM0blS+Q=","FHa7HDBgP3+UST0uAWvuYyg7Kn79mZ1ZCQxDTIiDftM=","JNVl+1eN0lL1anoNXY1NHF1yfVI0rEvZqWAEVcy1rVg=","DGjn6VZ96rjouVBRp3iEQ0OOD1++DX3kNvo8+tWWNp4=","HOWyWlOdPhwMXc0evQ9O5xaEDUTDrhCaZp6s3cSjVhE=","LTIQ5mQH9sND7vKPu3uuWfYm23O+xdn/BrqdQ7qE4gg=","EYqzQndH7xpFpgnN9+cQKvrm1BE5LeJU07cvHUUK0vk=","C0XHDShWx+Wz/W+PD94af8sUoqzOT93f5Qs5+5dCO10=","LOfCutVggVPF0eQO4XzDPvF4PZsc8BU+SikYiU+qRrM=","CFS9Rv72wuZICzsJmCFfVfTgkKPpngOlpkdC+Y3OWvg=","Fcd+dgDfcR9Y8vD6iLfUNXcBBKGWB2t05vXXqWyOaT0=","Kgo+447f2gdhu5swF5JNCTCUeLFnpgmeVNL1oiFyTtg=","DowU/UO5rOK36Y4axlZZzTf43pQZiu5C9b5mWXZaStk=","FjJ26DbE7mq5RmYTxh/Gkk+u2c/cCkWLyVtZ/zgeIeQ=","I9FYSlywt0wABxxofN2stKYysQTeQVnA4AxTUtB4zP0=","FWhbyQOhxMAxzgFsCThgoq4q76v6R9HykOtaYoUi9aA=","GzP1DpDpC13KyxoVhkHWMxGXJFfv2UhYNLg/D6BCYKU=","KDgMVc1meJTGOGR+aqFLhX0/McAxWrMV1qlFcwTyHcE=","KdEIVB87RRlD6s9yOsxohqqxjI5EhYCPSx5VpzzaYkY=","HUwsulnVVRvD/pdq5awJ5bco0wW72hk6/CWcmZMvlfA=","FqjWmXBWEANlAzeqvl5OXd+ktxwbnbjMe4J4A1nHDTM=","KJ5QwfCwvd7cmLfoo1vmLxT1bdXXNFv6atDS5Dv5LkM=","CkF2WlNS7L4LMnyngnqfxklee2wULf/KAD9YODxt/2U=","JMDUI3igyKYTwEAu3m3pvTUn7yuCzupgBuf3G/d2ZtQ=","J3yuUFfVtaznLEfmDMS44RPtcGtdkepPubE/0Z+k1Hs=","CjA1Z8v5SWgJBDiiPi/SzLin9xYiv/3BwWhOiVjDdl0=","H37YwmeimmnZRQ3HSvr3aKiE5Cw34Ob7TUOFywJ6uUk=","CGxLgwFla2rLinNQGVVqJ4pgMTBA8jboFf0i6Ec7vGU=","J7Y/vClZR2Db/++NMP70mv793xUEvUh/1igtnj1uMzc=","ALnApFYhcW+YSa+KPJB1t6uDnCgoge3osOWp5yN2bXA=","G1ui+87ZIsN5bVe0li/SU/WrbiuRNV0sCo0iYEBlI5U=","LhrVfr35MmA/Ubsd2rIE3AJuE9xJhnkfVMQDDKxvGTg=","L4ZeHfEWmjV3H2FwRkhfj7F6/eOyuX0er6+9GGKsbhY=","AGKs5b44DF5DYbIJuAvv3K0FIUa4adUN1YCF6mXZ0UE=","Lby7G06gjjdphEvtUiuS7gH+zVs/I3nCS0XVmEJTYzc=","HOPZADTf2hHpv32Stl+BBIPEiybMoJJ0e0zq8Hx7qEc=","CGWDpZSXR0sNHrDDzsTx31lq7z22OP7hiV0/WlhFJSw=","K5hNXJG3syD38pe93Wh4nvbKiM/tOVfSxeim/A5412w=","CO3q+d3NJacwdRsyzUPGMNqDEQHrMQOZNW5LUt8R/Cg=","KN85zH+WZyVpz4buNzYj2p8cWP8f1m2TDMI0p+lZxB8=","Fa9qhMaxQurMWBN/s3F5m/Ov8XgEVcMtjTWYz7kbJN8=","Gc8NyiJ4GpvVYXNJHr69GOyERtZxdWO9OoDMUqG+aWE=","BODgtSkjv/i2exIQ8joRJ3M3mWzlAYDrqXd1YYsANVg=","FasKX9orUZHMK9BIWjDC51tUC8OXw0NtLmS2otqaxJ4=","AY6D96a79Ff957i6T8U61IEO4HGUGWn4e2K2xuqPVe8=","FxsFOc8dboUZeJ++sxKStr5gw/k+K0UwmrVZqFTmM1U=","LqdqFODRd/NV9oHIIt4rNxQq5uk3EkkiZdKZJHPaECE=","FEKSYntkO1GAxxDrptdKB2zaXT/4NldumD2pt9k1ZLM=","B60r83zh70qPrFtEMF8aXSEn2Mb/Fz7ELw5CHqU/fBw=","BVUU3JsBSArle6JP1d0S8im7VZftz/yhRRVq8zJLDYQ=","CwWkW7k3fhWXUH/eDbv6LWQvbDWOIz7LjtfldexqNKU=","GYs2nwJKBWGvmtegz3rBBwQrQvkwG6/i4bTCrZ5G+oY=","JT+CshrdqoZyRne61KTEZKxex1x4dV++xvRtnvc8LwQ=","DvJW6dXp49ofVtfSEV/fEO12dOPOy8yc28tGx8+8dCk=","LYkmVwsIAmAWTmtmr6+609klpGTpldeh0C+QxyZPezg=","Gc5MNsUSEHh/ccuwgMw0Dy+3MswZFhjVJUALL9xRaJY=","BZ35B8n+UknUhBg/LonxAuH5l4WFyItXuah+jYzfxss=","KvwnpBgy4L072OlHKE2azRrHBQKVs4i2tcwxeahC+AM=","BulgpbI4VBdCnfqJzRTXeHwHeOTFQh26LrppSwhUohs=","Hot5DKLQgWJEhqz9YTJF79cQ56epCKIz7Fr+EUhHYJg=","L2jXjfTgiyPJb6lZere6WheFMpo3AFMwDXkqBCHPOuk=","Ci6C8ML540Vomy8tohCNAYzOMITuhdyD1Xk3+s8+VsM=","EIsq9l2KK474FDTXNkbP9sJf6Ou4i7do3ENcqhkUMRE=","DC+Q63f7KFXTm3RahdPJYMPQwe50DYd3lxyTbdziZgE=","A9rdxZA949UwLHoH1MVGA5+oTD2mz06snCucvJTbAFw=","AQ9NSBiIBdMSZzjSSXbvTIBZazxjgO/7I8s7PqyVQTQ=","BnATF3CGWc50UV9i+RKOqaHP8nluGOuer+nC7E+eQoA=","LdA0nw8O9S13YCA3ohHlxWXgCR4BBy7whjAFbZB/xtk=","GxWVfYyHdAdt8W1J14ixGlrUaQy9gCJDf0AqayXrVDY=","AqkqH1DEZYtofytsivtTI8m4490X/c1cQOF9tziidZI=","DUyzFvBy/I4kY6SkLRaNbcBOCxN/pLVyFtHyul5krVY=","HPD5v5DiB/Ogql/BCFOMZBxA4JUsb2bmAk+tvSJI4Ww=","C4HAPmgGpJqKXt/D20v3j9S+uAZ00MiN3e71Q9NgCug=","Hb0y0El2TWq29ne4nECPn00/KbWhgUjMjVdA5I7MnTU=","FtUrv4OESLDkTCvwUinD90G5ZnkEOKKZe+nMZgEDrZA=","LI74gNV4jlNZuX0b5VQwXgz1vVXCk5kSgb/lQBueNd4=","HwB+8WfJuZ6UgAfdgGCFcZK53JkhJ8I1rsRqKzI/LxE=","DNM2g+wIIHxWqAIQ2ZKXMdIDUmQ5SEGytvZcYVGc2EI=","CvGw9w+Tu49Td9tlF8RIKsk9369gUeaP5znxYbQ4D9k=","JNA9UiEY5UTATUnTiv/qeJ5J0usv3dFxYT5p9OsHu0A=","Lx8OS/mtzSpPGu5c70wtPyfJtIJHlpUwJQJ6N5QkKOs=","JIpBLyh807NEiTChA5qzIoGVj5mi7sDC8aUqZbPlibY=","IeN0tF2lXB09icbSFz4RRpmSuBvrLT1M1NFgONy6sjE=","HC+FxC9qMxCSygM7SuBqtmfNir7yS1RY6xDlM0ZpSmU=","KetVXd1MdKuQMQhBJ7/CUDbxd76O1i0y7TWXPT3pTnY=","B9MBAd9xHyU2SpVacAL+SPR+wKfArNVLoMtVHJEuxuM=","Kvrtx6ZXlByed+co8gLVaOStEjD5HTaalhtNzU4Vo28=","La9CamXTfMgRJcPRzKUnyynpRRvgpay35PyBsq+uWoM=","DHdOgSeVIO7KcPins9d5m97oNxqfz5AtQ1M+ZJx79I0=","AwghKgpWysmVYVFcg/Adw2hL6KN6JRl7RnrN02fuAws=","IPqUR+kuT2gCXhvsUfEV+2UyNaukhPoNq5ysSqdE0pU=","L09kfvRQzcSzlUrRTHyxw+CNFAVJvDbIL3OSk86LYkU=","JabQJCK54AscpeEVa4e0zdpWy7s0H4K0pj7NQa/Hm9g=","BWWDTHzwPI5ULxwyiABrqfNcVslUcLuGuWaNAGPQlcw=","JKb4jV1wkLJKFRxort6fNH/t/6pYSqQxstDpDaPNT70=","AUsNRN31zqV2y4LTmcjkpT54IltkbSXJe1BOY9ukzOo=","JR0yC3YDwchrYQJJMhnLH3N+T/m4TO9wUON0VujwOs8=","I4wr7Gz604jUd8VcDd6rLTJoFV8zY7ze/TzYrl9jdms=","EzfXeL8PC8ABrZ2/mZk3nMCN4O1WdWhEjKPAw1Vdqdo=","JprjX36zhK0ZZbgvjJ6LT2XTzs/XZ+1ECKAlrHupdEg=","KwHYeXz7lhbjRxkhthDceMZK6asv5IcBuu5eeFPqGJE=","Gsxfid/CSgNFgVb/exVrIvQnB0aQDXE2ix6K/ppoTNI=","CmbW+Rn33OcUTsj2bOzo2+3GIyfgQHq9x71xBg+NW3g=","F5eOeaVcwHfUvJKzjuXTV6tKbGIUayqErNmvUJVOjKg=","Ecu75mu02VeBNAgAmEOyyWzXsC/UtEnbGJXIM6ZK0E8=","C8eENSnhPb4wQhCSKulRWi+BSOr16DvQaGES3GRvyTo=","I9ZE+rAdgGNh3mZci8bpctlljSmjXpYgi/U/j7TKdww=","BINxxiALkjsaCtPwCDENvDUOHjxHDSTTrSPrQePZOzw=","ISB7HUekusUro66QeMJl5c07EaEmVH8hROUBwYplb2Y=","Grhu2mGmvJYG5l9FXDxI1BNrA9jNzmledQwlcQRWRwQ=","BHG0HGQYtq+t8MlRc2mwH2K6eNVhlBxL6qHemCdnZEQ=","H2erPXFkbAOc4J7nIyCyrXVf+9cYfrQ9WuCFDJI85vw=","HXjaVaTAw/147zS0MW7d1/NtXY22VRvNvINrpxl9r/k=","FLNyV8H4hSrtRIA2r+WbOhIVm4mvpeLss1BjqpHDt5E=","ALkEseBoy3cSu2Oxch2/Wt9bZxfmsN6u//HyqYizpaE=","L8EA7LeWk66pHGEYtwIJ+0RcX+rk9tHFiGAYoO/kqNA=","Cp13vI9DAjO1n2c3ucAZeuzik5o7Y8WsJMrTG8xwB0s=","H0vcaFiCrhFJr/x0+h5MphTNlJnXUCemynIAAApTm5w=","DdEbG+/ikxEMxPa1wN5vrjpn7axOhLI4+suKRF+3P9M=","IQEoZKRLZHnUS9seLpd2QGffaeB20eHDEN6Sm8weu7U=","FCzqk+WUnAbDfayItmTtNqi/4avMtLMUXQCHQQpc+P4=","JdB04x3Qk9Q/o6OmtcBEF31Dznc5rLnlgYroM56TNeM=","FSNo6N1y6b0/APpHrQGXCWWZu1uj9jQBrps2ifWvuUM=","IkRQpvJN2EJ9jW+d2YVjAxPspX1XR57JjtPuvjoj5Q0=","CO6L7RpTOBEzCKMs9LjwpCucEiy46pN83B4xh4VUyBs=","BoRx90V1hnDK2n8jAUDgmssKz8I3z38x4GNVO6sVbdU=","F9zu2ahhraKXAxj/i53BMHShET8wdu193uZ4RWYtVZQ=","IclRsoSfUTNtoS4ZMMuyzUB8XKC9+c9uLuiKjmzzbhw=","CusVvdM9CceA6xq2hI3LwaGKXGofJQzuh89QbUbDbjY=","A35m4L97fH97ALtcBnIVViIgBEyUv3iMQLSAb+hqCOs=","JwXSl9tKtpOmXUzHPtgM6sOm4Q1XEjcBpSdpCVZHuwA=","DfghsaOH54+OI4jK4ClOiNDC3/gRQlqUCmDgKFpxs8M=","KVn/ypRkJ2akbNg0DbCOya2pFdI1QGiK0fJeNKmuOv4=","Doa4ZVMGu94BdIF1tW5myjZBD3WOG8Akc+QlXYgSCkM=","CPlNwSB24b05AHBeiAJFphSe04+Huv/aCm9LFCZLX88=","KWjkdi6p5u5QE9lrq7JQ2V8wD9gNhtIswJXelRRZBQY=","FVbCZloOdMwFb9RUqFo/vstXojqHncHMlbmNm8SXAY4=","DOhqSMBdQpvkgLnLzCIPOinG7IZb7RCgeDXG/mvuNOE=","Iea16aWlxXFW37jPWoeF0hF1mcJHr2/rV3u0TnUkU04=","BETGVZ8VpdbzeBvDkuiOisWC5IfWDeEs28NXyWI+SsQ=","F82wg9shccdiEZj1G30YkRergOSqq4F2VjQuGws9wfQ=","DE/NMvu7z7J75BqUkuxVQllpyRQvNlNRx9I0eP1os/Q=","A3pHoY3qb8dl5s5s571Z49EQOracv5IG0cL/TsA4lXY=","LBS6sXp4ugAVN+N6YwNXq+Buy9vSr3QkzhIl1KRBS1o=","EL2M+6zVBf/Veiv6p1etPkX2PvN+Z91UHvB+lXmE5/k=","DyoLamZIa1X9gnOkU+9iL0wdTj2XXDTVOMvYRAo86cg=","KXtOtIQ03FNC5MmiYsIAMxSAoCEJFjhjgFu3D8epJhQ=","Is08xVK4MQlUtiti1PepGGTmts959V8kTThIBJRqd7Q=","Bc9Jbq3I6gzLNlAvRDyZs0e/cCPy1/vOUS4cWARfuyo=","HgrosILTcmGQpoePS4iJ4LYpfSfePxg6qanyyyq7kNQ=","Kygv/vieHDqQw1m8fIATO59jQhXDDB24KglQEnk8fBs=","E7rn6DjGOKQamWGrgVIPQIyZIQcNmgKn/lv9HaHa3Ew=","DNwyDurXC/DbV5ZbKfnMoogm9sRNgk9/Ei5DCqTnRs0=","G5TtiR46c+G81rep+jNrSFpag+UtXbCLcEr9jUgTZlc=","Lo12WnD9OVM/HEVtsStCDKwNewhr8ZWWxgzWQGsHbGc=","L2kiD9kgm7QbDvlCv+sxE3CI/5ozjtKD3p7DqIUOlr4=","FQbp/ewUqdwD6xWdAR8Lq6ZS2zZLACDzSF2kDvgHnr8=","LkMJOgYKWV3BMhOuchHAQbKdOUAdu9Tn/LA0GRRJKgg=","F0JusCQV8daCc1OCRQ78dqBcagIYZx7E+j7y0DmA2yE=","Iqio9HUpQzy0cay7ztqbbdTp5XEhdFuGV32o0QYXHj0=","ENBmrwTncI5RKjgjEL2aEMutdRpyHGYO0PgH8Wk9aCY=","EyLKvSG4+YJtqEgW81mfIKMyS/R7RKvso9jmomv2TI8=","DpAzKYt/uoEGmtcIpAHMrKcTwSKnkHudLuw57B5YNNM=","J3oGnT/FcBJJASoPwtltcMWLjwu0Wh05MgUdRUHJvos=","K2pNK0RkZRbgUR0DWVuU9fMbU4yERVYqX3h8t5FiON4=","Hpt+iX9jbChqx1khgRNbMGHPAt5etMM0TysyRvF0Wdk=","CJ1Vdr8Gd5QOyFMeM3YWUKOO2uZptz7l9wTAGDEEWL0=","EdkctqfJHzo3eKRXv7y6l3so6wi4UORyYNuz0gWtpj4=","B568M0qjd82vK7BXAXt3atFQresnrZUDHB5tbkWFuaE=","DuzrZvuv4lUiEkZ/vX7ixTUkRkLIfFTvrtQ74ZNE7vo=","EYm7GBV1keWCY3J1E57/H/GAIXQ5ur8DaafWr9pTrwA=","ChBOG8Wu9bozYnc7FdFSo0u2b8rVFpBh5MdPQvgILtQ=","Eq6rxV8KCnOUhEByQy6fEJWnnip7h2XA5/k3IfXrj+s=","LV+n5EjroPP3W4LRVdK/tGfBE2FTbWHPrB6err+fmWA=","Ebw4KtbzmYrhJ2F2Tic+jlfeUkQAiWTdwc59iHs+oV0=","L53lLhFk1XgkQwHcD1LAnc+3sSSZrXaKTJGvN/H+mZ8=","JKFg3Ts/GQcfIxEYQmUV5/df0/1NmEedhV6IzEDyoUY=","JWLasBly3NIwdBf4NWywluWlKzmJjXcAyQgv5mGrWqc=","DHH8hUTYv+HrV+uLGTRIJfKADncoh0wNSu7gnTf8gBg=","HDjO5wnqV6VDPvBdTz2P6F0nWVq1871bHoGKdrF+3Is=","FgIhOBbGDMIA6LKu5QnaTeiVLKb3dfaVGqF2psx40Qo=","CaBGxnuYAlVNMVgh2hw9EzgxGsqikYIiZFVoWzpqGgQ=","CirHOjtA8ujZO4iOFa2WlaB9VvAtFy+v3DJume2UR18=","Jkl/HLPtg/YcMnlfVGDiMgoLBWEX/i1IaL/LaRrMnSM=","GxqIa5V7W3rzYIMzw02hJMaOE3aX7gguIdbp9TSt2j4=","Ghzsl7PmN2NhDz/unl+IQxPWbz/aGTmF//+iY4iotTY=","JOtYZcI5P36dbaegRg+f4KERLEETcAf3H/xT6Q/SzV4=","Ba1zn0rnOF0YrpYZkP247T6AjeAQjK50PXmVojI5v+0=","IOpN9kPDGzrsDIwstET/7A8jUYQYJ6ghA6Nv74HCtaM=","B+Qm18+40O2PFQ124RxCvX0NC+ho98yAdA0U1rbZheM=","DChBcBOaPTL+uJPi45O+IvxXErSxNOEXycv5HAbHoVY=","GY6JLgtulpQnefwjrIbtPq9caMefj4gTON37OBvKs+w=","BPcnS0xGDMDV141jkXAKtwaxiNaky8vcxspjHGF6QUY=","JXogfJrwF/UMJMgobpmgBvWpoGaZf+pNY8vER50VPP4=","L5GV6HeSzt4x+CfdQIFgaXwXSoSpzdB81ptEQ6RfDIE=","AsMkV/HIpIEI8cFkkejaHnSuH7WYZCrOu3bQIQ0K998=","DRYGLqmltRhK4CLFaOiH4v0xwtLxMgrNkVuE3xzXfD0=","JzghtZ/CP1hfQj4WxdlXHni0KORGrarnicFZhmwVqao=","KNWBOMqOHh9BAUbshAF5b3yr9J1B5Z9LiulC3G/grDI=","DLurSiKWPtUBUK436K6cwTk1X4PeTzjwEXlzVjOuP4U=","Lym4OftXWSctFRmhffAzEOua+rElQGk7eByTl8DaSJw=","ISUF8dtzra396mNTs4uFdP1S3oqzy+MxD1JiqUlqV14=","BRFxftEEGY0LZzh7V2sCC2tkXZTyBfcAXrsEFh6glZw=","LNF6P9/xsu4VO2VVT8BqTtq3yy2HDBzawOllHCFZPYA=","JCHs7WXkD1vXt84UerCEWIiFPOnZ6QJC7w7L5N+U9Kk=","K3uxwTpgXgYiYnGxVn2AcFdrcfvPvg6KDObtmmC+S2A=","IN6TsJsQ9vQNKWDzrn9wPUr/fU4qMJSBY1aT/B57V8s=","FfOdppR9BwADYJARG5RjzTInEvX8DbOKgJir1NP97UM=","BVoQxbLhw9Osl4U9N6zHrDIBw/abp3DJBzblmRAplIY=","D4b4WFfy87+l+kB2eDWcXkvX9o5PjkryIxTfXqFwywU=","LVdoDe4QTraIfHc0Xsp6jBMQIqRHH4jFTU25v3oY9HU=","AdJecXDmuSsrvO/tmPfM+UwguXpUZAjZYuSPat/e7VU=","Ed3omANN9dClChBn/jpbbp1Ua0JoBD9ZmL78qYAnHgc=","DZbkUdodU1HThIZDzYKsgqkdKX26YQ4ZaZLQgEXvxWU=","HsUOLwWvi9FpVWErfdCiKuBG22kqNA8LgUtHLOvvx/k=","EuelZeZF4YX3yeAPBq3nFzbZkAUucsl1QNeTkSJMgqU=","J31evzPRR1DOyKXfSE/Ns5LbeYFVmqNQ4rpws1ZWMq4=","InqMXGsfGiWdX861fX3INCVzF6jBuUIJw/uG/ZSEaok=","K8xBSnIMhaQvbtFL99Hiyn06pffWHE/10b0e7c7An38=","H3hkpynnD3fMG1zYbBk8uqlBAHCGPV2jd0LWZeLeMYg=","Kt1TOhwUtK0qTs14A5c5GsnZrIBoWEw65p9WqeTXLr4=","FhmNlYFAUzShPhCbBNnR9WOKffJ4MA5WBZUI9u9lRg0=","CgYKJZnraWtD0nXEPqsLOwS0YcxMQ2z+ixdI1l0UM3k=","MC57bAq79PRLHXmXka4MyFcAeyijdIeYlly0soGCKzo=","K4lxVH/xcoGpOUPd7LSJ9sCR6WzlBbe6MMFI4DazCWM=","IfZ8QGeAV40eE8AB6zak3CtWJNw/ErPkpqAlcLPoTNg=","DK61BBuFMqcj2caKmQwIOQmrlNqGXmcxIPSIRqx3v7Y=","DVdqXdrGk5nwb9XiR0F923P7R7UzQAvHmjXhjwpRrYY=","BtzE0g2nIE5+ist0BLa3Gc0VNq82FumUiHsDMSVhTVM=","DQroDSwD0n721qxu3Vf6r7iK2xjLQ8s6NAUskqig1rU=","AiF7JM2eVzyPy6RtMEbYMMz9vo9p5D7uMVZkxGX7a1o=","GwN9Rleys8QTb/g/LedGofMU3KM+4rkqgGY26FCWlM0=","K+fYUmaJL6TUl2LOZO+EV1+ju2IS35lLqfvU4sNZH0U=","LC7Giz/b5LEMo0rR8cnuUpbk5BgTK/2C/Lr0NyEN1Bc=","A1auDud41CfWqEVFvyQaaE/VYt6pLNMLC3W9mniA/PY=","DqZ7zQKpNe1WMRlPBpaENPyYIt95H/b2rWxAKgvq8YQ=","GIu6RnTC4aK40fHbTCs956wvVy6YSASs1Xnzwi4OTOg=","DYIeYFBG4Lfvxifh8t2EF3pm5il0u3vTynnhQvcHQu8=","Gbu0QGTayTPRB06+q5kXkMY3pKNMM9HJyg7MlVmAhlk=","Cz81GzvM2Wu8o0U7q20QvyUjgKHjs6woZ7IU0GOwLU0=","H2V4OKTd8rBjmWHJJhnur2VgJDwBFRUlh/o7YzvHsUw=","FzlmsDI2ySGxtuTk53+6Q5A/K2i/g//SsAspdMxPTCQ=","JVrfzPTaz9lDOT/ZCCL7PpIpKxUK4iBfnuO2g3xofJQ=","Ktm2R/osXZfWQRpWhO8YMSzt9vaf3vj2iv5DREJIeio=","JsgVr5uurfCYyL5lqbZpNtiKkPR8h45G1VqkH7I6APg=","IVMAMW2Y+zvCIM03nLz0tUEz5hO6QvqLSJhGZ++uEFM=","BRrC4Deoy4RElzgEDLXZK+wev2ThplE4x/LYYqr7u+o=","Gwz6TJ97SuycanCaEG0Xf62P/GrDZJFKq/M2J9HeajI=","AIT1uAzTgGv9QPfRiL3g9VJt7Ep3vKBEnxEB8AqtSk0=","L9aAPlFuhzfEW/L0BzaDHr7Stufn5kPg1MZ7XlEJnRc=","Cxf3MsbZOKx+hbzPmo3UASctfW1iOo5Z7D6mfiqqUmw=","AbP7iPbKuA86+XTdSWyfpfkF2poHkBe8UpkIDh1dT2Q=","Ixn1cnmYHQoSsG8vdUGCav/E5RpE4ZkPswFd35oYNxU=","L03CibXn8jo3Cw9hBTvYL+TL/H0dEdE/KJ77o6PFQSE=","G2ebc06rvm+MQq0Y2rVN4IHInWjHCKgfj+YUOJBMKrY=","CjRTwIhC7zCAs6907o55m/ojZ5DP2gAjtYjspGbxkhY=","EcidL1SYp4hBbQBCzvoNVELb5V8hImCVBFFoE5NE8KI=","Cz8smMowYfYnITdgUG/nb/3YjudVZDeIg3wY2/+2jOE=","JXXHH7isq8XLUTv2bb1KSUb04hp7LxpAYpcqCEJaA7Q=","HewJRN/dyc/7tVwZAvhFcly5LglUV0nePxoRjUGAFWA=","JTK5aotQgozGGd3OgKLpkw3Y3sZYj1LtXD4ZgO4DBkI=","AOs+By6fwr6prqA89F60gcTmvWcJH1n/ofRgL8OZ8hs=","KKbnRm2rH0k7/KGZG/uIbC75IHcKzKvsSGuWQiaYYSw=","GLcq1sNyu4s7Us61xl6deMBIFONxO6qBMj8qGVaVe48=","L6mOSHlP3UzbqOEdDN4YzlssydDbf2WqG2yGCZGLLGM=","Ai1tBau6tAOxMn7c4zAk/JGDqlFPadFnLUndv8ngY/c=","Is4KI4eiIyKKCoa5QvE1pZ1rvunxuW0/s6FRAjpn+3M=","ClWedR3+FBXkDQIn17PdHxiNmdk1WW097CwDPeWiLS8=","EyAjYPElyiLCgaGOIaesELGWFTI2+GxZaLMatQwoIFY=","HoW6o3aYUBW6Y8OjjngXqwo5zSjiNyM/TBvjVjL8ctQ=","JFCxmLBF5PDNVAsLdN5cpW2F2l/lmBavMIBt0uA2xcw=","G/BHlaeXlTOIb3+0fVoLft0u3MEJElWqy5bvqsZxK24=","DxJu2UkLaZNb6XEQxHYRjQDIsHxYa6BM+BrmmWB+Yu8=","CH7UdSBGwiWZRzJRxT9puBewipD0MUF9m86Hzk/SvAo=","ABUYUDDBLYzKQvIIct5pmYmQHiVWmGOktbP6JoLb+cw=","G0JLlUbYfubKKPuBl6IYa24AFVawjhkAIpjgXxZk3IQ=","IUuiOmeiIq6eM7RhWjHnsJ+pEeGIgLw3nf0g7RF36y4=","GG4O3AlsYlOxeRAqfJ7hSW3bYGDJk/qeg2FqfapsIkM=","FRvJU07F82y6zde99hdqYMm7e2z7JoWce8wNH3vE3Q8=","KBkvYq2XMj5srfy7mpn1utpord26w6TdwY5puVI5sWY=","CCWxIy5oMWePaR5+HrJ4iEOeEue6/4TbPRi3vUUXKxg=","CZ6TUAtisQEnYJBx519MVMrXhzK0hZbRa0Tq5Fmln8c=","DdXNOmRzH4A9p4cwV+sKSaKsFb1wV0hbQ9RzQKICq7o=","HUzxYmUQZ/gvwhJPbWdNrvA63D2nWCK+0rDYtpC2o0o=","I6hrRA1e+7CianapmTtuwBwztGkkw/YB7Xmof5xGQGg=","LJgzAqxAomy7Mj7Kho6adX4qZgU7sIG8pV9VY1FoiE4=","BumNO6+9tC29LqL8uWmCc5gL0cgI8ffeeZYyqQ/wmzY=","Dy67kRkidsp1IQhM/3oCX+U+FOuISYk4HXnAb5+pCEo=","C2eIWtnf2sX1Np9uMYG8x5CBmB62F32yfl1vbYUdUCE=","HDLiEJW+t5HhvHhQQ7szzZR4S2Ix/4+Fqe3/kvkb5Lg=","EhgY36dtmFicMnT+LXAtqDrYjO2d9EliZQa+Hu74MmQ=","KDKsm7ILV+zJabpP9ccTxAYi+mtOvtBmxlW+IdoCQQo=","CRcYD716GYFuj8OkX9Q7Q1usay3hn1FrN2QaaxxCNDQ=","G9hfTEsRrnFfRaF7oh3b3H0cO6aA+5eKGyrDJb7UEac=","DQ8qhvsNSN6ogEnSvLZnAwop1yHkwXdtQteDu8/SKvE=","BGCviPbRGvtdGR5IhxL9ecuWEWhESRtCd6wLXvGbRDI=","C8F4PDasyt1Puj1jTp9yxekCX3eEvT77jccgluLFYDI=","Du+4ePbrFYnXpofpSBPZ2EI/pQ2zTejV66rBMC5vRdY=","AaxAMZZQHwBU+o1LVmz/23+B9ClTjbm0CKPcILksEdU=","HVvd59ZKY7rMJYW4oUCC2NNfO6jB6FffH3KcUuan5dw=","B5nfr/Ln1jBBSn3bD97qED4bw86vPMzgd8hzOGnlK3U=","D+D4Fu/XSn66XI3V56iUOImWJJLxQ1Phr8eO+sUO2W4=","ByVhxnrS/AeTghtQUY1LXYrDOvJtptLOd86/gCkr0n4=","KJE1KsYP+wnpyIZguESd75mG+UY/WoHGFafLn0vgcks=","IG6e/MRsriz8foZsraCkxywp8jXwRNVsgkSpLogvRks=","LnxEk+dwBfSUB/LVy0bN1tBPIqBhrI/K4E0tk9fI39I=","C56UTVus2Im+71kJoTn157fyOhznoeVabEucOCpRFSQ=","JjW4RxEmUjRI0LG85dj1T/W8mIoKb+U9ynITBPj2Iss=","EN9zv92rmUzcB5IWy1heqFMME9pY1jga4MUX8t3IjgI=","LaVPenv9ePQMmObsrbZl8mRLCpU5sndl3yProkH//Xo=","Gc41xqEE7jl11KlJCPWx4ERNdwm9p8X8WaUnyywWZQk=","GkfbveLVAEob4O18IfV6OIochvi0Zm1NEY7pmrwRWj0=","LwN+c8eIjO+dcEbljZmIg3vo+so0xYvFDwIehzTFOZ8=","J6tycZjZt6YuDZmy0REnEBAkZMP1+o3v8nYq+Khpnnw=","MBF2NZvptmWryN2meD0713MMS0k2ob2DzFV0xpQIBmg=","Aw6HIEzOQD7k6S4FB+jpnK4wlZnc4YkpqUMBAPxcCGk=","IY6GU3YWlM9JofPideziiGam6ZY8PubupGwrGTaI07E=","KyGWh6RUnrF+KdufzLV5ahHdtvsnG1pUeUbw3jJpijY=","Ih54STnSnrVEL9FhKzCli55VWjmLrpbWotbZphbs4Ks=","CA+9ubxLToqDsq2JODslUm4zBnjAV/fDSZPyfu0uFMQ=","FgHmV6IriigNRFLVJ77M/bnYw+38t70DctDfQ+k+kSM=","BlLR2Hja2df4VOSAZlMf/9R3PopcYTAfWBZRtQ41l1E=","ENuIFojj21i7YI7Jk9NuyFMa06tYDmXVN/Tzfk2iYCc=","HYoGtRkn8DeSUOc1n52rk6qcz692TdcKzM7HF3pMcDc=","GcvC6lC3v78An3CdFZqp7yosD2ily60fXhyZ6iyiYj8=","GlJ544iDtT8xP4aufrsH17sM1li+WQqjrDtBNBX+Po4=","GvE21TzfZ2woQQBwXQSpdmRSNPQ5cUD9haLYikhOqws=","Dbivdk7vULsd3M/gWD/3MAiPPpwsVVJ4o8mnN2qJMjI=","FhPBS8hvleJeBfjscsj/aqIHvbqjP5EoCKxpPxN9XVE=","D8R++S8Q950zZVCrPgp1RcdNLT4rn5e8xD5Hg9HZjPk=","Dyy/QLNEcHzOEB53l9E3qeiwEXl8Zv5vsEdNK3ESQds=","Lv1Xd/jKImeIOaxgwaMIcDCUqdK+RBPIF8dR3PVtjhw=","KrTjQTeVrZppWwRpXbMbawrQvtkb/DNzkmW73CgFsYA=","LjtthYTkJmaCnA4ZVXHFDX+nv6zsErrXr6JCdE4AwDk=","GDPxUd5b2GymjSZNXeXTU7gSipbjgT7SzQDjItyRyNY=","DqgsJS2NVUma1jxhxHQZyOjkIyV3Mvn2hvaxBtfa8Oo=","CYV4dEImk3BafJgGNAxtoHd/RXHpIXTV+CwHuR8shb4=","J3KseSivCnmTH4iofmNN1h+szPYQy5R3JOeiEQ1QFEk=","LmIjm3kFMHVsoynGPm9DOOJjHvTizGfoBG/i6Ib2dpo=","AmW+9rks2WIphiHiYJyQFi3Vh/iBObxg10vzY8ZxJig=","JEhMDCkTeZF9L9i0hDn7PXCwWxVei88zCla1Anz9vDA=","Ky1Emjq1Wrfud9N3WdtYrbyR0NUJNlOM+wFzNgor2M8=","I2Y9GVb88acjCFglzGfKyC0+u/0BNPhhq1Up4qTH3lc=","KPyuwPts9DpXMmHRDtMsHbtLmXVkP63gBTLBvR6g5BE=","AUXG4kGBhanrxyzY3Q9T3FN4UetaQu3cBMqlLLOuir0=","FnN2oEIJnvrhzYmI4Cxm6M/aN4+qZOhWJr/kY288WAo=","DLc13g5hKmFXWVKOsnixs0EHxKjfWOpnTuf7cZ0Nq5k=","LWe6xmFswEZNT+kH5faPDs7QcLiBG+cpBb93WPPr6IQ=","ANvSovjX+/OsQDsRFVIxErfwEKCt9spYTXrgP5R9IWs=","EamS1+ggV1euNrurtUToQ7AQ/dx71auqgt/dyrP4XHo=","Iw00NBJG+3FbeEeX6d2LtzB6TEbi9EcNLDGTQP2+ACU=","Cf7v/CGKr6YU6Pt9xOx4btJRUOwdNQezpxcLkmb/aUE=","Egj/lPEiO9JJ2qTjoCZuB5cx98P5mLf6cH3Z/lODP4I=","JgyjzIIPhzljzSbfG4/+xM80n6vhboHy+XNmNGaALak=","EmVeLJitNexEShNOVc9o3N5o8Up7c0s4NHJTCGCbyFQ=","KQCX8sBHo91mALcGN30OHEYUXzqengum18za97fgXvk=","AsYuW9ZTgeCXJBTOAJCpbCKwVVv374sq6uG5hICNT4E=","IzxkIwjb94NwFCB4ixkVPc8IimPo2nZcUYJklCSSb7s=","K3Mo42jtS3pi/tucv1AQRVe2w9m+XQwnRbzHZHb4zlA=","FzjqlM1DMce2CfQvJ8TdV9jbeLcKldoMI5TE7xiZKFU=","LpAtGCof4fPUDaKMNYx+iQdtLdre+A4xuYle7QLKIbg=","FoP/foSlpPHayyBvxE/JIXnmZkUMWmX1Q1S76GdvWF0=","EylYRU4Bwf0rxD4CQk4SlrVLVdPdPtHhy884J5DWJU8=","DetIt99zeSZrEj4LbYOh/gMYB/HuN/dnNzhDiupk6wA=","LGg0ibMGXkrl1xBuGPRVN2LVjM3gBu6WvWkfFAsV84Y=","HXwXtSHhWK1CDJ1pI39LpugVJUHYeOJIdkFVcnNMzzI=","Bk3ufwTPVkMz+9xhCri/aBBjKe7qwbGllhRyZWHbW+8=","IelOXZra2d/8wYbgMQrFT/OLCinThJ/jhHd9AEir1mA=","Fu4KC0UXDYnF2RVX6tCyU8OahC24BBlr+gcESubitNw=","CnAJ+CW2+hgEVf3oqQHUKiglDplIgH4kpigFOIzug2s=","CNWjSFPd+wmfsP4d90YM5KjklSoUjaZB0OFfce/Sz2g=","D7GYUxvK17yRSJq68TRaPrxfXe1bIcHRcjfMz5saSBI=","CpH1DHKkIvPwwGz7FAHcrebLmcKFsHBVQv2q1A4LUSQ=","LbM7NOXZqYivNVAa9OE3xHF0gbZzKSJG2Y53KKE7ySQ=","G3Rf+cblPCddN48KadbA1V1ZhUnO+8dmm7Y6PUEA7U8=","EUVU46/JbfO2Y8YiQwReJ/aiSlwmuHXnNEAUsqmFgyc=","Gu+WjbR2W0UPCY1OGmIQtxZcU+8zaz2W9V+6xYpUK9w=","JL317E67FttHg3GJFy6KVbNgOMUL8fOM95BVJ5IlvlI=","KufEoWVZdaxwUtEB0TRu+hD8pbDxO6vd1i3++pgP948=","FlzUKaOWbRvO2mFLBtRZ56Dgz75G1j8lUhya90AoqPA=","G7PUsvZ0QKX75BB1aUW3vdyi/x3tP+IQjRJWeQl7B34=","GGlfAYVECl81rXSlRR2mM37aBJ1QuaXXuyhNUvkDPSs=","Ausb206qP92qYlNE6mUK/EYDBuDj1Lxhj4Hp7XO0Og0=","Heh05xPlxo0vVtUY+OqidSKf2PyKfhEtfRok5gTT74M=","Hlpv603O/CtopbLD0GZNqrsfBzX/Ki0raEMPTTmxCfg=","J6QoTuDG9z3a0C+dSZvpD+3TLr16+G9ErFDjVPdDx4I=","AJnY6VRv2JG7q1R6DsHcg4z2ISZ4jYWydZd02d5153c=","MEOn6onR5P4U8fkbWE0Aw7p5gx7Y2GSbW6/PdaAM91k=","DnquBNq/o0hZAk0HWjAU54yQljY2kPU+sOmbfWKIl+8=","EP4KEcQDDe9yXOdoT9hyTgbWzw0pXbCbQZnrO2qfBrg=","Fozfa69elw4ea9eAmTHUh2VLQuntXY2SpI8dro0rTCM=","DSQdM8VSyFVW5ip6/knlpxKP6KohB3K7rllXy2CiOcU=","HiXA4A23fGm4fVvLlcupNLd27CM5LYzOtsOSr+WWHz8=","IrDlL3ZqcCr8OMLGAWHjUtiAP5IEMaz5QQ9/0R6dfTI=","EuybkfOV8WZVZzGL0/ztenUsoB7goIgTjEBUmjEWT7Y=","KZyP3KiRjCTa+HaBIlinVSfxtdF0Gr1xqC6sDh+/INA=","D0KL+R1NMRhPNddwpUdd6/Q1POfcqbwidjtplDNE8jU=","G+BUmlRwyUKfDhtvlILzxOdS6JwgPCW2JIF/Ujp56ek=","D9zDzgKOlrIfkbyHrQUteORMpslheerWQ3jNNW3SrMY=","E2pqmEP+EEg43AhZksDrjjCf09Fpr2ivgFjdi2BeqhM=","BYREFYHOY6TtIXTbNTZbywG5Oy7AL+1bbO1zFKEn5ms=","G/mrkLH1z2yp8Blb1DNuaBNaWuJrazURzJBhVrYhzBM=","Kwv2s8yc8CO6E9xlAfAKdC1E0mtm6b173Zar+7M8x7g=","GdGGGbtzVIWQwAx9AuyUtSu4u/GqXC7gbh+Oh1mROX8=","FJCfjIkg951GhqFKGqbgOnG4TT2Raft2czF6prKEM/o=","I5fzEfWY0knmzNua9q5b628Jf1o1CIbNrwaR0Kir2PY=","CsL3o8Lkpv1Y+eUC+d/PyQRgh2PWm5TqUCiN17Y7OEI=","Cr42pwSKNNkRCkY8/y+iO1qglmo8WNMIbsr6ES9QAdE=","JFrkeQEHr8m5vR8Uwg8Q2KdF8HfrFalg5devN5oY29w=","FK4RCygpEmJQ4daU8IQ27gxW0jC0idCNMrw1A+c79OA=","IKBXbr3vCNviGRYP3Rp+ddg4dwx4CmKLHMcg8Cf2HGw=","I6Bcpbch5I2lfTc983bFJS9m6fljxpfX2OTs21Xvgzo=","KBPYmoqQYcMANIzvqUR/GpY0PzKfZcThZbWxOHxMZMc=","K/fuVC4y4oCB+r7dkvSxgZG7rkikNic9wEkWrgmmRVM=","JcFI+ybP5MPZd7F9oGj9Z+qJzFEHn7XQzTZUqRiLE4U=","HT3SPmBIhm8IVXQZA3ZYQnVqYniXz0fZH58rHsirK70=","CveZbPpLURY7Tqj/Se0uv4peVqRGh6jeNR78Fyyb31A=","A3DfvZinPiSVLwII635b+oOsd2HYwLS1PsZpxpNphzA=","E6rNv+BaBkf8FYoTBoA8vR6/jZldWye8XDqS0EOCQPg=","BQ+0/yP1Z31/QrDIGEwiS7adTzBXmmuOnaXSKk97+yY=","DLL1zuhcxuD5vss5G37dQsr/98NDgqqeGd5HOixn45M=","ChRkMKmKhfkG0x6Mp7J1dXCZbbz0CnqotnUGZ7lqLvI=","Ix77I93XzDSFuLyoEomK78gJUHjlRxUWYqu6DM4fYn0=","LrzACO0OzVUYKWVsc7a6jYsO74ca77lKIaPrrINWE1A=","HSkC6LYnwEQ76p+K6lYBsh3ApB3/2YoVFnYdQA97N54=","J3NY2+CcO7lXCIkpP3lcQdnCyQQlvfGipWb55O5GgZo=","H79pLofaIAvE/9SJiJPO+2WkP8pQT29nUZP41jxgObs=","DzuIH7ZbMPsvhJYg50oNv1k68zu4ChXrf7iKCdl+D6o=","ChFvoyyXYQhms6k745GQgCGb5gV6S3W8o6e9e++Iuuo=","MDhKMbgMUy7MoS0sYc5OuYCYp1QHmmmw5E+qCjvv8j4=","FAPnKYFK3bz4CeSaVGXta6bk8DVKmGzSfp0Dqmqf0YE=","EXlGJ+YSWsRl/y7XHZWcMYYKotjqw/pBG2gVK8OBzSQ=","BwNU43E4mbOK10p/XjFU7KqicxS0f4V3O24Gb9TmPbo=","LR4B/ntJZg7O/Qk7WrJpriAw/Xgn1kMMK8xT0oAGMbA=","EaAVM+NxPh84+Uw5BoQzI8DIi/q4A+E1BCuhuLzu2jw=","BY5Ly090Y7xtAtbEDX6Fiw4KrPw6iNwyAYfYxaAV0Vk=","GyrTh2LGkYIB4JPSvDk/n8UP1fRe2UOo8Rsml4MzXnQ=","BaudOTpLt+7gByPo3maLJAShYqDhdXem5VuAJbGBSwo=","BAWK3rWt6anJ49hp7bcDIieLCc4SGbpFaFv49tac7Xc=","IaHHxiy47OjTvUNPh5NsOhhCQy8vGmxmEBsayNEcmhk=","ICjvudROWvOMDB7TX5y4Q/OBhO4PufHEISEhBUKwAQA=","JLB5LWnrMTZM3It0wQkiPBwtJEQExkpB1RYHarAkDKA=","IXn/UuogMu/ZWsTno3qcDOUDTTytNmEFNB4W7HSD2hk=","Kcuts393PG3FgMwMLr8pJtWYoZ+kH4geEs9KXt+voT0=","K4kvCeqfYP1yBIUva7mV4gw1EGSL3EALl9+3zE1/vfI=","E7rb0JU+CWFaThPUs0D04b8qA6LfXmuPr2nYaXmQyVs=","K4/t+MNmKwoQV2ztvXIM7Wn4YhJP62LuyDxxUNmTZBE=","ArPWLW7+oKIuLZaPkZqL6lZ5Gje58h0D+VGF2ZJscuA=","BwN7rItmkHlN0JB/fjFbqlJe3HKYM8icZgQG3yG/tlI=","LPnqR0k8t4Z7hpQuNTSHzU9Ms80z4xDp/UvDw+a1JC0=","MD9aj6rypq6teA8qE5N9df20YF2PWmVSJCZEKQbtrCU=","CRtii9/U1JMzwqnthKuj7C6rM2qNkaYFud7prwr0TyY=","AfRo9u9cNdPJVZLiex3nohOHimU2hav7DSly+w9/njI=","H1kjcl2ZGzbehVfSmc/ifYsHbGQMxM//zlfpx0d7iaA=","DdXXsdDVImbDh8fhEfq46sRASyB7xeIWq2S34QQUpr0=","Juo9xcvQG+HAbOwE7zKKfSZq/jP3a7sm2oRX6WY1FEQ=","BnIxh1o9U2tFEdCgsht9JJWKS/HNHuxMWXwl46AKyzY=","ByS9TVI6cAVMmVJBtn9K6k5mlFit2aZ3nYnPPTvdnag=","HMnb+KrUXWcXjFuRoKpEcBYoskEgmQ/m4pAmoLIem6k=","K1hBRTpmU/0wwF0lgdv7+sW6ib2niEIgjiSgPEb9MqE=","JaG9ksnKECJrz3+9mx2OKyJ7wt1OPUbhM64mgVRnT4s=","AcNS+9kickiXq3mmDkflu/PEtxSpB8Y/TvzFvVzG6Cc=","BeRIMOwXCkpd/Z3oRufkIq6cuYxvSZu2doH89g9+grU=","B3wnNqwtCgcKGhxuReqcxSYgHWaO5AQJa2nchQhuqcI=","AwPzT2qiKaUij+yVlUT4Me5xoRN97bakt2RDAR7sMUk=","JzARVZ0jkWDUY6K5iQCWukVY7/e2Y3KRCCxeqp/7FT4=","DE3F7+AWSY6oI/rV4S0uAD8stOyqp/DgKRliblivp9Y=","HLmQ2An86j2qjQOzvN8Uemkv96DY8MEU9qCA2qWjrBI=","Ggo9OGwmw9Rn9QunM+bXkBpZt0U6SjQFbpLncbbdT2w=","INgWGMDmrl7DA8/eVDRicQQWNMs88iIZ+ZmlS8UDO34=","Cjm6j1fHk/5ltmkHzGVql/9SOBfPzsy8LC3lu7jewMs=","DeBW+zGVJt/sFdUCFzSD6jXmBX5klJ+252kNPCWSP24=","A/gqwS1b5jmXR5T7PCMiv25homLHtHCsXpfSCkpNiuw=","CDWsYQAep5UNgOMvzCC8DHGX0Sq7C17Zk5IQE5DeKkY=","Eg79nAZj4O87bFlkFPAYpzy1UyZvvLFWRFLfkBa7SXU=","Ba/DYC4CORvU4sXr3aKACF7CwfNWo6XNL9I3K+bz8lk=","D4hYKTWAJPwp0EHrKaQxMOxAOSLER5xVqzs0ZTasFZ8=","CXUsIeKpx9bVuJY0KI4RmgxkBqvp53tK0bjzbJ7Mjxw=","HWuzLUFLj5hYOElpSterV4XYjscL3kvNdQKHAWr87rE=","B9RVzWmtAOk7CaxEkV9kp9XqPEwbPRdrtRhZY5+SS1Q=","EYiGiQ99Pd6a8SBKlZDhB1DJpgNeZrmLutH7YlGBq6s=","JF57NkOndmVmOV795uR2Aar+MHN4/QANoI+swz27BD0=","LOthdgc6mKZhO0D3aGVNrY0RmuZO3WzITks0Nw+UCdo=","G05NQQYTroN7f2p/UgagPp7KZpL6lwKHpTMXmQzoEUg=","CABXuOZkrVgOpfOFEFdm/A46IiZSDPUjYElz2idNENg=","ETHsONiWBWen+pvZbfp/1Qg+FPKEMBKrNulG1LkBsKs=","HSeOYsWPPBfhR2n+Pb1sa5+v8R3vfQAwZtjmsP5/saQ=","BxBDH6iOA28YDw5NRujteKfmNhojmr14e2zi9UYVzLE=","MB6GsGk8B99g+KwVrGscqnbxPvUXVTXY+XYAuM/jteY=","JYcDeMC3BoBBuSp/RLSFYFRIRYxNLnqHomzalMpAme0=","EXYhjUjDnOe2z0bnYNNIhxJmAFywB0uYhussS+9b4Js=","Hh78OwP++xyXKJFAlDLAL7D06bb24ys/wQlCOHqagSU=","AZLOT7l+7HaGByEKKo+xyymCjUvYQCNvFDJ+GG05Rs4=","CdlEkDRWzEOkPpgnNodVuTijHUKkfMbZEMoLBO4Q/Y8=","GOQXk1dYjyMKuI5vphDYgkQqiVGcpxvxDYumT7KqvzQ=","JdD3v/Iqnpl3XY84inTU/9cPnfcdl3oH2TQ3n+5ik3g=","BWzg1HQY4sHtfqY9ewbct+cGir95R44rU/QC1YT4AUw=","IN15STB7ws5TMjAi/LZ2U3nJU+hVH4eMS3EgU4ehe0E=","BLl81aR4dJKOjjrW3mRCJkk8o6h6GbGC6uiYEts6oGA=","CTdKEKpssLLK2qIenxBFn3k3b4rQ/QeDAEW28elFJgA=","IRS18DjNQA0klZkW+D0MyCc/f3pRlVvbpZ3z7l6kyVs=","J1HYEkBfE9IcTVk30gqYHbfNWTOCISQYlhVhH/S6LZE=","DNkKiCJ26iuKcnPtoVWm/Z1j3QlLllAkQRKBriurv3c=","AoO9rMFHV+KDmOZ9bnkhUplR7a8MmHIZRFYZXpeBWB4=","FvF51NxPIQHOqNEnptwJ5PJez+T3n6PgKFH8BhCP1Jg=","KG+R0bednmgdbFQL0Ur4MpnP5SVNmhs6pjTlRWr7cA0=","FczfrTTSkiadZzTBc+JB35ji/XXobmHGE2nG9Zq0e/E=","Csa5DGt6R6HtqdSm1Gayrf4HjcQcnG7dCjkDA6nfIQs=","JUl8pRXa/DfBJe/c5+5mByyNTBUqKjD4Hhlf2+x2SYI=","KAlIz+PsoZ4c0Pu6pf0jo45nKFR+ZI/oC6lHxHWCfis=","DNsbZBK225fcWSvJZsbhpn/acCMurZoVfyf2AUiFRz0=","DEONWr71BCoKY7pDGNeJEf7FNz+6cr7G/S9SvLOGaC0=","IZ7Fgsknjnjkh5gCPFNA1SKg9+Y5hY3kygEZnERSBgs=","A6CScwzDse6opadhJZ3SvqT1husJp77rF8KaYlu6gXM=","EOu/w1Iz181jG2IEzcibpP2TKuBYGoVqOVqKUmYjOaM=","Is4IkNnvTysO9OaYJ9+2jzpupsMKJKZ11RueGZttfDA=","GJSPWANbsQlWvfbUZnwuFs4YRCoZuMKB1JsuJlNP2K4=","JhnO7cuDS6QAiFOutqjWFE4oG3rjZ48dUtNS8EqfDfE=","AkTHTXk/Ghbxl6L7ABvdMemG8JSoPgnVjyvFrtLIvrk=","Fuvt1LI9RoufNsvbNeABh967FWaMGAyKsznuW1nIfL4=","K8Qcnu2fY1IyRfS0EiFnFdKb7PUdZgyGva84gJZ3utA=","AJ7b9TR0X4xzWsh6YC2Aa5ncaAEut9bCwdTDigZz6iM=","GNrMjRMgK/IyYW86F1vAIRiaJaKW78mXeIB4KzFAeYk=","CyYAoHJj6DrAdrscSwf0jywqPPa/e+SvdyYtORc1Tuk=","J/bSD84OdHz+Q3dDMaGc/kwjTpnRgDMok/cFhKF/EWs=","EFC6IMj015ehruyd5G/H95TLaRqbFoaKLe/+7Ruz9io=","B93SEVoeNTEbBSSUucBe1H/4/i1BgXjsYASHrI5l2iA=","FSpltUeOD5LsP8NgFD5qHLg9bplmgWj+vtNxYK3aiiw=","Id5E6+SEUjwXqc4WL0L826px7UQ3+M3riF49SiBcNww=","G+N2RKHTo5e2tUmBBWjsdjahvk16ZK4j983wfsk6ARE=","GOexEmkyIyYKJd0Xxx5DG+XtSoq3N/N3XvYUiSmPh1k=","ACP39xC8BXd0AqIb7ENy47ZIRz83R/HrKKeMfgOj29U=","JHDeI2d6AWoABMbvKSBkzux5zRLLH6SZkqO5vNCiXeU=","HR+/iy5BAAgD72pQvkCZh8b1LYtTthfEBVvSTn0nv+w=","An9f4fS+2wZEc75Lbqwez9ZWrSCGq8MRtn86yLjJ82c=","LVOvARnfp3wo3RArKCj+6Ar5rmUdsQFMPzn6W5uP+FI=","EvGZR8JkX0SByJET9FFGQfSvt0qMQ+A2YDboBUmnH9g=","LwBzZ0v0/XnSSWOOxkeGqURftZDxCI6+Sk8B/l9MJRM=","KO1FtH4MRcKavwOyZdn7dQADepVlTu1LbPShhdHJrro=","KSFC3HZwY5LzAGuPW0WkUfPDfsutn2mycRIRF4aDvls=","F+qp7vPcmnBZv2zjpRzqSkX/A7fMYFy4sFw+3yudZ/0=","GhZ9Ik9wO4PyCprh3JC+d1Fql35vLtB9qFsGkQplvlY=","CE7r52axQdei7Pz/CHULBL1v6oBTWyoOMK6JM9mAJso=","LsD0AsbLlwnm44F+KzZCheGMq+KQv4uDh+nR/o3tyi0=","FlfibGGg62+LynTFu/NKlHdy/9bCwPm2KDah6P9vR4A=","H4gnvrfayGlY7d3qOLKPmedxgPPDuVmXk3jEd3ZharU=","IXoH1lkvwAAfwkC+RPccAX84cAYTG4PyN/pMlmjtT9M=","BZbZ1shPdFRw/JmXxaHOnU45BOF/FvE54fxvC/J62ks=","C9Lx5hp+1HcmSC3nauSw17QXOOsGyemP8Cd/6hbCsPs=","FOTxSyp7v53Yw6G1Jgw4RFGcO9XRObc0Rnj3Sjb05Ko=","CYCws9gHEKFn3xR/nUdaKNyvkYpqo8lnpbtV2XqPbaw=","Jabe8fGnno1jVmcd8cozUN+FUGn6G15+hvJ7r97mCsE=","LLJCopckdA5j2EiK19rWxdN+nl0JFVguenHFPlNrZOY=","BrMtwECLF4LAUrulh8N5zrNS+ylXmyHGGAzT+zmrevo=","CfIKE3X1bmvuUyasdWNwm/9ukBgqwJLxIUXKCI/fP0c=","MEAoHEfTtu24MUGCpZWh8+Z2TmYswOyHi2OIJt09t/g=","AHLtoWBoPDupyg3Lsn8AhQXoOoXrWsdTt6Z6I9JFUY0=","HQxAa9QLuP6ADKc31QHhnxWPogXZ9jowtIfmFfRyFAA=","LhtvcB3744RiBhqR1fZBq8x0BqX0Y4IrcX3nk0TIqds=","KRjT/TMjcjoc513BsfgpSNKY2hRjZs8BZ60IL1r7Kqs=","BKjt6C6gxWFEOFj+CNLJBdzURfUbEa/UH0Z2Zz10rwo=","Ji929a+/3ITCQOaGNi8lzR80l9GVx5pAzJlyJaQ0koA=","Dpg70gKkJPJKg/gXNzfavyxxHswFIE4dJrT3fx8QdSY=","GoyKOxODekplfCbQ+ATKfvg6rH51FhhLTCLrev76UWk=","BaFvJ/RgcZ+LdcScHNrzSHOataIWp4MDm8BV7G8K7xU=","EJpOICpdbulDshONxePIaBiLArpXqxWKRuAzWQ3rHQI=","EUvmNuEgYNMXp/CMRLhWFE6IPcigevH2LK8wDSNBLd4=","H+zvroYHrrLxCSOeBh0YOd/KEmNKSwAb6h0RkOTsgCk=","HPtQBrYoEUewXcuKCKpUp/z+mxIfEr026YnS9Hz4Cc0=","LC4xyicZdZC7DUZoKsENIAnttX4KiLR5DXMcs06SbYI=","GPKgsAtUSfS7gmXZvCsDoxoc5quuXq/Z7sLzdFvlYbo=","BDG2xinOvc5ESwr3ffCAhQYQb3ZXIJqclsc/a0TaawI=","DPM/wv3h4XG+FR7jRFlXBe7J0JMDQUia3GQz/bmUH5M=","CgdDh3sooqZ1lm5q1uLK8y94++gwvLAYerpMIf59knU=","GVudKFpY3q4wdYoXfiCkz2Y1DPS+zYEmu1uJ5nLTn8o=","LD6sXVL69bRvylS158Fs2VA79i/x4/fK+VFJAhVER28=","EACDlu1+Jgl9Y4Rxbd8pkxv6jPiNDxVAa30+MBRrzCw=","CdYSDYzv2NuZopBiaPwRb10xM5wRkIJS7Aj9Oa7mbHs=","KfYP374Nd8FkGCW0meJFL1/KPftCe+B6MiAbyzgBkYc=","KnfZiEM9rd36MXzxqGwlA/4BlPwVlef4QnwLg/kLQYA=","DJZQ8UnJlGcMu5ZvOQPlKmN+lWtXkvtpoNc3bnMugRM=","DL+heyNH5oIfeI6aRCVcE/UDJZjR4hWoIuPn7Zt1fLo=","FnxMmV9aIDV0lmePwawz4IQxEnrvkqmgBkTGHv+t0Hk=","F7CTeNqa2Pp3tdENtsx7Ui35Vmb7IEr/I8C5qeujeVE=","FURLNGou7kAiDVq72jAyT9QisSvQYlB4h6F0nJ2+q9E=","A9CKJvhsl/McTNmgGn9o/sjCCNQuyqftLP9zt03BhlY=","HFOckkF+DhGyY9maD62Pxh/RwGXnA5mv9RLYd3188bQ=","GbkgnhBV9ARkfS8L1IF+eYlyln4fdoiHf06FdAD/hSY=","AU5zJT47XSyQ8ZmVnr8HGxiTJvOdF3KYbeG6edty8KE=","D3aqignNBCVZ4h7fZElVV+gGWSodct/oyj1YOgT+vQY=","B+l+GXf4c6BYHtp1eVXJMnSodFSmXm3++UQLvhLwFIk=","L9U0r53zEQnJSNWl2TNrjXvFGJXDS/zerEj4tW2ss2I=","G3lxxkS3/VFwM7jfIyXfgvoio7eanuADMje7Q/34dyM=","DIMJacqR74e+EJr0bQrWLJPoCxypMH1ycJUIyx/qZKI=","H9uG80Euuxh1Sh+c9N8wlssRuonnmJYilcyiVMVl8ug=","LJpcgkgcrc3qa/vaMDQ9mBUiHimuYXow+VDSmDStJlQ=","I7GavB2+NKl5NTfx85o9gZRNG4z8TyawY5yk+uzZjSs=","DNaSLzMEpNA4gzxpewd0FHlyUWvcj5ZWeymmR2lxVIM=","GDIS8uQn/BCAwje/rkID7xJHKgbIJ/k9ul1a8k7DNqY=","BEF6DdbT2M1tLvgcyDMzItcPJk9RAIdKTBYD0db4OdA=","Huf9hq5r/pFvvYfPCnKkvkM9TT9bO5ZwftoMR6Qiw6I=","Djht3dhw+AQd/mGdTdju+FGmORz0nu728fFEPuoXPRA=","CzGknpV6w7x/8PZe5v27TPSxRd2KI08NfmwGOb6gB0c=","F77fnxOrnOim4oGQR5k5zSeGO4kv/NrgVHighZx+7cE=","HCj7M9md0bOuN/iE81UlRqT1r65WL0hi/h6S5wJAnhU=","FcbQo5QWaWfLw5KAUF65UozasOpS8VlcXnhxgV/9Asw=","I2MDFQ+edlA8zxvlyQw6SF+Q98H/rrscT8uqgqBRm80=","H7vgdHvSu8PMu3Us7ZiXcxlC952adh06ukoWloHjD+A=","FHFG+m9GT35YoTBEQdK39kMz4hd5zXH4gJYqUOpjhbo=","IX4CySiUFRb1qaeOulFGjZO/snjRx5Bh5mbfSjIJLAM=","JGATtCPMiToWtowiiwG5OAtHsK++Tb6xtDQPWAG6TBw=","K1IlSWweb6zVt08ScFyg1Ke3fDDByDEcPIGDcWerRe8=","CpUPVydJtvrW1sMk9AVo1yGedaiE+bv5QbIO6BtCwCI=","GnGIjmZNK6m7paoi+8OA8pgQ0JJ9KGr1kRB2nwf5l24=","FcXHIO9vpbApNjdsKYOUu+3OWYJNbKn8Jg9e3I6l+rw=","HISYPKsy+5bM0CdtJfy1qXjt7mk1IMCxygl3ksvRdC8=","EHWbenROgTIvg2j/+mhFEChn4hymiT2XtGMJTscqHiQ=","GrQ/Gs8odjdn5YdUKj85nwmYtNIPUy0fWzk17yyj/Go=","HTLy4MVkJ1gN6WLxR2M4ma5yN/TM/N1S4Nm3sDfOIM8=","IUdQbgD74PZFgRUSbfnusa5MMxpKOBkVzBlb7JSIjWU=","BOle2NilVGlfKoRBwXXyLGGrBBqk0n5IIQYrAveimrE=","LMGB+U3lcZ/izvIiJ3fdmKranUy80Haizss+p4+L/q4=","FhX21YJsqqZ4xOXAHO9JtEJEgVfSxlHjscmdMrLFHAs=","BUsOJJHT69F/f+4LDc5nuCNG0iSqqkd9XZj94r9d9dM=","IQUv4X8/gzkK2Kquzki3kk5UuAcLYwT0tOirn4lJNxM=","Gx2NkFxxOVjdMVsMhKZdR59vuNhphjDn8JY0K+TxKb4=","CHZd+SFBzHtRvQhz+1JZqKzVqbUIKImuVQvz/x6M/Dk=","HdHiwGi2UyA1Qv6jdGMp7KlUueKP3L2JWHCzLzSBEFQ=","BQWCr/38Tlw85z10ZoC4MKhDk5VhIWdn5O5jQlAuKhg=","FRVyptH1feL6nkqqVF/7hCuxhK0+CwveKScbVXMuotM=","GNCqOAw3mo5wAFMqZtVhQQ6NEY0ur7bA1tP68tyOhb4=","JCSlhrtXwIg+5MpOxzGWnHQiUCyKIZy5XO06EgmwX90=","AXTWZDzLYyoUsRFi/DVwBgTFk5nToAf1+JFQS899d80=","GCEEyUFmBS/cdI1JeZAROHkVspngSoDjPmEnQHBuemo=","C3DBGFIw4i3LlIQozt3p19ycln69Ra9NnNYtoHvVIvU=","HbRLbgFCuuEHD3NFIrwdQLmc/FHmL/ba04n95dxo7KA=","I3eVmBGfr5IzNqLp/hWnoy1GAKix97vHPN3xD8qBqrI=","DTENCNSMBNx4vaaH1IoAWYu5Y/CbGN87i40xYpt7ioI=","Kov04tUkduxIgpqZ+lO0fLEEW8P8zr6yUiGBhhYcezw=","E8uw84Gm5mCcP+QHfc4NoyE4lm57ooEolgAYN1hbLqw=","KuQSZS5EFycz4ZOf0y63gEZH0pdop0szUDayRVNXG0A=","A/Qmpcdwen2hqDSPnmwObVstUHu+mKAG9xW/LyjBQzM=","CS/R/T2cW/zL0VgbShbsCoCRXtL1aj1AmbI5qbREnNA=","ALHoFt+4OaizHdzlGWPzUhExpayhz8s9IEkvn6T/K4o=","DNqjpjeugexfxrT1krXgT3/Y8fZ7kV1/y5XJxb89fHM=","Ef7Vuec2Vik4pXGq1sG/mHiVvSXVPvtek6iVidY40Ps=","DQa5A49dBBqe3RFLPWNGrV4R2IF9+j50A0+4L8+8hjI=","IvebPZ30JW/INfI9XhbI+WPrD4DXa5DEevRjt+5Jry8=","K7Ls10vjyEfH3xShyDk3+LJKO6J0SVmi83M91Mt3fms=","EL0dYRcH6+SoLSypYuAFS7K3Yx3oXjRo+vAFre3CuTE=","L0A1/bFiLSPRucuC2mT59wcdCXMs8XpTzoQuqkLzZcQ=","D6fYwX+nAYrRTwieuFZLyafBV3ALvQfDpkuiWLjnkg0=","C4ypNoi/t8GuNlrrNEYwwZ0PHnS2Zt7CsAQ29Ja8xdY=","ENaFYUqZpAVBPjVZ2CYXUgWgP//ZsDfO2QvvCvDbGnI=","Bo4WLGoCyu4CHW9EYftOHKHWCSqF2QBEw+sU4HxOSoM=","L21qDE7iEpZJb2mpZcuP4jm5HqgXZ8uCBkqKpeJ7zFY=","DGpDmu2OyGtbpfKkoEX68v5Iu0Qtn3UhvvSY0FfCE3w=","HmsNS4jjk6nZFcATtP2lp8O1iYcsBt/dogfh1mQari0=","GyEW+KfeaYHplCVEbBtyDLRJVd1L1G/MbFIjYOHGvYs=","BQE/AMhnc945wBujzO6lwM2w2ILxmVafqzfEQOJajlY=","CD1DDEiexoTBZN/b/FoFVt2Qq7sRqLoQN7kufDzkLNM=","Gw36XC8PpzmwOwv/QGFsm1qyRsKWlEc9biO6XF3ZgoY=","BVP9zqFJjyipxKWG1HsCl7I35ZwsDnA0RZ95y6SykEU=","FkwnLELh+Qe6n8evYuWp3INunnEk6sxtvFz+7jt05eE=","Lu7pSTgrdCKaOl+GQgxZa4IkIg7pwdCTz5ZcIAPHc9s=","Gqe4mdtCi2SfoeRnJYGQnxWgkcMBxSfsSlTDwJPtYAM=","KERmcJJWUVfyqIoFWEUK3MOI5hSNJBfKw9/5Xr1wcwM=","JHwNhljGpX7Egq3F6e5rtnlI2Wx4GtmDEeJ5uB9n7zU=","IWIaOzxkiZkbAA0e/NxpsKVA0JaASX1h6WKE5mjJq60=","La6qsSWf9lltCe5LVnzaZKsPuIoxeDJm5dFASBGOYvk=","GQbK/n309Kg1mkgYpO1bZ2nK2gouBG4tYTi/j4RAn00=","AMKttRYAu6kvxT3CFl+A9wU6E1C+UPYmjb4YsQ66KzE=","JrKFFpIlZY+MzDBAzYXDzh9Efkfut76OO23zjfPUS8s=","HCt+LbVk7vCQncd1NgSkzF1F1kM1XjxgMh0kqA7WzK0=","Ldo+n8CdLC5tUqdr2oTfEG7SNv+VbxJ6gE/HAlv83fg=","EZGbj0eX4O6J8F4EKPV4M9i150EEgUpqtmTeikWIfvY=","EnuywehVKUBYID3npz8FXG9CYBokdbHXX5OVmTraex8=","LFkxjPQyuOSZqZoIY8kU6MeDaiOzG8dYAoGC+DKD9hs=","E7JGd+aK37hz7Q8jsAJbtXR6X8dENTAl0hKNRHAXrH4=","Jij+JrTSvF+OkGefeYzZ3lpHvS8EhlFLbbTHDPPCR8M=","I3zRYKHWrjDvIMk0dsnODWBmwOelq9Jh+qpLzM6v6rs=","HhrVhKtnXVtaSu08pbgE1iwpczV0y5ya2iV32Ha5nCQ=","D77XMaghdN576eBHmFZzWAq2zEGUiTiEyfUeoR/+j1g=","C0QcjxQjoppxsdyxb9rQMW1TNKKY/USAEl5ghdz/EHg=","IU5XOmxX/32jlsCqFe+qIfwJMMWZhM+cjHTa3jr5YfU=","G25DZFduM6PPVL8hwQqRxI9+3b2RBrUFlkro4LSKXb4=","LLYNwwqvw6mfH0Oes0w46KerJl3kb0UAPPJgDzpGGaU=","CBwLXFZxHlQb3qwVCwZEp87iVRAqRiLdmQ80ENFoU8Y=","GSD4R66Dlpr1vjlaRZg4mEoNt3MQssjFM+tgKQgyFEQ=","G9FMtbCVDTtHg8U9LHM6KubpFOxgFVFwORKLFUdGrvc=","LKFnAOZxNL4O7zKfVh+wV4Z6sMZqf6Ha1s1g6zwNMvo=","I6S9a+9/TSHCYZJHVUckVmP73TolGvyidjbtHe3pU2U=","AJAgTL5VCjbxHJ0SsqVqauc5nP/LwWgtdknN+hK1s6I=","GumUVtDosjhRalIGdVnlmSB9ooXQN77Vx0jzmm+UoEs=","LBizoPxL81vrmkAGSmnH2Xbv9FuuLBaRAFy4NawH9E8=","LcqUS5EBHqnyJP5eBhLsICHi4xHfrY2NUjdrYN0pY68=","LqkM5/NMhkWWYX/sVitM2foKy3EWFlWVetRhXr30ZFo=","B9Khb615XzgmeZmnDr3ZsrJN6FqtEsq+EIVcK9cb2i8=","I2RBX8hk30w0Go5CZ6Hz6DLqUUOk4mhuDYRAwET/hiw=","L1yIuWrthUzABJqbpHamumF4nlaSzy19jZp8x7nQy7E=","KZAqrr8+OPDvOcN9615PsPMvzyO3RRGmIUaz95wl9u8=","DhkOBX688CzgNg92/Vsnmk/iuoBkbtacx9VoQR6By1E=","Iwl7gsDHXlPLgISGnlFAC/+eHw11tSUumIq+NWJwL38=","MBgOF1MLhgkBsf3K8jsu+8E+vUlXTmmqbfFZ1KnchVM=","EbpgWVmvtd6S0KDPaJRbXmYKWebJ3S7kg4qeUt03oJ4=","Gfi+6zYpyhdyDoMmnAECeCMaMwMZvqvnk+mvQVGKNMo=","J485iXzINhAzDbJl9vlZ7Jg/oTg4uoj3aq0DTC+QFRs=","I0nKvag64r9VhC5yuASzZDWkngsvhQHwCFZgXiTew4I=","ByebdfenwSEAXDtit9GdrKtuFUPxK9NmXDGBjF8seqE=","AGpJzsBQDAWb9hlw06A8TsoHnzvqdr22UsnBPrOlfyY=","AId9wptQQBlkRIVXZnDzjKUxSWlbWqzFxNUBCOJoMQk=","KUlKSZ/XzE40cwxIsipimyTXSnKDAGlvUjvvrYoyn3c=","BiCGo6JPPdByGbOJdcRRtIQJ40M+yobAgyBwyC9tuqA=","KwDTnu4rQQanDqYYTZXcGZkaD8IcRycXdAwydqmpBRw=","JceI3t7jazgZJVA9wb/IHwmHY2S3ZJifhrmpZCyS7Os=","CjOdfDOZ6wCQ+cqIcZb1Xlkn3ehoLDf8noUAXQyhTl0=","AQ/d1NYo7sxrtV7E7VY8nJ+9du9FxZHCIeCLZvRMlXU=","CMrX8J/NbQp2OxU6a6E9CeT7kQ6Yp0VwcJXEKsMvfNU=","K6jPOgcTjAhkMmPi1O3PmkpHMov9oTft1BFboLMnTXg=","KAxarbkvGGPAqyDKFLAbACAbId+3HB7TKVmyEt3o6K8=","JDxDvmJYhb+6V1S+/9uMTicYvRrji6w5tmiDogMkVH0=","H7in25bYgHW3qzbnFmlWixqIwLzFcqsceAMDxWnkEIo=","D3rfaifrl50KFHtBclUFjj3TmfJU4dFXHlpgJdhdWT8=","Kpwgv7AjTdIZrFkz52FgQP+Y1vCZtTzp27dreiHGVek=","LbEaddhkmSpt9Wy7HrVp2jaSf0M2Lpg94St2YaqR9GU=","Kc1j71f/iXrFt987qO1y1Dok/xigPKpNmfHlMZDNI5o=","FNBSGTLoc7bbheajqrABRpoWjpeO60wak4YZDddO3nE=","Amo+g0BUy0c2cj0dFaJBhp+PI0ddN35p5KNzFonN7RY=","CL2Cd0WejgqDWe5TI1QbzBRlsnuWhfzw135Kpz9KXqI=","GfahtagCK9Ek0mKndJliERTIexvcjorHFfDZBrX1cfA=","H5lHfbUDGwunI7HAxtFW/ojq943gkkHx9Z4INPkcCBc=","B6h+2tUGfzYd87dk7zf8MRdeAX2WNaZijO+RWPY9RLM=","Jk/hYcmKLARRS5LyC3XCEiOywiZV6P4vduTOjSVjkQ0=","Jby6g5FZVL/Go/5bzPbsVmiOwgnPH5dqSEVNxt7QeZw=","J0KoLEGuL/aOUkgDpD44fkJelDooR/1ykifNAbcH3P8=","CkvKIp65zqln21+GUPOpITp+q6BmRSnsSMtIFqMvPkA=","Fi279y8x4q9ajGKXXWrdDddHqGgXvtCdaQ0glawfMCo=","HZDTqXBcWpoeBsd3yRWNeGA61PmxDO9BqtK4AI2Gv8U=","LpfaEI5BkgxxUH0//EGY9OQD/AgOMZO2NHHoFtOqZVw=","K+p8/P9Gy3mCjRvVvE0Yo3V2W9aSeSi8/76iru5FRRk=","Ll5U4PxkLYoKId9IMQ/onT7Lgb0tVksrEtN+pBzmY3Q=","LfSkS+XvwMYcSWqMtyPp+v19yoXvnFulLHGnj/KlnZo=","HdqcYIM7UmdsyUduy8s07n9bdZ/A+CKfHWReOAc/4FE=","L5Hu4FT6UUMh3ArKIf8lr3OByj9O8JovonNVxPvYhss=","CUMnp5ci7hFqr4GWxIRORC5/NkROqcgWlIQQ/xEeNQM=","Dg3jKevAE2hGcapo8PXFamWjx+MbNK8o1C59tgay7Es=","C/wb2uo5l+Y9tj6U1DB06jedXV+WFu3Z8ZwXh+SHWTc=","LXQlbUcOj4k/WmoScjfCRQLJ4QVnuJL3cUmD0ULQB7Q=","EIUjBipRqLQo7sKmYoS+vQfcHu6QT0NHCD/REgZJ1hY=","DFqAXS7H5rMgHklUGE3dx6k9OfwiH9hnSzO2jWXKnkg=","FyoGIVZz4MBDLJiszhxCbP7WQIUBl+cv6EizPvvIgIo=","D2XQP8zHU36x9P1sXNBfsEtAOW6ZMoqenzRMXb0qLps=","IMMK09a1cld6hzOZYJPVuTn7gPLnyqU/DMlnwzTc1vw=","A3P+veECYP78bOlnCRSpzsXCBaddI972LiL78xph3qM=","IzS6wpuS23acBjCLeHlDN1un5FYP23Qaplad6NFkF9s=","Cj4gyKYci/rsvWXkOxOlk4KwITWM2/epmAXWWCL0N7o=","AOp4umVSiscDXgb72b5jpQ4Mr40GKPM8eyKdCTGqbwU=","DRaC+gqSS5s1ERiPvI8h38b5747qGJFgfyKx+RZyBNg=","KESo77hTsttjSjzzbOfP3DMefzKwA11nBd7BVLgktM8=","KipXRmH5OebGpJ+QEHorVKAAICL5Y8IMG/h1PIJrrb8=","Ec9i7gbkq5JsSC81Ulpd0wCiWb6tTNj7lJbKBqrJBlo=","KQRcf6nHP8Wx4TSZ0XGhbzdryLgS8mVJCLXs0rgmF2k=","BX5EN3ZC1PPHwWJd7C8/TSLpFcfpBVKHmvAW96FmXyE=","JYxGQKwdqZW9BSX6kWLXyzpdmyZ9BEqMPDxDEOaJcf0=","CV7m/1Vo+lNQktdMFjEeR3t8Yrq1/VhbfU8b9lq0zGw=","CAaVEIjW+DYxo3GUhib2ZiWADVth7upj0NU/HEauTiE=","LoysX+L3CwJthPOfG8gPPr/yCTYlodRNjJSYoxcu4vw=","ESquPYAyroDf4CenCWHATRfJlgmjjCpuamCevTEqEUo=","B/G9KJqu4fTCgyvNiHRjQ9ISi5gm8Y/0egLGBOBLJW8=","Ag+yUfKUrR/D1VPPncUyzyEF0otBnLM3m+VPaDhNNlY=","CnYwnvTzWg2ULSrbQAQhAxF/ipL4+iJxPlyPRjCjOv8=","AuM4puJ2OU5iCFUTfSPYbnO2qcRHE1Q+bvDKNzAytmI=","ESd8Ah9LsFZhEqYtApifMGvj1qYaVdbCvzK5stbrSI4=","DkFvWXeYwkKBPQfwL6P1r9PNI+7ovsBczzIoDS6vDoU=","EkboCh6Q2vj1DI5woZcyKcHAR2omLfeRNgh7OyUjJac=","Auf1asUwAq/t3S7PSSULUjTUDtJZJM4E2lL7E9gZfbQ=","Czg/RgtxPRrywnIe+G3bnul7TVEoGZPtt3RyrO5VKCI=","AUxGtKPyW4Wi0Qhc/agSyK5VhmALR2rPXmthRatEnFI=","C6OpXTwos5LzlXVpF522NVk6n+XqqqZBAlnK56ZqtjU=","ArvSrTELu10lRjKIcsVLZOJasF40d+BM4fAwIe8xuQs=","HPBjf/Kr1ypMXYskr5mY/CnV8vpiq0eRTfFOiXRn0KM=","JjrN9F0HnUOxQ2Yl2cMinljYLa86QL+J4mcv9nhbpYA=","KBHrl6YA8TkSNI9OmvR9MNvggFDqCDcBDhdOw/Os24Q=","FeaBlgg2hRsVyOmJbpHWX/sbwkd5TFkA5oroLxz3Mq0=","Ghv117c9bLPdsPzRBlUGdM+LSSqGRA+QmUVDRx1VRAU=","CRN+hzZJKvxtcU2FTsG9jA/mPUAproQObKBfs6izYkM=","EAdaAjbjxpOOis81dZ+MGchjAmC9jlhxbt6pcOwCulg=","EmNEtBy0z92dePkS4C7kcFnAkVn5fEKUPF0rc1tnac8=","BHKprH9mAIgQiaF18yh//cAf7leAo44eCIsG8EcCTE8=","DlKxqNxmAUoUr0gLgMiz/ZlZJjPu7Wz5UG5PbKm7uMY=","GQ4wfmYmrHlu18lpMoANPxVcqJ2EwDkrtIpgsAmGdUA=","GQF1KSE+HLMxodB2vjJUyO5dnqQAXpOVcG6g+RhJE4Q=","GInez61WyxSm4pKAkVUKRQT7q81xqfTjiVNnrcz+x2c=","FLN5i7J3E7P5L7CGSSNnM1QkxW4Oe9msObVYX7GNAGc=","IX+qC3hmxmCnAP2vPvBDis9E/HPLfqvF/BkLZMqXBW0=","K/Rly1Jx/lYxIbuQh3qCHVKfyBX87jckdOwCzzmPm7g=","Bqg7bzNBWTTMR8lSt5EcV0DY1W3mo0g33PgpK6gjgR0=","JrxLcVLslZZ94YFi2gQAorNpyRCIg1ZZ2pV9HOK0nno=","DZvDY5qx6aUCNMENcEHqIiC758lBYxiPqx955lbROxg=","ExUvBxTt6Xu67zop1E+0Qa7oGNrATxHk5cak3DHIyzw=","GvwSmmdLpKx1Ut/q2a6NLVhNx+Si/yzOXTtvE1DgjSc=","KEmLBF3RubVuVYBl4NcQBnX6FihKwM7RBI4HwoChdF0=","E/i69u/JQpTIKCn1naKshhkbAxu+Ky/jMs0wLNXZRsU=","KwMU7s/PYa19TG2Me5Xsf8mez4pkjCHiP8XxlGQy95A=","K9AjKfVz0FvRTrWXH45t+UOOireLLTemjdsahF1M3a0=","LxIe6kYuLb4lMYQDDEwaWf1Q+rGsXEnr9iHzI0fbwMo=","CxHKFlc221P//XLg2Tmxb9W94HoDZ427b+EwLf86vi8=","JE2dm5vb8KYiGT31tT5TOuFGrv+7lYFcFN1ENA4ZK5w=","At/4NH5kwJZs0yfEMdQrv6jkPtZdWNRS0khvKv+0/Po=","IjYpkbq+1Zxd6dn9lqM5rJiBgbJWvxrsUqPQy4lS9xc=","C13coEz2YhpvIrlLkDlaWPqPHPKW/lvrQEnHVl9PKlA=","A7PtxrN0TPBXiy7EDROpnevbbnGXPgpA0mW5mlTWMQ4=","Ld/Zpd1tqpBRd5Egyxf/kEbt5dqiS1wzNo+4S1W+440=","LpKPJYVk8RvXIVa2J/A3S/ilV8SfiFmKyUAifKL1mDM=","D5cLTihOlal5CUWaNKA7kNyXA7JPnPBftSUMGiSGEHE=","AnqALq8vna/khF+bMJB/2zn92cRMXRgWEPVYgrezgd0=","BKx7wDGCvoApqEQO+HWiSKSAmF5pP9Tq65JjfHPonjE=","B18xka+9IdUUl6JsUkZl3nQxVxIfCTwSDZPhgFgur4w=","C9O+khMSH3ecKysKAkvoK1GOG7wTSmX0QMRHap6vWF0=","DJvOlfLVln07WPk9fgPJMXCRfqU7X4sn3HCh+qtHTN0=","HjsE3uauZjVyLjVGVfYDLRpcoubXr6DHewvhkvTwxvI=","DB/DO5MZXyqsA/5u7z5BEHhMfEgyLjDuUcvXj2zp2Ts=","KrYEJn2uEklFUOHvJzcI3RHBdmZ3D/DMfAd8k1vyr4o=","HGmYX/eFWVGaAFLqBeYI41ys5i237Mu87FWvPbkVZGg=","FjNPzUISVjmM3u4IqTRaUn3stxoB60NST4092w2yTUg=","B++N12ZRUvhdAJOc+6vP434rHvineoRWiu/gHx6bXqk=","DcxCbciL3sjChI8tiKIAVxuKASzQhw/G6guYFJT1gng="],M:[["DQZN7oJJKNOfKovn0vpYMiPDOZV4TSKIOa3eJVlZJZI=","Ky/18nUxtvPWqF114+CPOi8NrDaApsJtVey/gDyoBWk=","C2WISc5iC77v8jO30SJYAV6p+HpTkPVhSYHrbky0pfo=","EYEy+8HNg/lRZ8tEc9VMa9LEF+J4Ll7+oW5y1HtItw8=","C1lEdo1hwbNWKldJ9PBsTdCFu1Yrg41+LvFKIf31JMA=","KwTW/7r3FEAS2SxcYhKAPAtbzA17GVC4idH6bz5WRFo=","Kb4qQoNK4y3jMg+w7ka0wQKj0a5ExdzhUv3qtUUMnEQ=","GUb+neCpQ9WnFurAhWHNkfkDH+yC2pq3KIPHshixHrc=","GvPKYkClWrpV345Jg1uS+hfjmtVwHvcPgUQQn4lL8dA=","CB9YqRpODRAOA2n92BoZADU0L9BnfuG/UhXkf45YwsM=","IqhSr5BoCoypaItx7SfBV9ArQGvWx/2BIdfHeTrSMF0=","Cye6gqD/uYNomBc2rpJ6IngomFwAw+XfjBJ2sQAQiaE=","BLRlJiB+3HCg0jyEOLxJo2VjVVLe4kBmGize75ZvIPY="],["LYxwA1cxrZ77qSghqIEZ9rgYOjYr5kFympPWoyfAOAk=","Ce80kq0Z3R0L++sZEzCogO55M8nTs2u1+gIoO65dYF4=","FFjeUWpTQZDFVQxqG+069TXDiyQuuSkTcwluxg45wfE=","E27yUVlV/2YZSY+sWUJIFhifiWrA7Wm1mFTRBd9HxLQ=","GMv94M0hwYN5ei8IlZSoHNgo87B0I3HtAuuD+wBk3UM=","InV9qegiNFKXvQYKP3G7HnDOl3BJw5MjUDVnfoQ1cxQ=","FiKAUSXd80TBjjUdEegikWGLl1girQyQPvvq2lpR1E8=","KXZdjPd2GaWAZY0Sf7b6pE1scKD01l26qWB1S0GV2f4=","K7C2sI/BvREHDtxC8j6Ae4LouI73A1Xfx04Jan/zgcs=","BJUedHt65rmdklAQjF0rcBgak/8dS/cjeB4bk4Apgnw=","F3gLlGnoHKcMfLtDR+f7QMY+9o893lHQTLR7O4P8KZ4=","GRPVHZxx0EK/v2Sdnm5upf3YK0/TFz/y/gK4VYJSiRI=","Kp40KlbItkZtP+UzuJ8atEG2Lf8xU9OuZQDCw75jZeg="],["B7YgyKeOCeSc5UeqeDqnjz5FlMSas91vYCvGwDUdgj8=","J9a9GHA9fKkqokB20xh7bAAo0LYhPZ5dLGYRUjehkFE=","KWnrUBbySzGszxc8ogRmjcIimEW/ZEbOoAfBEzSb1Nc=","KcZ7zgS/0CD0/36sq2y94DSyL7hjNGdaNh8FnlA5UxE=","EkR0sIgp2bcXxQiEvIlc0/gdUZhZ0hI116dEUNCpQns=","LH4o9Z/oqKO7L6KyseEUzig/4iqXij359ioXHLHWXk4=","FlwLl4tLtkap/yJaxJAFISkr5UyHmILT8R6qMQM0FIc=","AgZhNLspnZ41nLgqg4D+tjtg5LmFnZuYcu2vkVL5LU8=","CTcu0Yuhp3Tq/hv/be7EvAgUsImcYZb6Faes0V7MXKI=","HjoTDoyv+bXlY+iq+EsvxzZo41HP0oz2b1AS3mE0W1g=","JVVDoxSvxaKZFBMijHXq45i5BXayO2zYYShmXMO9lHg=","B2VHRJ+gOEXxheYVeKWo8mg6GXM/wExzrGoLib67hFM=","L5i/CB4Ot4+AJcA+6cGZ8ug4xR5aCu/TM+n3z7OPU0s="],["IxmWtZJShXVWfTnQBkWoOxOSkJO7+gDWpmHkppA1HQ8=","GT8yo/g592BJycvyQUWQaYohGOg2WDJ8QziqNkjY99c=","Cl2mWbb8saQnPht+O1RNLL02LKxJev0AS46pIP2wS/8=","Aqgyzu04N+dCGW4JSR/iPj9uURJuq5rOyW5xlTEC7yQ=","CYuyxMYzTf6kdNBMsul2GGH2sYqAWKUrYZ1iJ6JiKKg=","EBdJ+d0mBRkcGWPyVpSuJn9rRL/i0a80/vy2XpWHhLA=","DHteCTQ9tcY8EQ0xddAbtJgpDZcbHm3A6aDp5xWDVrE=","EWoxPQDPmdwY4h+TpbsZgBi76kt83O0+TSEJcd0KaBs=","BATA+hvR9+BZBUy7h/a1xp0RRX5Z+QQZzkvRC7ioA98=","DBwhavMwVMSX7wQ4H1hYIpi1QzX2Mr1irdKeCAZ6Wdk=","EcsgVE9DQ3poin3LVzp9pPjHtENzSe7fP85DKm88FlM=","GG8WCuhm4QxL4Op9IEzWTlczfGDECzTDo3HXU/L/ABo=","Hh1ZIO3P6day0N2y9vdBr7BlkDQPwHsYLqfD672TOTE="],["BOR6cuSbnFqj9p9q8i+gq2QMk/xSTdPFCEhtZvB5hSo=","I10OcaNQ8fI9m7UYKsROyeRhXneAHlqtyrgzaq2xcSw=","Ehl0DEJHQ9u/iWmW8O56QHa6lgpX6Ndnm4KEeSGFcNE=","K1AfEAPieqgJ3J5c2El2o7jBacHpxjl314I/gNP4I74=","DzTbk+qNKtfR7/httYIMx62ke9zYyC0Bgh9cIaPqIyU=","BNAqsFgm+lC8xfmvnjlkd+aFQtB2toPuYbhYadRTWJM=","K8yC51ORvk6pzQ+KUF+eT2hHePx6mxvOt4aLspnNIHI=","D+KbW+rVTFu/QmuxKESikgiErER5BhAc6piImGoDCxE=","G7IJGHCk+sA2gv5bHi61axStbkj0Z2/kFFS/7rD/1Nk=","D1TJxSKlx04NTgxjYRp1AmV1dbepY8DnhtKnYcToRbs=","Fg9awLJIH4AZ6V4LJkRbpk3AOkvooVRhSWJH5qwpACo=","Lz1rjiNhFmCJUBuRR+hKtrCXkqwXpfCA11s+Mgr/yGw=","G1m7YOmGGUmH/OoHBJi8x8k91WHOivX63nVM6sB7FwU="],["Coy0sr8/DF2mceSPg+XBswGPDTEgCm8Z/VGV2yLu9/Q=","HfXJ72lK/mG8JTrpCKj2rwoIzbnnip8yLCI4gyLxbCo=","E0QxEo5f/Aq2ATbF2FGhHc3WPNzxetZP13UXcB3mdfg=","A+pOK//gLaWXfO0fGm6FLpIavi4BXzWzbOS9AkbCzYk=","BuA8oRRnBVIrtencc1YO7ua5tL9R1I+VP70fAG11inU=","AUxJnuUZJbIx2hfue1WnX5b0YuQxZ17jbHvk6bBp4mA=","BhHs0fN5oAYrBcSu2xALwBUkTGqI8WMaRWzCrMqJMMw=","Iq83wOSojerp9/rYOBmRBzXLS0kxHgquEct1NNC87m4=","KZ75Wu2MdUlNuC6GefvG1aPS4prs3PaXmpsnKmB91d8=","EDzIOEvhvhCHubtHwOtgSfheBBP3tAjx3C+h5vxK+Rs=","IGz0KQrJhENPp3S7D4kBojOQVjK3k8gLHVmWbpanODI=","Ddhdzwj9ONIvMW2R2BLLKohDCHda+p9mfGyoCVQ5fIY=","JM4Ky1ItpSfT6rcoZc8HPZVLq77TzRcGqmnXZ+mv580="],["GLuwArRvLl/sKxIPr4eCLKjnes6U4DqrXBbEuTFzncg=","HbICHso6NiSn1FuxbPSkTir0+uDcKAAw5+vlU5T2nYw=","CXxhM66o/kjzpfxBa99eRtBd4HI7xJ5Tufteg9NQwpU=","FQ756TKnS43r9nAIBkEzmxJoT/WjA7L7fB2NVvVqth8=","Ejf0TwNrLaAGepSUczTjr6KsTPEAmJZ2b1sZHN4oSXI=","LZ6pnS0jcygmbVndfgGLvWvMeUHZ/18HoXuvAJn2FNI=","BHf5UeGfUxuENK11W2eD1htnnvu4f9lW45TbnENOI1I=","HYuLp3LEzacujvmxnEJNVdVyUbJHxjK+olUnGvz8cLY=","IGqi824ysrBta+SK1JPTVMp0aHU/Um5r2CVJ/DbNQQk=","KNqTCazKED7PGd9ypyITTVMLrmxmDbPDZNDrsgDCrqo=","AblDWFXWzEM5JA6fo4GcL/QgmA1s8Ucht15Msf5X4Rg=","I4gy5kMVjpZom1gDsLd2AbWb37SSYROjRV8f9N9uK0Y=","C0O4+sxDz8BntVE6vM6EZQS5OVzcFN+WhhpSilKuLsU="],["Ar+uGwVO8ukk11qKASg9opEDxXutEp7IOWzidLpFJN8=","GkaiZpGEHCYQmjKuB+tYSmuK9lcnPNxNihEt6gvMhc8=","EH2geE37MU2ChZvkTTe00rY0XBdLkWUcZcmESWgqUgQ=","K0WzviZ0/YIFFqzWzGGDxPrg9+36mvzQLf7szQK/7UY=","IILpEDzEUkWSQokRFScxKGD25+6UV48BGPSpIND41SU=","MDqeIoVdldB+gXLzoFNtS5UUL5YrAGqKsJ57tjNehIc=","KWNRQxPwRvhE+VD/6oD15bQktwfxZZlmLlouNmjL5fs=","BLf40dXsi/aJrfEtZWuU4VsLIpwWOMnEdX+vDRj6ZDM=","JZVHFotksqIolBpULzlKJpnAgcFJRj3Cw9If2LLk8xw=","J5Gd0vnT3J/L2hojuVzyPjYw5v1SEPrKas9GKbiOX/E=","K5I35ZQeFlfvpQe4ksO43Vf8jVKHbstZndXhBStrHy8=","IC445mmINhnsvGpqRTaLm5o+mrZ+/vUPiW3+SLeNPaw=","JidY+z4HaTaZX/MUDvfRsKHg/kJApQdH4sPBINl386w="],["BtEBsZR30WJ7lUJYG/DN+rOLBc3v3LgZZcW+ANeA8ZI=","DK6AzAWu22bW5kmwV9vFrpdZ2l17Q9XiWkAOH5Lp0ao=","EiVrO5nTHYo3KYb5XWbME53SPpNUh9oms+JJ6ny/ka4=","I4ll1liWevorzlD/GMu+U1MnxlsLduUNowc53tJetJI=","I6bhQyhOjyOMS2Mq14rOWw3NlKiXywXR4pe0iA50M7I=","JOE6OPBNXg/Atrbg94KmpSOos7ASciS44jdRucufiWA=","CQENc2d2IKrhsPqAI/8cgSMTrpw79DBm6mC8GrR3p/g=","CkHlpEId79Xtes/UhAE5WkCaZ8Pt9MFozjNo7ZRCEtc=","L8fRfzqa/B3iia0PlBJq7sg0SYEgYpzIfEWGxid4AHU=","H4bj6dFH7WBMceH7bvhFnPxAABu0/FzMJmFmmxVavro=","GC2Pke4qmiYhWzXzwO7PjsXMNgEkz2uQPnDKgxJpddw=","Bn0rYS119Pl0MS0Erg/vQ6NbYO8FTA9HUwLFX8EL2rA=","Dqs/JkF+a1PFMgct6S1Kp4zN8dqRZgpGGrsPn9e9zX8="],["GK9h9hhP+F8QTCvvF5s+xaXSQt++vo4nopGPYg6KW+g=","GVBXrxMZ4k3xuQXG4uspVwA8/DSwAcDlS53PLqXfa+k=","HZUuv/y+3SYDbFSh6KKCj+MgrfB6KG5/LCEbR/bD7oY=","A3C3V6xs3UZhDuwMItQ6VD1eBIJXe73BTnEJAwe19po=","IuB2o6puv+mWugaL9b/7F/pyQzjNZ/Z+olMwGVxigXI=","EmhR8+rcAYMoinUBU5EKQeB0s1RPBhClEnOtNpi+DLk=","A2H0CCt1puvSP5pucwnYxOdSAVnaI0Qe3WMaasFMIM0=","Gr6LrbLRI1O5u5gVIIapQht87hd2FzDiWsKE1rHtezc=","FafmSlpG9Zc+ToKiY++QXtZPGCsgQbqgChNZ5+nF7ac=","DhVOvVDbPChk2+HtcrCBYhCFG4bDU2ktF0TLM3K/py0=","JVKNXTHb13z6bnsYR/joTIHB7VuuKlHJ5APMdUxUu1U=","IfDGuJb7FCINgRRBYpx4+Ojid0YCYiDjMczriaDuiaM=","IK3esq/SDnUqOdLyHr3cJ3J3OwYpItyN07oGiDbbpGQ="],["EeOnwtX3Q3G+sYjG49ehSzMSivjuModUbRLXd3zvcMs=","LU01rNnyij5r/WAUcpSCk8Hk8ITHFN2xoHXy6unOIbM=","JjCbUstV9upakDCwE3j2XS5repYZkm2bGx4hy6Afp+E=","KqhMHvnoSKZPdIuA4nndz/hx6cTD4vr6r3kVmwtOQBg=","L+MbDfBPJ2pSW2GazEpbo+tY2MMhxiOQ/rqwXs28eY0=","J8G0Br0Z7RPVM1ULi2IRhrH9R/Zx5mBGgDF+ZjiwkeE=","DOvPMJdbNyZ67fUh7ivHU8NCTcS27fOYT7Aq4erUTa8=","KRwNpzHAFsDWxMdThwMKliv3ous14VqsAvrfUwJ4o9E=","EhbwVgfgMuSQOKwUWBAOiayFGaWjzuRUWwiFDYvxYOA=","Ga5llFodvtOWXy3jo5/y1Uqx3uDzM7iPtJ7bP8mseJk=","L5lq5iDQCj1OVe96bOC2gTiPG3/zh1tyWupuuQOdiyU=","LIJe5WHEq2oiMxF3mZyJgG+8NFGDh+gHwgw1lzm6nrY=","B1SUdDbDze0ppgyeiYI3whg6Sdt+cOfrc677S1xpMkY="],["LeXWp6JzQ90EIqxxuNQJtDzLC2cul4+P39IU9NeGZAQ=","Al6y7YTFIKuhZOM/A1O1ExiGwPvRjlVpVUFRLexWOgw=","ChJSXweBMiNx/XCwkozObi6qpnuJcNzfMZ3yXoAZpt4=","G79D3bWgsNKEWSOxzhKCkjWcuzE8WHb7tS9eax/LcDE=","I+jDYGrugY0q+oxEZdXsucRb3njdgZwPNaYgWTwfQuY=","FYiA9a25bdE5gSi5/zOfPYJ9pkY4kcyhKcASwGsWsyE=","I6GsBzUZRql0yIQekgkqT/xq78f6mI48H358h+FRKpA=","A0xGD/8ohi73pQmhdQom7R5ZYPy1jE9Ix9Jnx35Y3WY=","Ij2xjzHIXpjh3XtyRd3doP+OMZvX0aZ/28fu9W1meBg=","AJm5fIeM41yVfQG0PasH+AA+LDebQcphpuVqkgT7Frw=","LCsefHD+wvWMoBvvWsN8u5RxrnkUvwjffkfdjjvDzpM=","BGJfIljt8CYroGR8rkJqSG/IAdwLWdIOwPTQr4y9I84=","I5ymGm735QGBCqiatJltvqj71H/S96LJaoGOk6PDjIk="],["Iny0O5gYkk8qJYiWSgrX3fo99iKEtLOxAZmlAe2XBiI=","FsfFxhYe2jLGW7NHZVrKqAvMmL/AI/SrEvWyqJnzfj0=","J+N8aKAVMPCSzTfEom3s4nN4aNwsNRlDXh8suI8Htiw=","Gd0cbUUpgkitSZUx8zzgAlBUWNdheOyiYpjjmmL7lQE=","IV9VY0ZOLfao2qjDRHakZeTun6CtAfxDmbZJsuB9Fnk=","APNtFm6ZE5ub/BrDJwo9mMSvqBv5dDYHb1c4PaUENqU=","Ht18ferySeD9P1doqpLp2tZBGLSRvM4SNAxG8hCwfO0=","COF0Gpf2NI7W1o9Le8bsiy2/A/QmdpzHec7uS6G+sD8=","L0qoZB6kE1Ax9Nl6ei9nmoy8pWK6aqVOrn0y/30E29I=","IaCkPIjOJu/7+LmtZoBWtbA2LlAJ89gAM9tHMij7f8g=","Axs2nQEfIZ5Kj7Id+TUoeNk/+ANbzag0w9zEHDwt+F0=","AgpyCDV5BZy2WZUtPyoB7ZDSEAInW16hHyCcdjuqhFc=","GfEXcQSbW+gbQ8qB42EfQQikudwwzRIkQfdDGcOtzek="]]};return Qo.default=a,Qo}var Cd;function tw(){if(Cd)return Za;Cd=1,Object.defineProperty(Za,"__esModule",{value:!0}),Za.poseidon12=o;var a=n(ln()),t=n(un()),e=n($L());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Za}var Xa={},Ko={},Bd;function ew(){if(Bd)return Ko;Bd=1,Object.defineProperty(Ko,"__esModule",{value:!0}),Ko.default=void 0;var a={C:["MEwprrbxhzhHh5V20w8fboo85BCCwVx2Mt+SDW21Fk0=","K3OA2LJbymSbP4u9CoauQXEJBpvicGb0b90cfIfUxAw=","BMdyAOVJSxy4o9M09prluvp+h3W6GSTlY+/lke/zAvc=","BsC4lm35MIDDrBV2SG5hqw0CdjeqxBuzXkgr+hDjT8U=","JMc/QlkDkE9A2/9ZAiXyUc4ZgKWlzi0HrkNuHQkHeNc=","I99vb0RIJzx0XOU9XXq7XSbEZySljWiETTw+5F6bkks=","HcGxrDiSgBiOk3VmBxuEv4GJuVXQV5tt5eqKUTa8Luk=","J/ccXKd0ziACi4FA8URHIEORfNSRnP9k2EinRb1WkYA=","IrLuU7MCui6Da5h4PhXrbenRWnLMfKo3TmG1HdDS4sc=","JU2FBl+HJx6G17QR1qzCgPntJXwJjJ/bBKLKTffH12Y=","KGIHk/N4v+iB4Ji9LsYr60aJnzelSr0FPPsLO7jV51Q=","LBnybQg2Y1sE84+jDuXGSPoOobIC6whGghrNPGmc8GE=","D57Yfpobp+58KL/XrDj/O6EISfsE0zIomLqf4BBPtEU=","DR3v9CJjt8rooSOhZBtyWAFUdhYauIHh3CDhZbPwRXk=","BbJ14HqeI/R3qfDiKUInKGUo3dptx0SE125qqnFNtaQ=","G8JVBSrtnc43dlvFqV3neSc6lvS/QBNUJYiwl4Pqf6A=","DsIobLqZmE04w9+4DMCK6/eaSvjsuY/8U+xKvveepug=","GwW+9x/DlvG+l8gsCC0vek2LMuzzDBmHVAkFDjrTWIY=","Fuk8fu0NwABpWNGCTQ3HQLXPuMmG//zxth0QDynraag=","GsSevADjdPxkfGWYHdk624mY1hKLkXpiNapWI+pGEoI=","Bye+u4RfbUdE093xLCqvbywqWOBFcf8Xrf2QXNV8YPM=","HVZZvk+p5xPT5CjCnTT5/6muDyrKNHRUOiDWJUsvAZk=","ExbkcLVPDc1TEbapMDR7/9uDOQHgJEipQZ8Sf4ZC/Xc=","H3GCkG4YS9iFlMolif+EnrLaowyvjL9SE+0/pHR+RYE=","ExlxTs3H5rqyt89X2LCICUoAPy1PiO2w0L2EQbTO8xg=","CIwQb9rrMjp2+UoJEq3RtmviFghKQuFL7FlySOAX2I4=","D7irW9xhaNGth2kiVkHQtetP+PtcYJxmHajug+oqBIg=","Ld7d5ASFjE8JfGyN22agA4FjXE8VUBTTASrR2veQNF4=","EtkrfHqIyYafefxh5OocHIgbsTIMC3eHxkN+IwtY7aY=","IcrVIcGr7EZL6Zp38MD3kqWq76EEu3wDa2yKQFBQqk0=","EQR/un3ipVPD7FUlF2gxRABwjmF8m9/zOklmPKLesxk=","KQRSn0/AKRRJw68Y/J9UcirSx1FiDY9uDh8qE4LKxac=","Eh/mLFP2hHWqLMvijViqdKKr67JlhCLNbxRcJmLMlqA=","DdseTqem82cFbu2s95O5Sl0336Ag5lXpBxEwbccULRk=","JotEh18Z/1ihXdhPS7ZOqLrMffwE0a2GGRD7mUKjce0=","CcF4KEJd5ek8nuuC0yX3cJNd6MJFhFkbdEgIMWWQMZs=","IwFE0pRfFHU3a95+u0N81zWNUBuclU9n4GwKbpCrPEQ=","BYUaiEfN+8gCiJreNESldyY9k3GLIDigWwW76JCpiJE=","KbWtLGKClUzjVqp8MQheuRtsxJ7GvxOUIsOfpU7/ALQ=","Jl+hg4ri9tWRuPM963jT18nKFAFBcP9lBhi2AUQ76RY=","HofLhliMab9Pnt7TPwPUl8FdYbDkjdBFlN8zbYeTojs=","JFlPEVBj+aBjzLGlgOjp8EJSbIzPbkvypqJzr+oWfwY=","HQUrDdVxXIiRlP4X6Ddjym97x5ogTExABzvIpRb5NMg=","Hnu2keZ0EKJFB92aXMMjwPhvl7hCvBPs512IyADnYEk=","K3VY0Iq4cNMLGGY++ccQ+XzkxJRU00xL9xS+iGW4DHY=","FP6iP9f63VPJ+vQ+HjDB5CZmjQCA5wY4n11E+NDNtEg=","DY+F/2t5fpoo9KumAZM3QS16d4w7fX/+BtTiCGRJGt0=","FdcssSqObTycgA+W/a1RzyRSd2jJ0TNMYICE1aByjMQ=","JfdeNhwmSVvZ5RRorqFo+fCXh05WLXJ/AwqM9djFhVo=","KGI6aIaGchzPztpsnXhoMuAmVIWbgVDiHPA2/MFUGSw=","ADHnB2ZKQyvmOZNMKy2qV1dQzEH4QEWdhabW19iru+0=","D9VV1VE7jGlF+Xu286XTsf8qwtgadhLxLu3v0iK+4aY=","Kh/hF1O3qNCXcDi+EnajVYV6sgy+RISwixUKRsjjktU=","IueXDaEAjbV3K8+6Geq0U4VTjiVF/CDZUKYPhA2XAqU=","FUH+yFCQsH2IVkAuoiThuy2Kip0RkrmhPeyBuPaWgrI=","F8N750YixgjnAwEJLtxp69GdF76aDUS8eJRKMJ8iHNU=","JgMsl7u7XJIOEghZKk9SRrEdTXjWOqGVzjhihb0NtNw=","LmLXPMis5bwS9eWqI2zLcwgw/aYtbdk1xqPEIP2cQOs=","LwJqgrFYcjhZeLSca2tIdlnk9cw5Tebm7kq6JqEE4ik=","JdKXYcweSbZhSsQpRE4ZwHC2okupDnrHJmcsfPw2MnA=","G6l7SGBeF1Tn4X0a9+5JbndQ++YWXKuhUpyJzGfyeRE=","J15a7SVGQgLxtxOFK0cwJ1sc6SFT0CUGPgoV+gd7UcA=","KzY+Rdo/83EyQwQJyACOxoWyLr/oQ4320+1KeHp2LmU=","EK2j2SL5lNiK/MQM2d35la4hGZYd9rHa6622ImL0Pyo=","CjntFkKG45sBKC1lGc0CIRHb0P+D7xVWJppjoBAIM0E=","HDfWCFeTowxH2SyvZ3wM4MrM0pgrz/GAeKRrEUjPYxA=","JVLK7oBGmdTWynW+9KWPdAj5fqMHtEilxA0xEphWImM=","ByUpkD9aVWyMUeFDyXhTVAqVa9O5UCsaQ/39u8ZqWyw=","GpYR3msYiUrZZ6RPEp9Ir4Lv8r0P5AsLvuY64HvIq3Y=","CgFMvt+TviqSS5qjJT6PgyhFqFYtRZrJMryDHgQlJM4=","CGQtkUclVyu/5+t/e0XZF7LR3r08RNNjbL1mF8Epsk0=","CfgTjPA/3WvREBScaNzk3tjUUgboAW/H085uK2b3Q6w=","GvquJgnOfRXHrkdQl2doeljdwhFTZxUdbzjS7jNzAW8=","Hic5KcJ8o/b+BPu0iPu8HZRUMfppIHEA28zb4mEPyYQ=","A0X+C4/RMLjjo7I3mss073P+7RQbgGwHRiGk4FHBSak=","F6OpintwpEWjrvMBY16OXosnfuoXcwYeucU2Tx92dzs=","CxJMmrTe9xnklhmuptN0uyvdhC1bi4TrVWZTNMFDkXA=","IKy3ppz87NYHM0Jq5adHLbm4huLxE2mqnw+ScEQMwc4=","E3rGiniJOqRXzjr3n4SlLtMd90B8X+tatLTZqrPUecg=","KCLl6CQ8IO3uOMsUK+Pn1+AF0nT8NGUi9THBzgsFYOQ=","GcU75rcMtceePkIJaLRUiz7lXc3g7SgHWUWyro8jMe4=","JwqRySXt5FwAi9vLFi2dUycXV3oB7pSOCpkT7NLvnSs=","Kco+aBHYA3owkpaj+tzXNx6Hq+IerLN8j0rHyY8dSKY=","L76DKHTmoESk5e4bY/19okkQ7WheHdEkRLgMlflZuRs=","KxC5Q7xCsTBq48DJYvrBR/FY2eKt/tB59Ki3y4NumY0=","BpJzU86X8aLHW1eqQtdCl0pg3LsTWG+ZmeUtQre8pDM=","CIGf7gHJt/jx2Yf8PyzHDeeFSs5t4HKLp6DnpdchkX8=","BVBKFngunJXRhwFm1uyFPc0oWdDUyvptMgcJBp4iE0A=","CmycPGnlWECJMSQIheTt+R5USCMKoCCllyHpTuGcSxA=","FjiiRbY1Rukx7nltOtf4/bH3NzFpgzqm3dTKDTSZaT0=","ErWrPUUHHYRTm+dyyfRoyM1u/vFRo/WytSuGxHyUgNo=","L50Ex6r4VBgLfJlDqGq3ZvHGH4Jlv/uEdyY7WZmaTuQ=","EXCaJCZX4Xcn8kKcZzbtG/bHVtu6iZqk6uXstshFVi0=","ApZo9fXEoyRrw6hvIhMvwM/GJWZvmeZA3qDh2nqbVnA=","K2E9SAT+q95H2nHybhPWFCjyeBuc4f3giJAt7PUV8yI=","JfOJLrV4YvAIdVfqDpOGfSvMAiD32ivAc8onbXUK2Do=","IQP3pSFPQOL/ZEdFg8zgkU0umk78Ai8Hzly9eR9UMnE=","FKhxEHKorrTjxyv3aFEg8jJbZPkG4sHuMfavrWyBUTg=","LYIAEQx0DdUb0i9CZ8q5eTTlrbhtrxwvBAXCeBvafr8=","BbKZ5AUTG7VjEHI5bFtXy4f1DQcPGWUzvD8FBsj/IYs=","JZXk4iP4Q90BtVDFUyz9xRkx/cNAoRytEBn94IQ87Ic=","G6krx48m3zFI2pIMe0CE8BXuFkZipauzyUrPNveKlX4=","CSyu/e1fgEkkzPHmNUPWHf1XAAehBSq7dkmDIzzGPks=","HA363j7D1FEZI4x1xwC4JqQi7gL0VDHsEQRJ8fdWdbc=","HaBerEZ06ZuVRodkYTaayiDiieZ9BSzOEPv0GLCgRCs=","BQhpKMvQ1JQDv0rW9MYmy9SMHZx6IpVzBvC93OnakZs=","HTL3Hk3Zk4WikpoCuSkSCFFztIJUjhvAbvs62W+jEXA=","GP6JRcCB8amTfiA1lXjL2xk0OtCsUENfJtyBk83q2/Y=","DCehRp18G7YMaSNYeoG/oFF1h6Ow0zVoJqRcOsiv1NQ=","GgvNsnS61U4cPsoeThTq7Tva+whGtP20HAy8bvpJAMc=","GMFaO/6A5Ig2AWZCiN9iFxr+rX3K7sD72Vmz58ao92g=","I68q3fzs2M9AO+6MTcqB+3yXj68UfJkPJg8RWy07yPU=","GG77NaayPUBu/GI34XXa4C3pxE5dwol9VjPP/1cck5s=","CrFx6VxgXG1TYf/THnb/jk64L/LaVtZZxmkC6dOSh50=","EiYibVVB5ghvt3WEN4fKU326WpaEuofsDeWSz9IOiLA=","JGx35tKFijSjyinTWXYRrfMopKIhH3TV/QTc7KmDDI4=","DXSVzfgHrD1hhMGN2ehYslD7s3wRop5ikcElQNXivaY=","IwhT7EftctH//4Or7wO1/3Z48uEEuSltjSlDAUDolwI=","FB2GCIxjFs4Nw6VglhpQ8Hact94hZokHfPZcYkXudqk=","H9T9pXHqXbUL+aN1t+g+4Y2+3DeRSwZkYBSlAJKoHiY=","BZfMFDKpc9g4lvq+mR58KlNwRfmorGEqx2aje8r5ydo=","FtyTI5t06riYI6r9kTl96npcL+oH4S5WKv4qlOfzPLo=","Fdc+7ubUgQKggYz+cKsPKt2S67fI2EeSKq7wIFQoBBQ=","InyDMOLXp96Qfuvp6C9yZMFt6X+yP0vA1WOnh0vL9Xg=","G5Uvp7DZ3I6fPFKpV0aPSSoqrUXLLUpQN6R0prMjGv4=","Lf4ZK73l2nXBdawyZYV7zpBap+zFha0g9Jl/Z6UELkQ=","GM4bWL0/K8VUt0bpDxiKZwX4Qr4p+FtqZyMJkJ/sIVY=","FG1fODsu+5li53OvpLCGwWSwqlMG5Td0XxVoCoX2obQ=","BRMAgq6ncgOrHigZ1HBPDp1yPQbEV5sbz/e55wzxyyY=","ASLSwcSFUK3myI00mNe6g5XUR3YxnxJkjBTKy62mzDA=","Ar4N/CqewoRKWFY/jwEVlE6aOaj7zPw9eYMPSklKQpw=","AjYrg+zVrIapCFM6h2yhc4yERCWCL9D14GRsll6UzZk=","JzQ6DKg7fL9M14/sfCv71kUoWfsPe1wU9iORqPu4E/c=","JfZuTDGq09Po+JQDAqdx3ncMhVy3/OP7FwFiRJlQBZw=","FygTWGEmHj8ZlbB4rwoPEjbrRX/GIBxazrjJP4che2M=","FTtNdWVMX+YE+i/Ja7tqDvEkDIKB+MC2QyvxpSn1Dro=","HvKU/nl1aPVSU8L5PEoyq2k3oTMrscQSuMwV50s7jvg=","Kl8wLEmoyP1uTc4eJlvG7A7vNMxGE2+cymZCc6w9jqo=","IyFaFBNjNgaoyPIrpkK8qo+1WffNMiywiq55ZzW9UnA=","Eynw1vqdgOU27RIIWNrm5RN2Ykx9quO6eXlaVSWmxIQ=","JmTpqY+vdOFBaqZFtkWJ3eyzvCyF+aiWiK99tw7GAoU=","MF2UD92lJfSeI1rm0l+dRHHjlue8OhM67s4eVu6qc4I=","EnGvb9AEuGdITeod1Dy7XVjXMdrG3o2/uzAmwXMx6po=","Ix/Z4RqmiOMxJzGmoCfswTMVFtANfjB4jGNSGqkyYlE=","Dhn8uGOCi6udFS4FBM4J+mH6o+CiPAJIDvb4ZmVdV14=","EwMGVBdrBq/LYRIDojaaRC6GOzwNHIi4nNTH/fT57wY=","H81guaUix0BXY7zJVGLXfAo2tOlSxGG7Luvx6EKFRVk=","G8HMTxIuyhe5UUUcdzRy8KP2pXwYUxnOHS3g0Zuh8ho=","AsAxhWPb+ZrmNrwBK/MQF1yrt2Y/Kmdkz8PWfRhqIfc=","HLsaKkkLYRdvkEW0sLYOwD8SsVswVVo5Mqo8H/6ms7c=","AGeW8Q6bpmnf+Ujob9Ri3FzZW6gHmwLCsrStHmL6N94=","B+ao/kpDl7pwkhXFqycvPFQUZcvY5DZT3OL1nN743uU=","KE4JPJhWV76+lr1nESDJKZW9vSyZHN1JCTCcw3IrXtM=","DSBx2t/Sac6odAzAKZMjy24aZL8SPf4a+YoXh6bKPAQ=","GUW29bnPlLldk0H7tri0t7RhuWOGwenPPHxOOy8INVA=","FXammEClDkflq08hqznVMZADhZTsWZcAQV4SxGkrRng=","HZ90hBlOkEOVjW7nyKVSwNJflYfmbNiZ0s8CkXlkFnU=","FQYAPzm75BLhoKTypX2ynimvKrYQBjgvah1Ou4w5Q3s=","IkX3ft+es+ItZHhTaYvoong/rPkrFLg5LnNopFnaYtU=","GJfnTG8b8xOQYOuASblTKP/06duSYOraHlU0bbvezjs=","IJ/4YIUnPmgM7ZV9Dk4WXHi9lnCiSWnoOuiw2xJjjDo=","BiLunSOwxhsFhFsjhT5A2I1zWTq4Uei+OzOMp86M9a8=","KuBlnp50mkfj4NJEhizPX9b9bhrwsoiUtOxylAd0vZs=","AsMXFOLGfARUVGU/G9+kfbA5KEOdROMhIyAj/00voPo=","HEqCeHS7SkVdeQzXqGZyY0A4uvsS07iVTPOj+qh/+uE=","E02n4ZJD7rCOD35o6rp2QemOw1+Kt38TTdEKityEma8=","FfZTaeURVe1CoNUMNHnXuIDP+H6BdlqXzorSi53mcl8=","EIHcrhD9f+wSozKKYGeMLXYBM4YM8w9eRaD/9bqV+xQ=","KCBrXNRM23vxd6Lj1grjheOrLHyO+dqps9rjX7uZJng=","Bdk1Uwar6noUlLSHXwb6n4H0+wuFUkqmGwOqBTuvQ6o=","CGmuhoModCM4OiMXzlj8+IQzu1RmddaXHKKSoPAKrzM=","CwfYVmrGHfnC+r6NQGLY/ka93RXQhzSk7t65HcmHOJE=","Al3VepvuWjDvEpHwrKddVfINEfjg8uaXBAE4MPJsIrU=","HJ4u7n15t54ZoB9hfzfrj9++BCDzxf7FhJH/E2tFny0=","GgU3Mc3fvy1Y1yO6XVD4dBJXVciywjaxGi+uPrFdFU0=","EJ3WfwbEkJQDlt9kEGNvZTXqfyuOubr447464doSs3Q=","G46Tmjz7dgVqR5PoWxtC/TgFmFbBpDSufskL4EB/gP8=","G7RUmHMZFwH8dDl0ZaxImsWt+ZBxD5rln8doXEifLjE=","DZcaMHZRU0F8tkgpjjkvT2He/KBqBbTkI7l+RcjOFek=","LFj3IxZC6G24LcNKEazg6Hwk+aG7jpzZJuBz90qWo+U=","F5fTfX7jXlDaxiq0NDTTwQPHRCsAiR3T+L8NrX1/RKQ=","FHsc8LRO+wjwO8SSSHe/Ue9fekzxXhrcVyU6M/AGxgc=","CXZnoDXjswRwKZWo5RohKBORP7lMjbiGxsT63VJht0Q=","AdZTrpbcV8G/7HzEJbMo5PSn4BdiG29SgYjS+8WshGA=","GznNnxEziDZMd/dVvx+kK3BocNYdvcQWg48mRZ9KJjA=","Jcve/YJknOUZaItOT4UzQcEeFOyoO3DGvSfv2oY1KTE=","BCKJ9RnFx+InKLdMqSr6jOiQztwHpwVH/bj7fkZ8hGY=","HPlm6U8dfGlhP+GHHycE0jnhgEF53H7RMB2tsOEO5yg=","KATSVbVxuas/VAEbaf78B3Lbd/Upzv4n6wrPHkNzURw=","KydLI7ZtnVYdBXvbetOKljQblTlDpLs2GsV/gWtEq5g=","FjcFe6fF37p43Y44ouOopBQd3C37QVmJI/ZrXviGy3E=","HlXN5YZL6l1g18HtNOYDbAB9dtkdCSnoHhkp9jBTIrY=","FpDplKoUiZ2T/yGrmP/K6Wktfj8AyiWGhCaMBrfIBjI=","J99DD4VAkv6pGgjrfkBXA4JWOxbHjBK46Dnn5+PXI/M=","Jiwnhlxsyykg16jX7xgRNs1fd4jK56ub4jx0mNI9ng8=","FNjU7GVQBCjrrESyZ7Mi5B1cvcq8J37Nw87ng4sId6E=","HSdmVYGVo64wMbv9MCQ5sIzIXWCLvjbm2Mmu6i6gtm0=","EcK+ivMTFpUV9KhV0NcegOthZ7uI01M7cPgY6wyUXMg=","IMlpL0o/rf0K49L3p46jAKRBdpbjIVA7C2rq665+RUk=","KM1OLnwfPsM0PkT2yxeGwl3/I97LeFMCgg0Nvu0zArw=","EfNN2XM709CCLHY13JdrLML2cH6vQXhWHdxdT1Y6J+Q=","AtbHkJZVgqBfjjq/0eBp5BSh312GpS2w+1fekgHZuWQ=","MFAl4cA6qhqbQxI/ufNTmcbtzzDf9zmDIKeL2pILG6k=","H5qRaRpKOqdlxzA/S3q4zKzU2DT1yOaAaHBT6se4YyM=","A/E04Bja2LgMy43XgMgI0/ux6yIiw2SgoxKQSCWdKdw=","LZzcOzyiRnwjfe5mbze34txY28WeC+R3JIlh79Z4KyA=","D0N9jzzE3Eh+iXGwOKETJLephMhcv2mNKCOyw7cfSFs=","EkE6pj3gOMwEJ7GsvSTuLObNGbNxScbKdhUE/B45kE8=","HkLMCytL9YAXPfrGO6YhDRleB4iARnza2HdJgKGGdW8=","CNYrTs41SZtg0b7KTyOpw9Ob1nmN2YGPlanwLnB1esU=","KSSYhCKzzxPumMUT9P4knDw/uUSAUoi1CGTCbC45iHU=","Cnl+kBb49SeGBX8bKjz1D+IPH82YNGqVjkvBxQ7otoU=","Bj2CIrryVNrRZn9r2yTIYOoXozEhdjkI6KsenD6kj6g=","GBXY6c3LnDt9GXWciYsHijPfo6OPPCLx/0VQNjYDy7Y=","EAVB4+qL9ZIetmlRlDtftEUwB2Mw0ZxszEnV/t74FYk=","E+1KD31aJsBSZlNfjuseymPjRv1+8g24jt0dGwWsH+w=","IX+0mmAdB6bnchIgdPe64Rb+IGExWWbuOeezy09R4ts=","HrkIDg97tvAbOwX5xgxi4L+naCdunlnurrY7vwb14Sc=","AhHQLp1FPehCxuJ0TVzmVXo/qmRny5I3VdVDq/0wIJQ=","DL1ffLYJx+Wtzbsl9vDLdNpiakJUr6QJudLBlhtN1LU=","E+xtBVAlj6kQV7DcBtjwCkfUDAWqEk3NESTFn04iY1o=","EljKHnfPnWeougLR9mW7QFs4hVOlzZ1sQwN9CCSsS9I=","KMWngkORtSnprbBi05g4Ju4ee7vc8gUKokBFstWs+O8=","Gc9zpUqx8uRCHPiKy6RHdt4XQaCzF8teHiAS31coe64=","MBFFXRHEoUM+ap9uqaxVlSfXoXoBkWhpcbeDajFwcxo=","F7c3OsXD8+INcbNJr/RJxz1B808dAIFA7VgpyyZVSOc=","IEqWNTU4/gjagHKz/ZfWSyReBk2byQHwwKGO+6rgmVw=","KFpymH0PDyKMxpTRDe+F0iujWOdEglUiGC2q+xT0wlg=","JHS7n5H29UAfq7zg8QL5dM3QYaXlengtWyOc9/iSWpY=","G0WEHqtSpRBaqkLPf22KzsXAbqiosO4T7WkUdwVM9aQ=","CjpLi8d9RYyOsmNS6StoXgBgKmjdSp8TysEOiM6XLOk=","LKtMNZ2JCh3sGIHSTf2/+XghgANzWhA5LL9gSdXNOCs=","DQ/QaU2md/magJ94XuHvBndRMiwoYTkpqPtySdPmeH0=","KeTgnZdbUCAcQKi7l1DTHzDKNgHhENF7shxf+GByelA=","EV7+ePiypy6KITwksfXG7+gPY0cEOeZ4r3IaDwQiE3A=","KbPM3xUEKFg/6qKEYc8f8aTkmqkvkMb3IO4vqJtYkDE=","LrdUmQ9ol1hn416ViUNkFLiKJUQL3AiGYj8aVo9RYHc=","CYkzW8/UECDKhWzPYa9QMh6x0hzgTRWB2wxiBD+iCbY=","IIqYV7hZw/YgFpBXUZBQcZBDstQsZp/9S2gaHlIVkVA=","Dn+EaRhPQanuxpkEWSIbERsBxdwPrQmpheMVduAABBA=","Jdr6e8a+Ch+f0hy9caZOVr+kb8fyeyp7E1kEoPdnLmw=","A9otwgSdB8TRhaFqKYAPeFvPYijMiR8c4wFW+zF1yho=","BHtf8ZqXNAL0Yh5R/zFGUTUFaH9yDi7AgLbkTEaIHTo=","KZwB1glaHWYNTgAaaCH4AOUO+hNmwlZW0UTOw7ApTGU=","FmLX+gB+ox6J5pLr9SJ5Ti0QbNhE+PDdXQtfWXWeRNY=","AP5M0GUJDf70DQdAOb0GIoySXHe87UslxuspheptpeY=","KC5J4xTDG20zf0F+naVKx7aG+mz8H66LWCczU75lhng=","DmzXUlN6kYC4b8u1uoVxgUx3gLLkhml7GKjcOhWdn78=","DMcM8oZvEjos3yy56KI4gTsBEt42T94FUtOAYjIL2l4=","GspRuUx0eYUNP2fQenEPVe14TUy7728EVCK4C0OOXQc=","JnChzAkL+x2xbFKMGtUUeLWNtmrbHru8v+afWuR8qEQ=","FEtWbTZn+vDq4+qcjA5L5VOnkXu2+MRZOANmETJ1WbI=","J7AmT/WU/s4izSbmCSVC7SiFGnXR8VMQpAkb2/7Tb80=","H2CKiOjS3Fu2zJG+L0dOrEw6ZZ4L3Tc/nG395Nagrdc=","Ei0FCdJQjGDooqaoP3cPJ9JKpSikBCfbBpCT/o54oGQ=","AV6jd39h3S+NSGCyAtP07drQ9qWsUIlwW+DtYBNf2Yg=","Dw8caeUrHkENSaRpOe7b1IEpgIkj758F3gJfmTdBpLU=","FtvZY/oZj8mjwjDKq0WAs00lxiI9YRNRyWV3AuUWhUU=","AdhWU76sYWCfCNSpiLhcWBpbV0wmmCHmaygVsxUhKFw=","Cf8J8MyaU8h4AoZSmVILhjn1m2pcrwbLgMyA/pYJUPM=","BlCuiHVLTtSNNSCqd3H0/57kAoC4XZ52fT5TztNq4NM=","CRdBsqQl1aVrL5FLz8p2meOFxzS7pgbTlCYbY2exAmM=","LvSBCLvEx7Z/HQDgReswkG7eADKpg45oBnWA8iwVo4Y=","Eb2oRqXlhov/9l6TMeC+x2SnLbpVSaxmF5pFJPvW46s=","K2s7yULaaEpYEkeNzuXyvAE4OVy70KBaxrBLbp3wgm4=","DhF/xYl6ptfOICWldMjk8WUf2V/x5jwy3x+tQfKDBHM=","DShcZFZbxQKs2up0eVoKZKRqFIuQTvmGp66zqebcVtI=","CYFBpXyca3LqoLzcmPIDNZE3+6G94nr6lBgddVgjxyM=","HRE8//LN8Sz4NTcBUh/5IOjRBIn0d9V1NrWcYAgSoCM=","E7+YOHlErtPiaNCtFbKBqCsoD9kkuNTrQ6BbI+Dzbr0=","HIQkmozs0TYaS2a20ZEWNa3mQPSYGs4s3Eu4WucZkXM=","GIj4aa3fKpEjC+oDk+yAt8+0pMvnoqBJ90QB50ef5Ko=","JXNB2GMiVddvKc17M9iQsMVLDpe4zWiXiGtuOJqNIwU=","Hfm7+0msyZxDIDQDyZkjpv2ci/f5qmy7kb0akapNfpI=","KiiM5Lj+0blMvTetyLb4FKMlT+sNC8aHITwQd2SIGdQ=","I9unyZbeazwifCOnB4UHn9QjKhfxnQMR1WE5XZk6S64=","GZIx7fIoeL+IDfMFQS/9ijzmpVWx5+gcfDxyqgKzWMw=","LMPZ0RB+el+mqpSXmUMWKUx9MYmNgOzDt4JXPYGTKHM=","GEfo5o1MGD8wlIiN6hUAemvGs12ved7Mnwzoi4jcPGU=","HqeR29mqo9KtVuWQqnNEUU5FaE6jIB3Ju6IAoEbDuJY=","Cjjp5HEt4xelM+PJKdbOdJMH6ISRN+Pr+ipNC/bAgM8=","At5CZHwCMveHDEEllrrOvaCL8n/hJOFvFYXPqdH2G9s=","IIx6f029TALRG7aECj/ZareP+WI80KOePfOszAP7Xcs=","Dd0i0seiJ5hwcYdhWpH5Ewpm0sDX16AV/cNaaN6444g=","KpCy1YamwEE2LPJmfRMf58QmB1ATwzkjsMYuP/pzYMs=","KYqy41Pfa6YoQhlIoClSsq/aaMRjv6NgUKfBQYoCZkM=","CNptLKYZgpZygJgTphzFMV8CRg2LF1fcAU+Ue3KeWAM=","Blycdhn3GM3tGnhPA3P//qEUFwMQsxBeJiju1iGiVhw=","Jc64v9oBEyNk8HBEwzr8TRR1Xt0b1lAlKMNnSXwuHbM=","AvrMeRc6oHBZNXnWSw81hB9lzaO0fErk5nUROp6rojE=","CS8VetEj5l2ZFASicEqRsjvOv94UKh4g2I4T6P3Fmd8=","Lkfqjhu3cpLAbsCQKcHRJFlJ/jneh/QQEzhBfdP3K/M=","Hjk2lBk5O4/6OJo0OSRJ2VOpktevsLo0r48hWfE5ZTY=","Cs5GrQ38wxYhGlB75OhxJ7IYChayRE+okXRZlhwDBZA=","LiX+fBnYSKx4CvkSqkKZzVmlXPZ5Yl//6cFNT7mU7t8=","AdjTHZf7Xr6Qwlqz+0M/ioK6n7tEQ6+Dx1SdK3aIwX4=","ApVhyAyVJ65IpfYF22HmmwiS5DdB8n44cV6+FFVHdsI=","GRBMyOOadxVqVa6suQBYpCsAHnQpjegfLRjMYXdg2wg=","HLLhOIYFvdZYOqE6bq6y/J7N4TN63g5W8+Lj4/geJfg=","Fkt8Doez43zQJ2UuL+84sIl2da00uqx6d3p4pZKGYPo=","A6LFxS80udYDrdtjI4NHwgTpux5l/tKy2M0JQozLBgE=","FDEHvvpIA7GgQmnQMCM/aNknZ2gyARx1Erv+KyLDV4U=","BgbOJqGjt9i8+t8A8w1P8N/L/rFDfqD7NfkYUQscN8g=","JM8TN7Q8gn6pdjPjh8eUjfkKPEKo9/J6HvpeB5A2+YI=","HCYCiz/3q3PdLMmd8Kw8quSp+BvkCRrH+uV2fkQ22oc=","Hg5NJD3ZgsYRY31RD0P/ModOpmgMiCRqBTEh+g4wKo8=","AEBPORgWVzBuHq6KzVECEjiXE2mGBrPIxlaybNTyu3M=","ETiqJOQryIOZPUxfbreFqMWct7sSABhrUZOvvhwq5Hg=","I7Em/N5QLfVpoDb51l5lGAXKBAsOAXNVxqqZDh9I6KY=","AudhI5o4mlMUk/ppncyz2GElUzpGCGiK0vFZJ43KyQg=","GOCHBZ3g6q2148XEuSec123D9tig0GBVixnDz97WptI=","JzZPJ3cPWLbbo9PxZm5QSqRehnswruWRRKU8soFSiWU=","D+AM4WeeOqX01re4Do4gIrwvgEXrQ6T4/p8EzU6u6U4=","Gv7elIn1q5RnHSDRq0mlrgrupPop047iEuCpyvr13gU=","L9sNfnVzHtqT/JMejY9Zdi4MvhW89uCj7h2g6JlUalA=","C3R5KtTlYk+Uza9SKNj3t2QedZol704w6ALjB2rQkAc=","BAeVCyRTyXRYC5ujFK69SdiQUqHY6ypgb620BS8tnd0=","KbjR7IiPJ921L442bLB6OCmoIb/VcpbfZntJaZ4klZM=","JdDCCpAGu6vU9RYPqeq8ZIx+QVUqB2K101DMFR1sQCA=","LzVAreLlfybONqzbu0GYzwoX/PBMbJJrwyg6EaZh31E=","FGlf+NogkE4H/vVFqxBP3w3Lr1tpo7g0hQSKAFflgxI=","FsfyhTGn3GdOjyQONddbCMZnOZWka6dGvHGPQpEv9po=","LiwmFva8AgG+kIlByDw43Xz3nEeAX/k71kDrxVLEygo=","BjvKLYkQChECG+w58RWQ7AhIggbgFiVwYcz7xhM1cGA=","D4xQq6OZMQ8wwgHXvmmQp7UGHVLh3sXftZ9p7JPXr58=","ELZDVCGi7bRNgEWlEzKwUPE34ms31CmNzDMhMiW/FFI=","DaIaCOX3OiMblOINxRPyaBuxWtEvM7rj1fcaTA7Ml/w=","I4+tH2lg1hmUfVCdl+/ds+LvPjDxiiZkLigoZKfdtCY=","DrjBfu0uMwMpQBtbpZZrus4RXMyJNCOybyJPuirxF58=","GX8SAKKef881N7GHVU3Ont0iXLvYAxEgxX/amiotbNc=","AH5Z75onMiD7ZwnsjRuDEGmzIWnKqY5/Mq/6cytVuCc=","CHmPQSzirsqlenN4KVVuXAW+qCLOgfhW+cwJXGumV0c=","LEP4rcwrOeJiwlLDMJ5f+9btc2vA7R5FlzqvUvfgBj8=","CMHQF7zx7dU+Td3AEPm5l596DQ3D/tNNu9iw78SdGWw=","Ie0vF5e1GDonGSV/8+sdO/qJbmEZkp396A+jQZdiciI=","KGiGtgZ9YnlHiR5ls2+NS3yBxccWrZX/ROkRsDQesMQ=","HArjiliwzT5d+WyOX65fmxm3rF3Lg57cQhOl+pbJX2A=","BUPyhrglTtw/UyO/bKRwq1Dq/0anXgluqaIVUIqk98w=","Jbza+01bbddz17PPy6QPjMjbdnW8VB0YfCFTf8LAo0A=","KKgQcYJutPFmFZZDBqp7Gt3QM25hWLMN7Cdz3E/npmI=","CyrpLZbRk35dG0LIMDiCVN0n5g1RL+jEF7hfyoybA6Y=","Ea6zQP/okIi5ik/ucgRYXX24Qj/dsbQQZLeFqtCih4o=","FBV+LasEII7uFtqmfzVb2wT3AUA208dYbL3MbBQwuC0=","FUA1eZJS9dM16xWva++eEtbzfjO0PUwJnonlGKQYfEI=","FF7kiFKBMwslUGh1ZpD4rzxS/+OgPG9TwQGoQafsr4M=","CMYLBAAG6sjwGTB6/esAqpMUu4MGuPpg+MFDTADSyos=","Hgqr4APoNJAJWKE7R5FKxM+PiVCcABx/j/76SZ8xgA8=","EqDRMvYVt4sHd6qRNuZ5uN0zQTcCf/5euygSFOu+SoM=","A6d0jFkat6kdjyWFngbnfGbMAIjyurBOkZUIkz6E2Ys=","KBWn1Cjxq/ot3XtnwukW48yLLWlQc59RRoToEV8O8Pw=","Kk5p1nORBS+OLZ8Jzwmw8lJhv8CwqiCLFTLi6yVzJTs=","KPQrtegGl1TXK5fywIuorOou8cIbOq1kLFywTctM7m0=","IPtywDLyzbPKrn/4SjiSCXBTrYwu4Jf85rJHRQ7MOYc=","E2nJWvOOxRTdpn7Z6m6w4Y4OETf3DoaVKON77Rh2hZ0=","HAIfJEnyXccYZz6pPmUgErFJWP2bAmjDD+95NCm3Pio=","CuOBXqJq9DwzVn5B+D4wXQF5oFn4miKOgk2xaExUlk4=","Bb0r4xVlhlAzR1sOVTvi9HwPexIW9zk2VGkXT2f4+YI=","I2jaKGal3RfRh1ZPvCpP/oaCr+cUCp2VcEbCvaGg9mk=","ITeEv/bvHUTQjLfDNgJmakACrq5JHdWBlrC8nXMeO/o=","HcgkvjNioYTujtl0iTM60sXsisgPwpyxo/6Tck61mF0=","JVsqHCAqKFElCrnR9BQn6AMbY3ruKf9qQdLxbiNeXS0=","DHr2YT4ewuAGeA/vdLN6EDnf4px29jdMgRypI5YvHeI=","AVU2hh2HR0KQTLw1ambzAzpDMG5nwzebPDl7jXOXlxM=","JUnHv61FyxkxCCjMvTtbgDJYk/P1N79pALN9lswQJis=","F4U+aivpK3UhSWBek4xZ7VuYpRteKY2/Cj9C54XsYRw=","IvuRh+gm+8NAVhVbZCQdGVoCHBmbzpYUDEWgZrdV7QQ=","DgHbsC0E3tmSFRHuC0HUIqR98az6hczoQ0GzoaQVFz4=","E+5674c/iistdhLNLOuIaU2dra03kX6NMjy/f/hdvxM=","BnKEBaHZbn6RIQR8bp5PqRllzVabilXJisqox5kFhuA=","G41MHZDxORmd+NoE9tCYs46PCP8IFcfFDscPDyIda4Y=","G/UPl6KQ9T3Zk4e8nD/9/i+Hi7D/ex5HMdw4+IBtRps=","BwhWTMbDmd4OO5bcwG74d/g5Ipqq6hUmUnuKu36KHHI=","Bhz0wiYK/iRyCT4rGNW3pj4COg3SMy/BHLnHeSU2nhQ=","DBAS3S9BaKTubI21x7UcjziTTp7INdD9ErrBr9I7/6k=","AQ0seycvax0CFgvXip+/VW/KbNIce8huI6vXSXeGrSA=","GafexoFEDalbGGZ2C7ikihe0kfcaYb1Iy37NnwzyosM=","L+o32vfHiFWHgqLUY2vIsSoCHWgGVeFtRBlOiKKEbh0=","CTGBMCtE37wGT+t+9HnReIxbnG528AJHvMH08o2HNk4=","DVYvfcyLGle0fnMWwoMkcER9RrGgXRX7h9NVDVLjELQ=","Ax12gCW2UTnepXyCNCWfqv4ooaSt1fTeCf71sMU6gAo=","DIwlLsEEbyiOxjuiPcrGi5FHlSge4t/OXDEor8Z5k5E=","JJkjrj2tJkcPBxxW2T6opMRdnsvDNcGDVeDIlhqPN7U=","GP7dr8mWEezgA64G1+08p9aafM1a3ON3ue3a5d8gpno=","AdZK/f3pm+hNN/rrN0CrSETV2xeYNG4+Ig6FQk5OAxg=","D7jebKQz5YbHteHLCjgHaea87PeK5NnhwJh5/Z4oJHs=","DVsXyURwUsiYovS7Ie2CfrnTbqw05Ju74YML2pNfA4s=","Dyt9Uex+pld7LnM/A1Je8ej+xr1PJcH1eff2VbqTJ9M=","KyPVvjkZmXZJPGRzKrZVWJ4FUyp5pRl9JOBGwoHA3R4=","GR62oz8+gPvSJ/vcQ2+4seOqN7A2F6fIdYeiywaPsqI=","C9GbhHkcdG/VuBD2jxDOH1FOzgCg53SVN8EIRP/KEeo=","JakaJxSnkGD3eyUD8NMHD7270YfTTWCXrig7y/TWXAs=","LlB6/58Agg4hdS51aQxhm4oDseJpnse8C9VQ+sn2MTs=","CwsFHPlSbEAZYS3Q/Sr+d0qLHoKNsuQvra7W0m1R6hc=","FWtMwEZrlT+fOJ7/mhx+Jh6QKsA0vZ0oVVnpxY61Ep8=","AviIfcfBbBEUdRMcQJ8izasUQO6mhPt2FI+sfzOupOk=","Hzp8Lka9T8F4bdlJ3tLi0z7l+9UxMPhyNSMCCYGDRrM=","EQJUbxxl+zhDEVIXRhNgjf0XVkrq4XZPFXD3K79HmVA=","AMsrZ8H0ruv1TpJ++QP8aqDmrPDUsUJwQOmBoQLRX4Q=","FveSTCmmHReQ0j2lT6TcqvHiZORtaILIXU+9hvK5fC8=","Gol35/n4gzIBBLzKuntpINT7Kz4V1RNBhMjAb/qcu1w=","ADjd6TZmoG/231GFekAhi2w082jnvMUtRQS4Wp7qmZQ=","Ca+LfsdPlnQPjtqfaepywI9eIxHnjAYzv/eIdmRtbsE=","DwbnZD+m/QsBaQS7EjSFXa4GBEcqofnnsSsO9ZR4D1o=","EP+w8NZZsXyrWLLnSRISpzTUW0Hdq4ib62VRjMKyo6M=","CDk+BYG++dsnK1US09asFiiabVGn6P7o8MqFS355aMk=","DNkZ8R45QK/Q/jt9aH7XEXtAEA+Jpguh/Hz3Q5Ys+X0=","F2zS1d1QOa/k+cmvhPGSDefIPx1mOj3M76rDwKzvpG0=","HM8gt53ceNxjLkHBHlN+WZtBjUy5q4inQQGiemaM1Go=","H4y2HtOAYUEcdQrLTDE9L9Fn+63FiKFP5qMNrGcZoSo=","LeN0TvLXEU/Wu1j7A9CWm76S+/TbSbY2oqSHZBg7Z5s=","FS+MR+hjQ9l4AyTDewhEaBsabFt23HqjpX6VftwKr94=","CZ5jOl9V/LgONJTCDmxgf/Ec35L0Ws1hNAEe+W4j1OA=","GPiMfdXcUH9jJkYQ1mi42jsccENYM2cYvGjqItX3McM=","KeObQsMsZC7zYQBFEhjaezPXy+e8WIJWGjpMLzC5DC8=","DavmeBJR3wIwpwDvv98lsHdrW1XigWvpthTDQz6ibFs=","CaH7SMdXXLIV6YGvr2+k4PBZSfr69+w/Hrwaay4NYf0=","CVStDQtrnGY7GTa0MBGUqcvmd/mjjtC1RBIjNLxQnxI=","INNAvaJxvuKfCT8qXi8ldYD313Ov4/1gBvtdnJRh0zc=","BOF1qaVoyaNHMib79n88jb33GJGDP+tRbtjx3JUtFD0=","Fu/FPqDJYOa7tnpJMLdxSlBNus6nhQMD1mKlYYlojJw=","FjZCs235ybmdalNQIiE5QG/1WMSGRFpXqMIABlo/hfM=","FohfLWfdLqprbm5KHLd4/ls40knR1mgVbAM+NvjzW84=","IVTW8krNDNoRMm4nnun56E3bTKS8Ee/XE2rF1UVzqTM=","Fiz5jAggX7X0oOnLdsZURbMAgAAh2x7zsteRn5wgL6A=","Cm+2fCwPMyDiK0EktP63bOEzD4XauJxEd6zXghT0crQ=","JgIc90oCsZLwxO53k45PRSmF8CHEabboT33z29hlNdQ=","LIuXBMa0F2nJBZI49R+zgnqfsUa6Qk4xirNZNYuuDXc=","KPtshDt+iSWcE+UViYBMpAoQ9bl/xBhUSbGmGmMhUY0=","HiNMF0BYdhVOGvccLOQDMHgJlwXPy3GIZrNH2A3tCYs=","IoNuNxYu/Ih4mtSlYV+OMuFqBfsneABkkKL6+zdDp7U=","KKcNKv9nnfckbbpfxdjkAccmESnooZZcXF7Vfy7lp6Q=","IKWkFsQQH7HMrLTxAeyTwIuK2fS8wM00xRjWvBNtTWI=","CEBXo6OdyS2h89oaG+4pZ580MJYofRBE3uL+KcyIsGg=","Dt9E2inuQYbD663RFI4QEbUIqpSlRJFfl0b3XFffd34=","H3XzyzJaU3sRwWACySf/XYx1GJxjK/5meTJS0kIiDUs=","AgrLaPAVvWiXed5qbHAYnkD5KaxIQ9HfHXjmzyX2dT8=","FWwGjzLg18qqMOhuqXP37MS8LVMEmXDJVrCu2jr4iNc=","DrXGbIYwocOxtnoofcMuuHTXuJRPfi5LbV+BupqGNR4=","CGQyymwQPL52RJ/yes3Axy71U1s99etyjh1Mqs04Z7M=","JZGhKhuy6FUm8rARCw/alwM3v/PEKw0OCSH88S4T6R4=","BN3I4VIULFfHZrUMTIuu6raBNGfBy9Q65XyVsPS3TLI=","Fr7zANh8ZYKVTwsuX7dLsEt4UrLQmvU327h/TAN9EU8=","IrtArJUSftBdounDfxTtqSWGtQSF77YbtX57BYpcxd0=","IVKiXjKGFuzGP59iW+StTuN6KW5aWEkm8cHmqZ0zX6c=","G8XUG60XtE/FqmlQqmQ+3gHTc7Cu3HA8JqJ9+mM30Ew=","GZk+I1L+kH7O+L0z5kLVSfl4RUXortUSr37qClcD6k8=","Co4Amrgp+tNOy5hmC6BV7UbZ4ZpUV/rQ5XE0bYMgcnY=","Dlq6o7IOvt3b3hYwJ1FK0i6otkUtHg/f5dbJLKGLzeA=","Lew8FzEnRpiPeDsU+S/ZAPs76hN7naJB4taFjce2keQ=","GgW3gYDzv0WZT3hEu7WfAlON06BqH0YrOoWG1FJz/84=","FtIrh5M0RIeFQFtudOgj/SPOguaNsrOSv748p0DBQbU=","CJB3Gs7TmYRezFuc7GSm/JJfKOOeSOoMtHPyrTi2cPA=","JTD0AOc07YsWW1kNsWWAYMtFF4/Eo7apa99iQ3xCFaE=","FeApDX7MVbJ19iOmNSHTl5d3RCoU8YkU0fqDYbuuxmo=","IEf7eNSGZblsSIXlVh/YnGykQhj0qtSt8gLzKj40Nf4=","FQUHpILJsC6ciISzOxVPTYViKGVee2TQRw7rkvBwUXs=","JgmNuFK/2wczwHcn7pRZi1t1+WFw8s6kG1EIjU/OuLs=","GWk5T7SmV4TDyksf2dJBZI5qpYv0Xa21hIubVa60ndE=","LM1boETgmQLlQLxYr5mIYRlbjRuWvelvBZziFYuPTSc=","DiQaHojBZ2ss0rSP9UpHPTtejJXaOcJOhDdedPdkDrk=","DWT1W4SgpSSddFLLvNJle8LO3omTgBae82rPc8b7Qqo=","J2z5gbPISFp/boqFoMN7/pSF6v/UZ5aCnNFw3x0l9d4=","Elq3BaDzWmyecON8+Cy/0bdKR85N2MY2Ug71J8/UmW0=","Lt8ryxgrbBZdd5RqIZpUKvyTg+mXYnGxnlhc26O0wDQ=","AwRFk+URXIv0tCvMc3TtofM2sdAM8w0Mbg2LigLnCxc=","LJKI0HuGR0y/JNsnt0Qh3UE7kIcM/AE/AOzA2p2IAIY=","CAlt232sXKvdAnlOBlPe94e9y76nNmGRWyCyM7E7STg=","LKDGXt3qZDxs3Sthd1L3HFs2MUr7VuLXczxU7X392MY=","AHIO8Rt4aN5hclQZZVYJUeMPnqyvldoYPnk6xEBceu4=","FXdRaCEa4slQXN085hiHgtAxZIz4EtnrorJM7KNid8A=","Db1zWFBUeeyj/nzns8dWFQGJltAJks1DvSc2vY7g+ms=","FRphQ6C9l2MpKmrq98CZKrZd2rXTXy5xMof71nK59uk=","EZgwp/HhblOf2XYC3cln5BGdmkjW6EKBrQ5yE5wKVOU=","Fm1JVfbHQi9T51AIRGK7gs5WUWHHinH2jAar/IDF9Xg=","K/f3eRrYSObIgEETy3igptxfGpRzQQBt2/6E2/luy8M=","CbJVDalVwnRus6ABTBFuZ7BhQCByrPLN3chK922iHMU=","A64k5Y+Co+l/rIs5DGRDRyIyWzOMbeFqsH6oPacRW4k=","IuqY2ydQLkFCgkozPZTil+ATR1fzFtutI3HMLwrRjSE=","LUICC48CYX2a/QaT3YzQkADAKpSqoUs12OzYCO38FZY=","DZSMAyjWrens/xORzJJtpzEbtLMRzYk6n+kXZAsm58E=","HqHCyMKCSAm95j3MYvawahSf0rm9raY1pMNe3iannoI=","LpCIcnem5ujZY3mXmMmZO0Hh1lhFwXhAvBZpw0MsZLA=","DIUKhml9mmCdJvAqmeEWwWTz2DldO9aZ+DIfdigHcWU=","FtiQmducMtkOZ6dDCLhciGfRzfC6PJfHo8BQMi+RIyk=","EiuLt0obiyKcSRrTFjLajguQxm9Svhz/uh9QvXQBSK8=","LLuy2mKpUlKD/aX8V4Lk4RwPTvVZxxV7g8WZ+lHBG9Y=","FkTC0K85DHg1v5of7AGuCHvd8aIaPZiKdcnF2mAGrNg=","FHzSuuLptxeWPKYjzy8rf8uVZy0FbB1z0q83LY3NbPM=","C6pNDOYzHZK5i+ucKPavr6C5wsosGUufcKbTtijj6iU=","BG+aSq+2VPSmuRA9IIFOSFsKAIGfIA+LL8SETu65uHE=","Lm5IKBNJS3ei0VP4zprIT2FIceLW1kEKfp6aeGIQ6dw=","IZrv4FML8IMziGXVnkJldZbKaM4SBn+8hFxLkGrm2PA=","K5PutfXe+qLNzxZckdxLLGefCoJ14STZpF5O9JunhBk=","L1JwrHWB8hhv87zFjG/L5Tw6iRKl4rUdBzsOPipeBIk=","EM2/X5az/3GW+KbKoOh0VJMnf6ZZvMRI795ytx6DI8M=","L9OJC4JWywYAntwcphTluJiWQUGQxKyRLd0vsKVFR+0=","DgFYp3a65s/sWGVEJqjgh00qC1FYAIhoJijYW49ijtk=","EdA551cwlG4bQ/9rGjbKCMxo78FjpEr7u9GBrqHj92A=","Bx5MSPxGJXXGdGO+TeTGfBeOaQ99o6AlVfEk9yLyjAk=","Ih0RqY7rvyruU26jLQKsGNU5rVTukXLkaiMqAQAXsqI=","ALpOT2nDSWNoonfKNvay2OdAKVhDIZ6Qz3y6JRhzV/E=","MAxMZITeA8s1/4WLsZn3qEpBTw9yjehHQqiHc2QtCqU=","HFCNMUzOeMJdN8KZ7bqzDtdSThkCszW7TJOG9ZbvP3I=","I4PqpdtPetdBijhFlSOyt5Wk8VFQW9eWkWxeBcC3tyE=","CVAHybrOlDmU/Qqfnyvwn45XaJMlauqGlp0b0hDyJJo=","Lr6kyUcMWXllXDEXJN9qDkUc24TLLvsFgwN0tP7pmnE=","JLfnP2L5fBPuNwVS8Pvm7wtabmR/QtlfPGbjHgsOAiY=","CANZn4A16miQYzdsGrms/2IgP14MG6Fey478MPwcvbo=","KrTAqekRXMEwNTBzO+qDZU+z2KitStu8obN60h+NmzU=","EPELDVt6IZGPhCY81krcEOVPh2etoKf7WdcZHDHWj0w=","I47jLlym8pEQR+B5f0/SVx3NzXdagb+UV4ff+Dwfy2o=","HO1q1bpGbz793rdJx9CT1aWiQ0jJvttRPeYEdifKLSk=","KEKVVeNOe505sPm41osJyJy8C9Yd0wGqlR2kK3ercvI=","GzpOPbTdZ6XfgwNbpuVa/3H1F9fmaSI4CR/9HaiaFlU=","E8wggrxgRVHvT9AagaUiYfeXnb6g64Qpby9kFtV9Rg0=","JjuePNjcWkQTzo6MVzqBFt5K+WQr2qo1rDQqyHBc5f4=","GrOVIay9yIqrrVgvoiLWrfVjPLFvqFPm9O4EFN2BQ84=","D8EzAQJwICtVCgMi5WmpZToh8DSoswWmGBnCapy1OLk=","KRh10Ae1zdQVrLx2xpthIshqvlHBjuowE2v2ZXFYghY=","Li+TKTRtkgqYOG8sCjZ3QOAyRoaW/NWsbizGYi7YHWs=","Dwk7QoxiRFeM0HDKFuabNrC44qWF2r5K+Jnvp8X3qzQ=","CFvBO2mCOTELBVAc1Zp46dHzqtFhVBvUMIDZ/IZ9gcY=","E2IiqR8clIfz/zILnjuqUu8jJ4lfQUxNSyuMy/74LQ4=","LpNB5arE2jmzNj3uk68EgiRLR2ed5O7LWlRlXhGEEwU=","KJiLuYo01RlThERdds++mnzal5aT0lyvaBlzmIjP2ns=","E7TgMX4/nMLz9J99wUyXE3JRjysFPeNXYiJe0mXNWzY=","Ges1xwIeFOlGIl+seq4JSBVI0Oq/iTBKP2LOkVdop+k=","HTfR4ewNfxGb0zpRFuGbB8y0Kmv3sSm/KqHcrwaQlP4=","FlKhEks6b8ICnkPcJN4KLjBpaLEgknh+PVeO0dhR2xc=","LYLj1iJY2xoDXmCuz5DPw1wqaKvM7oRtbzDce+ExNsc=","Fxe/isYUarFO0y3Ho0D4vAFlve7lUiLU/A0bm46HMT8=","L+qMonUbFlAF/FeZy5ySjT9XGf03esPVq5iM/n/NC5Y=","ExIgICYWOFM84dsYGOru7To+VGGSXfr00a0lPQDA7ZY=","COY7lpFvyIqrMxQPbtR3QkyvG3kqzX6kPDKEgIizW2E=","H6rQM294pRjiIJ1+hYI75T6tUG37DrSRBmQSH02219c=","CeY/LH+hj9tvocJjrV9ssMOedXQalL+fMsWYQ0c2kXI=","DVgSvNOxMFHypYEWCMswlo3k+cNt18T204/Kqa694fs=","HO9IsdYSJriYgUgVnoJvlC6TlyzjYFH1XQ3AGfnr0QY=","IT0/SoAXhNQ5CbVHnNFZy9Youviwdc2yy+9VbcEgYeE=","E3eISlFUTaeKILyifAM9ZmwFF59vDDtXoUSk18FU/oo=","LCAoIGxqWOprP7i9cyk10hBDn2z+toO3+gtfLZBB+Gw=","KRwpyCZRTSgH/mVrwurbCl8mRBGxOBsNhe4hXkgGpP0=","LH8mfTkGnkkCWXyeM0i4SpUPkdx+7pGoBheF3gwjFyM=","G9//9HWXM4frjNvcua3HuhyfYwAKMz1rWnfFudDvzm0=","EIUE3mwyPXvWxqVLPHssvmfi+GOkg6/PjOxNZoSeKCI=","FDgwdYcC2ih5GRB7eW8+LEIIU3cEs1XvbX1K87FlGcY=","IMug9ETFS31EbpVGA0dgu8sh6U9k1rTJqrQTVto5/jQ=","DQXxEB2omMqANCNMV8G42QqEBoz0JC06TcPsanG1apE=","DVjJnnOW82eRuSHva2Wwb4fDkbZud0v0DaQq95No544=","Lw01uRj7rlIhJnTSwIasNf/vKJ07/Xg+dhg48RmGYhQ=","LPSGgnC6PCiPTeKemF0BF++PIDIjW1A5y/rPr5W59u8=","AUze1VZJJZuSrBKL1uGxvbcRUmRMTYGMHZo6DjpG6yo=","Dxb0lmMzQdFwnhRN4phG9/saQOQbs5CfQeeRt0l5XUk=","AgdmCCcYBBN+DJ9owbCutXHk002jlU4H5gZw4xz01pE=","IUFf1HJ4noDLwV+8Sl4/yWVn1VJFMEnzuooKQVjYspM=","KNgMnWl5VkVouHdFQJ/Qwz447+BWUQh0cnys9l5/QGg=","B/wyiCp0hMA83ToOJKv+dYfvAsHMUrEcVa47Ym+LBwE=","LY3S76mGi6Va3nlyJvp0q4jc0M1r2UrmhfANQjg+X40=","GphtwKnBJQN/o7MLoLtJlZ0hzrIKxdM2sJWXxCJTeuA=","IfOSGD7tNuARuFExGvwsqsb+dszh62ykK5gTcCvwFcM=","FNVvHOSnczPmHhDUSWRHS+x0NJ0iwgm9TB48Cj31Aio=","IybtZTAe8cJP606WA4YMqs2cb4BoMwPK6wrX8myrCXA=","Kj2fyrTFCLByXp+4Ug7Qa20ptSLl6K9ORia6KB7oVxg=","Kc3P3kD2/UuEuONni1HtVGvoo6DQAlv4kjV6miN1vP4=","Hvgr2tCbn8T32EsdNV8JMbCWyj0Nt87I4z2v8rQJOoY=","C8/iiutzWmZKNgEgsJF2hjN0w4fWwP/+pYcLwOqHfNI=","B/Pj67DX+2C9V2rZ58skGqMQzKDV1FAUlkGX91lL/yo=","KsVsI607hmf7BUaTFwIwNcuHumSsBm+gNcc4N6yN8e8=","Hi6ffjcC+oL+3bFgNrlEQu8WEcoaLxyi9HM28W24D58=","JF1V6u2DHL6v5FrYzrT8vb/J0O+O5v8D4xBo0IMjmN4=","HqKV3s/anApADfFEg6s9rlv0OYftkmoC3y587yu2TqQ=","Bbv1aCSfPMrkyY4lSdveY5iCkns55PObt9BfN/avDQ4=","HBKRqrmJPkbSdivuuxv7l0ZdAPMNps8z6GB4WHTK19k=","F2NNHM1R+UMxUmNMNZdz/Pyfk/gPvmW6pZY3cDZG9+o=","FPyPcjT2kSxA+Cob286T+hr40k/Per6wwtT1qY7XHCQ=","J+/f9a1meNX8W9HacUOwdlmLkNt3dyqOnPXFKV4K97I=","BGZExOcCJYDoPu4zDHIoRpt+yK/RVKR1ZPDMq5uomHI=","LADUV/cuNFLIbBrjZF5kXQ/uLTT11QKtGzq00O471DE=","A9JNfV9mjgx2MwswCz63d2etmCqHj2Q8qTWgB0KiGuU=","A96UHfgH+xy94PiLnsibZMESUu3dzlEj0kQ/2r3+xTQ=","E5aO51pmbvvt4tzcHN2aXhVUPL/dPQRUhuyrrTYt+C4=","KknxHzYDDrKNuxwSPAC8EkkaRhEm7fI3HUeH2/q2kNk=","D6aAwIZhzgZxhH61grXrswXGm2FmotPTLa3TW3PIf/8=","BtWguk9jhAt9vu4XB3LbwGDE59p4WA9/At/428q+Kt8=","H2JIE/9OTqVRsYp1T7CoUr5q3pGAfobKbe8jjMDyPyA=","EEmI69ZXeDmisHoDerTSDisA2utkUeIephAosrasspY=","BOcdy3r6LoMkh6x/E7ee7ETXeBiX6QdbkZjdqYTX9+s=","I29rAR17lklvp7qrTF2+dDJ2vJdMDS0XqB/weaSD/yA=","FYdmPitddA6u9Z42KS2FaGtYVAgs+QPk3kvrU0DgFdU=","EdRYlbYjm6C/fWjtd5BQKq2OE8i0XTE+Mj4nQy4svPw=","JTx5Np+yuxY62Ix1HoHQ7ZA+D+bxXhLA/PqaBu7BJHY=","GJE0WLWdN9rNDcFoEaNPhEtyU+i/TX2+zr+XsFScKwE=","CNW8oZaozrHdsWWSev/ODj5X5CsioTA5K8UiFHSSl9c=","DfHrAitE88jzWKdCQCFAIDPrVtQ5uvygkgGkY3Eva7M=","HsmaSj26tYFI+cwwJNoof0CD1wqRlmpcdrRrCie9ZRw=","HO88YZxscAvSlZNwYzlVAc9OIIGCIJ9nGNV9ozoj5ms=","KABkeKIRfdNQBxHPhD7he5cCaIRoGlvtBiHBV/eKE7I=","H42xcYTpqjnlrAMG5HFAioMVQ0Csb5xYXtkQ0NiXrWE=","C03XJ94GoKWUaWG29fwLzvAmP34uWCndtuSQCMvBsWs=","IXIJ+omW2GDaofnCEOyiWA6z8c7Fqru1a9kBs9n8hxs=","D2i1O7uLtHmNGRYI+VQoScGGl910AtsLXzAxfSF4vv4=","Du82tqIF+76L5oFaGYPmzRRuQileykbbsxb5dr8FluY=","DqifVJ6Jd7LKmb5S6f71cTpz5aBmY5GMg9IrzbAX8Vo=","K7Xxgn4USF2iGDwsANYk3bwB3v+8MjWHjwegSke+0b0=","L2MHEahLmkcDVrPPwuoLngm+Ft/Jp1CGtLWXi2no3k4=","LRpk4EEdZmwO+fBrPrHwxEKRPKYhpUMHlhiW9h/nRkY=","FeuF3DgKDLgfFRHcz6/4pQee0xAJB3cu8Hb2S7T7H4w=","KTXetEEoc5kbYiCu3D6SPAXrh9j92v3L4dpq5HYHWu0=","ISpYpfKsVTCiUVQ0Q3U4iFIYUirEEkls5fhan++i0HQ=","DcuHP+K/j/1k+nYAECNXKZe94JN5k7yYIpKEduc1Vh4=","DjkwjBKBiZ1xUAktHxFuQbmBIyydCWER2CdZLjLF6lw=","ClZ50JQYRmpzAOigqWT007uSKViIUUe13ssUOLEBz4Q=","A4qPMmzIpR3UEJL0DqOqxK1yKodEEB9AaBOcXZEV6+I=","HcD7ORwZyXkzfxmDsH2QrSJRedHGv0/YVgH87xwYVK4=","H/6w/e65xyDnvlhCoBlSdomzuPXj1jo94lBalkIjopI=","LNZRG759ydKozAUCJbc9affCB1piP9b/S9Akwqaa0mg=","IdRwZZCxhU2WK+xM+laVGuhEHL6x5BdfXTthuNt59oo=","EtpZUoq5KunwJo6xvaR1lJIOT1pFJieEeN2aAQe9/68=","B67Z4W7dQarOk8IHi6EzNFdnZpfOuNd7WDMSGupj8Go=","E+nFJ2HQ/TVnePLJypT2rBxxQyRDXgEF1BnhEtP0LH4=","KIyzwuRdNTIz0mgDZtSRPBJefyzGu/1lBpU42J9NxHc=","AWr3EgdERcivdXjNaObjLg+IzZ6Zs/RsY7hMg5JGju0=","HB2bEFhKRGRjuQXXGUx4Bma5qgCngezxADpqDIFoX30=","CnyHb4OrTv0NBCSTaB6ZOmZCDyOw3GM3/Y4f8L7e730=","G7hDXNLm/Jx2hEaxOlP97O4Fb3ntjQ0dNuOnhM288lU=","LZC+GuGCw/RAuF/W2mniHenrKSnlS3USIW3c4Ipwlb4=","DJ3joNvS0UJw+KFsSGSVrlrS1EwDIvDZkKxKTgJL9XU=","Hjl8GCEW1OAKU1gaoQjlv4gPj+BzbpgSSsqShzhAOZ4=","IKYR1Ps5LJTYVoRZDqCqo45IANAnZQ+CO92g6Ag7ogI=","HqG4gql9cymRgFrkaTUjPutCT5Nj+eX+hk0wI3SE6/Q=","E/Z+5uj/xv8mZIvG4xBrg0ozVO2YnTUfTwjyeWkQ0bk=","A11uEf1xRYyqHAp/doKOM2CtKvLoinqo5eX7KmEQpW0=","ElS+tHOKXo5Q9F/HrXPFEhZeDCDAx2SxdH3STaS1GG8=","HgsjH1lZWJd911ceDmmI3azBSsH76YrHhPhoShAfQX0=","HXh74Y2T7uvKz065jyImZFzBqkNU5q9M6+rOa0QAGWM=","G2Kc4bUjSKmGWr4Y5sU3+IskVeDw3jOM9R3/FOCZk7s=","ECsLgq/OytULbNl2vTrKv9NO9PV8ePX+e1cSfRZlBLs=","LE9OFDbYXpFBYr1Ru50Tv8r5+dMO9TvXXY9lmCASTrA=","Dl1ijnW5zcOpiYxHIgI7zSbCMH3Ny3TQl/T+ALrQIdU=","GJjv27u2JZgtsN1RLoVA/5hpJbt46pcMtdBExT3t1LM=","Klhq4Bk9wFDGimNA1jh7WUTSHLeVZmEMoVzAr7vr1hk=","LI3zqDn/Ky4Qcf+XOWPhY8veWZTaNwDSTAlCofuPPoE=","LEDnP0H3ranORv7XVLmH13x7nJvhyGbPDlBJF4X5qoY=","EKREGaJxBDvknM9Q0YcwLzAAJzY/IBh5JduL3QqpzF0=","KCUM3GHu7YuY/PD5qDmwyymfSoD4hTQphmCQKTKx6Mc=","GwG21DgiI3+ohruG+l0K2uzeO4NDJOk6AlcSAtOcFsE=","K3gDhvnz2psj+I3H+iYV40KSiNnF3kgD1Czmns+2RmE=","JJhKx7DTpANQDwqIpz7Qgvh2LBaG83nVJBtkxtHKJsg=","KVSCnnKmk0f0oFteS7Oj5uW63G97lj/t+VxS7V7MSI0=","CDYH+eBTpcd6uVNDwaRiA1cmKJHSghlbzE3tPdeIzss=","J83I8GGN03inymuJ/Mhs7ucKfMc9KTZ9PUU5KRtzd14=","HEUqdCazHvnBhpBrJSjeK2+LJkxwg9Bxlf7jJA8M8II=","KnC496T5jJTf5Hg5bCTAxzRFFTympj9BNaYaenFJIJw=","HdrywpBgOEpk8UKWT2jDjqmy3fFMmu+StwGgD014yWc=","GNdj9ZVWacdWhdeLvP2ZI7Hiim/iLRnlMYK64uOHpLE=","FUh7KLPwaHRIxz9DLPyg21VlAamYXbl4KtHxYBGqVYQ=","HNFX9gI81yAYDlnbnc3R1tas7/m22xrHIoTApUFXu7g=","AvI2j40EaxiTTdJ/Kbv/KckJu0gO4P3LdwUnN2ahib8=","CdE6Au5Hk3hZM87Sq3C7AzTnpv5lPo1O2Xg/2/ml8b4=","DWbGH4tQWo79BqhlnR+DkQp4EYKkODucc09RIA3E1io=","LTKupMwyb4Iga5HJhhgfGO08MXGlMXckPy38dHGXa3I=","Cv3l+FoELr4yiJxqPgD7QMQNmhMl8vQYkWsaRuPkQR4=","KaPD0Mqr3MtsfTWFk7z/jcLgUYqeQf+tJRtQ2bOXzuI=","AyLDOGv8vqiPTDIu2waqbVkkEi2FjfNO/mNzxEt8vWE=","FDjFhxrdesDTpJrNgooAUiLOjI30MFntz+OZ2Q4oE2M=","Fov6e/QA9bwMwUOI3ReAVQmA5BNHAaLyH+Ds7rpZxxI=","HcBzoXKqlyjFI1RSRfkWDO8aduTPdLbqx9ET/fkRljw=","JsgPgeLxKjAuYw6eTT/EqhSn70FQjks1oLWPOmOAkpA=","Lb9K+vTF3fsEyzrnqqprxiRMV3kKaTnsD+viwXvOUys=","AJBbv71hrEIibz2aH7/S6Q6wTcZl4CPqI5Xisc951DY=","HB2qA+K1vONgf/FeN77R3LteGJsHO2wgwnuhbuKrqBQ=","Gi+OjVUzliPBE0CuGxNUVGNcccvY0gtqU2o5/3NqUkM=","GFNcWS5iWBF2o0ZHg88Jn2uQ5cvG2A8SOYcI15Qe9FM=","ACn2vEncWZHIyJySNuBTX/1uwT4jBCvSeEOlH5/Ss2k=","D5m9qJArwmMKQYhKXEd/6M52l/6GooEZ1aF77bmthao=","KTb0GhmBbavEEyddlD7wnz+WG0nhXvnWcdEZqjnitNs=","Kz5cH6G8os/kP+//rvre5di86X9SSErOWbEGVJCaPCs=","LPVNooZMKNxoFwAKqBX01YWCF4C7J/1nYqxvjCzlA5g=","AxjUq97RH/RC4ylerl9iuatTx4OwUJZDhDEjuALSVJ0=","CtXtrhickJiuU3NFodMUW0Qqd3Y3Dsb9tswzzqZ4nGw=","DALsZOkSpS+YvJZ/Z9dOpTN0oZXmuN8tocCr+V/tHJY=","ELNU+wXge3LX1lVETMlkEw4+57Y3RJgePFplJ5roBfY=","GBNaNUdEOt24CeVtKZ1qtxYAympn1z+5A8RuofiKeKA=","FpstHJUz/eKPW2FyXrHbLfUjyKfzJoFqSKBrSS99CXE=","BwbMaEaZG/pQqlJ0fGOrG7NXx86qSzigtr39xIzHRdI=","DyOi3weaOn85Cf/onyouXUjgjIH1arqGm4oHOxNMJ2Y=","G7LtTNaBBHp9RJpDWxQSoaVFdtGimdgwfJMl0NlXZlg=","KNQaKsezxxl07gWMciOgp84LtaHkhdvSaGvBMAtH4h4=","JatQ8g3TkbO62D//DulpIlhTbaIoGQtyMHPVUxDEvR8=","J7JLNG3hb08oagVqJCOYla3eERh+1cfRHnxTW6XKYwA=","D/Fq/dnaAoFbmPuSxXY7SbDr+xa87WKbj/LWNxCQxJU=","CKEyn+tU8ICS0Y2yKR6RxOF8fAmRP+1MATD8jn91ybQ=","DNa9cyMH7FMUoUJZ01S/fSd/BbrbHNByU4ZkctfpB2k=","EBvaHygxHCl3zTtFLfaqQpQkuHz0fJI2bNRdmSagq8g=","AsOTGURZmfgOe4C1o4Y5oM681bB2b2QjAif2gJKA724=","I+ev/9DG/i7JWjlK8stySusIglAhTAmTQyib30ZdRvI=","IXbnpUWiRM5LwafCvcqVMS2mL73Su/ja40fGEWcOp9o=","HGBncxx30B0/qGfo3+wriKy8F+fOrdcGxYquOCVOouI=","FYiyWCEx0F7iC+yhzkBclJ/BYpIhlEfStzxij6wAzFg=","Iy9lg4R24BvhKHty+Il5OPB4PtqSufTB6+ggLrKdyIk=","AitvLGJLY36EPnSnbDJbBf/CrkYUOE4POgzBhWViRnY=","EgLiwKc7iitDRpSV3ZUx3MgHLRbmOtwCkjxQsUGhhO4=","AU4gPKZNwFc1szB4rYO5aUIblqqeg0fOLlIus4iG2yQ=","BAkjISsbfjfJN3k67MIz8gLWt1ePxvUndLFl7WeE5HE=","D7/EW+fF85Aave+FPS5iFrcYNcNl8Pl98vNB8PBJ6So=","JzEBVRkrFyZ1DFv/cRfE6+wgmcmLDejFU/WN78MLoxg=","GcJZQyjcqVlZwq+Av7F50lre9Z6qSnTxXtPxk0CgjMI=","EEeWvnQ2M8zFP3KBRLrL6/Wgm1vAcXujP6ad7z8xzXI=","HJf5HfHXmg5beAOypZ8VqxdqIH0c4/aG8uMiMUuvz+c=","CiSq+RbODSL+Aa/cX5bLHEC0nEjJlmk1T+LCgKM/jLQ=","F9x6UwPqeXGE+2UCc/qsRHKEvrI+KTOdPsnZHT+MdrI=","Lhs4fvlZ+CoVD4B9/lo0gPrvbn950V7GX5JNCu0oClY=","EVPEzhCItRNZ1xclgj0WPOaVQTF2EOBJvroBXyVsH7o=","DYuJJMukTVce9TkSRVInpb/6RgVwGPtoMU3O7r0IhRU=","FR6Gj14Z6W9tI2cijTiK/YwIB5TQ1cd8djvuzKyfwLM=","L6PrEqdw54N6jmkLcV9agR9BAvPxS9MKMIoTmGqS19I=","KDGOU6mUlkF2Hqh69sgVmg+5SRUIPRoTCL6LsF3t44k=","K8OBkFOtmmZWAG/eqH76lOT6o3nonEwdOKoS0KFB6bc=","HBJHdtK7c1KD1KrRStgr+o6CHsVCqvcGW0dld1esMdU=","KgAHEuSpv1s5Xt2jCS2wBA1EoDRheKoBKJl0WYdMS8U=","HggAtB7Jw5LC774l9d587trc79EtQ32HTcRq+ZeuAIc=","KrO1Ch4XaVfcHwjdRxhfDtDZqt3sRcXKt5bdLZkenhg=","IZCgxVdiZxVuyQgZYTOKRxoEItVgNbi/Oor+eHCjGWw=","A8t7t9Ojin/xq/jJKCKYpVUcVdKOG9tsTnN3yqA0lh4=","E0MtGApLgV/4w/OvtCUMmeiclRhBfOXhR0QN+A2T5zA=","FZb01+WpufW39eGkttBotqrJCSh3uCDr6VoVxZgw+pw=","K3VwMkmQFvyF35QNfqeKa2yKG+8EF8l2VUZAuRTcm3U=","KxUov4eonFQneeHWZxomkzGiuaZLVlAaZSvvDcW9UJk=","L9FDGURBOCtNr0htFZ3vWPHJhpqgo/0Dq9XZySPbxgE=","CE5b2E6fWj+KwaC+QmnhyrO+p1plHrR2sjrwqUNunhA=","Jsc3dQIXpOOU4GOBUnXz6Zv4emM55DdlXOkfmaP4lOc=","ABHUShSiF0VLfLmwE6ftnueNOAhGkD2rkwqfOcBypU4=","LP8C9GsOyAbEe3yDTgwzeBcsoPdxm2LeF/WY748EdzE=","GNIVnjoEDYrzmQOJS8nsUdSaqm1Xdtsx8c1N+mFiaNg=","GPARCuHQZ+703QV3Iulr5mFrbF7a8QHbUpsEmk5hJuc=","KHDnyiY1tcP4mGVrzY3YU5kXBOB60wFhL017sXS+0vA=","JnT1ntH95bswPNAQqsipFFi+plop25oWO6OrMTy9bHY=","A+NLLzOxdrN9jojdNQF3Kolh8Cpb2ymBRYikSYgVfak=","F5RMDH2RRlGBV/kgAJK8gr8sVnLchYSCNlmwegzvN+8=","Emeqp3zXGZwQ98K8VYGkLzx7CDceOqpgu0I60uJymDA=","DvrDzA2qI/HjeNHcvbLt1qXYSVTdAFU/rJZBYlkSODE=","KHLvRvxXAEYfmvApw2EUAKCoBJe1hSCvtDeU2nEyapc=","Gr8/tmuTP+XENrLpDcHbxqwv+nTPYLvRXRgxNPBptC4=","CT2okKakFjoJT7DDFAaDupho/M+OQr7wpR571Xe9oPc=","JSDKjeNEKJCD9dASZP92pa53bmnWXWcUQvUqaAJCpE4=","CPN5EXXrRUlCul4/1/AEY+uIkA7pwFPRBfnIONKbEDU=","BDibn8+bJqDVKnqGsR9Q5M1JzHWP+cHJNSSBwrfPVbU=","CL+sZ11NFiP1SGZiuOmnL9tJcwZNXMZXKjb4aRV0z6k=","Ko5TEIpeb6Kwv9LgGoWTI0ka7lzKRZgdcWjxrR3UKl0=","Hql+SW+mGcUsGdWzMHbOhNUe2UeXBkOwpt8wEQIlKps=","KSEJewYzZZQsDWpTTiqSqkCJCLaJeUXueHvOZ+RXTO0=","IRP4cbcTx6se169jmCz0YJWCHiqu9hNo7uEzrqYkXyc=","BCHJ+x6n0FjAHCU34i0ccX5AwDlsZDvj58ApwFVhY3Q=","GBxX2QE1VO69Wz6anEqJp/1V53LrL9Sy9H5fAVtSt9U=","IQ+8f65JqHEbcnRKJYeNHs86iEAdvch+diDvCA6bG1U=","ADinMDfQSxnDzb90wyzb/xdZ2rV/3UKVSjr9mAdTfIw=","HE+upSeloUYXDMOoUolHn7IuW7WtLBkAmZ+qkIC7vuk=","ILx0RX97NpVvJ1mtahiwDsYCoDnADKeSkwSv4aoAZ4s=","GNvtix69FPzyhY/ywTnSb+kBzk6LUPKMFrpqVsvWw98=","KQ5fkYzlGCeT/uBi4KyCWZpgOc7bAyfGnMNcSEpgtS8=","EnDxxJvwW1cRKZg4rLLXfk1SCdZQ3lQNAA/gtjaVclA=","JEvwBxhEkQWmEv2Z+B+Ck739Q3WKg3WqxkR9Z6+gfUs=","JTwSZ+Fpd2ncW5FKNBsC6tNYJhBH/adJ7dzD5klqti4=","H2IFkj8V1mdPj6P13L+bauMAVHGvvNhXGgsCU1JG/3Q=","GX19hCZUyOlYKQC1tyqbvVtDFVwDkUBkawj+0DKvx7s=","DcUWKBQzjfvcN05tsvS1QcWY3jpoMjYfRAA6ioixP0Y=","EYwDhx51P3UossCDQSPKj0PKerN+sf2lNLuzNOlMUr8=","ISqMKWd6kZz6wrnarakjRq5Yi+4UJlT6g2NHI50jFE4=","Erv0DSRk+snmTdBNZTmfpu90+FKM9qOuwjVVqCryOFY=","Hh3rtPdvPXrBVjPja/8J2hjfH56og687y1q02EtKeY0=","AM6Y2x2lQxuNzYre5wSWP46Jo1s/Ag5pbXkGiuPPsC0=","IZRGJ+YMqHp3Dq3dVIbBXKXkh/TdGubsIQTeg8MhboY=","Ijykg3dKfF1PHOOIMg4dX1P/ldxc5TRCru2UvCYl05I=","JQG1DH5/cpx/TYllAeKU3JHCZr0qbewMuwmvihP8N6g=","LkOMbvB/m8ywIYZJqR2pNzhwpFrEUkxsvwczGaIZT/8=","IOsXtT5oDCtg2fPVW53Mi121ngS2Kvy5aM9hR+Nakcc=","JWEYJTmE63HybXgVBLhNgog5gpPMQZrvWehhPJ+vzUI=","ILwXBufeJ7l5FmxQ87S3E6oHpbho9fzJ2k+vegZv60Q=","KLo4pIJ6qN35NJ3EZA+oAXsMrNtFapAQZaps02F+F/w=","BWH41pl7g2Ui1PGGA3mc3GA4H19l/Pp7znYguP6MdGI=","CRSHFGWy8PPIPEFlNaUlCC+OZVi1TeMB5fTt9Su2qo4=","Fg4LSda7IDaLKkiiDFXaDSZZqUq1nxdN5d1ME1BbBNM=","CXGsL+HzhIPScTf3kva8DvURCNKoeHftsBIFojoYRj0=","DbNulZsgibN5CIky+lJR5l1O4fQVrUl/VnfmnWIMPz4=","Jg5rrqBqU+eUfhY/D+gz5RKAL3hi6HCPV1+2uqftbMw=","AQPnyYSarhLDZCunOHIUHAv7Zb6Jamzg9FrJrI10b/Y=","GYU6DvDEk4EcMWjikoVfaQEAtzBpu1DdMt3gbJaku7M=","DigjhJ7AB3wujLJQRvajh4DpQ8o6/9lzyIOAniJ/zZ8=","FWaeEPN6PSUrKPjAX2ZCCkvG6br3pt1wMoOJcr982eg=","HaO0Z8EzkSxU/STgDykWqR1TPuRuaP/wdNGhRnF5u58=","KMiqqAaxP44kDpR9SL6JxgnsJLQu+bGyWRZmnrYT9xU=","EocwkSbc8gNMszqg0Bt+XhsCCooIrOG64zUw1duM8Vw=","Jz1z1W/EmNG+QUQohwqS8AgmWNOBAT3nbME8gKLNjeI=","D3PikUnQ+l4n/6U+SFEYemU/LFsxDt5rlZjky701pag=","EVCPqi/0+GpOzf7HdOnT+QTgTQ+5yiW5m+MQwj3HS/M=","CK2jYWXDp4z5POTenH4TvZ/t8isCIuXnCQfBdliOSWY=","GmSfKnYSGwCh/X1JReOR/Nrzv2lEO4YfzxXZI6RWWPE=","DH+43MKl2pQJlod7Z5CEl/4HSpiqjWAIBBvbH03G1v4=","CmolSiV0uGhnv6nlBV7GGCY2jAKOUmkyQvY6gxU6vTw=","AChoduLz6Vknp9zXbzfkyTe0xeJ0vxI4AfBWm/pv40s=","IJXC0qnyM5XXfxqGF5xRLcEwHVSZlqMlAID1K5cEyNI=","KskK/1K5VngsqFmMuysioyhVlrWJGh9g4UEBK/KBLvU=","EU6RL94h+8EjSL6R4FmLBXQwva+wtOuc+T5n9yNXSaY=","MB/fDB/1vpgHtRqRYUVBvAaWzsf7FqUDApz7RwTZaW4=","CaV5w2+LuP4SwN5lwk71h8pAeWyFAFPAIvsBX8a7Bys=","HG+T1VP55PlqV1MlrtloKlPcphuIUHcjttKt8s1oM4g=","AA7UGXKPoxxVxZRttEa3+ng/ivWUFY7GCtjB9miTwX8=","GUEZlsuDvdleYa/y5tSle+mRIHg+Qf3ElfNYyYImiQo=","Kh7qUyH/xgT4fQVbZQ7mNQNYRJWSOkUbMvwkGsEU8uM=","IdX+h+OQW2wZw4TUkCv/Tlc+0d+WAQD+L2MPWsckljY=","Ii2iH0t8gH6+j5O2e/UH33FfU8OyundUYEv5Ou0jp84=","EbyzMpTl+Ogr+rWBUuqiuR72NSqdC6VbrAA9xzUXJik=","FfYrjlrBd+fFL6ypHb8k5qkO29pT6gxU1q58OCR7JLA=","HjKerrQC7PJiWaElf6hc3xB429hYOUwG29Hke5iM8lc=","H8qUMoEDXtcdiY0WHrwkb5zwQTXDJVy4fK/G4R4OcVw=","IRJ9Vvbf69QPAm11iku4WR0+HUjBLih1PMcUMaHbHs0=","Bqad/euegHlqY7SmmCZgk+G6dTTrt+Kw86tYdR0Mv2A=","LApXpctJZFnlR9Q2bjSp+JrauCH0GLmmxwqhxhUSzmY=","JhhY9zf80IIBUZZoY6EQNDtgZZJrEzhwkSxZXQ+oA+g=","B0li1U8moCkJ+ZvDfJPvcAQ+fMUedzpehz04YMV/6eI=","KX6yC//7s8Pc3PtW8LDiIe8o/PT68FKlKEwEv3dqCHM=","G4xxGwphCan7quA0wN9lDDLdgM/FmBgW26Wi07qIQkY=","GHLAz6zyv25C0R1S0owwb8zVPCV1qaJTS4PdJxhiE6Y=","CegCBjq4wLABJlzPnlvNmoPeD1b969OFzL9cu12oVms=","LQF32el64W6pI7wpw7NPQ7l0O7BOCvOF/kAQ65Kz+u8=","IPZO+fO5FDpNynfNssEacvjjvvjK03puB9FW2YLTatk=","FAheMV/RG9QxFhO1Y2WOGUqN5dzoKNC0AZdNpiqPWVM=","Hq45B3cijAPr1WP8TMEe4N7XGNCtqO0yfUzAmjMH7ek=","BkctOprdrbfKVa2NKG1+8GMM6E+mMYMgCfLc2twxXaY=","APzf2zU9Opm/LCE9mmh9AyGETiNxpcpIvUH3sl6Wtqc=","IkxFH3Z0V5vgRWiVfa74auv6uHRrjY1oy7XU4sUwGeU=","DjePILcczf+wsgFJ30HigyxXu/OF6VPyyPVf1UEpGhs=","AF7etqTKemy/9cXZJpS7RmmNLUduzBeHkEhj9JkU5J8=","EVvda1yThZVaiiDSRMQGKwjut462kurXiTSCsAvv/ug=","D2panDnnYjxFg9m3IV3U48yX5ajiQKzg6MX6g0MGDvU=","KuvnN3Qa2g3PmYDoTwIVBtX1L3pAgvDpfTeUASOtC/g=","GxzpI/7GH/jaKsSsXTwnksmhrfkDldjHYaqWc1o4omY=","HCIWccp48A9Y1dVDnA0Rv/O590ti5Adwp5ja6XCl2yQ=","FXcKkwFuh2FYm21uW8V9yoTLkRViImOROazG8lZozrE=","DFMNn7DYSisE1P1dI0XFxYfoYDYfgI5dXmDX9hdbMbA=","Ccko3dMQ8BOgF24xTS126Uh8VjEILcTIMrGDsUNjB4I=","B1kZp3QmXvYki66AcEkpRWMUsqJ0pE2L4iwaF0fs6Ec=","HMAls6WfvZkzGNvWXyK0QY+vill/vp2cRiYvW5n+EEw=","ECRPDpW/k+gy/lLknhwFgw8Q+6kTYie8e+6coQq3Jmc=","J/xIxf2P7OSFHrX6sojU/UGz6wzOVoJ9rMejUJ5PpMc=","IZQEz4x/7vdR255dLE2x7JbuZnAeeEIvV7c2+vJZM5g=","AsFjbWEu4Eji3x843GeSCr0AZ2qXevh1rmbqXVJ3oTQ=","Ex5AhYehs3Lct5yE1Kkyfk0ak+Il5oL1qMHmrQ95sMg=","FkBksFJJtsyH0e2vshyOK/F3+XnUa2iyv8bS+bxjajk=","GjLThhFM+OqdxyBxffhVr0EGUzq35CfaPW+AkeppWQU=","JhOXaNO+0d/NV1y9XGH8V90s1FuPclwl29h4GRKfI60=","HSTpdNPBTZo39lo2zioqWT8yHN7IGkCljWXxLaICw9Y=","JWmv+I5NPyCQYcsCPvqTwmpifa7mbRtnuZdAaCoFf9c=","ELYh0gxh5wsykghZNxILmyjEiIdezvS7VuyxNOQn1ao=","K0QZrwNTvlB/PTEhJ1+c6aGjyEAD9HNDlyJItcDS8cI=","GHNpeFZw+6Rz2nLqxqa4Jf1FgbW9UseEIMskaGWEW/U=","IQOjKPSiZzoMMpsTb7fwCNGh8AXtXkyibbdNTX9J+8s=","B5nHvzAHV1i0AONBCFVxQ8TXExlOLfxtilAImxy0Ytg=","IK7FbA5biUyq9OU31wjKf4+h6KHeYAmnov6kOnBRkjQ=","K4OeTL/Dv5WU6JPgQZiUOYYwJwVtuRiHwtwJNz+AzBw=","CVwcBqU5OlmVhw3aLmW5CiBDPc2XiCWHqsAs+P0EQsE=","CPLPeIb/p4EeFM+LT17oyigZa4NHje03GcLOyaK03n4=","HqJ2PZepGbxEw/uS5hQ3/kCTJTxHu/sqnlWyUs9/nyc=","DI6fkWascu3W18uA6AInzMrh0tIFbWqFapBFX1b9cGc=","BXuzRq8ov9S8I0HWTmWxpXNANK2z4Qmc+fzKec2pyAM=","Bw9jCvJe+o5NjF41hhNEiJvrx923kAFBE8HCoiHhYf8=","EdNbtyq9kABHTUSP4iQWyOv6FSwI5qD/z6Ihf7hunBQ=","LkhhAChJMMLpHB0ArdnGyYwxFHObE/Oz+BFxc3LCWiY=","CMOf9uYI3Os1Ej8tZNaLI8SoFoHlt9C4uEB+mqHFCtY=","JwqqtYUtoC58HmyBZ3ObHXGfLaOAYRj+ZrCLUQqh654=","CLB+2URfPU+dUgVTDXtkkEQGUwcMb0w+OJaOgrk7pYQ=","Bma0gEcq2zF/WxOKkqTSlRJ778+4O3ZgaB1BuWxAjdw=","LgaYUFivnhE+siN5zFW2ehXhk2EzhbvEd1poxsUmttk=","BSMZyRnBlUxNOKfHd0GUmoObPxiGGfdAk+MYDRRMcls=","L4yAqMMh3XTYXy2rLLFyoIJLmQymN2XW4XtINzTEpMs=","IpsX/v63FwOnq+gElf9922FAFT9351H/8pAK++GRFL8=","D5mFrsJjw76GZ+TJPcDYgS+HTO9twyGCfWb9kmga6c4=","CvFcVmtoLBDMg8O7quPOYh0bw+C0UQgSbMDfmcYiXHg=","Axd3VME3JqVAUCeH8D3qkXycCWD7IFR4cUyVFdahDoc=","IshIhdpoWsa3TjkUv+Jmj6CCYu8k8a20xV3doM21gMg=","ETu4eWG0Scz1WVz2gynLGTCejQZdAT/bAJqw6QZFGG0=","Kr8ZJHr9f89o/jCYmpo3C5mh8S35svrjC2zTOD+NaRQ=","L9T+z05G0v5yZHvXCPS9SAn/lh2J3P0q6R+BLgo7n6g=","F6F++7w1jFP7QZMAAnaN6eE5jznfMqiwbiMDMRTH+a0=","AiiOKrK4ehLVWjGbNR2YdMMu1EzBbZOmpj4IUvD2Rpc=","A6w5+GcAtmEfEZImPZRC6QDREA8mAxvLio5iVe0an00=","ANUyKjTbMAl4U2bABgxH0pphj+CyyulF3vmjXz3a0fU=","CdmnbjduGU0FNVSiZzRrfgNKbRNEeDTbaNHBAjZ7ks0=","Kh4L/H84d4e5PLObvVHNnwI64Oc4q8Q96By78SLBPl4=","LJuhJlq+intX9p+LNjK7E653K6HMmMoDPVNpZkxA9aE=","DoK3hN9Uc5NlFWht5c+OoahkVaaLO1Wr2lhXvVUn4+4=","A+x36WS03BE6+/od0u6tu2dvc+J4mfAzxvrKIjgCSFs=","Cm+e3Mp2x3pdaZohfde2LQ1wRIUjbtkSzmuN4ik8HiM=","G2KAhND7j+dtY1O/lIK1mvl790im6ARujuypqKn7DKI=","JID7sEuvCTvMHJFi94IUv+FMNklQDXmOh0d/9x6pkVk=","LJLBgekWJLyyb6J7bABGBU6ArrzzQt6CLfd1Mz4rGzM=","Is+8+ErIM5Ijl2Lc2wPoR3smG+Ge9X4jIsBDwIk10nE=","CaoND9ACfVisrK8g5VHnZDS9ghbrHqazF9Gm0jpTseA=","FE2OVUCMiYZG8uDdtuwZK15BabsxJZHSx1i5cgdAmsE=","Dxo53ceFywiBQg9C605rXswQyB9JC+F/gV+dfzTl5Uw=","Hoc68YpVZjoEyERwSYskW0bva9eB+7Lkv9QzO6FDq0Y=","JKR3mIahyhqlcgTh+1DgM+Mcf5m4CE0oWwuakzyws8c=","DnOu3JpFeCVfHQ+FJ3CPnTETEgXh1hQO+XV+jgfVk7g=","EG8n6CRXuR6fozNY7ZWh+6+GquXU75lUoE3UY13cT84=","GpUpR/y3fAqwfs8y6/QNltQOx/6Hsk65K0yesW8vz30=","GXue0ajKhIe3LR6MzlAtqdK6eMPyLPfAXYMUci//cuE=","FghVS7MJdyy8mgqrkUxOLEANcvny5drUZt+h374F1cg=","CEgoO9ggGDeXbUM0HUNXj5siYJrC5FfgJmTTSDBnHjY=","FL63fP4oVAGeBRYLkh+WEZ6U1hbpOgYHk2tFCj4DO2Q=","A0oUlJFOdpgYXViGRYK/6C/At95q1j+TFxir+CONKAU=","HDGd87JoC9jHFmlrXSz1A+DupbEdXd6OlSF/SqtqvQ8=","EsKclf3r8BRjEhog6zOgZCXpFKqexhv2ZbwByiJY4cc=","G83/tBCwCe/aZ/QF+jP9Eo+nz/NzCzhg3ymyvVYeGsA=","LoqbgMzStDh/DsJMqg3a+3sP7hys40LOsY6RIj7qduA=","IxSetlW4ZAt/52scDTtIbCdJ5keo0g8ptfkrL8ZNeqU=","KmUGleN7/qisyZiRQzX/N23NKXWDJiOE4n+4BaIiP4U=","KQouZPTh8XvznV1FGaFSgB/8LSA11Iu6DrGo+COOhpo=","F5eGAZ02kX6Lr6aClHHFgdUyvxC+faHokXpfcKdyThM=","IrxowIVe7frvVRRI2jtjknEAjQYzqp54P65SQE593LQ=","E0DVts4GAHVFmoT/f0eSDNUxj50Sf55STdH3rB0IK4w=","CULJrX3lVd2XYniuu/HSLxvq6g5cortbDm5nnyx7ayI=","DmW7y16/I6QNbiVwOuApoxcitkoNIQSW3BfJAU+d9FE=","ARKpGb0M64RVd17kniFltSkbnk5ACnXpd8plZuagvWk=","G5HE2KVENpsNrureJ6DClmt0Gi1GEx0xBXQfMd8g6hE=","At2FeX4WjSH6fluWYidm7AwCJGv57jKKkV/y4sjZdCo=","FiJHJDFBR9R5rgy9JqOB1FhKis/TGF1EObUnYZ065MQ=","L+hOWXG/06kZ+tBCFKy8UNB/MBXZfChAXd6SgnwCU/M=","LLZzThmz4CxGqAPVYWcwrWND09kj/pq5hJKSHb4Uw8g=","GoV+F/LsG0whCt+2q3DHs90M5v9gO3dB3Sp+7UdEU9I=","FM5jo1DSnl3HD56i4d0JEvjXNNMoM3I6r+2r9BvrW5I=","ATHS4VLH/D5lqJ9KIuc3M17U9oyCxdzrQ4tRnDUhMrs=","HkEK8uDE8tITyzRkFNkWnL9IHpuk1EMeI1kRnXlnEPY=","LJPBRU0MyG60HfEiTZhpcA7eeDZHVhHrHwagNgcC0eQ=","C9WDWBOt391/5S9MijsQsVfKYwc+4ngvdPQ1BqtY/FI=","IJRN4b/Be6keek5X6syxKoZPDwP0l5u0oxqEQlzEwOY=","IXh7VM5UPppx0RvgPh7jrJzN1iIfQ64NJhYkrcK9mC4=","Il50oLwCPIC7Ja3xEdUquDPqTkaWcoEGQGHt4PPXDjo=","GfYYlHMAtWHcPUajzWKp0l9+mzPzATh9gasSCf6wpUE=","IzpGKH1RmsVorfmbuGlHB3dbmZptCjq8qNbKZOAYSEE=","GNDbqqmNtnO0csitEbSQ+sdvYgieEN7B4lOG49BNz/M=","F3qmvoZFSttORfZJZyQjGJ6u3zRDkzyl2M8tpLwIb+U=","AaAoEKxqdnnkAmbyupeMYnhftGe4T7FdprA8Qo6hmE0=","GubHCl6/JR9ffkoSQglqMm7x1VFMOEM/ASj9xmg1dQU=","AiFO8XrLoopxWHR2zndfbuDTvT+l7a3piVu16OXQNVg=","F2lIaYBIuJ7d6MQaAtQZj/Rj12iBo3ibSw2+iDe91hI=","L6jqeyuxNBXkF1jwS3hJc/8I9Ivj1dz/kGn0id7YQo8=","AUTMfGrSj6LkfrAnWhpL7/6pc4z6j45zzIkWNJ0eIsY=","FPmqtcFvsCyayMFDpB1+wfSWj0jujfeP/k+Ht5ofPF0=","Ief+Dzj8rTdPUlp+WuwFtHoz7umXCX17Z0yvxKBs3cg=","KLCpHkSKvgkFh298S3z34NWCw5AWENcvov00RTOfibs=","GhaHTcZ3VUr0NoP/Cvga6nw30Min1IAmaYZA9pRH9Ew=","JCKJHUOrcfhzDxwURzIOUPk1IT9QNtodLKMIuEpZTuc=","HaZlJRN86PcrrJ2jauT2ZsPLejsp26nYL3soa0TDL84=","AMRzGCU1erFfSb6L6Pthukqkm7xmueqInedDPojG1Uk=","MAACjEAR2uvk5vZO2x/TMzY4r2nUDw6V9IQWWGjJu7c=","Kb7ck6uztiVp2vyLiYfyld4lJwBvp9HtD9LxSB/WaHo=","DL50OAUJyKx2aIlYmfwvtrf791KqSD4dnczCUGC5YP8=","IraUvGjfK8RomkgAUxuxydilNih88emRoDwCZNAJ/CU=","KtjijC5L9zyHPuhGPqsvO6re2TKlQ9ULuRgvJG85Td4=","C70EtDSlXUxc2raE+iuEhPihuDpXCZhWaOLU4Mc5yAI=","K9FUpgdKFbZRth3BWpNkCoh72eEXBCY0ZOy5/sPwQ54=","LVrxerJYV73XYEQgvQDx+XIy25N3iWctLKknoIIEa5I=","AvjnlOGy6WHTssx3zraEykUzi+Zd2Y9MzRLnfTRwjqI=","JOpPvn+bnmbEHMDLG7XizjN2EeNgkl3TzJSVNDKiM84=","CjfdW8yYvf5PxtD9DsRSDG9EmvWou+T4E7XtXdVEFo8=","CGpZI1/iDbvhDMYD9pp4t5ZkfLCvNbxyBsVBpIh2cho=","K9dNbD3Jd9wjCaCnsMfNrQnVS7Rmsr8MrxmCGN/OrwA=","H69EvQS6v1qy5xUo/bzNX9kdssIAHaP152FiMTYI7Kw=","Jup//4b+VrdxK1nnDlAquc4JvYvqmAIjY4Frcm83QUU=","HbI3C18UvkhIXhv/kDOFPJnYBzyxi8nsCweMLNkFKP8=","JPW/dX0afCj9U958jKvsXLYuRMNzoqMvN42lqqB9Ges=","C8us7Z754LA9O4frCcQFAQUsS81fwy5LK/e3XiEUit4=","GrdtrrvtxfHbRAeIYWGHyf7UOxyyZo5T3lFRdhs5J3s=","JJ3NW6bX0jRzwqFpx261gRhTmfkhaqyt3SRj4FGf5tY=","DF2hcgC5CgsSWwOe2SK2lU00uXk1RCN0PmAWtbxdgCM=","LfkIh4yUAv3QowFDUbCSjxxVl5Cg1BatJaJhbBoHPNA=","Ic4uMwiZUbAa9F3zgWyA4gSGhvHoAUwlfJXi7z4nU/E=","G77LYHlQxU90pic2mp+UVIhnd4YE3Y3kBkg+IfYe4aU=","I8F1R5lls7SpcZz+a+amEMDHdnDlhsKrDPCDUB5p8QE=","LzcNFY0VtzZWLW0EV8RHBuZxvpqqUkvGs7/DQoCZYQA=","DvEcv/UN8eHTa+DI81WIu75Aa76jGju25pt/fE9Ooac=","Hy/xF2ddl1NcJNGaWLqvqwOQ89QRSpZcQzUMF84JWu8=","FHEtAciXWQ0u6qtumOGOWsGVhpKgTBtRJO4GroYoz6I=","Jo42F1LHKkrZSbKtHvnm8ugGN1lGuLnmM2A41PhJws0=","Ed4ft8Betjikq9tLQ4JhhSm5mXisxz9OhWPCgxzeErk=","DSpyNDqQ27UykCOVgbL/MSBqArnNmLrGZn/SR62QlUQ=","D8aT+fj1y2obi+ZonbwD9QMfXfSjB4LYCR9zjcfh6d8=","DkHiqZf6TQ+LdS7MDcY7OhIb6B6g4kIVTf5n7ASfVwQ=","CHssqNeJMfb94IN85PpYlEWW88nPKtq46uMLRJROF4g=","El2TrM92nU01FLIdTGY7FTniJ+nLxFlkQgNh2NIgIV0=","H5GscYZIzR/a8r9vEa7v972CBs7ldp2IF7uXAznojrk=","KZFKts7EZf2S+PLIaeHOnU27P4g7KWhQY/M5WIESZZw=","AtpKEEhu9tDv/rJvhpvvmfbVDY/qoeoci96VmJQp5dU=","CCVX0/UPpRfeJxDgSYpoOTDbW5+yaeirakJ3HVrn3DM=","HSCDLpYPVQ1wYYcvbNlnlvnPYfr0+AffDDc0peg5Iyw=","G1eoItNOStBs7E4Z3/Mka/hGvDQIA22rArwrEso44EQ=","C8eYyNz3nKmnx2yw6Lt8I2Zxn+dAkuYeb0DoxAh/wLU=","GpdbF5ZJsRTjxFWaGxQSXjXjYwvx+Dg/r5rygsk2cAw=","DKrp9LZrReRzLpeFGROllFQHMPJlKYAVOcTUSJYHX9Q=","COPagSTGIeBw6KQfD/Hxz3XiIRCHlVOS2FoXI70txB8=","Jg4xVRSPiSt/lrLXTmx5ueLBo82c0HhK5QeHXkomeIE=","Lj7Y0n7nG7QeW8mPtGbdT/nQ+KZohht3Ovgl0mCuOUM=","IdD7fONk4Kx4Gx4R2Jq/6gBjksq9IPB0DRVr4eRefuw=","AwGhqsxPhmhOPteg6wI7ksx1r2+CFJEPhAxifD2jzXE=","Ee5TvrHo7k7BBon0/kDr2TzRyf4G2BLpalgzaENewrY=","AdQtLdnSNyUwww9NYSJzLRzvjeqeLr+zsmeenw3NBMk=","CGHkSLkv/nOOGK5noUOHbVWljBYvdNjlVnFNH35ih5I=","GTeTv+XHuQxtYUdeic8NQURxKPKA2MbF3Uvh/JBy7ys=","ASawXuEkyFqiscEnPCHDzv597TmzBcXgOaNfkCTMElY=","BWncwibC4hWuaXuMYAEBHLrnzlNfRagD3GD96dpQyDo=","D+YXLdWv6P8OfjP2SZkW/Uxf8vq5aWN64y2OTP0/79Q=","B0/yxfAIBg6J0wllWRJgZ5zT8PWu0zFirJrJnaELq1M=","CG5lRE1TZtghM9jK0KYcIAZrib4chw3Kv+RTZI0rawY=","C5vL1St7iZplGgLDJuBkrGqXvnRXu86JbkZdc+k6+5o=","AmngNcQpxL2u3Dk9KoeXihwvjKCyWwhepEzlh47FBrs=","CeG3ckWDsOFqebp2cGNvh+oTShniDcPscMAce5RmTa0=","JkylZRrnuE9D2IQc+ylry18Z+loGosTSGEtUw9Y3CTY=","JOStjC84//37UDpN1QV1xaEkJqU0Y1njpWVK8BiPCqI=","Ct/KzvarJi+PydL2FMD+SjJzyCqeczXl4OCADYHoeHU=","GHrduXxKZDcUWGbPJw30pXunBZcP4eBhmg8BaTMGXSw=","BxBwLfhB1O9eDK2rcZep7xnXUkgIu6Vt+EWi6PFBvKo=","LgZkqrx0tcVNnQR79UcORevHhAJhWSc/HS9eR1nABlE=","Jxy3qukUKtcYQqdwzGXfGdfRAtkjVFTXxgCnNaH6Tac=","L/R1+dUiQcImG59SDSMi9SJo0omgKOl0dC1An9i7OwY=","LTuyz4Uw5pi3ce3mZXigFJ5WGzZtUCpuecI7M8UAwqQ=","BcgLWha2pZ4eNjA6Wbp4LNcUB/gyc/N8GepUqWHgytk=","Fwd8ymnu0o8h7q8PAEhpLNMQ5rqHtlt1lN5ZAqgp168=","Ltvk2ChpYtkc8akxdfklsXTPU9hVko8vEM9G57rx+ZQ=","L5V1emLRpSicagh+XIKeVNW8LgMIKthiFkHYL1dYJZo=","DCyhpPFoLaP1ZJDR8VQZTr5Aq0QZlRy81QjIYAXMz6w=","FRtVl3Ptv9SkmkU8FzIhKVXcnV/2FOgOdaxj0GXdDMw=","MEOuCGnrjRO4EBeLlus3yqJ6hHB3e92rhQAjhLbhqhE=","AahD3/liFIfTU7cM4E2d7UOPdsUBP0eAeYBjpN9tt7E=","Du+CQVJ3hMv/M/VR9uLlPRa3RFifUFCM2qCELgXsoB0=","GuhbRScBfUXYBaJbE54/Qk03RYQc7K2kZY2Xs4zvxMM=","DtQ38PEZMr8WsM139Jg68VEeVweEJ/7tMoeAgouNhCw=","F96aEXFhuuf4JDFN23pJ1Z4kQ81iDg568ILnJGpyXpw=","EoWM6lHu7C5PulByqQSTGN5A6ppBefp0x7/B4VcGgB8=","CM9AQJH07l/cBo/1Gifnmhj4rpOt2iO0Et437tFk+9U=","B2OPdVg0sF5tuvG5kqur4bV1iX53bq00caT+aNnnD3o=","JGEFVY9FR56M1Ul9kkCm3ZjZboER7U5v6K5IHMIhOUs=","KZTk3iP0c3HGjNH2AucSlaNqNluXBwTHCyL4qBaFC18=","IsjTv73zY3qWMenRsIUG1g/uaUWwA466jy2oXxD+8Mc=","KBwvryosRJu0CkvEc46mTv7BGNNL37OGUvyG5VKXoz4=","GMBFzdqrQziTRLTv6VJU3OfSX305KwUlbCuUnkfKo/0=","APiafxrJ+zeydTx1itAmXJTv/n54OMXwNpb74eoZzWI=","F6qqa8cbLRqg2ISwCTTxKDxZkBHpbv1G1NYC2V2Gn4o=","KRNFcXUkElXZTwAuxQpRg4YW8nWNaXI6kb8K3Eb60Os=","EuujTFLJN2Ui+ACKZmCKtPCEAaq4XRY2R5H9+RumYfw=","E16TeWk/Ttvp/IaESTilJRjonbn+E+RXWRMoco8V3Ag=","L2u06RggseE2f4MTTtYygwMHBlrfda7uFmbTpZvqp2o=","E1Q6mOWLG235gkf0UuAA/gcas/zbCz5rGpGa41I1KBg=","L9gffYRLmaxh6PCT3GX+DPRdwqXN6+lvALD0O9C32c4=","LVVSIiztTiDMgDcaAhBBHpUYDMSzEOtmIJwqRmgafwc=","I8FTOIvhIZa8HJfYjZoY3trgmbyw8f+ldphTeQIqGyE=","B/DSaes03Wmt3V3vWQK5p6ltzRc7/kYIKO05jvs6Ovo=","DVEWkbbvezLWtku3DiGYJtEFwOPfuQWouIFkuOM/Ldw=","KH3DYJd0CW0rnZjG8lMJRpANnc0F8APeHS+LPLjn0a4=","EVMbFN20mwZvESmAjwQ+PJ0/MgieOuvP4pzknZPQ11k=","JwwH+4WHHzAXxGiz9HAcQsViu3miy3Shtj+FcJCTMYE=","CRz9eQ1JBJci1IISkhHwrsOhCvPRy6/xrMZ09ZjPvSo=","Lh+bVGXqXoTIyyWbpc72PH94sER3vq87YSd0rdYyXLo=","Bk1a5w1LhXT/MHfoNf7kiAF8wxfKivJiFj/PnxNIaNg=","GN2UVqdnRJxlfD1WY+6nHlTl61s4HU4BWMccoOOo+yk=","AVD4tY4GNbyo5URS8+Mf9ZecISLi7WMVx14uHvv02VM=","GcH4IhNfu1kyuuuGImHTf1hhPBrG7MbRqYWlRqUuYUI=","LOsqsldrK2beZMmoxWSGn3kQCng9SupB509DZUfP1jA=","KJ7zBKEAI+Ty1OR8ryV2YHkQPltwWfrcxBpHWTfqR7c=","EGRVrBf/WxYlE1Zj8oYn2RnrrpEMaXyUDpZ+kXtm46k=","J+GUFhodDeRUyfR6R9hiiaEyTzBp40agoUopHtH1D3g=","A+o6zhMaWAxzfq13J1qqsfu/NflXul/6QOMZARf/vxk=","EI4Tb2wKcBaqPJEUAXhmj4vpKuqL8ipYpgQBvwN/OKY=","E4S1b2nK6TkwCVgoXOrVz+sZcfQrtzWFLSHz8/8ua9Y=","F6/FvMOuFPDdqqCtfwaHhcKohnKuJmnKaNVT9LVhHac=","KvK01uSFkMtqs3JgzQYowwXpVxoQSq/FowCG7Tbrc54=","BJZfyLuXB9qu0geZTIjSNqM8wJmcfhFlEvw2w/PEhRY=","GqJ0+TmuklvayAkXnmBUe6kXbQzE07Zuxh6lkUYnhwQ=","AsvP9dC1J2nuD+z870zdmV5mQXCU6EyUeYVngPsdlA4=","JRPyrVm5kbkBW4dIkBo3Am0uUR7K8SpxZkOBAye8I0k=","I/4xLnu2ow/tbNAPoNmKIV6QO0VgPuwU/5ITUtaUTaY=","DONSwVu4Gzn+DnJjhGucC60PmtspNcESpMpPWMELRgY=","F4So4WG+jMhSV0pAxkhirfWtZARo9FG6Ed4/2sNeyt0=","FIr2a406BtTaS/0JEhyrIEXPoaluie4eI9xhRFNm8cw=","DSgpWxd1MCQ5XFD4C+xmiQr7xFiGaFhHT1dlz751r1Q=","CbxWiq3yXJqIQE2ifHNzKBe2qmyb+9TOhR6Jrv0Umd4=","Cw/1uWlN7pzsZphi1JgluJNPc96uQEyeWmAWUq+P1PQ=","Dn/O5bxSmVb7TTHpjaE3YnbK55UDkG3Vs/mHv0I+wNY=","BXkDlpkAEXwoeynKxLMVKX0TeynvKIPjnxftwxhSmko=","Hc11Y1yDHPPPW+rt1UUO1j/7F9w120Tr+gIHj8VcNt8=","DyNef8NHgOgAXCQsyEKHZL5uSIyOuGBL271+BkQ2FwE=","AdhP/sRlTd4E3psKCThdUJzCsgIWJKWdJ0/Q4GOziZ0=","CALPNoTsJkbFNcAYMFvBN3tDdZCq1lSVFRnFOcMNVN4="],M:[["DjCndMNTosvyRNPQFNGg5f8LrF4kJnOuM/G7IDD+/2g=","EhhrsiAArYS2vykXmt4tTn6U/wflFifglYBXEGH6jOg=","I5n6pkiu35Akxqw86v6iSCFuJKnlbK9azSnOJUap9rI=","A63Sn+OY7S1E8jMSXs0VCePO3nfmvgi5SvT+yH6z5I4=","Ehr2H03FuySJCr65JR5c6pR3CrBi3Awou4mV3Y8YNjU=","LKj/7i1Y8pRSl7AM0LUR2hZwgNU5SbPx/OrKlha2FD0=","LJnvXgZBR9qXgrkUopS2wU0h6n7sH3LodhZxBp2CoTQ=","DX0HzTeY9E2DKmVxwhcGdYaT5ek2hM4tGl6KU+DMZwk=","KRlRFxBmI///sK9SXIOGhtDZcln8c6UZRgmse3sXExM=","AbYtSxfeZzdbWPJIqI2/cHzJ0UkbzgCVZEygIZoB5Ao=","LhaBvHwi0kxDP4HdOjJv0CQr/H4r3rYwfk0qyjKt2h0=","AGWFDRHQ7Kh8Npe29eV/eMqGlSutHJBH29Lra+np2zA=","Glmza5T51yNXflBNYAxJPygQ8OZxEmcsdDq7sTq/Q7g=","GksYa3fNU/lhyMy3gV2Xgc73pSr2TQv3RstSJRLT0K8="],["EoJuW5vhybhffJiqypziiocGh9NijWDe8KswcrV7Cbg=","I345mA+QB7v4aZ2+zgVP6h8ZdmvmEBiF1CH6PqRrU0g=","BUD1SSSXWV4TCA8C9rHmU+LlGJUWD/1coU0mrtk7hnI=","Erv7sRDsKXEAfdrF+ONvZVRl0F8kYplrIRTvrKxwr7U=","Ly7FHEj4tzxRsmSnDSugtGvbQ/kz3g+uqKfaKpfLQfM=","JuNlRNC1lS3eQAfRGBhGW96RxNzmWrwBXnVWuli5X/o=","Imv5S4axd8/n8DED1Z4/nOI5OCGVRwjnxyP4EEpoxmQ=","JeMRs3zuaTVF4sLvwgQ7wHNVIRWzoGXO8T02VHtrncU=","DyM24O7kaFdByiOCjDTCTwc0kfDnLBOWEFJKVvcapAU=","DZu32rShiaO2mQpVJsgrCuULp91Vj5Ubuf00PLtLDhk=","KkpsyITP0Ir0sNvom22ODlgRMget7Yy6stB1BT7+mYw=","Hrl4GbNTHrtkDta0ITQzVBkQHR22DdGpJO+WZfepGvU=","ImuR41LGXeT87hEkRb/yDkpnrw4RCVcxmyhg1Qh0Brs=","CsW4YSjuR5RMEq9THPFFgELDWt/NnltqdTGXNxRVnec="],["Iv6hKXpKXwiQTVVcLhXQFhAqTtKcMrS7EICe8Ur0LHc=","GAjL593yo2hNihZP4tFQ32Igb2vjPVd9xXmPGTru16E=","HBzLRP+KttqFTpJx9L7ybSrCbNdEHxtp0W7uDXp7SBs=","G40gnWayway6ukNeMEriBmLTNtEDML6zNVz4AfGUcz8=","EXOM7TkzxLJ94TkR23HM1Yt7MTRO2RU9vd3bkfvbzqs=","HpfOATr6punJk+nP3JquyRsGeHgZgwmFpy6ffG5Rarc=","Bmq4vq2ue+vSajOtvWuzktaCXaN6Z56K+a6LxIE8MWg=","IbN75SGDXDK2c6Mdca7RvH8+qW/h1MI/FGI6CoUaPNg=","HobsCGgFvHcSt1EN72USSbodSRB2JB2Z0AxpKIDzmnU=","B10aps0rjRgcng9CJ1yYhK5voJGG/iJ+XEZz5W46zSg=","FCqDIGdHIA/bAnc+dm9QTGWvgrIAwOf9lC+SviPVhr4=","DuRoPI2lNra1B3Okabu94uQXoc+b4iFSCvHnVZaNf/Y=","Fo53Hp+PhgxJNn75GaANTxKLqwHBPX3XLOjTa8bR2DU=","DCpDkGcSFEnB7z26a+H/hParf6xLvVStdTnmGCbKGXE="],["JMxnUYlAh7gxWYtbx/nbPLtIzilNkgjhqkNstfougOE=","AzzM7wWwvPe3eqVWCg+UnJC+XMLFcSL5iF0koRfGP5g=","Do78hc/r3ilc5YneYK7A20PIH0vn2kTrJvpLcffLfuk=","Cp1+5+6RZ3r/08pPxnRiW+iX33n4LsQ46A8eAAyLH3A=","CRdbH6+s3A5itflebKZ8P/yWom43z8c0eVuS8eRhJNQ=","MBawdMgUIl4tXBCRqDA+7kvkdrFFitVMFrThaR9rRyQ=","DAmYYVReATpofN1Jo6KWqNLC6ZaRwlNdpxLTUdXmPBA=","C3Gga7dbChC/0oo3iL9UqKFEsyh9+cWRomQ8QQD+OI8=","FJN4ecTHEnZEx2W2Ni+LmM/TL4Vy16rZzDKb7VtQemk=","KPngBY688VkbwAfLAqw6zeCFFCfbIMc1jb75+pxXwro=","DfZTUk//kt3o7ByaUcG+wwvzak8B6bO2LrE/j/33uL8=","At/PsoCj03LbwVY56s5FwLrFYsROKS8UKbyRZXj7C/0=","CzRYkLM8I9FnOWxYPRLk89nvyQTyYSAlEjUBkKsZYcU=","BPfx+v7hIbuBE0T3P1T0o1gwdnOd2d/EYrOuY0PJPLA="],["LMPQUDoOHalSsIG6XcWxF+ZGvtVypkUmbG7DzgoUdLk=","KFTIK0tfXfbdOHLj83E3LeDRLhbpEIdmkgtUWBBedr0=","Cx2BD8xyFVHipZbpAJNn/GqSSFerKbcDIHsIyV7NAB0=","C26yJU7frh11A8NRjmTPGfNEPWzQO3HPvxvlk22k4EY=","IQpKgObqp5n3zgV1K72k1P8FIHQslD4e/usSqRIppa8=","HBss8R8NOjoSG+fQ3fsk3HH1S5vvlDruMpY5ZpIqg5k=","FXTJ5cqqimp/tIlNLEXRkB0cQrMhT+mnL9PMZo45n3Y=","Ju1f/wbvnhlCvT0NO6aEjkfsBFzSb5MEnYDL+mvMc7A=","BZ3oc8WYBvVRFLw/gwn5tkz8unQ0quIgRH6g6cSmbaI=","AX45zLo0MqE1wAddcgxklWLuTTG22i6ckL1yoDl2XnM=","KufxQU8UQ3NTGBY+G/seG89cJx839qvxqoZ2ay5Z4Ek=","EuqSGs9bitxqTja+hXE1dtZYCZIwsLF2bGZvEtkqsUI=","GBXUwuahj08/pTigBBRtf1QPvoCkYFhXcU+6J5VhXfk=","GPbEDjzPiFgEs3RDOvCpYrKWP7mqAei66MyDSz4Xox0="],["Ee7b5aWWnzNEZQNJS0aaK4P4jTqkd+XW15Y6gzOmExU=","AJtjx138q1ctKAsFf7w2QNNd1fFiRIY6uKMeCVbaiAI=","Cfysw5mAZRJN4Bv3wMi6JqxCQfH33soe7+XvPVAV460=","AamrP8IFmwz/fjzEMffbRfWdj39yTNEKA/MaNmOPi1I=","Gbr9DXlCuDnzatPXDZyHtVZ0ub3uAqfcMOT5nrzB2U8=","AMR0gkr9KogMaoWnt6WkNKxCLHpjqvjdx8TZMl7e9A4=","A6ZakdNbbod5CNXEGeeFD2RfYrHJE3ZaIUuw96KRW0k=","E3kIuqwuNeE/hoNKv+mNG1S3wl1shfxsBex83tkXVRc=","FmLybPBPW5ac3WuT6JDvK1sRJPUYIoiNwhZ7vs98Mec=","DNCkwn3hGutkYOMvoryyicuDMhcjFVMEkp6wyk7qA8k=","IDC3vCpwkF0DFnTvtCAzb6uwdprAElw13+L/NywapOs=","C1NCUDr0Ru+CTfTfagiBlftnJ2ZX1CDm8xKyYo6SKYY=","KCpVX5rU+1dpj6ofwyebuMKMH43IxpMiW9hSDbQxNIk=","F0waEJXpXU8JjI1ggmd2wvc2kds37DuTeDW2WwG6E9Y="],["GJrp6bFiqxoZ1ZnO3O9Ci9EyXHh0CqrWcVtxC/rEweY=","KP028cdh6nvOKebwAGf6QLMuazGPUGtslLuEe/crW1I=","BdLwo8IjEirAEhQlAyC1L/Wj0kIRjhl3iyyM0al2xhE=","Aj+6I6tLwk1IgLpab/1utQUN+40PVkdtOjApDto3KsQ=","JrjqsN0NlbeoQ54P99NDinOie1mT2B/OznKagko1IbE=","GXdex4H9QImFn2t/EnyR64Put+yereFGd7CmsQuebiQ=","DAc+rdtdP3nlv4O6wA83cAvWRQLYv31aCZ+z7/fTsD8=","FDmR6DhtYjNMoNh4MqCEW0hBbvUVjBjnuduM1q7iI6o=","BfuJfXHt2NjrHztcgjpYgqBtlkBWr9Uy5siIk6JfJhU=","J0WgWdCWLxvw3eHhuX4Lv0xBQ9EP0/3rjSspXuTXqd0=","EqcQ3m0X+Rr4kBAiJoU7tkIJ8bQTMaHRcwW/W3tSFy0=","CSZfsxSmdraz+CfwcoOh7U8wDo2Q+WeyD/YfRV0qsv4=","FIqxWXKmkltxRgJxD+nmTAoBUFOsuDjQ6HakbLVlP1k=","H3+XBMqxz+orJHHVee+Z0ZOyNK+Q5iygm1pnHCQopRU="],["Gq0RRJ1uLG4a3PnokRTDNsAUVSjzVqwEn1L9jLCENwo=","K1bC5E9wOjsUPaA8JXSTZ/dSsWgXJX5tEjsQvIVUNDI=","DHUT92K2QCKhUdYjAgmd/9UXkdmv09z5bL/PYDWiwnw=","CyZwD9TpUMJa14/ttj/LDZunPsq4WMBxZkhmqQlvFNU=","FzmF/hfzsPuF3mEEwCtGw9ee7p3Ci1Z/AqsaHA3exXY=","IKmmKEz8Q4F5XjsGg36VloFf1bbxYr3gL5fbaHyEef0=","IXqkALK2Jbw2QypUXlMxJPmcHLmOuF33RzGehdUwRwo=","FI3JM19iH/+cjS+nKpz1tv66vh9c53aJwaKeOTGF+6M=","Ds+sqtDBR+Czx+BJdx5tQHKwLuTRccDlMiQhTRet41E=","E2WpBMf2chAC284XB3qJqSu4A4vSevUzM/RHxM8DWoA=","H7pxO5h0IxHfs/o1b/g+7yNM6L8rDUpS3nr00lGfLxI=","CrkT9l4c6znti4O9XX/ZAOeFEe2rz+YjFN0Q1WeFjY4=","COE8LmHERrUwJNIRarF2yENgDQDmdkAsRkF0UVjCQ/g=","AfoCYWAkzZvt9kPqNtJi0bJPOKVXp3qCxoZhjDwz7fk="],["DX4eriz+xAZALTTCWeWWb24usmHU8I4pCIMlprtmmmM=","GE5YJGieT4FDhWffQ1854dNagZBB1+rzr5CEKb6yvC8=","GP3mRRBiAW7eqjLkCo/DB1HhfpusGS+MqJHBHznr/4E=","BKVyuGEF26UlPX7R5201oSbmcYVRuXayCPWT8IFY3qk=","HZSOh3SxgPpeGjkyQ53+jF8ypDdlfSEnfkJhS0yaPcM=","IEQapfTVY45k162ZgrG/z94Vj2o81q9ilB4FzI5TMVE=","F4pY/xItFozU/xGkcoCkuOXNsxNBG29umpR8f7V3pR8=","JW4UU3jSYE24xQndpFUkUrbEqJH6xdoZnHVgdo2UiDY=","JfZNQqdQlxr8uAIwcPbsl7sjYrGWparir2pw8uezV68=","AvgSEh4urMx9Ub8mY5jVuo9gGiqm0zXrafeGRkIXdmc=","AMj4ciiSovBsWrRU5Ae9VX6cLqd++AfuDj2JxnhbDTM=","BAfVhaan77VhN35fOXIxmj5yheFGxUme9shQSj0LYuM=","EcuD4B/1gDsEmitZrpkVs+AEXh22lKbfnenE5xUtGR0=","LhwpLga3+KbkNE8QVAZ1pjyknkUvaVZfz7zUO6wPOvQ="],["B5aiOtbtKsmVEEoNPmx16XfOKauh0l5iqaiiA2TqG+A=","EATF7Lq2t9Eva7TK6rM91Wwfgp7ij0fCn7+7FH6IRlQ=","B3VZRzc3VJ37IBbfpyVYuywcgW1zGHY6Xk/VFrBJFOg=","G8vmftX7dSKt6v0dmhUPjVetohjbNGkVyG5sAMAOOLg=","G2GgPiGDYiBP0gtnU25ebKe5bbtT1T7RYCMCmIYUh28=","LT0mnuMk58Q8EaqEzRW61lRE74Np3xV0moprLIEh4rk=","DqRdIkee9Xc+WLD+dAho/B6LUL/3YEnVtu1ecjcRhns=","IoAlDiEr4qSNKTeWqIrGKwVBEBL0amb4egIgo9/z950=","IL5wP4bXwLna2Y/4u5/JL+isCoTGiXp12FEUb3SEC3E=","IfjYVAkd22AdqxsB+zDD1Pd8wxZ/ozMsOzI3egfmqsg=","Db0JPcFuc4Mr3mLQXLsG+CcfpHIpRwRi2MGM+KEk+es=","L/W7vAItG3T+GEwGTljZZ/Gq0fCSbJBqXjVs/DuBrSQ=","EZgWhiyCJunl36vzFns7K/f7PRkGOYmyShbZfJS9U9c=","BvvO1SV2qRPmzcXFyW/cj59Okx+pC+60bZs8LXdeHjY="],["KZuOhiHX2MjT1ihssSazTuU7LcmjaXuDgMbkf1cRNFw=","Cpc6ZlaT7QlDTtsssKlxrSd6grM4V4hVI0muCei9DIU=","LenuZSnlq8eu6Tt5TE7v3VF8T+EvpWvOBqNwjYYza74=","Lqa3pyZcUD/LKEwrsZUS2uce81cSXDrHVca8bMN722Y=","E4C+rHsGLGuJkUqXao0LnTJ2oTyCwj+iH0+kQD4yZ80=","GlcY9Kkt2NF5uTKwgg9lx7uT6rzjmPmXMk+YrHYyO5I=","HHy/JEjecRTu1wGwQYCQNOB7lGoDQLd3JoUp1YLCJao=","CcieBsrVQwFT3VLMZq5PUhv0FF3wSGgb6y4Go4UFARc=","KW86nBBCImkqRK0k8Pb9gZACfgdVVn6acAnsce9EDqA=","AYOTUF6mIwZpqAMPbnYTChTBBwqQG6W2QLiK6A19MLU=","HcowYKa7xMMk9++6IidP2NHyVgpO66jIsNOJl+DZxGs=","BtptiMIz4xgsX6XM2hOSwPiffGvsTmDajfgFSAfrCSI=","DGHsebEG6dxklKY1nxdf9jeDnKU6yOehNHHFZkYYA5A=","LOxn5iMgvGoMoyUY7IHHQ2OkttJZvSdaY0JdbO3kaNg="],["IPEe6B0qyantHKxh2c/fEL8bSc37ttIyhyod8UJ8GDk=","ElR4yJc7w5W2SMgiCR+N9GlQSnHKT98dq1mnCND+Rxk=","ErWRt681/9mXs6YTaH5EkiViXdXRAc7y1vKvAtnb1tc=","MFRO2pwyLGyHJnHWZ/xfzwnPuNNOjlgStuc456tA2O8=","IRDBBe+0gbZ5zrLxEtbqcERCdjrirGXt+PFc/RacVg0=","CP1Dl6qLOoTdG6Ti0Ot8bRxe2h92SBS1/+IEyOxzVgY=","JIffnV4Ga3b/yy8MoZCr9fweWHLEtqNqRocOkVkgEBA=","Cq1owg+t4ePiv3D870tVC6ANY5niDYNAL+CbUt3N9Sc=","BjAWebbNsXqmwhLONC7PaBq3zZa/C/uTNQNoAE2Xw1M=","HhUf7f6hFlnBiaMbon8sz2lWCEGI6yxMmbgn9kXx22E=","KRvZQB3iCRa5ACoAZhFLO/rk08gwirpK/czfCuwS1mo=","AKqyfmJ5lSxykfA2kY8LJ507HZ+OTorDgNp37C/CTqA=","Ho7mQTCLpv5WALLfSSzy8U+YkroQJYJsU8d663vNsEs=","J24mI4KJSeai/ckX4u1F3ODuUDza/8mt2BX20dPE+dU="],["CkA+l5lDuNL5R/btptQRcIgTQbteT7uztP4919zN13c=","KwaW1FmAAgoqQhBzRA46T9Oe3FKI5pAKWVjgzYHg7uY=","L5+I/pvjZFfopUZFWqAKD1EAp/MlgLePJqd70LdhIYE=","IGcz4yemS3jTxItvdYDQiHwXeDQ7Z3aIWeJTLX0cRqc=","AMJy0Qry73ipjf90hsSddQXt2IySLlZyo6uxXMSfQTQ=","GjJ/8sRvWWn8rLRjUG4QLWglAjgfw/mZuf+9RSC6RpU=","LAy75GQikXFSyhkGRivLWhPvU2MiqHFSN9oJuMWUysU=","JfQQNSHjbVXkGBYu+Ov+xtRWlVIO9HuFSLo4tSon+/U=","AHlA6wS2HsU0HBcC8DmT+u0Wfbb6LOqSKQzYIbFf5MI=","KuHsnglXfILJe0sJFCrOUaqtHffcNSzU5YE9jO6cmNs=","HJf8d1+WL+Bae2Y0a5PDJgyPapCn9cYyI6M4bhmFLq0=","J3N/zXbdKWwogXZG0wsRaMTQDh92TEVlyqMnbe/RXH4=","FrYbJC1B4ZdYQzCaAaNqFDl9fI5760r72SM7RTqszbo=","DHW6YPjg9q+hJudXA7g9mQgRYUe4sttF7yTzFWuPGFU="],["BGRiUzgPS/ZClyroGXd3lFSqCDP9o2sYIsucCXGePdE=","AmRiXHTyo7u9wZSBt4ZnV+Y5wSS061YNpTH875l3OQM=","CXFOcX2qPOs+l5TSSrzRcoMcuhgGbEwEiwmV6ebfHew=","FNrJBZyeeNlsfvgHujQrlGhwZ5eCIx0q8Pbkq3bL0QE=","Ep3Wd8H4qi020qfVNAZF36w0pkrkVvkbl96fjpExNhU=","EIec6rw60EXXb2zVsmtW3Ee1EtZQlFj5/96Np55mSc0=","D3w/PMls7aA55DyGwbaAx31vSfUOlN4j5NtC+OnK99M=","EL14JPwbiDs9oActLGGUxKHllXFWWU6Qitv25rGRK5s=","CQ2hLhWVVR0lAPkDELdwHfl2dkBBE8M+R1sud0mtthM=","JM6wdm3iX8IniShqCSh750AxDEF0cyC98utclW4EA1Y=","HH3OzqWeb3vrbXAuL+dFiEFdMOXcCZcLstVqzI4IMo8=","EQpehN4JIJ6TY8A8IrU3rGp6q6L2qdGh9r+rcalgpYM=","E4ItzD9icbcVScLNkXuFnNrDavaEiATRWjVNTeD2fvk=","CF44CQXrLLfnU9CrD/SRiyMsc0QYtr/hMx3kkvx2shw="]]};return Ko.default=a,Ko}var vd;function nw(){if(vd)return Xa;vd=1,Object.defineProperty(Xa,"__esModule",{value:!0}),Xa.poseidon13=o;var a=n(ln()),t=n(un()),e=n(ew());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return Xa}var $a={},No={},Fd;function iw(){if(Fd)return No;Fd=1,Object.defineProperty(No,"__esModule",{value:!0}),No.default=void 0;var a={C:["FI2eRUIGaxJdptaf8/tnbr0n5qOKH/QoG9Y5yXr2/9U=","C2CiiAUyQpX8r1G7iNlpI3LL9O7xy6i4XLwFk0ZpGog=","LTj4Eq0desecMv3VelbtuGGIXyD6S8bQ2ULC9B6OSn0=","JXOKzRFjWAAzNn/Y8e4ZnX6zw3iR4GvCDmtHagNXWIs=","JH9pZ/ykJomujiC1p6GY1jCGVJt4wWIKUfXTaCTM9D0=","LiKBMHemaLK3Ukm41RWj3Nk1AgBmlCRbsIf/BzJwi5M=","FSPqib5hvkfhw2sOAkBowoxI2nS/cGmrLXc4nIPUdPQ=","FGaVzhOCMOCHtT7xv4FgHyWR3TRKfLUJ8TiTk2ng0cM=","EtBdlXH6S0FxiG2cLNRMfX/FpBJRlefSjDxHy1y1t8U=","JCchFHCE1GE1Q3iJdxEfP95siTJqVW41vM0qLnPKxos=","D9khuoOVpd3oM+bbpBczhQB7ONGvXjhBo0XJpIDJ0pI=","Dwu9x6OeUUaSny4cqftKY1UM6o8SEJwdguYBl11YH10=","AA1lAIWIsu4aTe4DE7bUOWlS2QE4Xy4a/moKDe92XcI=","CupWe+MeHELOM/WJ2QM2OkgvIcHD2P5Q+m3wGKLcfCU=","AvozR1ewPexr4d91jr4DUzF7NTFuz8cpNNBp8YI0a70=","ABcyJ4Kzcz43nIkJrn2pRlXEbdK2sGG5JT14eh6qm48=","FWgW9I4++Yj/4EzHesTImvj++EgmBOf5O3XB+xFk1g4=","LI/5d6JzUrXX2ewQP8jwxye4SnePQa33d8OOAYAK/aw=","LMIly17kuitwU/mK97O0iFaQFuz29JQ9ZLqEMJLFkik=","DTTXqLj0mr+kjHOxDyk6yhngl0OoNF6eGvny1j/q2Wk=","KgNVqwS+3qYf6uCDVhBn7fFHayByXPXgMtuAbTPtwgQ=","LcrrRlOgzK0cCHL3axA79Po49tYxGeFDfHmCA9KXaMU=","ItLmOQf8C2VkhQEiyOkkqXLegn10kekt2EOXsuvKd3A=","FZOltQPfSDBf/DYMT0nOsCU2xz12tPL3dPnaPVuNzgM=","ItRfEgPMEeUrkVV0mnwKCoIdpLBjzdyCBYAoDiECbr4=","KPAaCttfj4UjbhoSn/r7LN+GrrQFbrX/WgaVHWTD1LI=","G6YCrp08TL+t0K4sz4/M51n4PP8pvxK1PWBQp1heaqo=","J7ygYdgVd47YcZxfT1QGMhPFAFpG7XrtDJedKtFVfDM=","JVk75Fi3WlNppL1qhrcK55h26Vq5NwXSRBAdXfPkVwA=","FWCAMOi7KozsX25pSJBkzSH5s2FwNMl1HFMFbMETwEs=","FKtlfvUncyabQAK3osxtAepm7I61Gpfgvejvn1k+qsE=","GvGFia6QBY0NsVafTU7PdBVDhsu2/pBWQxG0NAsaEdo=","H2AQb4j6202Pl86ezCTQkQpFdcWnEAAlBLSPqij7kcw=","AGYCezZdUSVfmcqrgtUAmuBm22W6EDli98ZfLy2upWI=","GBMB+jh+Uh6JUaO/d8WULFu8So/MbDlcNLT0kakGirM=","LcBMs6gKUjmhMpnupwugJlk/QMz0nLjr1z2imnZBPjs=","K6VeHVzAkEMCdZfk/FRqGJIrr4XWqw7G7/HPE5IrVZI=","LVsPAWOuR2k85zFWjNZ8VLgvJJ8qQp5YX2VADwx63eQ=","A3SsR2n6b9C4Fm/WKhEjV5AjCKEnZFRT1y9SScpck2g=","DnZ9YX275BCWhwj1hdugTplag0fvI+oQH+oIhQhAOqw=","H7OO885Q8VhFHje/VIC6cKkfj87pMnSrAh3+1w8uKCI=","FOI5qnO5Q+Ocm0irsgXMqk/1nWj50yW3F3kWZhd9tls=","JxLZQBlUD18NYcEcLBbT36sCVzhYlr5Zwx/5ejfGVVs=","Dm9SQ5JFLrrUCXOpgOCPaaveshTl63gw9yhMHRPjYDY=","KUcLaSq0pVBSO0SGhOGX5r6byIW50xEMKBV1wbvGfKI=","I5EIJ9DUpB7osTpxGuGbWsYEQBoiFBcXLDAYpJ3pWfs=","C/WGL4mp02h/L7JGmAVw2W7SWOhBSsp+DJ33zugz3YU=","ACcNSGP9AfJ7BVhGi8qVZIvI2zylWqpf6yfChq6tsns=","Lfq+x2ceHpMrB/Fkq0nmnmPxc1E/LUoBXOjePhaMG8g=","C6smrLxI+GSNc2Nmraop/eSSSAAC9QIMYiD7GH2uiJE=","K83wgEMVRKTtJcnbhog3otF4dv17MAG/zCK8toZIO7E=","IGSn67fmrenLzFliAO7JfKXi+b6yomrMZzuTohjxasc=","BFHlhhfsiCeZsrM6rTS8qraocVOMIHggCbXaKjd7kao=","JYL5V2tWsikHxLv6fkFVtOKK4Dh2lkzUCtsOJVtsGhQ=","Gvc1FbZhvQORW1w7XYzsBgtJDXQsT0jUPtkHrGXqbIk=","DuthmwFkXLMfH1FF0tGsoEXmn5qJdCz4X6plqPMHgcQ=","G07muagfvwwgHQiYppSKCZXrzQgODOqDraPY7WGCqxc=","BavgU5koivhO/rhI7GHVPdDwdDmYLgTjpaMEFmrBcw0=","LMAsnM1j8j3OnsKzWHMi2kpM6/nMkkbHANtmEqp2lnQ=","DaZPk1W8w8z4epaWs0TlaDytP4dqW55fcVoNcKlzAB8=","LQs/OpAfiK2IwgEsKzL0658Cu9rt9M0eN7hPQBb+q3s=","HVZlI+1n5xtf8Mxc0XoyXTCSvWalJ3OlN4luPG34bHY=","A301RG4Z7tZiorYoEmsoUPfaoIeXTiH609M51+Lcwz4=","IrWVR8M8N+bDAKNVb4fbumZ72oThuO+HQwpSKldt6fA=","GW+Nb4UfW7zqahYUZWs4ow5by/8mHO8Z9uNAZqy9t0s=","BXbW1txpLZ7XIyAF5j+VTS2hHHfm6RmyudzrrtoRtQc=","Cdz9X/8L4t9aUmWFbCKsIxzt2BoTEjBPWJbwkJzD5qU=","JveSKGzd6IjkVMHd8DWS1tYvS+SEOCNSZQmCn8tJYWM=","KZkh27apIB+Kyn5p2BkCONXkqC3adDrthcojXKuAwWM=","KGOiI4Vr3ULjUGnSBqUIjSF7X/um+6CTnKIoWM13Deo=","D/pWCdG5qoSHIdLh4q1toF1DokHo4Kf1lQj/qbHt5DI=","EdklJ02Prn1Rjf7OpYqaV9iGQgYpaeZ+RX6WLj7UoUQ=","IcIZIEImvEPw2yRINJITqeVj6U0//yiy5pJojQ9bKxI=","LASunyULoBlL9Z7KlATjr23NZN0443CgOPP9Hjl/UQQ=","IjzKgx3HYNt7lU1BgQYUum4sYr4x6UiE1Mfl/6Z9pcY=","JEs4lBBOUaFRpnHKEfyzQtGsIl9Dq+6DlGl0NFcTPYE=","JPcdWgrASjh7dYxpeCRJ33ucztthY6fu2yHvQBRS9FA=","Lvs2DZyg4V9SqkAz9MQj4PpcF1zdBeSuvMJ4p7gpa5c=","Kf/X7z0BjJXoA5wumQ5M/mb/CTgQrUUIww4o6LuXBiA=","Jn/3WlMhI4PszKxOijvy/J6YK6837ERHhgHPqm9BcjM=","L7/Ess5sKwjLs+N0n7Iv89aNO7fTNc4OQuxtwnCQw4U=","Ji+T3iAAXE3i9KXY0FXI1fVomRsKhiBH5a2UyIaLo8o=","DwgL4np5H80XVXVPkx2bh/WtjBljoCqnyv3R6NMblOM=","Iac1ITqMeEl25lyjvsSsxCJFJ0k80WJtI0YTOriHX/A=","FgqS+2pgfV7nlJ/NVTfIQxxEnXmqUbuVWEXSy+aEu/w=","AHkVn2NkVD62Q/BCRGHwATVzmBOECsdN6B33yeEMj3I=","IoYkfFjqpFCbqvhblH5plQHTtfkBrMhHWn2deUFgbNU=","ERBCUZi6BsQu+9tulYQNAcALXQiFDwzUZDXNuhvczqY=","DsWhVXGVDOw8MZOsoBV5FgS32uGF17nYmS4CAYX/2Qk=","Ig+YM1WXSTwuf0/jvcDNIp0MgbLQtvnlZcz2Xrood+M=","HC+i0Xb01wcP5Fz+ao1LvQzmhaoZbkuiNypRleerZEo=","KYwf4/Y1MaqYtqrQLkOKjyeLytTtl/PIKgkfrqkQ5Qs=","LoFLLwiNkAEr7nTO7xDHATAzrxKDVt2kiOP+qzvyUlM=","ISYJlE7AR5JfMcE9fKn9Q6TlSjP7CabslGPLY9JXDmk=","FXu7nQVG+G5Ki15FADarCoTWEJ1VBshfI5Jn9LpYS1Y=","E4782zRLW0D6qcCkFWZL/9dyQLWpy6VrSZ2i486ms9w=","DKUOCNJ76lCPICcwIfboOc8SSlQ2He88mypkWV5Y/k8=","DTTS1ZdaLanw3XLoRteXqzEgIjmeH+cJgPmD8Vh+98Q=","AN0b5PP7A01GaagZIvoBTDwcXFdfOb2AmHfbK5//l0Q=","JVQPzBYjB+OQarrnuiWOT6hP9N1P8ZdCoJadCAGLIb8=","JPV5Npea4qO5dS03wBdXRJNSSiVKW7wQITt/prFa01s=","Atm9YmR6RTNNtzYx2p2Xon6MYn6RG4Pxli3DQX3Gzik=","FJnCmUrYOHcO46mvZDYqEN5sTF8y1atbuuVcoLKfv7o=","FaZFmgju02vT4jFX3VlRK7yEhH436KTj99f9vHviCXA=","FI1lpqdfvvszllvi3wmJ/gMfR0eJItJUbx7hJt5/Nfw=","FtL0hlx204N5+1rS77Ied34BdEtOIJwJXTMuQe20V0g=","DIbGnpSgA8xFTimQp62BZ8O71HMuZG+fkelhEUvGXDc=","ALEiJ6MQ+GIsms/iuzIoqgXO5hBcQmjCZt1Bds5/jiE=","La+R0iX5FYhObP2rQqy2LSdjQZh7w6JUGBnsd3TZDo0=","C8To1VVhS6wbjMmbrn8AjLfIK1zRo8SBpVPK+Kw3P24=","I3XzfQAwuJShqCmN0t1Z4rfnNmfzGxVuhtmzhhdQD60=","Ho48K9DUhS4mGjwPqT2D+5wh1EtJV4Mw3LlxjL1UsoU=","HoDsyimzRe2Ivo5TygQtbGKv0qRiTLrLO9B8hYOTMrQ=","Lh9e5wM4xQxFb0MHchYSX+8xTGZTybpyx12ltTz+2pk=","DpujGuE2+wGZ+dng2FgPVWBEnyqLap0PIj7FLEEgQx4=","JN5S8VayII2BvxCceQ9Am6qUGreXivhvvA+JGl6QT3U=","Bb3HIFomvxJwBlZCXrrEjRFQ4C/ptKywekFgnXFo8E0=","An+BBlQtmaH5A1gq11cHbhivzlYzZ7Y9XQlz2AmTo9g=","B8ryvDeF23rWgbtsBd3yRSXBnRUZqYG0QEWl94y6UrY=","AjC4RGYQZsI0SDx/32MkSZIkU/+47zeXV1Ca3dgc13M=","HFE6f/i9+UDvDQHnb9TsGQhhcOiMZClPc37yC2YZgqw=","Dg6Xl5roZLVfJzcebG5hmre4h849hh/t2ErhEb6kDgw=","Bi1GrcWRNHhM2vDE37bJ1zWPMV8JSHZcj8vJfsPzjrI=","JkLO4jQIESeyi07bA4SXp5oqMTobdJ/S62fjd5QoNkU=","JACzmCyS9/whgYiacIfA3JRtsrLo2G00ULwlT2UY2zc=","JNqItPLC3HBV9KVfeDIjktgIwHby3my2oDiB8jVOkQY=","GjlRzWklMWSBSErDmzG4NielSEwlnIGO4jonAMbOrJ8=","LOyif7mWzbptbuHhBfpd+LprZ7hlkxwBdRX7QpCN4BA=","FggdBL1lvBnkGt72/Y2ngU0rsM/fsuzOXfgqi+qHnm4=","BO7UuJwO3hvViFGpMeTeeR5Mac8rERb4o2srxVkADkY=","HWACG0E3sgd7MRc3hwBCAfILBwFBHEirnhRBj+Ju9Ls=","FjbCnYVof+w6pBJbtm5dXxVWVXpIYMHfhRJ3kPCaYaE=","JccW5epc4saitnGoY9Wss7LdSWOHn0wWPaagb7JlzEI=","HezgAoS8aY6ir5fePUJs+QEQu0m+caOTwc5w6pcdtGA=","KSoYVprtPChoUAHUDLQt2BU/qZABy9UnKcpvjixGbu4=","Ju2qCrf37qyHdr/xILRIPOmmvOhdCZkx7JMiuh+/OIE=","BdI/0HQ+DjcIlYg5LG3wsE1a7y5SaKsZwunps6OvSSE=","MAu+wwLJuLfkuqBpkFcf712tJq9hjQd5tpl3okTFifU=","Jp8tnOCY7uieaU1T07LZhhSQzxhOoJuvZA8Ao5rHKj0=","ESKjf6DDeGNDEYK7gne9DoSbIXioFtMcdgT8UhnRqmI=","FOLbvrMKOld6CyKZzprwU50I6uB0inIYgKrKr+GGRTg=","L5JsZ3OoxBG4fcUZjDCZA9n0kq9vCkOlryAo5Un2yAE=","EWnxEM/0lwC7X+6eUkpJ41iJxGieOEuSeYTplXxYf+M=","AD/shj9AMnsGbmgFTIfSDO+h6xMUBSDUOmebnkoUemE=","LodkDOtAEqmtoxSCx5oI9kurLiwBDLA2u6weSofIAb0=","A+B6jo6GqGOxRxlHvS6WKRSbVVAqas2r9gntr6C8nZg=","Izl9og/h3QX/Ico9IT/AznzkbEaVN8GiqvUilNL9ba4=","F5czp1zhGv6KSEL4UJ5JMB90KNY8qDlzuNgVb9gqtpo=","EMHooO6BEya4g8qOEPOtsSRCj/zFx9x56Dx5B7Kh6uk=","JN+TaBtDh5pLthtcYoD01eE2AoeUW5eOWbGD8CMzh6s=","IhQPNC/s744n40WEQ7qn38unrDXL1KGgmth8f2PXu1w=","CLr4WJSQDsCDIiWdUXWzcP1K0z1fWZ1gnJXi0Vwm+94=","JN6UiAgbhJFO/759VgBFmGdTY+NLQf4Om3gQeTAxLhc=","HyUpEJOFb2SicdvYYUkxuXwx+OyNpxIbC7gsqnH0U8c=","Eeq+TH7+OuxZKlzsaz9t0QlfnThOoM4EAmLqwPBTyRk=","C3fbBCDsHjK5ug6ZBKKJIfI23tSPP0mqLXYaYxwlA4s=","FonjWg/eex06bm0Uk4D/xrfZdygHpVOrfFBz6y4+3ho=","FiI2s0PCwvf0izbz56fsl8B8zPIuMlTczEs6MPM8abM=","JIyVHJUF0s8hNvayTCt0nHdRoBqxzYOTS+Evy7jQXIY=","CUhwQvAUlMKvBGuUEFtwsbjl7RrF8VhAgwmmanemq6s=","CpqXB2xdU0EcPo//a7U3ApCAtnEySBn7ivM9ltQyrOc=","DEPV/AAgKS/S7NBoQs+oNz65vvip2YQ0i0P6lhSzLiM=","FG0QrlOqr1lcuOjrKa3j5WyS2ptVo7wkvs8qL1+rA5M=","G6y6QtgMZrOwYstd2mpiMEkthoWGJEfGOMybTsN0M3w=","FuwWjbA3KpFE9RHF6GCwcROmcbMjlSqG6P1Acix/yHk=","ARPlRXqt3+Gjk9diWtBb7EDp1Ep+GF6jrytYrmlat3s=","GLqBSip/3RIG22ow97mPPEXKtZM2K+/csNKolqx4p/c=","EGhDu8NuQGSFbrZojY86kKQ/+n9zv+Ywchab9SAkgyg=","AM55D1SsLTSibKF83WQqMbHUAFwJdSxrxbQzBkzuYyI=","K05Hym+JfjN9bVLB/zOlJIfGibq1/TViDYPFZ7V6YAo=","JyGbg60kWbLfn3PfXNHS+L5mUS2VxPPYG6h2dAUZ2y0=","IswJaAZhJVPlBH624OyNAXWbnfI8lvU7b7yqijYWuo8=","Jz4KKlbkJD8hM72Q5UaSZHGEqIBf3SzrVBoiAlOniy8=","DUSa60HozJsvMoVvidvxQJ1WBfxVfEPHz1c1cdWu6hQ=","GwfPxg5hwWLcnxLeJTt/lSqSRr0sfERco1uFcuXXGaI=","Dk7rUSw8rIR1NYl67U+57TS//YfAEqEX8qPaqBDfseY=","JwIecg2gKGthwjt0jMfDWPtogtgQB4f7zmhfBuEQRsw=","LqwfotEhJiS8XgCQ4lrA4BYPLXOQx5Ci3ndAd1gw5UI=","DMBkWHaBf4FSzNkBCm8mKlFq8MookzCjQNtkdK5m0mE=","LM+S0jpqvu5ueSS/DUqecEC3FeZiF5oYL9Ebsm//WMQ=","G3ad3DERqdON8x9ICfMU10m4vp+mQtKqo2lh3N4L4jw=","LcCaVji2GUxtbLecVu8gWwvh58g/yu+Ysc0TZSlcfS0=","B+/KmtYmh1SgPvtnblk6jHWjq4StkEaFBlSlSIMS/U4=","G7c7TjRbB0FUjaKqaYeDqMh+kjqxsQCOctc3++f22fI=","BjUXO3VR/U/oMGq9dkoWm8zm83Gd1gbNC8HysRf8Nv4=","GJ3Tsg0/j1Pw9aKtl/MA+Z67hAkKQ493OPKhJuqKRQo=","Jl6N0fphlGGVLM0dOpbyqpSQbZ3wc2XCjdPpOiRPbuo=","FDoFj+OYeq8cob8sN2tJeTEO9Uwpo+ZowSTlr0N5AsI=","GG7I8cO6cK2DTBHOp5YnUNdse+hpHmeb0ZWmXf5pjsA=","KBjrAxmYxVTJVwhCGARY0UkxbxTin+FiYAUHseUJUq8=","CM+bF90sq8It5oBysPO73kvqxctYtXUhnHD5P+HsXeU=","CimKnwRKFZC/tKaDUCfJSBpAbHZe1chBh4pcFLHE9O0=","L0BQ5LOxUBfGwZ1Bd5DiL6bSkmnTO1TYAcSvmM9mLOk=","Hx5QNfcsujoCJqBEf80oxrshHaX96SKUWMj305dKBqk=","JXY/vJQhNdqF+vNU9Hs66fwnYGrXAb/n3j7nBNgWD50=","DrYUK9oqXya0n23tq9y3qX8gkx/BQlaqheajsFmcg4M=","H449ibXJcyWnBjxwMBQUSvGV7DfLiwnVRHhutnIejvQ=","GgJ1g+Laet/7NTQJVwDcb31v8qehmwbX1p1+tj2kFYw=","KCPTgiGQFx9ZJLT/5TgwUMswH7rNdFwuB0+JFSpTRww=","F/znogX0LxfIChRqo1KOdKPPxEShKJz1NUB/72z6Ho0=","IRt6EfHTbJwQqbPnjuUymuh+fv+8zlloJgtkyk3NBu0=","GGE2i7mOoyKQdfSsjOrFERIOw/zoTq5jKwMTikS0vV8=","ERtN+arYG0La1QTPB80pVsxISOft6M4QB1U494y391g=","Et9uCEfbjQGziWOWA8h42RoZ9EYRf5pK78qQOMydFH0=","LV5HQRTHxgIL16224VM3xOcvbvFTJBBudYXKP4wRbE8=","Im5lWAikBi+LtHwTHOElus/mjnhA9LpkdoQQQcKAiYE=","HwGp2YqtPZplpTc+1tK2cgMNwcqbRhSbv58ISn0k9OQ=","LzV4y6g6rIqD80qvXGUbBXEZnjpN457AV55e4zmT/gM=","GDkdQjxFQBlALPDsezbMEzJH65i5u0OcnBib6uv91aw=","Jvz2yoEe3yZ72ADgsA9rSeYOWhPKlEgQo2YyWV14gYE=","FA+bWFmE2TH+hWvfRRgF/KZK3+NNVbpPQUBIC9epes8=","Eeh44X8fhnrek+kU5YAkRkOFq/ZAP9SmIuQfsdwi49w=","H5l8beZk6c6wQsVb0iySMrhY5A/07+tAgsdvvWLd2OI=","J3MoS26xxH8U3nHyMpicqb1qcKrhhn7glSmfZBnO5So=","EGa4cwCvQ5yrg2YFIe6dA7BqF8mgC1t6jVa/xAH6W90=","LxMJZEZ5MH6Y1iB2aihhzuWJ5tVd2XDIxD3nrYTX0RA=","LxBDt/nktuw5qgdkAH5QMgYX2XqHvp37jwC0zCfFuus=","GzrFUL/cb89O+YObZrMiO6257Mdq45/pXJpHwqEQLKs=","BwvjDkN4Tc99meQzQQKmnEDHmB7u02DVuZaOfPGc/rE=","DlUpxf1k45IPYRUH+umfjId+klf8Nnv1TdBz8JGjxlE=","EdiPe1ZJpLDh94jInvGQ7ZF9vjnKZMxYzehjOqR5uV4=","L2y/8YqG2LQPiXOxzjC92s0vJIofR/H2bTIB/UbZPRc=","F2gjlieIy3SOEu1ZQmutjuiBOBAkmT1XA8LBB5wLeFY=","B3w6wRUM2kOUquTjlR+NCuvbb+noszbYme12N0WHWtc=","I1XHIltgJRaARasfnPfWdU6DNlVj5FohGqmX0bhejzM=","GG8La21gQKfhQL9yt0pxsjxt3B6EluL3M3V64ADpACc=","FHQIQFFrgNI092oC3DEn+aX/qxs/I0aqnJuRAFhDXtI=","IgNDO+BmgL8u8FCE9FyvttjpQVjGWYqxY087pm3Rbko=","IX0+mENVqh9t9lLxAbvcKBxpt8dRZKE/0pd2uAsqkxQ=","F3fwa6PrxH76Q5WfoIm76LrOZPmkQGk3YAwnPb4h5NE=","H9ilTfTm7UarXSmXufqwQOi0hw9XVDZIUMUIqeVz52c=","EdVLjJSe/LmYFjKNt67uCkEsfQdKmGoGA+qvWs/jKh0=","LMQeUtj5hu53xZsd4mkK5OR47/JdTxA7FcwFynq3RG0=","BHxf6/d0xiIVqn5sw0OYmPV2BB8ZqzyFALB9XBmnb6I=","Lphw7VjfpX0QCBkRY2i7+6gcaaSQOoUXnPekwqjzFEU=","H63TvTpcYVik/z8K6jdPljX1IRcwx5s50Dn5zhesiUU=","KlyBDWxDqy0p/xxapG5NmCwbZSe2oug+xVzQzE1F0cg=","Efr+mDQwE8L9O0Nk4eWSLbW+XA96/de4ZF0HtMkdQQ0=","HRqCqLJdUD60rmXWv1ETBJNCwMEOLzy42pU2yVsSEcs=","Ev8YruK6N/RI6J3LUHE1VjfV0VVFz5z45guq8suDJ5M=","EXN+ZUwzdK5fTrXHTyA9HaKqgSu2CwxcrLXwHAsPY+U=","GvP6+LLalEAQxeOzU1WrWT1Z+q5AQWWgfOku4RNW0rE=","BcoXmtDaNZ2SJS/zMk6ISvJbDt+b0XAOAS9FtoO8LfA=","HWpZiFGx7LudOsRw2V7L1YijsyMDpM2KdoDvXfK5X10=","AWFyDc6hSq1+BxCmcVGSG7nVxAusE2Z0+GLBxDiZ2VQ=","Izhc1J21dfc1UHWfZ530jL0e0daZMnABed9v1hhw5Jc=","EzkhcUnadNULJaQ8yAJ0IOJy/BNnJXAvgdqINdC59BA=","JlFlmtabN6R67Am+cUgbzjyrI9wEwxYRjUBwBVAbDAo=","Aoc3VeXXmWmFTMyqNs2EZqqi4FlOO6N7j1G7Omybh9A=","C/huykwEjVn/P/1hDIGn+Zh1zg/x4ZNBX7wrzENVQY4=","EnI3qgkKQU8mdrxbJndqQg19pu+RSonfsupDS220LFQ=","Cq8BJZP8AUyriHm+i2PiTqgpt4D+nNkbaIknBRAtrgk=","I0lRG88+FLWsvJc+QAY9IMGkL76eXe6Zlk39UIadAoY=","ChOHfoL9VL95RX5wOjxXgOqxlwqbN032mIEpwy4u+4E=","LxNETAJGYT5KjwbFS3c6VTtu+Ur2XTQ3wE4/aFbubn4=","FJ+fha+hIKql2zjhOU9TbMFTD/tjnikq+zE2+wURceQ=","Ca8ex41OqlUvFPpuftQYQqQRyL0rSclyHc1t6A4WSbk=","FZgwbGa2miI6FpJZOGIXucVDu2OyJsKDfINQcPpu5yQ=","BS0ArGA64m7f19iUWv7iAhp/jNNxmYL0Y752XSa+l8o=","LQtb/N2+mutChqyp0Q+aeDF2v4ud3lUAjiMrno9FtUE=","IudtYXvGknjDl2FF++yKEd7XDmu5sUc51Z13RfvoATM=","EOByXmLmYNxaZ14tpgyPHOdWwWKhC1PNoJi7FH2vwTg=","FS5YedtzLvAm0nSNaxfCEAWiMSXswBrOSyrUZ0S2kY8=","LAVkzSBDpQeQG1BU2y5u2ijJRTYBPOZupXZ65FPAnVE=","CmH9uHSCRfu/Am/jzWpCuHOBnIOQXEKl16AbPOMKYjM=","DYazieZj2v68XutyAU7k/9IFhB+75D3LVaBwG0LCHnA=","Kw6gbqKbXr9ZRv8F36VtodufkRh65niaUSgyhrckK1s=","LJ09ZVkantB2GN308QdwWWo/zyXd9HISbIyws/iXVnU=","BerqlmPNMZ17Y5D9N6W5FtCty96g72DeW+o9tj6XM3Q=","HOsIjcjkdu7iIg316JyZQ9KPmvNq2y260XQfGdBkEJw=","H4jHE/p/nq4rqA8qy+5WqsgaJFSt1msecL7h5TO96V8=","BfwQybOrpCN4YhChiajL8GOUSNI5CIkmq5Y0bMVD910=","CX+ZJ3o9j9LZVN5sLVjjP2UgilO8NtE4PC0XeXtJtSA=","KVUIoGlmGngiJ7oqdMIS1HKPuOhpXxtIJvh0CKxNCHo=","B2C9XTCCcB/Z59F9UwpFfUGnvlXOa2CK4jY8PEXbRXY=","D2xBP1EGf7Mk2gSyE/qJD7lTMy6GPfOwb7/j1d5zJnM=","GwqEKyP18AWaAvJledlSYJMbZDhb5CVVNwJwy0YutV4=","CJjl9NYrtZE/5f0uO3VECIfRFW9BWu4YzWf8nXKBNOI=","EPiFJlYFX2NSJ2QkpU7ImfxubYekKZ7QzLkAEcrLEZg=","FbEurbEAOuY4Kz0ziFSlACwVwD2bsChC4D+7ddp2nME=","AFjX8czd8m/fpu4K/TQJ7BA7kfSZJRgwCsKnu/glg/o=","JKz0MeZ6nX8b7UQXVrA6d3qZ+nKAsR3vEGHN6yh4u4s=","Go5y47dkaMQ0u6TxkekBcKZCzn670okIfRh8MF8TpM8=","FVqYHxYcjDx1b+IE/yolzg9TRpV9afrcaFXGEH4CqNQ=","HHR7lNuljDlwQUhRMYpv30yGpfZeTZHo1HcvVntJqIM=","JZ+RGfr8/zwKmNgo2qXRrCEojG68jhb06Khd/P9EL5U=","HFzRs0BADjejfeCbsgdT1JeTIuI/2snHr/n4IJ7qE10=","KJcuyBmsA+ZbCwDFLr6sA7XveCgf5UO7P052LnkExvY=","J34t2ikwFMXHZmKCbdPXbMfGYtKLKQW7se86P1CB3Ko=","B24Frun4x0nRqYs0AvSiyHvihAZZpRguFcqH8xgJyE4=","JrIpHDHc3MLrVfAEweq0lkkNAl8SJlvoNfeDqWE63xQ=","HsrFOu634spDaiANqvHpdb6KxoeoECviOn8pHZJEhB8=","EXZgA73/Xs81IBRQF3bQou7h96iJhAmyGr81pwkvRhA=","C+ytYOjqsQeTP5JJXsblBwsmFJ6ua7EAUZdVYiUjn5Q=","CM+8Xh9e//j7Fza/EYz98PvYHL6H6mGTHc8MxwscSIo=","FfYwdrIKGfVF6n+dOGxj765hne/ZDP2DR+Pn7tprLWo=","CpichsqX+UZyQNkjmlGuuox3cqS2izf5f0+6JpWLvho=","C2ZnAnxBUwz8HPfGtgv3T9FaEYb/wLd/CXbV4dRQGpU=","CofdIFgwvu3T+L+SI1zieOLIUp658aRFMM4bJibEnAE=","JKgz2PXbfPSeiJ/iPFGFEKiVgB9/KHU4U4ujsIKPgQE=","KgEWKV4gdMI+G9gXhCWG0RXPpxA92YJF5tNkyp1WQsU=","GCckAkvRtIenqIZgTkMS8l3xG7KWPqFSZJzttv/PQ9g=","LsT9Fx4JJ9yTMVQOH2Y54VQetODLdMZs3tlboF5xi4w=","K+wp914TrnACITu9gbqYSFAdYTiUWW6fo11zT/6a1Q0=","DKj+hj+yNsEK507AlKif+XS12cxJhUb3bAvxpRCo+YQ=","FX5q3DnphP9g6QT/2F1LBsD3yV2LIk6rsOEJDAgKMgQ=","EzfmuVABiulvRiFEJSEJB+dXiuqg9i/jr7mHfuMQF4I=","Jn8KwyWTBGHe9q/E9UttCeFj6EwApBQHk40tJj/WSbs=","HASQATZqNSHb/fzpLDJK0CHQNXZ5EVdPvUtOkACumk4=","Fn2ybR+T2RFBxIsafs94qz9xRIFZTz6x2rSkt4MpcG8=","FZ+iPiqoG3h9cPrPQWB5to3muNfA4jRCH8RQwvGRclY=","Ka2vIM9ZwIICCadJxho2uE6xaCh/esZAo330pWnD3vo=","A8OQaUunq0gAuTEhu1OjbWVNzqj/m9pkyVdw+lRdrVk=","CR+UKS9rUlJXK7QZ7EVdVDXqsUc+69ctiyCuP94BRsI=","KdZNA1a2zQfKvBjrXeKHKMJGZjxgEz3Zieia+X9dwhI=","MEiXqlA2s6gHdOQJmU9dHnGng29XeDnTuS2ThZCIhpc=","El4N2PJJSG8TO4vLkXnFUlkpysOrCbuu/ZenUby4foM=","L+9py54hqletwHSdMjEOu8OSHXX4tceZeKXoPWaIjm4=","Hjr0CL6M/ku+A4SacR/K2FtPJ5d3M1JPK9NbcWZDhoc=","BOZV32EUZIIg86KgVoBaY2MHuAl3npOXlT2/2LlHe1Q=","KkMinmZgk75hhOKStKh9YFzThgA3+irvB0htT4Vtyow=","FW+a7HNZ5UJ9X5ehZcq0R9JwidzknxQB6Ww34VlJDNE=","ISRYJB4pqD0NEcZP2w0sXnA29EHlOUpiX1LBEA+NrqU=","HdkJ9aMqZXqJ6vlIoR+O6odO7M9JYysxAxTXftcsYlc=","GdioH0hnxAzSkjRN+NLdZLB/6tQFQQdBSkW7UEu+YOA=","HyhaQ4/HymLtvb+l+a5if9Gmto1Lu9erhnw023PGKNI=","Bu3SyXy47123ETYHQ0WN3m1F3g+0HGRqcq/g4CAzqd0=","Lzdx+YTTNMcpiXPpss+qGtWYnPN5vEH3i5ZAc5Vbl48=","KrvEO5IkGISVzZ7IR58512O41WDfTp3qHNexYY/Oyb4=","JRePCDiRU6ojbh2jw7ul5AjVK6kTw3GBKKWW/EB1WlQ=","GygEXTbOlMpyrVU5xU1qmocuZv5iBqJRph31r9UOPpM=","EcFmRjPxL9k6NdhVP7jh6/Prq3NhRkLaSPdCSDwNgUg=","GTB8aYDGrbf+HUU5wQ1hVzEK9FzqpGGMDUpn9xpKjDE=","FPrkbQBzPl9+jr+zYIUzEfAh4qJScFRTysI9/Ncrcu8=","Dj0UVeR507mbyx+LZipDyIWpkRsjjgj8T6a9EJA2lJI=","Dz4oXoVd4HnC88VitQdNCVtXJosKsaoHxPdlAlQIfX8=","JK1YULT5I6vWh9vEr+dbomA599SzPMQ7tV9gC+X9Lr0=","CiIUPrGCF+GUVeAjvVcdHnV8zImFBQT1gOQzy0Cv3ac=","C5aMCyePMunuG0rf83q6PRXVlDp3rHeDNTOXtyxw1TM=","J2mQ5dwNsDC42IpYKKSzQxd9zVVPzoo2aS90/zj2TGg=","HxgKzqp2byS5JVIkJEigEyZYCpwtvirj/7tTDyO6Fxc=","Ld30oUdXso3gPP4hC+M4z+O2P4oC1/sBVaycbj4ra9A=","FIGEEQjoCZaweePpd1eEQ84OqImdVY3ZLFzyAnl5Xdw=","KjpqFzQByoPTOwmX6qKAW/eGnMfeukBPOV7hTgbao+I=","Edc3LbW3ljYylsa5kEDYg61m9UhitJZfXaDuAie7xFY=","Az51fpnj8cqCbJpkinPeN0oRwoOAJM9zbdMcW198CCU=","DhuuXnRt7VEOqhFFV0qEaMOn4mkaezJKm577NqnN1K0=","IYGLH7qwy6HvICRe2ZRRyh3MqJkiLBR7QxVTAWoJ3EE=","GiYExlees7HoA0JySezxdCqb1ypq2aw4RRkfjFNvfZE=","L0G11dNJ6VXhX1C6DMPT6FTpBl+NYkYTMszXRry1eGU=","A5T/8sAlAnY1z0p8t1iKbvWH7ZlDFOn4E7ermfjUwyo=","Cp0OvdjNw5K6RG1tzVyTgN/yl18nXjD2NtyWQbKiNio=","JVSYy+fJ6JWAVI8NkiVf6aF3VWnDgKvRjSIASAe2iHQ=","Kd+xo1/lx/JUkLbi4wPXEYhwUcCSqOZCwH3BMK05AbI=","JaWZWpjvD1QCslsgMWmER/+JqbYwCU1xqu34tfxMzf0=","A4/2Bf7t96dA6JCGL9WT+3EqoZtHIdDZewqF6nfytiE=","GqINcw9TsDWBPxUEqFPsh/ibtWsF+3s08h3rGq1MGME=","ESTysz4FxBWn2YgdlIueFfWJHIFqBJXo5i6JCJopZz8=","BR067yRO068YgNaGWLT6RSqj+Kt5600d4qG4J/teo1k=","GMORHT4l29kBpzdzJ8ViJSKin1b8stOVxMmsHgVAnTo=","CeCkdz7Vq/JuR0yAUOlXjFOYq/xC0q5mpyw5V2It4Vc=","LeQ2yKIX8yvl0UUb+/9+P2s61GotpY+EOZCNKFya/lU=","JprSjLH6wiOGHaZkrN8zDBcy51zp0agAcdj2I+ZodY8=","GNXJ8KjDwcYqMaEtlFrFYufyjpURRdcAdRtZ9cTgRt0=","HuwWnqeaFJtqTFs6zolPQhd53J6bs2bo7N7y6zxT/Tk=","CYLOUY09LjdJ2r5rV3WP7562Y6mW272RrsDthOqnXt4=","JyAH7p1+x++2yA8lohEPlNIKxDb3xQweK39r3MdpCfM=","EHLT1UDRsA38kj3K4QLyts42PlBUs9/ivs5Pls0V1kc=","KLuNcZTUEjdnc41rTXOgWpTI6Tx+CPgIw6S99WRCASA=","BLqhjbPbUB055CxJ8czjDdVhnh69FCZoV+OKdTxj3eY=","Ewx3Y3vfGjNtm0yDEE7R57gYCBQqC/GydxtTDu2Z8D8=","AsDOVtoSz/Ke/7w9ybBb0H161Cdk/yg1DHxIzkitSvk=","I+rHaV/qI6ovLsnh6ntiyvXnHtYQZgCb+Tpu8/dAVqQ=","HHm+QDgh9oD6+CiYByRKazwE0HFhNNCJrdRNu5facXI=","BaSKvCgfdx7DbcpiaPWR67reBbI/uB55YcjN/11cglU=","Airvwemk0GzHZOlJhjS9qXvxHu3VhQEAptvIWGGdJrw=","EA+0AOKq7KaMy91MsFKN07jaggfWvOLUG0rswfByBYE=","BPCx1fv3yUZ+gmw4VCS5H6/35fa1njdlHcS8pQAyfMU=","BuM6ELm6+gTyDz5ZbAwdmGg2t8FqVspIZp1aBRQnAWA=","CBvwVjNbHETEYcTW/B+eAyoYudL38kAHJNsGOFvfB3Q=","BsoDqXpWGKxnHU0sGFAeXoWIvXk7LDtU3BVNH0C/YnE=","EUvb2IeY2tWNy9uaH73BI+0bVkkKAVt8KUPrWq2e0d0=","Ib0o/UnLEVG+GvrBy+0LcFt2BYeEq5L8s6IlgpF4BIk=","JVFuNYBFKQ17zOG0Y2yjMJUULUsB8i732U4oz4Hp4p0=","Id7mArJeWmeInvJDrJyJG3PrxxfH2BYZlddL9OW+wH0=","IFmSEB73xcNJOuv1+463rNATGVJN21b7ddwVmgE+nIg=","BmfPabRtz65y9/5rXYHm0Rke8CkoCAPuwDL1/66xIBk=","K3qQJ/oFJD/7qkhtqsrvhQxNAzuEs2QduY/eATFeW+Y=","LHrtE6qQZOBsTdkplHn9L79W9z7f3koRfLjbVNx24TQ=","GfdtDB9bHvxhxkUYDFRBtWmpCtcRD1EnEEbGQveO5KY=","BHSdLMPTxWEtdYbvEhTeOPhI2LPZr6Jm4VPto5IOcsI=","KFjgQtvVEtnsFH/NXMD/IVcLtejaOyD39prL0oeFYQ0=","F6XPJQj3htc0l/uwHxoC3Yvt7Ymio8IXC6HzsusxyWQ=","CMezJjz9q+p4TSGi2Ii3sQ1slaKCoQFpyF8ioiu3jmY=","FgT4SQviTmrbw3210j+CvXBlRtTnjAjjnBWAt8BNRv4=","BNLk2xOtrUm7+TCtJDFnx3KXq+G9c7XRSFKe/XXr7gA=","JJNhiIvexY2sU/nAF1LF9u172X/Cez/UHgy5C5spN8Y=","AB/yV/i5D8PMP0g7liPKJlGeTgSubdOO8kJ1JYp/FJQ=","J+nJHjC2tePDCX6hn+U0FyeivY3Lr/ONBXMTFp4/vsE=","AiFUAV3/nfqU96gzn0/xGKj4F236ssiEaLLKx+ORTP0=","A6CEcpRKTITuf+dqxhuhKtG17Op9FNTe3IsveoeOKvo=","InBmuJNQqLE55b+LFGYMq6NpsIKLTKulhgD4DKzoSrc=","GIVB+hLad+IdBBA1GQ4K8ycoGTGI93Ip15oIzeNeEfo=","Jd1cHv0WI1LyWrd2mFsP/8Bd63CUu20oedkly6Moz78=","Ep8pLpz8fNsbKuLHwww7tJE0nO9PfWWBLWYJWunqKqY=","IGqAntp9OW0DTomBNxmljKrjgOufIh9EW2fNWnUU3UQ=","Ln9WahjFxCi1W0t9S9rsY/chtZxKMHp6dARY3NnQXZo=","HA3wsQDk5yip56o09rDbDaa4/JnD03fxVgqhVrfyYmo=","C4daNmcQwGkYcrJtmpikmOkprMLmd4aMTM/2Yzlc+3I=","IUFo6R07apTUhHaxtCTxYkC/yP/2dCSUzIlxA7p9JFk=","Abq0it5Ga/Y2gTY0Yk2vc7bF1mFDQFQolXlcSXFjUek=","DIQl4bJHDKQkOXz6ZmZfuGGjr07WbbkEX7tqf3YUedY=","CHDhOZT+MflLgstJI+ggoTw31xHVbcxxj0sVoD1ifXI=","FOu8/Ke+F6Xvw1aQSjGfSWm01BNvECb1dADNfbQk13g=","It1epppQNv0NT2MVOvOG/rI7y9AhEtC3V0pjFbTdX9E=","HnKgmeies3RD5C3h/33vFUlICFJgDPRVL7F0ZqvYnsU=","AY/mX/D4kBYDzq6kp0YvvOuA32JgKpwTImTFqkneDPs=","G2Sf5goXeSJSp37DZe+DL9NyJQXuQLCJmcco1cbbKmI=","GKQvJ2Mgcbh1Jtldy33iY2KqKKvqQmxzz2eUULypWeo=","Iqt+pwDbKyh7MB0BASTB0q9Y92Q0uLxHxZqohiCt2EA=","Jtrak13u+FUam91HSYVZLipunqNSLAevxL85V3IRAR4=","DG9Bf4il/giDny6LkAfiNg4dYY4bRqSXnLpZ0ptxlkQ=","JHiP87CMTQ+wtRubQ1j8DL0xyjG6BVFYVaM6KC4t4eA=","HbP8riSrWXIe/5rKXV1B7p14MaeaRa0+04WxMip7J4U=","H0X9V+gR1OV0UWV12GUBzmvpJG9Ykd3vYrfM+DW/3KE=","EazsCxPQWNxscjnrqQNKozcC2hfeddYwbygqGyvRaJI=","IazbBdVa4fSq2HPsWttrYHgXAGOnDNLmMZ6gzvgzzyk=","EQ2blNSXmbZZ4UJpnnZ9lWTORRebUiZI+oqDtF+NdtM=","GNsrWLQHQfLgB/cBGOOhobwhUOBPo05CHbUGjeGePyQ=","AUdoxpNBJtDr+97zQbV+0ikHbXA0juza2GR7HQ33GR4=","FwTS0uGHagdbFnpl9swm2IN/fi0/diiqJtP3aWliwjc=","LLgUdnD3Pi/3mtGRLINdPT8rI4H2DrN0RKbAwXO1N+c=","CQi54iCIW0F7WNsdoMqXTC1le1CuHDxeEUESqSWnFZ0=","Dw2FtFhhYet+E1P763qz4xtbYucgN57+P2VJB5rD5g4=","IQP69mPDVJyb0HPeIUWFwa7b1QI+SlrmGZb14isKSmU=","Enygxk02EGOmx9o3xsPCCAGBtt6l+2NGkVby+khuf/o=","DD6d0Jn5ymAO3gOa2nifKHle9/xlDoRUAvwV+Z1IwAs=","DqBbXU2IubX+NUBvF8obtKhV4KbufWCzHjaioh9BH84=","CWPEvgccMv0GpSEkwNh67+WVwdsrLmwsnO9TRWu6MLQ=","Cv+JwegUEEaPpR53dvI6B38nRGvZjMchifZBtkVuzOo=","FedTAn1jM3ozDCYAAAguoHVIpyTcr6JV5nt3RVdGJKI=","H3rLf/RqfGIzgRVcaCk3S7d1h6vR+fprh53zJAlUrXU=","DGKj3gu2gRB8TcbZ5iPQViy2eE8kA2k/3WRiIgOxaGQ=","Fs5YIBbPLhg425fcvs6HP0n4xgci11bFUa8607GpM7w=","Kc1eL9K2hOR8B4/Vb4UrHduwfrz5lb6ZHpwiWVOfoDI=","Euj/k81cPX4EVdnrDn6f+UBXXEHDXR5eRB5TDqiIqQg=","DzxACGchnUDmq/LvIqkJAYEeyVxhkGxzDL53d2HOEvg=","KmH5a8U8IyjdyF5FCWyVMsAS9HE7i4yLH+Eif4/XYMA=","HKlKtwblaaT8G9Nsm2NFfV1yNbNWvla9+u8k+ZN4tGc=","K9SiOH5uwSQVXeRwCXieG5Ra2jraxeNRBzmL1WlSQJA=","AEVBULo0VIqFGxkfsanzWHRk3hes/bDd63FaLmQ3MXQ=","HyKzm+3RFalQ99eExwMcoOw9GmpnN117bt5IDFyhRf8=","B5pmFWz7mcwXxtOfycIhm7iSR7bK+TZY1Zxv0KHRuwY=","F+5t8IIjcYNMIi+VTwOwFrjVrU2xvmbz+UbV0CjmUXY=","JM3hQWm0p1jDoSarP48YB3+9/uDwP6e8z5mZGd1BeAQ=","IK0I01WMnv4DyIla1NyIv4q17Uhn4azeZTPqL4bZ+n4=","HQ6H5gTQEJGJjW6F0qua+brgOrURo0zZpiDwiP348eA=","AxCjGZUvP24lAVq8zkn6gRC6ODwEhBPImaxNICw2uAQ=","FXCxHmRhT9SQRyecRUB46qnPuIOpQ0oGT3Y0IbJrJwk=","B6aFCrmXukWDekIsHARm5s2vdvrCGZ8T9jmGsqGc8tc=","AsJTRAQ2QsY0pMAR2YGqp+Xxec6epOkh6NUtDlcWnOI=","CfdOioXCk+6KLnH20jSVvNneVsLgA0FpA07uhVlvWno=","B5M2NjIgx1NZCrIeFkq6UYlmp0gMSyiQ9FJyNoqyqXw=","H/BGr6zRT7o0bOcu3yPlQNEIQq1+48czRnd5UYqacNk=","EdZMwXwJXknEXrHKK61IKoIDJgA9ScjPnpwC7LestLc=","LtIMC44z9X3tVYHPk3pAVfaAt9ctZcVUwBRWgIfVdy0=","JZy9JE6oyYQL7Nct8p6W/Ym2w5x75ysWvp8OQ7c+724=","Hn0vIZFylfw3WFQiXmOtUD4n6NbJIl2zXCujdc9Pj8Y=","JX4xp7at2Qxhe5MyW603En8HMt+sTQrZMzH6eZkhKlo=","Ha1U+tQnPpOXHe/33D/nSr7xz2wwKmRAP8doOWaXUBk=","KWoClnpVE+GCfinHcoW+ZGgqsULRPG0rfrWMCSDf0Ng=","MBL/YfYwoDUrdB5j1ijdvtR0rmmTrNwPnjFOjspZD50=","D8uPohZ+u2tPQiExqO2EEwazoIQPJY1o7bR36OHr+io=","ATV2fl0xEuB3dgfBxbkbEUi6ZB3OoH4cI1XCYChbocw=","CRlDCY/QyUqv6r9NvElLY4XjmWnAbApoVN4MfmiMTXc=","EwEGB9JOeheMQ9m9aCEhV3djIdlUONVyo7bvdxQeEbg=","FnmdaSMbmAJ4mt+dIkaEQnZ0YbSdWU6alQ3Y1cpJ59M=","HrB7cEAf6TuB35eh9FmZR6aoEuNEmL8qu+sdJWoo7cc=","AFzdmnl7zx3vI+jKEguQCnYms1fvhpZE8or+DAU/Pu8=","JLINiFzZpjGCaarql7JGnCtg9+o3HGqcIj7u2uy6SeQ=","KYawujo+IyEp48RE6UglhP2D1tan2b9DEgpMVu5dsDs=","GhiFN7eM6fZj1ktXVdpTz4jsruhSRCdn/BYCX/emZ4A=","CGGRNHSYQZFb9fkswgRev7EkUGubJSVb6BSjso++EY0=","ATXPbDzQxpRYH8Lkd9ZTinsjP4nSJjc2IngbApNA8MY=","BPmlJU3/dlygQD76oqzZCWt/WfvCADkThmC4ksgIBoo=","KbzdbGcvChhwcI036FEwIlxfyCbp5iFGMT++HuLHTR8=","DB13f47tkR1MwOUMP0MM6aHV1xdoAL7cNvkrfkpoX+A=","H/6Kn/vHbUbC6iq8Dh+zgx8YyBFEvOYCgR3jliPUpJM=","IWzT5m7oKx2mWFSfTfE+w/OM6TQWc8SYWf8Ogxgnp+E=","BrgGiDv2k4ixSK/XO0iA/2O8V+CJ7yVuSla+/nir27M=","GGj2UhTOhZlGoqhusJJaZQzE1HqVuYijvZilQG+q7Is=","IBsss/sAAlhL7/afqoooloznMgf3MTNqPVaGC8jTPT0=","DxyZj/1lfVr189FQD5ghRTdD+s4Dri/9BVvt9iS3Zpk=","HY1YT9OT0qjF+p+yhAASpOXP0fypf4O/bMpGiLOTH08=","HUxex5LQ+eEhwX/1dU7/mAokd/FC+7gVkBtsWX9fUQE=","BYKD2agsv9jwFnU3OqY9knnpu0Y8IlrniVqMUaeUvxU=","J5e+SMmcGaFB5XzuMreEX1U5I7CEdHlsvg6555sF+OE=","K1SJYRbMRd+qRyBNUVYHXR3smM/KdEevTpNFfsHZ7G8=","Gy+tLte67j+z0hl9ap7cow7OQpJfE0geD3gBchGfsT0=","BrVOP914XgmfeRyU+r/GLDz3WWPCGnWmDmXaiW6jfcg=","LzyJYzZaQFiovnqR5uRR3LHXkzqoSEpapzWWg8z6h+g=","L9mSnciVkw6wmGYe0NFS8oaL/qE+iZLQimklO56a/H0=","JdHr6OnsD8bRgrkG10dJjLn6VaKY+Pn2ybTMLrMmrck=","C25lNrowILviWfRascOLL102hluErIJBcg0ozfvDQSI=","I7i02yLo/5k+Etm4F1fR5+3Gw53U3kfvbKyhR+n61xM=","HCMr9hy3096Ldh/akwTCRCCwWf0B1Cx0aTGSrXdjTWk=","BtAYSiH0WT2vho2VYORke1KDiSUm9qf5xe4mY8Zm1Wc=","HZbsrcNPDvn1qcEGUdb/4/r6bWxxB9ipLt5AbCKd75M=","JdaVT2uOWExl1woNn8W1dbX+NOfKZtgnOSjtS4/RkwM=","ARVg0FgXtxFq68Cw482mUOaMD1KPYlk68TWH1oO/Pjc=","Cke8VWob32Oa7g6v5s9+e5AWebGxSkfb/6Gxmv34d6w=","KHr0k9L5Hv2eEvO8fHxODgTf6J+p5oJC/EGNrucze+o=","EUmAMk7vhfkMOHeug6SABau6sMPA999GsyRNhAGbpas=","Ly8HTJvCdtn6FyqB6VS2Fsr6yhEJDaTDMPN1nGjqwqU=","E9GaWXKK/dpFg6nhgMy5sJX1tXKehmhRmCcRkDrc/hM=","Jg8Dilv5R5CyLyeW531l1LUxQKsYxhevfaWbseutj0Y=","AnCUSFS3cRFb6drjuuYAeDjoExH/d+M0dVw3wvirzLE=","KfupCA4iAaTQnxeZGdj44psit6/xGjw6G6i/02iAcy4=","BzXVUZ5/nPr6npQ/9U+QS63TwHgSpxFVV502GAOw0wA=","Ej2IunjV1jOtT0547CgG1kKtjSSqm6jW6kOT04xaeU4=","Lyw2iabOfRw2qkKQbdi2lL51Kk1WQ8yGNVAamH5jjao=","Cp83yQFFayow6NVtZa+vfL6Qs6abRxEvapCe4ciWwLw=","BpbRpSzZZcYbgzPP758UfafL2u1xvl/MCk7tOs/70D0=","LfZCBtnLfnY9lMcuhdom5hR8oCI29nCju5fQcFzb8f8=","D5JO7sCQsSOuZ4pHqj1Muy+8M9LqEK/8y9Vb1YAhzHA=","E3aOnWuoVMVXEk5+zy57mmo7weJXUcXbULaBuD9eTms=","BSV/EhNTjRGK6EuJ4q3efkAD4EKDb9oyplqmPJanAqc=","Lt24VMTeBYFIJxV+nXYA4FPGhjRlN3dlkskanFHvrv0=","DFsobkanD4EmGheZwDbP86E43TGvhH7qN5v9zoz/3cw=","KM6xMRrj8hEsWe/y8d428Cf+dI45jmHi37X0FgUZW3Y=","ArqjxCjU854d1RFyhAzsr8k4aaXU0sRR7yYbkdgz6xg=","Ev3fy6TtxI/6Cvkn5dKdZ4ytQ7HliJ5JZRJCPFHHUZQ=","H/5KQldlrLtN2PZx8Rw6vtHkPMhynI1yWKeHNm5pNb0=","BRjhFnY513Jt6BTlc/jW5kTeJAGQ6yLaB6wqbdGkn8U=","EIgIjKOy7F7zQG2LGUmECSU0I6DLqlebeM/iK40v/dg=","AUETLmOb45D1T7RtrxvDOmmNoxtuISQawlupG0p6I0Q=","LTDkB1eWBQwPQARABZs7CBQaPAlpVcAHIPN+M0mxADc=","BsD40gUEENeXl046IrSNe0qg9MEtt8caMZrexDYZQbM=","AncUBZs8olMeOmXgJNO9RoaehUtoiEprFoaRCallMzo=","EUPpYAM7KDfjWRGyJZZvs1Wfhphop1h2hM1yEOys6dA=","JFYQIrM1I0Evt4US45YXIm7IdAIZOdPQ6bekAXlGMrU=","Ilo6I5BU7wYeZktW1l79Yt2+XP759VvUAqMni5TJvB8=","BL4WWlM9GbSaAVHnGDhopRIKLmQitQBEEFC0HEhjBbI=","FyWFcaqHxj1HfRDmTQaf3yMabkfUox3dpNbl8ZM/k98=","KppriTQ/xBbil9u6b2vD0oTbGAzd5mzpSwuupf9xa54=","FOBZWI+PivIil913u7ARL1flbDt9PqR0cTNNNOIYG2w=","CMCc9nv00P0MIRKY/kftIz5qtS68uhtST2ba0BNm70M=","GRbtS4pfl5FUqRmVZqizYcwQB1Ua2dtFUV+KbA4bJwU=","Eax6hg15P5eHDpUrMkZMtfUB4hXmaRql1LecHEz8zzM=","J3DFpbg+9AfLefyeVWoxC9aqPwgea0XZinaD9gwyJ7Y=","HUEtFc3990jzqX2tgph2YN05pOqTL8vFGggiM8FW1ps=","MD3vLq8Wd7XHuc+2eYKYBNZzTavNetOndLv7moM3vEU=","JB1tUL5J+3lvzNNiqvRbNQvP10Vz0UTHPnq0LjBHAR4=","EUcnqBzZEHM1L3+APPYhgg3nec18bCuauHy1s4JzfUQ=","DYGE7u6v87L8oaTNqznklR46VzJ93uUWN9xtJEZIQvk=","KWmY8WJwCazHkTrwVrw0KANF7GqcJ8c4BO4UL+CyuZ0=","FFsnPBHFdsdXiksCKB2bFRU3dYhLtueIQFxIecDtwtI=","CXPm9Rqc9Pvsp0FlVi16ZW249kLEEFooQbG5NImx5zo=","EugbAB4ekF+dzqUStR/2PVVIjVfNJf863UAlzzqfZ/k=","Jy54gKF59XcdvnCufX1RyiiRQSDqHcOrhClWXNany8w=","FVtNOnix1wX2zmJL9GXYIyX+9wFnzXeEr4cocrNIoCU=","CSA+YMMdr2AHqe8gyy407KnRydk+mQIeCjg1mL/nc5I=","Ea1ID6cts7wWlcm9Zy0uCaVOcqyejKn0X/ihxz8PdfI=","Bf5O4wDEiwzv0DuHBxVCZM1RPAyIO0Y5RN/tMEDFXc0=","GCoinRBCnbn/ClJYcp5wb+koLGt8pgRz6iNMoToxv+Y=","HvTStmih4c5ETSE/GtTSPebMu/bPWpPTFoflPpZ/ndQ=","HPLTvyQOAWkcxvu/I79I0h65uInGKUzBjR+3nJuaU+k=","AMEQFxqPBkKsDtsH+Drix52ZGjQ4Nm+YwywtEvL5Skk=","DYKmiwVwrIy0tw+/KmC/F5Yv8ohihO3+WquP/YQxS/w=","CjHFhZOWaeVpfGsWZ2ftrHTmNZ02ThJjE0kQknZIrTg=","E3xbBluNOnFhxju6zWDeyesuF8Y9xpal0Ve2SFVLHFg=","CQZYmRzOCa+b93vx/AUGNG5aA+MJaSHo1DZGn9dbtvo=","CbMJ9jiKf2U5O75Q69YRCFSpHGdOoFGJRRz2r9SP26M=","DNIX8w7uJZjKpzidLvoYKkdW+t7PZ7g5Fa6ksMNs67U=","K5pQ0pc/Tsz+JmFu7qj38qn8Hwno0oU4aRlEAhebqnw=","HURO+iceEFqDsxBdRpyh6u5qJ1NLmmLMIQsZlG8I4a4=","FuIeCBUl09vA80V3/RQ2g3yRLTkk7XVVdxiZLRTfz0w=","FXt8/XVWCgvq1neEPFJZHRdVTY74oBW+I+NK3DkEUdg=","G8RmasP0zR9d1yvP0dzP2MYP43IqNfZWggkVht0oUoQ=","IrEPXCGU2QVCIewqnMahv8H0RBhxgx1fJNPaaG1NXp4=","BR5UhGnRkpCiP62E2u3StUlVkfIsPca/Rn8erxKgn1A=","Fm5k+n0JOckSeqWLeq8r6mHfuzE4vN892cyYbpyk8MM=","Ln+NRxB8DzEDHeFfhA/8e0O49kgV3XwQNX6FKWPxTIQ=","FVmKayx6uRwbp2hYXxHWTUyaP2CazpA533U7TPkBaTE=","CDAIB51ZAM9zrJ8FAc6yfD6SJQ7MuI0Q0OAcWTIC6Mc=","Ao4wCWZU2hb9kK0sIAgPrbC7rRCaPtGJ1COOr9Lfw8Q=","FOuZNWWJTQVWGJrcUJtZRfEnX3B4vslpl8NjC3Q+k9w=","IDARww2yGF4/71M2BY/22aXQXFV8PeG2J7tKrWUdubs=","BjeQGsZHW4JvBz4ThkmJee+6mNS12vktKpq7Y7WuqnQ=","IDyz/fPMI0py7UyGmTJ6tsrA6LdHmyhMCMcJfRYp7Ac=","GhpAj4mchBRbE1ygp6Q/Nes8t3zVEkMMMlzkShHd7do=","CQDCbahVfgdguXHjWvWGbHzElKwvvyDYYhMESexB+bo=","MDpFUIl+23lcamO2DqM8xe74L9BEm2ohGat01V5JwkE=","FyLlqENIK1mwea7LmVxD1rgnXhQT7AilXyGLgA+zB1s=","IKiqGgwvtM0QqC1wLCwwEE8A3lrZkQOnJN61Lp2AHWE=","L5gNft2rAsBrb7IDmOenrPYTKvGmBdDK4BgilJUvUjY=","GBSJhwZJSR+EkSx13/3VXNDcALCHJOof5DFH4Zltj7I=","HdC5VK0uZazFykZhU5GueLbdJTlXap3kQXVVNW+XlL0=","GU95zqYk8rylHTaHBlIaYtxHOUcgmqXFAIODfBbuxqU=","KunCROSwvOQrG1UFOk/Jbuev/aIyZ5IKiOh/FiKf0TI=","GuamqMm+9HfRWiEXautCK+JOXQ8MvYycs39LkURRDjg=","JODmoAsXXiJAfeZoFb3dCWtC3XP7VR64EPhOAb4wTAo=","LxarVnEIn33gu9HhR45FufpihP9ERM78i0NGkYe4Pl4=","Gdysnc8Hi2poUj07zDQSmA5VGc5tuNErbas5B7vX4Ow=","ILC7HykBNq6IvbwVs8hkYksH7T3/V5BVwWgLChhfawY=","COiT2K+Xig+6KkL2v/fy/jp003Zerf9JqCBW0BTb40Y=","DqyZ16903hrR/6qbX0Pso11gg0lVNsCsvpjLry177Co=","Genm1WkjczkjoVzX+KQ1A1LqMI1hYEc9WTfpxLULfP4=","GOQXZNu10g+FgxqJ/cFAlO0DQyFvYCZh+lpU2+vAScc=","Jm38bp0xBAz90QiIQPwLZRcpdvWOBkDqb16tso6ryqs=","CfGsH12A0UPZzQhyc6lX8Tye4m9bds8w0/tzw5L5HPk=","FJU4TFk+xNokiheqRXvb6M+VAgFZ/0brlzprVYptRt0=","ChGmPlGR66FvbMtOkr1jickprRU8U6EwyTOkH0a2tMg=","IxoiouD2qyBGZEUSnZakD+7BsplQmUlYjA9Yp2bZs/Y=","ADo+sRENdblmjQ2KSNoHbn3NLtD83rnMNTjBF3MEe6U=","KLUr9t2NDFQTrnvaXx5rXT5FSKRQXQjjb3e3JinZd5A=","G6GIMUM8sVQF7nJLtCgbulQSmc+t1IXGsX90/OQ2z1c=","HSlZZwhChKISuEHqLr9/8p3c+ujb7r2d9Ytfhi5/2Ag=","DoY1Z9eI2sHdXzJEVkrtkox5I7q4liRSvHiFckqTRy4=","DCFKUFPqYJ5WCOmm1UNDoyzQLTJPYFPjOLNNwHAatcg=","Fv+w2bXz+9a98dUDg3I83XLzUw0+fe0piDuQAIPGCP4=","IOBYNVUOajYmBvUCUdisBwbi++V+RrSXflLhrfNIni4=","GJGo0bB4ZQUhsIxBYhbKoIbg6YNlqh1bpB1K4HaAet4=","Ab0TGeqBqPieLaP0b8dHnF7+oeQje9V1T1b3GbI8EH8=","HE78OywPJmnLpUlgCsAj94FaldJPlHZYn3NK17lPqO0=","JDjjv0/HJ6dD9MRAlUgkDm6FKTnwPoXjUsMco4bEMvw=","KKjSUKCiqirPSNeeBD4lLu4V8dHmqE1YvsPfrzfwuFU=","Kinn04HY2AgwQ5cO+4qlYYaDk4UKDzSgp+vNPX42vcw=","D55XntBN+F6oArSIWIdpw8DlN2xCqWjovQsC3CNHJJM=","AqgdwD9JrLpJcJ6eeAxWqqnd6yRf5gJteExHzdiaFb4=","IHEWruHntwIqkKyCFDXp9+y5T5+5Qve2/3xjQqAkF7w=","EbQx8yEIGGWMusgY9jZV3Gwx8AZAxIcDGnpmmbVKckI=","GXpQr53sIBRRiz4vwmATpE9wZGbUWW8GJD8lW6OBgyU=","Cm/QK82/ywIA3Yn5uGZpv+hifOZ0VLJATUlm8XJvR60=","BfrFz9Xi9WkHBPM7RA5vc5+0/0RFxb06aXidtlL65Fk=","J4Qs+KTr1wCc4tfsNI/3g4MKzIdHmtTkAe/V5zOdJfY=","InhoOu9mKgfUJ9Cjbua1LOlijpkUzFO8pbpKwkk2Y6s=","KUz+5mx7jeUF4MduIiVhkGbqXr45r5Lbp6t0uHgIU6U=","AMa2Co4robd09SwfWY0Uz82a69yNctTIfbnG6u7E3zc=","L1YR/ZuKnLBS07bvKy7DLUghiGLapOVNYyGfzLngrE4=","Jhu2asmIyjp+Lf8CeUT4/LPey52YWwW7yw/GBiCAyso=","C142vbV0LtoDodHjBERlp1H6Kb4oBO5ps4wvKUOGJNc=","FAh2DGUE412wLXbQtqF1VxnHV0GaSUuqWW5a4KSzEhk=","L4mOWUfxSwZV8EvONd/osIqkEwP2AnR3SDU5Wbldfbs=","LV+tKcv0xCDmGS/36v+Xhi3lUjrNaoGuYRl+heDyILs=","JCA3ZDZPHrzI9S2vZIr2sC3p5GKT7y9SuJViafWjBFg=","GoYnp/pVLBzQc6pT/XzDT7cSBRPip1b/czW2qyPUfjI=","Ge3P1r77P7Xf7HaLXErtKyfdkxHEvUntroSYOG3ls+Y=","Hszs43M8KoGgBpdbnkM+aTHacMZJ/vZH82imdoLhpag=","E6cosL+ysyLIr2ZahHiRPy8Wk7OQd+6onrgd5BJa4eY=","F3O1sJZV6b3ay1CvTzP151x+qo9L+kaAxL4RxxzCq64=","HZEQfs3V3jcgW/6CfngAyEZvZXK/YRp31NUCJCr1sjA=","EJ5YkisC0XLINj+IxbkiXMASL7mA4NIQuE10pauwGl8=","AKDRstFNhh+wTAfoX0Csikr0gcpgK9IkustEIpD/dLI=","A62UpeOPv7W77dLTYX5vvP9PWwv4kyngHoy5U4+Rwmo=","I1JpoIdScSRx4tiyBM7L9jP4obCHuNUNQ4a/3uR/0Mc=","Bj0ixG9hJaIIIG9pkaflU+zd60M093D2lxW5wx3v7kc=","JEhSvQ+IOCWUj7pYx5U4n4Kgxsq9kF9vZZbWC4py59c=","IMnD+tCKMNZNrKJNd8yT4H+pUxqUWLZOfDbiuNXeelU=","KPAsS1PF+7m4T5vn8tEVGj/qQIKVlhUux6lZHXt39Ts=","BjKC5FybL6XGrF/Mtk86lBIE2KfQ2/tuLyBjunnbyT8=","EyKVeAPoFP9lYoGolqG0VPg+51kdBK5FxViU79oNRnk=","JvkcYybF26LiMy5l4lrc+oDsRN7dsc6/YvXDuQ/OB+0=","GwBqiigvX6j6gmgXQFj8RXuz4icNv6vxp3qxD/GT4dc=","BEtHAaiX9oT5c+81+RPIcUsjoLxokjmNKZnVuJfdzzM=","KQ+m3A4J7E2ceFlIkTdIB/Qumu3ccQ2uY8npqCTxzzI=","KBtkYxRwuYVypndjflOBZu3s9qSEbsS2aFeqjOqdYS0=","G85HrdWH5gftaIaHwBedoXxUynP5tPYJH4Fu6hcnU28=","Fcju01RpSjASuCJiC8kfHWjHusDmaF8KFcSO9YlBoZY=","GG6oLwmB+Mo0fwqe7AVtq6F2pERly9hee463vQWA/4U=","MBR3fftjoRo9m3NOekek07asT+QG4ZXzujKgFYF/6Kw=","ILokNW7/euC5zv8VYqSkFYWqnKDUWRUgTkM/ByixWZc=","LmFhZDsbMdw4KUSGIt+mrHzXkyHuQyOZh33E7bJe2zI=","AktRLGMgcL/OPvqL0vNLwQDw3mR9D1UQJp/ywBx/Kbo=","Cpruwi79AXVxr/poQnciof3qaSiAhvnGk60qQudztZ0=","FckI42Srk8FhE2GthPBvoRxTwjEf/R9GlNY7K5gsV3I=","JWK1c5FwxfoeHP3ofXpWwnlaHfnA1uUA+ms3WeyoSYY=","BBNZZeb9AniNAPmuIYPxngk2KIgH9I30WtP/GnD2nj8=","H7Tu4zKLqdPHnxr3GjiVLEBfPecUWM9IhW2oPgapb4w=","GKXjU4TU5HlFmtQFwFUyVTwk/tkLg5PzowuMOLsqs8o=","D/9/c+QqUuu/MLbnP9TUXCETPkziKPU0/240ELWznxc=","FZo9qmZsMyoSxsVue1bmJtjuqfKjbqaqzpWDTObMUxQ=","FCSHUiH2jL1PDeRHK6dr3l5MeQp6/3grTrEhQZ1h9Wc=","GLMgkgLGdXVJKWsBCVxcw5DXrie1Ix3YQU5pmrsYYT8=","DrrsnKuSsYL2WraM+rTPfhqAo2cUvK4weY9hGHpqkwA=","EVVS/v8XW24yiVFsdcch4Vkizu6DQlk4eDQ00S368Uc=","ItAEh1mF7rM0F7T/vMxolYiwD1+5nHbPYFoKJCioIYU=","DzlqZZM8Za2bVArOFBa8R4eqS2yj9/I2ak7Nle8Szjs=","AO3X0o42Fz8MOyggfdwLVfoS5PVNol52GYccqNhDnUI=","DX2QCcPWeXCQ5uEFmTPiE2LSzwN+JR+/wrbhhhGHW6o=","LjaMFT+jWj2cpowhp8pYqQuiirJSoY785aLVmVHX5IA=","DNZ3SucuBxoL7tvq56RJ7FI2L3blsOCkQZ7tGHoxv+o=","E8JYU9loDS6NyMaE70iyAueiJ1kvdgEKINWT7WcgKe4=","F6cX0eP1hU+1m38J5vjVE+Mt24lGRn9wgL64yhD7oHY=","CGkRF+v05nGAAh+9bfYjykjAZ+nokOFzmpZyouuknsE=","GcrRLERTQTTD/roggqKdr+tVCSDxPzdsz7ZZ6DXOirE=","C3x10BD/mOx7WtHjoXoeCSw1PFRPjn9wf16BZRn9b8s=","IFUVYUXEQR21R775Lvv9S4obtf4uExk+DZwH855Ydcc=","Fkr660Fmcmlk/loHmhszJReYDEejOgTOIvVsM9A0Efg=","KTbFCYL72w9WzObU9XWjFmX6gT1yJSRkwndqcOy8LG4=","BN6fS51EJM3oYK1VNNqoOXsbg4Ndg/ADcvrE43bm6Qc=","DGVTAHVGgW6Gx9kFUqbsIW+aNJh75iK+F65O70VNWl4=","GnBB0FX5jb4thzM96KPQtPY0j06ylorsnLx9wzQlh+k=","FGfO8XbLcX7q2iuEIwM2pw6kXg9K9cVaRK6uI8pWOkg=","JQqtw66Ynz6C9Ksa8E6lrT2SqYFR0GBGtjVPmLBGEQ0=","BVOXKu5ZPr+qRckyvLFT5i+mOBZ7RlVfmop0o2H3iv0=","BOVlayZ/jOCxoxX5SThz7qNcEZPy/r2/7N3klLaUWDg=","GUAekArOIllB9sWBgk4zj/mNM/LwtD87dN+8CVHsqGs=","CHJTshFuj8tF+Oyhs879khEF6c77M+PMC/faAGODuAs=","E1vYBoL3cVcr9XTz9xTzQQWvsh6H1yxAovRuzYUYync=","EcI0l3IA22xoj8JUBTrTAWOQoCXQygl10TN7wHfbOM8=","FqW3W5cOSKXsPu3S37CNK2yVtzLa3/HhyB6Bo9ybJLg=","An7davs2Kp2i9gM1IH1yltA1nTOdQYYCqMJwadFn0jw=","DHpxjmPB+vhyr3YYfFw/j/yFXUCV9cVduqAFM1FbI4w=","GE13w9bXI22zLZo+SMlf1EiloMH9PlrRX6/4uvEDkBk=","IDGFnb4qNompl1tBGW/fLv8aWHqSRzYeeLewKXY9Y+Q=","MFaQwZ1226Xf+uzs4oIYCWoymAzeep9CBbGYn+qA3G0=","LeL7SUGX2cHxRRZB78JHO4UwDQXA0n5+0YFt4UyUqbo=","JX5+yziQPkTxpVi0n9ACLDvdkyWYRyyKEmAregIOTDU=","AyUHF2+qBJwNzHSo/8ezJ6wpdDZ58h/1UxcK/dLwS/w=","JnIClrSDcFklega9w7CdJpKBAs3lfiPpHRVAz+/E/pw=","GveOXpGJYwUKQV2ySrRc39gVOcr3T770uABHOmI1oOs=","L8e3Fk/0CWWT9FzGdHZdtV1TbNToZxEIX8BbsqfP/g0=","Gkqw9FFbSb06pK2wP/+0UU2a7CJPZ2gxW7sjZf6Z3M0=","HeIW4vraTCTX/Hj1h0lsJKjut6qD/LnMc3kZ2es9he0=","GqMw3E4lqNDJEL/IenrQUeSMguYlhhebGMLOlWyLM1o=","A9X7HKrZ+1BJGnOXTI3LKC6GimBUlN16H/my3xawzW8=","BF4TBCTY4NlDwRiPlSGm95kzT1fb5iywXuRpQ441tLo=","H6+24l9+kaTyADnCnpR/hjwJD6KdxWZNn4ppJhMn5LU=","KHpWAYzQj11ik+FlLbjL9AJJzcdZqE3Xys9Jec9N9Vk=","I7NQjDPpzTc4dNqC1sFcJQqsmdM95RbwNR18QhVFBXo=","GzdFsE7A+EO5/Yctbe6XyMz+lSo2F3FiMRmNi9g39E4=","LdOJ8Itv460Hm8nR2u17FpgBHXSpE1Arx8en4dc5/e4=","Cozdub4AxuF48+yDFIK419vX6Rtcjx2ifxOGBo5Y+xQ=","LompDMSt4+IVDK2GK2y8StQLj+Z3mo5h78SCf15DqlU=","JwOBUhfVf7YmM9pk5HdyKbu2Y/zKdijqNRAaWm75kck=","LR1XC+CCDo2Q9u7Iu6doIekO8gnXBWBNbkODLch2ApU=","AtkFO4hjumzUas/6CJHAcgvZt4+hZivA+EKh4F3mJAA=","F/Syb/MRsbTVTnT/pFrSg1ZbZ370Di5OGaY11jjY00Q=","LmgCDKgpYwha782SUHOmQnBQ4EkG55MMEz8YidEjAm4=","JXTDDaEMJ05ljeqC89WvtY2hqDTNJbf/pcWWZTALHrk=","FcNholWFImqGZVEB4PDzE2x7d3UhrCQJ5W5mbKRJdj0=","C1ThyL/ilKCDKDldxs06NTEIIhFhzXD73xGMOVTKuck=","GAURXx1bYBkexahzPMxbG1tKMtgccPI5gt8qJZlSiRY=","KTTXPb/aRmazMaDMLzj36D7YCTzynREe90p6jXByxeg=","AEiOw6ZWNTZpYTTYoKUahyz8Su3EWMROtqcjWvkmPJU=","ExnZtPs70BQm/8sm8la0+GNODxj5WX2sN6D1+aAMu0c=","CrXoLjReMEsaig9lf98/4D77AGsuU/yOd2UGeWwzWBw=","A/1o/3RyKwnKxNWLN34IGGcdn/UqIR5EmrFiw9DPh1s=","HnxVLlqPNgVgnDZnvB+BUwmfRuyO3/eL3c/35CNy0Ak=","BplS6csm2N3Y74RIT0//hJVgFInd+c+8hnMcoVvCtCs=","Bp3kMi85D7SzxBFllvmo9RsA8uzJ7VO4zocDel2Ms2w=","Ei5TU1HQN5C5oUEevNWViha69hsBwQb18VhGHbpCclg=","Iv8i8BH4wibs55fR42sSAUSTOPvVI/xGulL6SLMie2Q=","EWHTBJDxpQffGnW+hqXflNRIoiQRHzwxOsP9JzFlOIw=","KuL6L8OWLyL/a71DdrZHeyrOP6ljWGY31wCuk22Svgk=","Kp3Am78sQ/Lcdatvm/7TZXA6Q7nDWBAffrzKIIJlOyA=","L0AuYK7Zxf6FufrOEsKncEg6zoETL83J+7x+/0h0wws=","FPNS6dykbWXv6L7De4mlc/ZfCqjgx1O80Q0k/QRf0PU=","E8cMO/Qs40w2iTOQUAuC+xSGow05IbTssfpHwIXyD9k=","EYYZuxSlOiGh7O+RE7EOfGt6NtOzj35s5auql/6Wv1I=","I2pFsnIyDOpqdCgPKpVOOxVxdLiS1fOyrEtuXE2684w=","IP14qfZi074HwHuZ5NTLgEl0s/rhreY42IAOg0kLMaE=","BJkq+LkDA0+sykACWGRmE2pnUiIJOsNIp3hMi/vN2aA=","I1Sy7Ix+jm0ak/cwc0LHtm3WzJMT5ds9BsOA/rJJGTw=","GsjJVYiF36fX30kOEbEChU3z3lsUxfv/8veqPzH9Lig=","BjZ1l6t6LlM9maREdyY4jDWYG5l2MuVVr9tJF0bYPSs=","FDY2PIbOShdqiCuybEt19a2NpGmTWn+zvoGCfQte1JQ=","JR5h0Aq07yMsM9VacziO7d1l4xM7xPs+3HCXl+lSmxg=","JzZWhwx7i4nTimOpSFZjrf88Rqx9Q+YWBuJvUZHM4Lk=","LsK1TJqkQOD6AXvCkTXrEkrqCXCGS48deU37Fvi4yxY=","E0xlT1o47MsQcKWniDG8AFumrH16O3blVVgOsSM/lJ0=","KbyONLGhD5eZdQJECXmxGMXPKvKr2XJB20BpR1BQgPI=","DPMRKDLEXEjB3LXthmpRNltbt5ScDP2arfZ9El1POrI=","B43OUh07uqrlx5x2j/3M2LBOER2LRsHy/6bS5gLvMf4=","FiQY66Kxkwoamluf4K3mY0SBiOJbKKyBQQ/wjCLHD1c=","C9O0mIytKQEsnf3cnS11gSY07goHRWQ18aD3PALqCMw=","EeM7WYjWsuVnLVjFkh97HNcpBjVnW50+DNB+gayy9Ys=","Byv4GhMIz1F1nychfJaHRrMjJLydQpJwwQ4Wcabzp1k=","BVhToz0RUODhBhYP4df8ZboY+uXL5Z6PtryMx71mMhY=","IIP8GtNQ2C8dQ93Vx/pHUmjCkn4PAua+ceUJD4ITcWk=","Jsp5qFWVjkXhqJu0VG+Di2fZjcTIySvsJqDv1nTKYhE=","CcZpqg6DFXK+WlQuhJgJDvaTkAu015pYiq3VzcvmJpY=","AmHLkKt5amI1qS2preu8OdyrzQGHSvXWPZDWYDe6O1c=","B8FNKIzvyGI5mhFW5/py3vz7wEZuB2irzh41NmRQQEo=","LdzW2s3Lv67zfLLUxQYPDvNvERCAf9gcQwic1Fom2h0=","Fi08P86PMCBMUieCwMrmb5EeQyyLRHYWazW19TDT6Mg=","CQ+6/h+GX0P+OiFgm32EWf40jWCkxHHcYqCvxVXMJkg=","Hb6OUMKThGMFxRuqNHPinazlfm4a9I+7I9gVVuq1czs=","Gf/vm9WMpUesAvS5U8uUHe82/YNMH17FpZQYstIt+RE=","DimwR5UbaAXBm3ohrH0kEpyo+OKzhXMbIZTBkF8h5AE=","GY07qso3nbYQVnUFKlWjHB/USodzqdfHibzgbgdxnTI=","Dujeryh3ika/gYEEJ2u92btIkmzmmb0YXGSai0p+wWw=","AwPZgxjBhshXnRgDmE/eMoR0SrFh8UvEV7oEXzwTKa8=","Jl1/qIwK88Ld+sDbPUZMMd8JXNqW3DkUc/gzrPT2SAc=","DtrI2Bg/sOoxrzs4Pvn5IaPCk+i9v5VZj5UKICpnfLk=","KfqJ0WGQ0WNHBMwJbwMNyMx8XJ+G0T2Vl2tvF4/9IVQ=","I0w+MfQS/B+3yaW3Dr4x8ztZh8c1VfwOTufnUoDYQmQ=","LgU9wYZ4bkRx0KxvXhmzP2ONyPZDkHfizzaNFNT7rmE=","HWFqxQWH/wxzCxoJmo2qbgXDLbtdw2ZJ2ewMH+7ytTM=","A3dx6s3IUxJcsLyRdhDAw9OwZVYGALSu+IO9FzrcR6A=","AxxGIWYWrjJBhR6C3s0EX0ColgfFeMYkgJizDFRuHnY=","AEgtHSmH17/G0lavMHK0FpYDilV8mGeorSZwJ+w6W+4=","IRXXzRz5qE9D+2QmrruJdleP8+Vkb4nyQKSKzRbw/hs=","JtqEdPW/25yI4NcvMiJ68sX0tjQMj/yWsEI7EXLH950=","BjbbWv3TNeMZWKcOaU4XJF33/I0UjRy+Gf+IDn3Ar28=","BwlrOVcB+ss0kqwkVkxGgCblh96rSe9jxSj0GPfkcfw=","FIvG3582S5KNaBgKpqJmeimt/5Zs7z40DDaAgDMzvDE=","JNz+y+IDq8ZzE8gyTGM5oiqaH3L+lEWRyP4AP/KhliA=","INuTuQJGCrYRJW8o3+0+cAOz0/ujbXvvmT84Hz8iMNg=","BE45IBqpkMTjLJRAnBsUEPz+UR8vWryUIWsNnuqkeh0=","Kq+QwwzmDhkIWlQVP0Z1khuOZecSu0sKBA1MEepmU70=","I/oJCNfYnzZz6hQO1mT30e7Kdl+yNsqKeO8rrTBKnPY=","HxnBQQib5/1z/QvLw+Zy+STp2X/i7aQp/iX18fjB1Hc=","L6W4hKqXRrB+hyCdECNYJHhgOplPH/7DwdZi/gljLf4=","JyvUNX1E4uLBUvaU77vCOBJfD1NPx6jOeAOn53pDtv8=","EnD6WAjAyhQzQjuQBgw0reAfOpyBt21NKzz3FYM4Y50=","G0f50/LrD81weh0px/D8QEgftr0uGSVxNYrQbkKZUhg=","FmG8PtQERcm49aa3TKUsgeMHIRemud3q5WL29Rv5uLY=","ADjI9bunPffZqtTwZ3WmVqjreAwLh4P8pEBjHYfUhuA=","A3l8lFVMcUIb4OohCL1dwtYXL5wLUegYzfDJmOdli18=","JvgBy+rSwmvC7mbJxWHWZI+dz7oC1XMxaZgHDUNJIKE=","G9nrB4Gu25bJeZ9wmgyrqA2wz8FVxDfSfe2GQd4Y5ho=","FIXIP3SBhsG44jfq7ubyPgk8JQmDhDbAhMbvC4gwP+s=","GV7WTdCoE0aUhY+W+hSvtAIY2sQKMwR2IyW47+A6lIU=","LuMQYcpxYM/P9BSvZ9q8WtFWqd4mMla3kScKas+fCWk=","FdDw+4JIYL2uXwGJuwnOSzvAAqf4bpO/hWeNXJvVF7I=","C/sv3BnbLZ1+r48lSaya646dzYPJHmegR9D6f9NvOFw=","F5zWJItcCvJ3s5LGI7dE+GWosf6FHfJ8X8Kkegqh+g8=","GfFGn5yBcHZm9tuQDo2QEjtxXnSsAiStw1fM3qhzf6I=","ITOaIgOvzF8ssf1W0u6ReWN85Fq9Lf3Jp8VhzX+vtos=","DmVybaa+iNX5FhVNICrT2+P/9dZevcKcfJfqgtmYfkc=","AlZOiw+/ZfFDap5xal7H4Hnu0tbbcbfZSi8kNOAGhoI=","KiNmR9zk5FxggJz20WA7qkNilT74Urj3he5elZAR6kk=","AXSszp5zqa1eyq7f3Od21NHGt3YfsVmcz5cDKlnF8/E=","EM8qgIA7aALPKmOjfhJ7VWtw1lu7YWV/aCHKRaBvJA8=","FhZ/nRs6sJT2fQy79AoxX+ObReRUB2jz+jXdbVW69/w=","E3sbB8tg/weyGqFRck+bxqUOShemjyrqUS/B6TloyJc=","ANWQ63qvjjDc7RjKMX/70EipsPyA03xUqL23ck2N1kU=","LQpjaQI3rTRpq9Ry5FDBH+Ue4UQNO7MJsilcuVTv09w=","ItVeBLoNhV9CA50YodwU3RYwWuUWxonVFBqc5XILj34=","AcxxFp8yK5WViXuGRDggi2anGQK3P5UYgmFY1xRd2lg=","IflJoWrLNRlNnlP9/FrAHzSRd1FwJUwstLkXcvRmNts=","FM9TUcFMCHpZz1+lMDxXUsM9RGtc/zF+RXDffWhaqvI=","EPE78XJ61+kGn9ZwFQb5WP31n9LQiw/FBIyUhrQ+tkw=","BjIIXncfdN+Pz169B/lTc/gyy0HsmAiX2oqGDAXpsMQ=","Fv1nOqS0mYI/sXPZ7+zm5rYErgO9WoxnfXrr+9c79ZI=","EQ2pFaypyHosRhSx721vA9gifWw+LWO9oCjeGlgKQ4o=","Hm8SXz+BpFRZNeUg9eva9vmaDAO0hfWC/iOlOsZsG40=","EsBpqDtVtmWqkJUvv6g0fsFXwRU59JZA1L0jWNpYmzc=","K3hOL1LDuVIt1IuvbD/iguJoLsxQ+xZ1X/iiZe9riC4=","FJSGG66tAFiAHUfvVoQnI8a5bQTTguR8RUc+7eur5IQ=","CdxxdR2qWhRQG7LDy4silT86PDyIy7d7GTEYF0HccJU=","IdPhLF3mUl1dq1oVAAiI6M429AvjtJ8Dskz/pwxzkxE=","Gw5wkp9XcvcurlbIonLTGVaJ7EaI2WVwtG4Z+7Zocsg=","FA/ko5Rr3q/1LAzT7/Yo3EDjCvj6hTTGem0HyVjzPfE=","DHNJ3W15HUhxQztQH8PFkzUv1plduk+mh/UB7ImG8N0=","BLCjXPYmxA+CofB7kWB2wNNZi0QU9zyfbJdEICREGj4=","HbAraJZO6c1SopNsx4PMEviNmLYOhYyzY2ZRn6ASs4g=","EOLpVpk+I/k8Bzx8pNsL/Hro5Vj2dribHuZghiA8BZY=","H0XeNl8dk8+EAoCJDjae9uTFqYuaf4M57P32BNXm+C4=","HLuFvaiV3BciMvfVmEXG/BcQFrgskdkfQzJh/tTqnH8=","A9Pzu4bvFhKV+RNL/lhEHdcrZGG1++LVeHkC4+WrHec=","D/8CgU1Hs0UW3YTtF6IAxErXL0CA+AV9p3Bg0RRx6e4=","LpQW0xYeT3sCO6Ycj2Y1YXhV4wjWIztOhelB96Xmyfg=","BccO4+64DbhFAcFUTCQWH/1VE7ylzytcdAAR43k9jOc=","BmbXM9JJ295P7RBbLqLW1LmRmD4rT1itVJEJI9CWXcM=","J/lFuyLcGAqZpZZEnoOzLb0Q54v0NnUx7BHk2pNvOfY=","EuJ68Ut+zpuLz3vBySQdDYX5+kfIMVODbhmeuolhVE8=","Co1sn9gMeZvuB2F3ofnXvrpEarE7fHmVbwfZlGd5Rvw=","CKDTZGxHYmkHcGLcPER1U9YaRkjzBtIOVvrjLRCYhvA=","Bz+q1XVEmsNc38UUcXJRvxaOzs8DKXUtt0A8VGPs2E8=","Iu4i9DYHjeBI1ZP0r7q/VvSj/U4H6KZkX8aFQfDl/fA=","AbUCNa07Gm9qx13jqfdfTzmGbmASQ5ycAXmrAyxCZqU=","Ls9PPIT3XqexDsEaayWWFmzptaKKUm+AzQLWZSJqP+s=","J+x/PsViTNMxmrhfffE4AoOlmzbr8YrDi+11GrGgS8c=","DldiUOFWDHfKtnKvFOv4VkAkaNLpsKwD888pcJ4T2TE=","IlHydv3nfJmNQrXa0FqiX+mKkIIAtEC8t7q+y7d+f/E=","Ao3M93xGfHgYGS1Hh+OEi7BXxJvgmfYCkaLx5I3hg0w=","Gy2+kjb1on7VyeO3DgmUMtMk84DzkVjhGQaflZIRM70=","CGmSC49QJsxDz/GL45D3TDVYbNK2lDsp73sXvu0neDI=","FvT8sYM2Gb7mZyBqLJHL2RBVsQeDBZsL5S4bZW1nYAw=","KlDNbmlC/KdKzRNARcKIOIOHI/32UdoCvzs9d0E5CCQ=","La5M6CmnAYLb3EGo7aiWURELLJnGBWWuM23yvSr7220=","Lb/ZRH1CFPmqy59dKSTVRdBzECMMFGmvoDsoO4x+2To=","EOe62VLIpjKt4dB3SQv4CxJcGgWuTveRLmnxUtZAbeI=","KNSrMJf+jQN39KJngmEWa1uyTFHwTXaAguzus8ax+0M=","B3KxwUy5WqazneHUwk7LfwjSY0OxSthYIbopv1mDsmM=","GFb6NW/pSEf1dgL1/UHanUykBPhY4p5yN1aKjx9SygU=","JFe4Ip29tJwgfloSCLECsPhsnyp2tKSiPA1CMwS/6dQ=","BF+/5rLIdZqCNOFvD0w39TMSWW+pCyt70n8LVdxa73c=","F/Til1gjlZbnBHiqqLY/8SanQFWsW4DHdcD5JNgPLGM=","FGzal9Qf6ji8Y8lVFEplIj1PVlLFG+4WDa27xoElJxc=","FczLKR47dWc7qo0sSEbuVtoz3bSXZhdgxL8Z1SUD7C4=","DbVgxek+zRMbeyakt3fCgjTJ0VWIzF5fIASID17XbZg=","J3CR9NaMTbwbi5NXDMJJlz6JL0jbPDVqllgWojsoaEE=","IwwIeLjmcGcvI1mLdxfO8bcipEjZ0U4EuB73IucrtQU=","HXquPNjdP5HifKtvFbopdP2/cngoJfmUBaUME6AERGo=","LIfkuBFzzo/ZnJvfLwxL054yRdhMvYnXnY6fp96WNYk=","KzE3s6dk1fNgQjLMF90uirltRqffnmhBm058GOv9Wo4=","HZLRAvT0MNDhiUi5cBtUTlQT0LW7HgVu4mchZb9SRZ0=","C/90ygTmVouP62oDSUMRM510kKddBzNoJCeE6nHwUg8=","EE+zqn/ID3zTVqlkAbQVqrkcQHdCb7CI8qqXKCL5eG8=","IdXFMn+cCsZut9qHunpjok5H2OA+tJgXq58QcNhk9gM=","Lym+soEg2b3E4UeUbPfMJgu7vl6mQh19O62Zr587FuQ=","FmHZ06uY5yBLI1XgV2jWz0Nn8w8URtjLV1dscdj4PLM=","K0BvK58TWF4OXkTbUhCt1pfL0/C1IySaIe1jSUCXvPM=","CdUHtQByZQsP/Fw2pjo1loBjdHvXCmVcnw4HtYrkqIE=","F+ONt2fP99+vyBPptnc+ddnxJX6L/sHqnoMp6AqHp9E=","IbXBEpK6wmYnmOYJjQrQ8p+ObYJq317hM8IVBM4Kssg=","A15HOGEgr2ZsMtfE/IcFKzDvGM/CsGGTfpNbCQMTT9w=","BPmB06mEyi2F+VgdenT4WbYcPgE21sRQ0XdoyhmHypY=","DCojRX9ZCxJq9qTFTRragQEh9MtJddiVbYRM/+Clulw=","G1yhTNl229EOdrEre/vCilSsiv22aWOd1MX2n5HoqdM=","GD9o0andcGEJqJNvqtgTqJzz2Ec8zcd7POKTM7eqeqk=","BqX5XZi1Vz31KnzyCw4zNmgNtet4MxlOgqkuvMarA+g=","IUA7JV0SVsDHNs7sUvIkxrdj+LbXIwspW0oU6Qge9rg=","Lw1uWZKwIebEgG4HhJTZhTNaRL0EPCfsj7liEMczpsI=","J2YTf+3WAT2G2ck9PY4F+fdDSqLbgNRENx/+yo1UYbE=","BykqHcivyUhS3eS7UT6pOAlu/hzMC2D1O68DHmTOeus=","D2T0oCjjQZ5FE4DE/b3OWwP/QDWSB/W7EZwpU0M9UtM=","HCs8YHLzRMeuy9s4jaoYRj6rXLWUPSxXr++rUYJLN+o=","Es3KV7lMiqbCFHA9XEVt/IgVlAHn9m0UgbAPNt2Dhto=","I/UFzpM/oKdIZmT7AOXKVLaFII37SZndNG5PJqaXuAc=","GoS7gt7WJVxu3jdYXk4o/nh9IIRN8wlP0DyCxvLMC5c=","EKZlW++sVESM0uDn5SpWwXjT/mcLEcWLFhCft1n079I=","GiZVbVFRlawo+IN2jz6meQTsI/dCzlRPui+FQxO74U8=","I6ju8IeRbx7T3wf3pg2c4sKhltTpxCMdDpvBbNDjiF8=","EJ5Zy7pwDiLuL6C4UQXlKDPHxwvG0ekYgTqiQhoYjj8=","FjlSjasd0fDplFtjt5JG0+hywLG/Y3o7aA2YaJ2Zd1k=","IxPo0zHPLjQuEy0qdezg5xKvrYsLsyGF2RsCSTyHZ5Y=","A+lqA3Yq2Cc/sFgYqyjPrWJqssOwFGX4yXO0J18lhfY=","DjGGN7fxU2bERSbTrjwNM72hLClKSHaYjCjQmn92CLc=","EqHx3DV96i2kzWpjJc0lQiiXNhF9lHs78C0yBFCFNU8=","EXN0tYb0aSsWgvjQJunsczKkP3sJKbvVFUPiGzMD3mg=","K6/Xv8IE2eVbilO1ZB5HbuX8URPWMXNre/qjSeYY3CQ=","CNB1yEukjPNZeboBLDeavViCfxu1YhVbGbyloJ7QviQ=","KweFRDotXe7mbu6is/irMX3TeiNY0YXb663VozZnYkM=","CvIoZQqljikbGbURIlwfDcEcXJgtm5rlej4OrVJmes8=","C05+NFTyuSF2mGMv0x2VpQEmOURTyJtpRSUPjTbs4KM=","Dl8nbBQ/7pEBOOFxFb7PRYdYzpu4EtmGx6ibKXWBrHk=","JBNB+EqOMWKVkuPCpaM/Wo+FP2EN84hCuAln9U6z0wo=","IGBjANiwZD9sDLS0r9ttNQPv7bI9aTscNwXL5Gwn/GI=","C6yZ21YxDn3ylnYIZlAr72/s1MkMF+5dwTpwTRcVliI=","IXGzw0ii3xU/JnaOIGEUsMSWjDyZ6PuefV0GlgY5j4M=","Bf6ZRc6nHrgCIm/myjg1frc+hqdvqy9m2Il2yCJBn8A=","BDq8LzWXFqQdbFZhlQ+jGtEc7Q7/Gt4C1DryPd6QO+0=","Kh1Nm9Fk1LPbzMd1kbaQ/H+nsH4J+lsnCYhwYuRKk8M=","LxS0qe/0GSlqZFcWtAIstvw6jzyXzwd/pgFAzcQ71KU=","CGUWgkjHsYqps4x2d00YCUna6i1kf84Pg53110nYVIs=","JhI6DqOTRQ9v6mf3wRrNY4SO/QLQc4DjZMzK6aZUjU4=","IsY3/ykHq6Fcz9P3e+Eu1o/DL4vpZpjtdnPogbcS1Do=","EX/e8HxZ75yadwdWAnEEcw7p5rQ5h0U5OAShdiaLiiI=","BwFTyWsUjMQA+VU5ZTZvYyrJI/ot3fadO2u+UDzpYpY=","HoTHmB7nqP0/fyBQw2TpIfsxCgdaOugXwAp3+HO8kBE=","BmH/DN5uWBZg9fw6GBsANTvQusqAFtb3X8omlQirjUE=","Fb7aXR65S+5pbvhtAoPd/mk4f78MDtdfhR61XJyXICo=","FEIHh4PEJhb1TZMn9dQ9ZZcT4sOWDtpFLcuJ7D5QM1k=","AmBnBTbOfmTNMcl7I9W5bElPk/s7HAqdGrfeTd2uh5Y=","IDiQI18gn9TItm4wiocC6WTFLC8CGOur4dsRTmpxCBc=","AN5FfT/JphiNXpNmedqGBqEUzlRRP9Ed6oSX1V3QhE0=","CCXyxC3yymkn72eVNr3Q2BOvMHClkWslnqzn8hQ47kw=","L9Wxb4nf6+swhBYyuYkPalaByqZiLVzE/p0+yMelQwY=","EC/cQWe/tKKuTtc4hk5bXB87+7RvXAypJqeRv76ZHJM=","D9uu4KmqSWSb6YdJXPc5L0hXoEqtKf8lZJ4BI6UTzYw=","CVn4RwmqCzhbfYklktG24Xe9ioOY/8a/B6ObfAxIowo=","KYZoIGRG6S5H1BFE4vTF0A7vwD2iCgoqMD5XUMzG77k=","GnmAgdiKueC9rAMnArRIYIc4PV/3XA1o0fi5uY6UUvQ=","I+lHEVlOfkxnHfkPJg7PY3cKdjUs319HHdwx6OAGSiQ=","Le3mmkQGSf4XMiuLzPTBzoS34FG7gumbgUB+vtuscCg=","A0ditE5Hu6/Vrj1/gXPSqgwdoXKRNwvC+EZZtMgPSDs=","HqRCsFRbpiQ9kuqXWaI9cyhd2Zhz6MNlfmoAajznzCU=","L1MDhDLuFMdSIoE/M4DwLqSW13y5vc2tPTyF7PnpOn8=","Gdff8piCWTf7fEwX0j1TEZrpbtPjl7HfcYD9MERhtQs=","HnH/5uUWtXtIIvU38DZCsjIB5C5bDMIjlzMGetiQI8I=","HcRtQ8KnFdVl356UhfPf6Si9U/h5XIsDoYYnc6fPZ88=","L1Rp25XLjNdSpoPk0ocICcGr6y+EFg/yFkgVH3s/AYg=","JzncwuSPttsAKi8Nck9SzRcAN0gW5ZIQRXXtQi+ixsg=","L8VlWtrPv4ED/FjIy14Q3TDpM+z7oiY7CHph84aKSk8=","EP+ERJb9WpKWVjD1pdUfZ+W242pksrUcKL9MfKtAOr0=","CbMq2MHhDDHpJk7s7v1hnoEp2cMFMD6O1NwM21IqbvM=","KdsVDTZ6UyPDUkdLtV8jVyCUPf1s+WjDS3P6yfvXeCI=","IF5EtUC9NXqoMR82x5Lp3VAKOkneTjZ+uIW79ohitWs=","HWtn23+LcgCoL/uyvSaxjb2WpTvYPFtCZO25BdhD/u0=","JTZ3VBOJNwvUIz+AZ6eKadbp5Zb1nigml4N8wUFdmJ8=","GQhCkj64DysiDPFeP4JF5KN4bvJYT+YLw+Rco06kOAI=","DyXe1jHwFvkUSP56otDRPdQPmXIsUICF4xSHdIkedWM=","EWNzgJixx4e27NoGkvJ3202veHLv/oqexSMNjZiLe7Q=","EWAPDtPrcR3G09mg2W9Lo8ojmb+SSXhu9zkAybNOEbQ=","HI2/VUfVUeMad6UCseBYk0Gi+5Xa7YHFAo/vTozBas8=","LkpcGlV4e9wEa+5w9Jifj5Nd5Y76SJDYE4VWMdq8lIQ=","HWA1wBC7rDvMRUk6zvfN9Abi6HbusyqIUfYgnDhaeMI=","HWtvucLxh7Hsg3OhjQd9NWPcHkgpxz28ZWNArgxhsso=","KEgMpiXuAkdUF/v0/GUTWbA031W1bcYuzrmnm9vO25Y=","DABO2cUJ/Xfw+YQfOfT+Ea0Zknfa8MQ1nwArx42XTxQ=","IZuVeY2bLtLSMHMsuvTKV7fQQHQxnXGnOfyptMCDvd4=","FE8UcsPHpjndrmEbLrW+Iu5t8lqFmgUpLKgwf4YYw/M=","KmiBd+llRcuR+c+7RKehSyQ3Z4EJfpVhMUzO7BbHi3s=","JMiY4DLzPX4HSKVEFgIGJYyXhlvlSJiWyXkKzOklHhk=","EKvh4N8Kq5bV1zcEBouSHswdz/eNYFoTcnzp3YsOrug=","LoCuOeyhdw3KNad6SKmRtt7b9UkkYYdW3wZNSzPytlg=","FeOej4pMf4kNDMcH4oppatad9bSPo3t0BJtQeRoiwnI=","LV56Nv5osYRVK7xFK+tHapbHqF/SGWqpVyIIosAqVjI=","FDnwQLTJB8UILTMKtDneR7S5nxF5ukasIBElBqgrwUo=","LsmWskegqMFoLR0JAPBJ1w7QsB4WnnXsJ9dpoWDgbEM=","ASQXEJb8taql0eeTxThnE0/xpJxqkPJSFgHE4HvDSVw=","JT6iaeRJm8sKFAuQz3HN+SSEPTXrKG3AMFlkf3YRofU=","CDxPqzwgV3Ij+sbzX47Vm/42pHAtpRSRSCm8Gtl5IXs=","IoT1Rgd/MVQvcWVqRU0IvYXggNtOzMREkPiN2J0ZHEE=","LP5R5BTV2Uw+KkY1jGsfterXesFM96b1O0YKcFioOTw=","GoX+zjsnq1JB4qcgMu1ucSJBS77pD7QHIQEa6zDpRPc=","EIKaqFtkB4qE1LiyFz4MrMPPH147jx4UiMG0FrvcuOY=","BHXefYjd6UQhiS2MSGg0AkMcysQS781W/tAbzdo5xdQ=","AugmRHj6YSlBGTNn2gGFf3kbN34gg7NhOlskPPOOZfk=","E0lqQ90c+XSWUXCi2Bu0gNcWHVi1Fw9fE06+chAp7ws=","JZqB6STtRsVEHtxaWnXmwgf3PDQ+aFDXrvmDm/mGmDI=","AtLe0+WOuEPrOaM0SCkUP1Btz550reO5fy8Nxdl3kU4=","Bl/no879fcd1vZbTHnWGGd3Dcd82I3DqyYWZdkvMvHE=","Cc6Va1hMrqUcW1ejPRN3O3H/A8MfrpvBSal+KBVUz4E=","HBNbgFXydza0yJygnMtyo3KU4GGUusxU3q6pRJrBfFg="],M:[["BFI78ajyhMbZWzEN7CtU4OAOWbVx3Z1GtiAcGOG1bf4=","Gakqxgh6uJmC/lZQ5eeZ+RAD/YtFQAdI0sJeQPBMV40=","MCYI11DxZJHfWihfX39qXOa1VPXazwtp1FCyS7tJZ9c=","Gjx9qmtK9WYtDYQHsodnTYPq5bdWNAX0je9JmByYxCQ=","LbHJhVrCmsxnk2fb9w8I2YiUB33yQR+R72jdkBd8Hps=","DwbuR1WPGC2BC7yyFKJdp/cKVnoEZLNI4bMOyn3pnSc=","IWbXjZSNr6ljOBzxVg0AvzoKHCiKdDNEyGQ6WNr4y7M=","KSm+m/4/k800/OrmZdlrHeGvsmvK7qL07cRUxQy8RAE=","EHbUOcZ5l8N8bB/amjfcL3Yt1XeUbzb8/czXiY7GfNQ=","GFya0NqHz4JGJNAr7DukZlgioPazsl3v86/MaHzhMh0=","JwKxvjnpEET7c5JsEQRxn0wDeqQVGCPOqyTwzsSfRkg=","CvcaUc1GO5+u2pOAPNwDGGx3gYRSUv304BVXCdk903U=","KGZ/nHMyBz4pPIC5jt/64Br09ntMUqtF5J24sw8YLSg=","J2PDP1ste8OiMECvvNr5mLsTJUwnKl+GNaEmBqWcLlw=","D4Go2OCHWOijKqgpJmbEy2uj9fBsTc9PxQL/l/A6haY="],["ETrYtGw+7CDJlltaey6KUVKYcdBAG03m9j3p5SEWI+I=","B5MM1SVvird6uSsIu7WxlaRKI4LGbidRRhnvuU5kkRA=","KPgUS9rhuQTq1ws7cseUMDfea0hJDv0xd3g1lO3Si58=","JHT1Q9Hy8zte8/uxkGURNaWTkMijZh+uLfHT8UQytgg=","IXFahHQsAtBXrEH3Q7Fm2gIyKEJWgZUO36/4WBIBoJc=","HvDgwfC19nZExIb+zwIjjLf0+mOggqPAMNrdzmWkuCo=","J46NrIxWsooj26TZD7qR65R/UJLUp6nseAL2F3hIjoc=","D68zhD5nM0N+mJleb3v6b+76c9dBDYWFkYw0fzz+kqU=","K6Q31q5sWIxrcVBsi1CDR+Y0tlzuMXrx+7nMKpl/wAY=","JKbBkZ+Uq6nbmKWvOP6qU5HNp5+d6/rxGGcNeSfkHbA=","BNgOfvfieisTl2eKxCq8xuJmLIgFA+RkP9+6zmcnO5I=","F/ajrtsABamwoljjG45uKkjz+VUc72gSpJB1rruHhfU=","HmICkSlJLIvfhRSUWVBoE2FZGp9e7cJEnl8inIW7l9s=","FrrndIZ2VuZPyV88JJ+AHxUP1+4o0ZW62erkN0OHUng=","EPAXJ5m+I6j8PxVq37bFErpBXjUWe1Y797GG/RKkHlc="],["H8UKFtvfocO5kDj0f4GhxdHvbnsiHUzMpughIgEw4AA=","LY09kk8olxmeOOr7x+EB0X1+VjSIqfMZgGB5auhMGwg=","Kqmq5izbhSSQxlD/nifJsz1M1AIMpm9eGms3TmYpNbw=","GEimDvyJllBzuVdz9GdmZofjjVm+II6Dd9MZA5IQV+Q=","DIk4CBA1SdIDDL/gAE6mZV4k7nGh+MHwctXPbheuJJk=","CtgHGMbp0cZ7Sje54QPbMvIl/kKpumVf8GVhi4e4Kuo=","Ag2HR28SQ/SQJG+Ic27l/W0zGR8FYScUh+lpP8/Xpkk=","E0uGZC/yAjiPT+NzVspPDsOAVWa31NQS2JN6NZ75tAE=","LASHi0y4FW6Zg9EVdO2Z3HVi0/uxh4JXq7xohS/dJoA=","F4OkUhWAWt6dNZIyEgsYPbVLQ/mn6PuNzZW6m7q7ulk=","D8ljAuhmLeI8xcjCKKyKwtzb/EiKWfTdQePycJX34ZU=","JLIuXOZxznnf+N4W180r1jddfsqgFuz1nP6yRtrIByA=","BSwz/OCNSjn9gFFWyK/7hDSUKLpJIM/S55At3PmwVX8=","APDUdSJcmXAruk/QEnYQK1yr/3vU0UfA483uTAesMbE=","EYPpG3q3Ny8VfUxHdpHur/yeiGP7LYBlcMZ/SxhY/FQ="],["EhSp1tcoj+hWUajLgwSMdmnIO17YLKJkL/8B6FKkS0o=","HA3iv+r84WTJg4BnqN9jQPnZft8BIjMxWbcU9Fw/E7E=","HjlNgAZ/DhC6qV3g2ZtOOSBKGHJ9FAG0duyXa18XOoI=","LKLYsKeT2Q7TGM219pcZMTcVW8+5Qtgr71WL5fqzWb0=","KEJ6sAemjHqxI3HxO9fboKz36X6m5krlLVIZIQ/oorA=","LP/DeNLOx2unCAs3/GcaljKLzfxGMPzC8hM9zynHDdE=","AM/KodfTguH+H8uVDhTfICoIeT1xhSVbAl1WLrjZdUQ=","HYckxeZB2W9uNydxsKd2u3Qv08COGuJQQyJGzTvQG94=","D+6PlzE5eXQQCDRknuh6J6ySvno4EDA0YBQar7VCpCk=","EW8jmr6CBze14egrKs46Rc76xImmv/CE4yMDb1QncQg=","KjHK25GNeLltzVSLOUQlpC4qp6KKa2PlCSYb+ub6JbM=","JAyvbXqy97arPRXvzzB09bIUKh6ATyUBLZiEVICeCWw=","IiTIXwwLQJMBTbHoF9H/FpGPFeDNIxuEikjPgzJMQUQ=","ADmiiJUaA4HjqvWY7xMoU7XWlHFsINuHkj8LzxTJFKg=","F2INQ4SZ9sCma7V3rdTK3WatOeM3fTAr+D07uhJrKso="],["DUIafCWvVTh4j0lHWDZxKvXaFW+IxYZ1aM2VjjBQJsw=","IOSigwPdVeXO4zLzDuuvvXky57NTHZQkVMNEuLjBfN4=","IL0CjJWNV7eeNSGP405Gnr2qjo5xTpGNWBkfZQRrlyo=","Bu2YoYW7I1jzNOsleuXjGDWZwFTBtOICJWm4No2hq8g=","BR3rSyNIkOMfWsjmmh5TJFN3Suk6npNg/gCe03eunDY=","IfH2pjBHHjKouaxLftSwTFa5anHuIKZqVFjGuNXG00Y=","DDnb325tJKkaCkX5IsiUviUrqhJ9msdpCfhtwLzGimY=","MFYUqs39QWfNG/3Y/N7OaJLYTUpl6G5vfGNJ+3Xki5Y=","DvmuZeuSJgXUJgqyAh37tHdM1f+u3Bt53GgSCL5vhcU=","GtzLiY5f4YtcKaRwjEsRK1bQ+l0pm17cB9b1vABCi4s=","GKJmHAOrmw2PfQEJHH5WPvwDMZZ0fjQTnT9cx6wAHpo=","D4rux0FE0Ao8o4v/ELsPOo2/9K9hl4R9uHl0WutXteo=","H1NRSpfotXIE5XvWsbHZVV87UDaBVBVOZ8ITT9MVFZE=","J7zWOcR0gtLci20T2hn7jWPz1sh19v6khtpv8u4R4Qc=","Dp6DcxFK0lr5fSjicvxC2EkDc8q1ghk7h0oQQo7mzSE="],["Lei6g9K2q2pxH7kjCt7hy6Rt6MkwyG0masuMHLloTiQ=","G7Fe5NSSqOLPGxDbG3OMZ4AGbqg0er5TY1enI/bPV74=","J/ohIEMTecvYYgX/EU803S284T4cKgqORqHcJ+e2hv0=","GrUnYUo3wv+wDA+tNgq6pEesEGP7n8ZW0BSM3OLXw3I=","FwzuKYP6PT7O8vgG9A7tjY4TXO/wdvxTC7/uh2yefx4=","KIhRdw8aE4IiUdqRyE4SNZP64cnLzmxP8jF+cLtlggk=","F5U4TpG6+lVN7fUVbNeZ4RIQ/9Kv6Be1xjrVuF5/3QY=","LNomRzz9zRhbooz9qhXn3iNZZGoCh+votg1wLfAJAQw=","J6tLQJAUZe9ZAHEU7PH7+rYVfCT0AiRrhqYDlyZzCPM=","JxIngd97sF9q6eFOjpnaXCPcd8wGEIwOuwYeXRvpNiY=","JoEqzQPbNBLK1Luhrvcb1EsAlNMYrOA2bHnnKf8OsuY=","IT0p1OG2wB/A0QnqYWlJAHbRMdjgNLMED3vZw8Nz6hc=","ITL3GsiYksmEoKc2U/LUUiKto0GBqebbzqDWOWH5NPM=","EhOVAjkx9rs+8otgY+t6LteDngg/25LB5Vk8g+3/X1M=","H2Zboz2kq52YBsr/d87TnJviVPzExdqPVwCWER+xCbU="],["Dqe+gvHLSTsbvYOrfKKFvwoVWeoFw/WYJ7OwE9CpH7I=","LM8xpXJBK7fZz6Y3cHhTIX59tVULHMMKiUzfSDo7Y+M=","BWRlG8EXkXDjyXr7xPSTYXAXtDshPu7Ya5sb/+Uh/oY=","C8dpzXs0/NG0VKv/DAC4m1QKYZuHyVREZ5w6xr6E1FA=","JEtrY/gEGll19GQLGMfQZ+SgYn8YdR3JBgFriJPDUSM=","L/TuEQ7hvmLicV3NEZyVuVQTN26I7D3cPwb8nbjCepQ=","JmbsGmfap76wV6oObooQOWYBohiENyNpwBK0mq+EkEk=","KwZmlx/ZEVKecO+RjQGfRLXJ13RCttGGb252gy1HiEc=","K7W/A875M+Tuh/UR3jmFz/AyOre3GNTLyj9Cmt2/MFI=","LjenRA51tkmgeZz/63+drjj638fKtsVYXkqE9DdynQI=","AANx8NSTRt8tiLnxraismd2BJc+mww83OPuZMqhTJo4=","DQMntZMELeBPWOD/kzhtFgjTOoaHLB0+fgiRIKrHpP8=","BNvEyN5wjlmqSyEW5TlEvsl+1CMJtKGEVh2PMtKR+cE=","KQ7ZrnR5+b4TrxP5i/iFB+b98BhxDkhZ/S5IzGb/myQ=","E1qjgzm9kn3VBk5NVy31WBGyJrq1SwrK7lEdYK7bAvo="],["Hjrn5XddNSZR1xPr386/nKjpBc+3kr94dCOUUPkUyMU=","AdSSw0skW8EpQbsWPFEYv8+FvE80QEKyAx7YZiofb/o=","BzM8vQ/xPIreH+vnKJLZrUNce0UapyqMBacII5WIKGU=","Ka1SNv+7WYovjSOHA2CNt6SXp0U++dV5+/Bb44+PdvE=","LnKxsRTf7n6NfwFhJVxolfp4YHDOYtgGxFoi19mKCjA=","KtNpqEtX90VboxBkABynd50rS5awtKkfFWq+w2aqt4Y=","FXk/McrqOd4xXcW/WjZirV2OGhL6GnKA8u+q2vqXrfQ=","BWxV31Q6jUBDoS9AnNLEvPQ6dw8+OMP8ea0hS0Lag0w=","HuEOKMYS2dbucvEnSFDD6Cm+XAb1uykygBUqVhDrAeM=","KfNW3Ow7eVI8BYmnBG7wdYSGgoshIUbD9c6YevP9cZ4=","J86pxD/gvxzp5TwMAm6DnYCn2GkTZgMQLN32PN8ouXU=","C9wHix7dnLH9LCoBqXvffUWGSEOfrB8oUJtBotyed0A=","JWWhemvFboewtjZkMZuKR79mLB9J4uySUb5P3zPZD08=","FbCFtetnj4zt8hv7MOLWSuHL3XRyRJ7STmA0EBxliGg=","IryWy+f4y8qBspun34SN1lmQNf9RW21IVVCELho1ocI="],["BZQ+NhijLPBQAYpOI3X00Ce4wUrIKg3lfLuQxRIqZLQ=","HJtcLAf8z9ncazq/4FZ1/Jl+t7jL2Ni0y35nFhWw7M4=","KQp65zL0dU4MuRkjySSJcZMmB74ugpFj8RYS/4qVWxA=","FDTs4gnUkSgMWuBdfibPktmbtyiaXBysCaOM5TtuA98=","Io5zmbDgWAKFK91dXgmWbwPEw6/1PGg+svaeD8whwLs=","JPD6FU/MbWRZ1sVvcR8l441X6QvnuARsngAYFe20FAQ=","GIAL2heomDL+pU8mdB2Gxrb7nhWwLnvQZVM8tWYdKpU=","FrEfJFAqpMw7DCVioYokq4+YZDGyRANNP8KVVUArX0o=","AgqdV1/qiRMCsQZDmrA6ipUdiy7ytWKZGUbrJUHx+60=","D5wF9gmtFN6+r/EHuVrM1g5iZiJZkFEFq/r6no4I6uo=","CV8dtDyCfm8LnNT+kp57jHjJP9AuyeDxCZL+t1O0ygc=","JrwA2c0lEkRCgy2Xq9kIZtP6ekAb84vZX6etUmVI/qI=","Fz6AWWdWzZruBL1t2dwV5Ljrv+/jdx2YGb1NREcm950=","EqZD9KMnrNJFRRTdRpVR42qw4/JOzDsop23B84IU/jg=","EeGwr39fyfBJh3FUrhc6GnLHvDuhkuQ4qdD6gf36SQA="],["BgN1UYD2bpghXWHlNGsRbMAM/QWCdNfZabOvleeLszU=","AkOTC6Ad/TlF8qoC1YiSK0fBvvL/gCOoSbTKZqG/6Ys=","HrUg/qxi5FRfT+fNtnXjZHS4sf0Z4V18c6Kx37sj/tc=","JV373zBVNBOh+PURPWDphYODjRPhHB7gKyWjh+oAzM8=","GEURMlgbmt+ZbGyuFbktLkwJ/cfWwntEJvMrXmagtyM=","ByIcrTnZtfjbcFqHIwOLkra6+HKEExc16vvs1TPdptE=","FW9qCeaoHY7s9NvyFka7loskBnhs0d7dTMcyt1Mvf+A=","GOoO3pAQx78PrDYbW45/l8de2ToTp61KAX2SDAPJhoY=","C3MRnJjSXrbeFCRrFAG+9IXJ3GrM7cI0lLlSajnVMiE=","HGaChVLKwUQzNO1wt/1/tSX5B6tkR50ReGTJLpEZhsY=","EKZiaN2aLzaOlVB+/CCF7u7ozpd8oe/1suPZS8NC/1g=","HxSqtaWa1FLPaSsSPGWHPdgP/BiHmKRXDsp5Kz8vJX4=","AdNGVbV3biRwFiGstBMkystQFl4Bm/8eZfmDBPfYIqY=","FqHu276nnFQRpjnjvw6Q9uP3QPFBWZr45qQ6IGlXL5U=","FN5Ei+y6bKCtshsHRV0sKGTHuFOCJnAm4o8JeIItZaw="],["GYF9tm/bghXs9wR2xARMP0HXisWlScaE41hFlH3KCxE=","CPMo5eZsC4ebNsIz9Zi9hXjRji2p8BnwQRcxUk9C2Qs=","JZoqHwRoRHJM+ZKu3CY19mgPVeig/axpXs0F+8LLvRk=","Bn2SlLQHKxLDaMKBalO7Frfn4qeZeaQW8tAq+GKr7fs=","Dh1+wqVLEbNuZddVHpqHWojMx6bARw58JuGZZwoIWbI=","Fzs7NJ7oiNk0runBToic19eF0ePk8etypcLlbEj9VMk=","KXdlihDebnkhq540vPB7vKYaclSa5X0MFWkb0UPU0t4=","A5YJdzPeWh+kpUh0m3P/fEJvmNnlrRaSBhTTN4l/ax8=","Kmbe/PSJwj7sUHmg7OHFNBAnpZ58WS52AYS4JtcNupw=","EPQzaMBWf0Bapqr882fj5ovv+VfEsMuhfDDGKz+VSQw=","JaKkPuYSZj29YYFPLesG7QBadBT5mCX4vmb1Qvlaey8=","GC8ck8brKYZ7FVnFggemrq9Atm6q9XnKa9fKQKrrer0=","BC7qYW2QUCUUekgutDajt1U1yYabdtbNrOEY4VyR+3c=","Bc5/WS3KIUjhmFVP1k24xHnynSPx8W2vPLiTDZRW5MU=","GESoHU+rV67btMRiji5H/LKSKIPqsLLh3hbySN5LuQI="],["Bzll96m6jLM6lV1C2lX9fDej8CJrAp023LP76pXWQvM=","KEovCD7jKmZjCByABxPg8jleNI3OzIn8gap1pdsroSs=","CPeObcWc1GlMQau8oIZWmpCDyozIAL2RNOTUjtnYncM=","KTyooGxfF52TgGXqR/gPZf8hlpqUKeQAqhd+z2tq6FM=","Apto5lLerIGIJNoMKhG0CNeoOaLoV2xVv6XxM1/8W5M=","Cbw+QL/l9hb71SDziUoP3Tf+spQp/TpQFZUxcd46cPk=","KEGBCT5DQZeJJjc25USBcRH9y1WaQ3c/BRhmCKzFQuQ=","C51aOpV+7yUa6cJuU0I/m+by78JLsYdWiTqdgOVqCCU=","BKqOkdww+coxj+JHGP5ZWHH3iX6S1X8th9SxvPmmNeE=","JToRxmRjptyv2Dmfyli6J/67wwfYgzxmbg2N8HLF9p8=","Dk/UmHeMLHagLQ2R2PiYJYVucG9Zgzff6788ozOXlo8=","Em7IwgAmLEXREzv52l8eX9YrzqHkk6CArxvSg6uG8SI=","DPAwsQobQpHlduurs5xYP+oPpt7PqYz/epbcBst32lE=","EQKY/n8rz9rAvNw6/+60Ntezo3dFOud4+r03qayymac=","Du8E8kriEO4KlLxWIVdHg+SdTZM2Wis90Gn6/UMFVFI="],["CaVQQxQwhGtmlBJbVkKwBgfzahopSFNho89Cfad+zNA=","GXcug4FvwsSblkJ8atBXM0f6SaXfaRJSWSrrw5AFWjU=","LY7Gra06ZGhDyIzaAShfjzLSnGsQJctUIUIr+L26f84=","JVuWJY3I4WRPG8rs7nc2MvJabqgDzTKh4B+CVzd19vw=","GG4TYAQRk+EvOAmbDjXnZ6/8NBD2qN/Om8dVZ+ObxAI=","Kcsx4a/vTyUleKq9dvI6EyCqyQ1KCmbCIl49lMxI0i8=","IA+iDtG4cTE5AMAfi2l3YNAw2MwBUP3FjgSg2KKzRLE=","GmOlidFxCqcFE2y1IMLxxE13jkkMIS1LcunxU45VVc8=","EzNps7zHPueT6Gk2DNUNjfYP45jtnZwNDQPmafeW6H8=","HplRbCQNQryqrZxz8hpGGT24QzNJIDA17qMDmPnfeJM=","E9hMp/NYqv+x7o666Bwy4BrcAekNCclFGvNuMa+CFw4=","BaeEZKS2u8pultg5gnv926qdkkhArvZVXeZD3xZ9TKo=","Jg7xOsfoD9LbPenrlC7e7z9eJS1MBFCLHhsTAZGtDfY=","FIKfCdS+675vwwVFBHJD+z2rmcYqq3Nkp6W0J0V6AsA=","EyhGfIe6cwKJIaiTM7q5f4sk/Kpy9Dg3y8/l37epRf4="],["Bo606dbgpYi2GmrVAfOA2g8AkGdmbAhT0VbjPVnENRU=","LcWQADnUyFI6w3mUXLm1ilTgHbrNZ/DEuu6F01PT/pc=","G3KsQ3TpW3t9KM0pCVB/MAboNS1K8Z5HsLkJaCoDIA4=","HyqNyv55/Q6iK7FWPDsosjxcTXWR1F4GdEs7N51CZhg=","GSlN0i2mc0cDd9Zx+r30LOzTfsvAGDhqQ4cG1hBrBKg=","GTK8a7SItzbg1L8wbUHmIuZsHWhapFmBUwVLQPdcCwA=","CNHWi4Q3vJgKp8Wdgzk7FioIJ950Bw0tNLTq7cF+fmA=","HANDgWuM7LpIUZtZsPttSputMJ7jgxHcPoz+i611378=","BwnquWzGJV8q6ReRTyUIUCVJDEIyhJFuI7YIY4zM4pw=","DGegazPPc4grHHFS1FhbeCI9hcd83cLH01lIJMUBZWU=","B0DB6bjtFun64gQ2nFVM+3IAfcz9JTDy401UQAOuWZQ=","AqhMQk61j5w4tDgK844EWEaJgJiPqh8NTG5yOEVnhSM=","C8Nn/ZPOrLWZxhSqKAaHg6XSfuwfyPoXZQFbdt2C9c8=","Ani1hQPguQFBBPjERr7Uxt5XXHLU3Z2z0YZoRpeaq5s=","B5HYMul2tmvar/RQcx/zXZmFlauXSPaVu0XSwP7waTA="],["Il4AoNpaf3SWtw0JI6fPf/Myv/BpWMwPP61DmHT2Ak0=","DMN4tE5Y9mi0WDL9q0pJNycx7yQVw39Atd7VWUrvPMo=","DX2Cc94je6LU1egFHFvV4xLSmLZyb/vTr35zKvkd/yc=","IuvgoxXge+SwkoiF9SRJsBGzln5RnkOMQkzAQow1cm8=","Au088CFPRE1DZlXgOviu4rTZaWHuoG6BM71ujT44I08=","DLb6Cl4RuRkqUZBJOdRaBa+AVb3qPzefqsKdEwmDDoU=","A5WYoUQ8AJZ4YCuN00dPJ22l1iQlCD7GKKFzfozKPnw=","GvVuZXUSP5nF16t7g3cPD9YPufQDjClCZEBp48JDeT0=","Do2cBwfcW/gKLwjDQ8acxlne+GYwrzFBoAOss9PpDAg=","H23Y6F01l7ttN7R6HwYxIgFMiIJQs4z46C4+VHHvhKk=","DMj5C6to5t6EhF2hiZv8UkQL3duUCyCDAa6UqVd3y3I=","DA3PKxNVLsVclxZr40fKL5OwfioQFkCW01P6KAx5aCE=","AB8SYRepSd/5APpdERoM4mYb2dVERXfEkamVHPtYGS0=","E49n+9nLke9SBtSMq7JprEK9NSzzceQzEbzK2JrMUJ4=","EUkrpAZDXzViOQb/Rd8Rw577Wf/wn1AfuJPXF+NPnWE="]]};return No.default=a,No}var Sd;function ow(){if(Sd)return $a;Sd=1,Object.defineProperty($a,"__esModule",{value:!0}),$a.poseidon14=o;var a=n(ln()),t=n(un()),e=n(iw());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return $a}var ts={},zo={},_d;function aw(){if(_d)return zo;_d=1,Object.defineProperty(zo,"__esModule",{value:!0}),zo.default=void 0;var a={C:["EeJ9p7fvlklIozKXTQfM7qd4vDOu280J3iIvoirQsQE=","H2A4G4O0So/mWg9BQvqq/F+/VfeRM8V0DFPwNqMGW2U=","D8HhrIrTUk69v6RdzFFXZUgjTQKSrf4c1wpwahttrdg=","CkB5jq06EreLzY8QuxXLDEJrvSKCqB3NwHAITOeLjXY=","LcCdM1cFEVWYfqlVlENrbL85OwE19R4vZ16l9GL0qcU=","EEuSQdU0JkUy7aGB3hoVTdF17hUPNJAz5G3cVBgdoIg=","EnpiCNmPbNOHuAL6RMqyA3s7kfBiLxcITxuNisnRJpg=","LQdc7rq1Q0HcAvsfUNk4zh39zeZZlVqTDsGPhiX4bU0=","BE/VwhAaIL4q2SO+vhWkd/QMYDmj3Q10Q/5ydYBCAQw=","KzAshRH703ArgVVkxTmay4qPKo63f5bH8ISWKOCfm8g=","B8vjOduQWZRV0e3tHoqHC9MCySp5sdD07ociLM6Z4is=","EyZ0kxLG6L1O8kyXyAn3iuVIOUyUw98vKP+oEF3r4hE=","BUAhQGuNH4xwgOfCRTBOS3p5fNI22tktkpsiPyaXgOA=","BcDgM7WJ+N2yOp1Vnq7s+YaRqNAY8Seb9AbQjyeHzEI=","JQiozdRQ+Wm2HHSdVmyUWaFurUMw411UFbEuyjhYS7E=","Jk3MwC5XTKfnNtolByvY++mQliH9T0Fpsrro02j/EtI=","KpOMJUDWNhV2PsO6EMGiYAG59L8UGNEJKmsC3aUZXbM=","JU83C4X1in5KsnpiA/OhYcGwcPqjGFuvKFKnWoZaQAw=","BIAYlvEmjlq/g3EsdBTIlT1iI+UcRMstyrCynBSVKsg=","H3GI5NT3VJQ39I/asi6HTnHQofGMMBBuPdJyH5naVh8=","K5JzcBrgLXsjHORDrx2AvyHWWuphY1MzYFn3Ve3raKA=","FZciTLjpBc7YKWIKrNz6x25Qmg97wYb7cGAZbbk3QsY=","HYxaZSiDRpB8/VenUjchloQeYyPpaznaf9F6gsXhJxY=","G3Xc6VBzH1CCUbhqfhpROZINK+wYeY1Dn1gVcMHcZjA=","J3OgGGm/mtNZ1a2CCbM3EZ/43t36xuTtLI/QFY7o8qs=","Gl1HiD8kRiYQy+etDpsbiuWTC9O51MHuAZhPYiZRW3w=","GYJ3MgWUYeIHPNkKCa1UFJscpZCbligaR7LZw5hQbP0=","KXyL9UsDpvf/JyRl+4gckYVRu+mEdR8+nysw6jexpPY=","AfPaNrH/UoOweLafXzp9S6sVowh8Wuim3DB+unci5A4=","FnztbjndO9bWVe3dKr5saP8kfYb5pqa8vUHJjTe08TI=","CF0ZsOFvCsKfMtpUFEXoqKbbmnv0XnQfnxE+dSa4II8=","BPNl9xDprNXBZTzG/Y6TyuKg02PxaX8++Cn3Q1Ul6k0=","Eo1PA9A9cJfToiza72sR8ynK8PrLwaZ7qR/0k76cpxU=","KAIQ3UEmixM8n653C3ma/9PmaAXGFnQVrKNuqgLbECE=","IE7nx9TqBvfKZfqtYx5wPg49u1nEW1Hc7nOwymTUXMI=","MEKv8JwXZbT9c2Wm3KDxFyZm/cDlSYIrA/c4jqwz14Y=","I7eAd+dRYCvnd5BFhhzOOtMYZwu4LzPCk59m1BVUx/w=","DzUeFL06Qa13A8+akGuteRpieZa5NRIebNw79xKSzsc=","DmewE19x1IWWdJ+fqFhcN4lEECLUW1tGEaUHvUAdDuQ=","BuhGNJZtRiu9aMFM5u4WYnaeQzFODrhePVkJ9RjanfM=","F2ERLxXzV8+WQiu0Z5b1fCx9baQBabj1eUhB6FYfwCs=","JDh6xXMTeZx3Vpmb+sSVuP43enOFUmyKyv4U5a/gOcc=","HzyBfL+UMCoG41Jv6nsyGKKHoxKZ8N0WK2bTWM3PI3A=","CxPPJcJy2uM58abzDUPUD3S8C5OO1zvxapXsw8SZb8k=","LHMeYttMxBxWzUZcSl6NVxnLUK53NwRP5OqFlmWZfwI=","CWG/6o+fKnCPOt/BJ/2xfr60pWMqgmTxeklMDwYBFWs=","Hu+5n+nayakZY/ES3TV+1R9Zm5JU5b4sdf0BpY73E5o=","Av+YY/oqbK494Rax1qpWqK+9k8cEF7igWThVof9XQSM=","KWVfwDDwoPbdKwDKulJ5OP0P30HeibQuqhbuWY/QMfE=","LZ/nRPK+rbmJhp/CBelIdpf1ZyG+scojC1m4LqsnsFA=","BLTD9PHCHW84mEgoDm4AbAVSRRztv1q5be+/DCy575I=","E6jz89DofVO56VlmKgaWOPvfB3AkVkvCpWdvAkfoQo4=","GHXC6PQ9lmDhpVY4j9gXQe2n5IbPYkPC/hdS+RmFm38=","DbepF/fvwdIWdySvTqMrH2pswjwdtav62QINuvW6U3E=","AcVtt6gfx4uUsmfc5FpNukikKIuZ6r1Qsa3PEy3Up8M=","HJy1pdAnTZ3DHKB3Q9HXtNQWgB2WQDmFHwVnjkvoKFM=","AveG2/g72+xmq2VmlNU0iYi4JStPWj9KRSoHX2Df6So=","GLl4mnpoGDrThOzwOEKfdYFFk8D+of0l8QAcO+xEiMQ=","KOscNPdwq5ErVUgqlGvaqinfK0yUfCnOt8ihnjiIHWE=","JunJ2qtiqfHWpMaUuwxv7CdHh6gyI0PAP5Xf5l7njoE=","ARGXeFiHkUVnW6fx1w8wEpT+3bCoAs+pRKdZB6TC7RU=","Fk80t8NWuf2hp9hBX6u2g7rGHucMI1c/pyqddWulLPM=","FjIZylMis3dOdbHm91ZX4LvrdqnjI7fHiKfdZjiys6U=","BEFZT1nGXRqFdrj7urQFjcOQAqG8Q1cIQZTOYyuWEbI=","BMsAW01DkxycSrxQtjmo5uILPKWvtgsGFAyyS35KaR4=","JetQIDyqwXw5nIPGdM/OtOc/InIoZH+dIg6V00NKBNI=","CmBff+nja7dQRSNSUWnGaJzW0v0HbX3BEnfuEGkxZ3Y=","CrL+IJud/HyQBySMt8o2tMFNmRqzuNBKFj6w6DakbFg=","DhRZy1wK3W+Q+UmWVgMyCzE0VOZ0evXzmVZvXSNGEyY=","BFrh3EqG0eyA3EQu3OloKmFtJudgE2dauwTMpF/OB6o=","GDT0fBNpjLuRYFnLzIiXX+Fd0OnDMZhl4IFH5NOXqXA=","IDmhxzNafkx6aUtcW04bRPYglg2Ikz7VI3Qi7VMYn1w=","KhAxbx5mrPMuKtzcKSo1CgDY1eh+xdu2aUnj8DNQuz8=","E2C5FBVFnaWEDt8UgmrqBSgflz3BgTPO5cvidhF2gko=","FQXiVSZ9M2oIHbbwiol78rpA2s1OwdYamQz6pA9qX2s=","A1DjAg6jDR53nZgToLZQl3rbGEJpHoo2TBK45Fj3fTM=","Duu9TCsMmzK4LZbWSw0iGo29BkE7YHumn0udQswSyvs=","FbLUs2HfSeNESiQE9wA+4EMUfKw9FChxHxIms3TYf4w=","KcgzjFz+mN9/1J+TFrSVCBTd6dZlNe9iToksNdOAsY4=","HXomJ/Va7ODMgbd1WAzN6V/RDxEvjqcaf43OfprHmOY=","DNY0wnq0BgWKvaFWr0Vlct4vVJIAVYeu5px+XTRdde0=","EwP9SOJlZWXnoWyo6FIxMUkwNalyHTVPxE17xZtyetw=","BS9aQ4bqIvX/Bv/qYXnlhhe8kIo9xrHnRigZycnpBqs=","B347xe0cNLo3AvwKQsRbpccUprDBC6K02MKnqnWVkpM=","CNiBYIgvyK/KYESQTnqYT4XJnvz+FHussLfxBG+VPWU=","HOOyLf+V+DTH5bYyYCnGvLTVrksZ72nEBBnRqteWoYk=","DU/ZlNvMFSYt9fPAya3+wmg+Pv+/UG5TCdvYwrmIq44=","K6a+XNea/3RiUR71o4pPjHjHT9BJ5rhlfNBE6Cq9lLM=","CXZ6LZ36OeZ8lUAEANqWoZLab+XA8CzfG5w53I6Whko=","AQUhxyP0fcX+/DW/4M5+M9LgRbKgGOEJNmLshPEEwF4=","FE8JuANGzPvAhl+mTSINbbt7Pou/A2PmL9jMtFe94e0=","H8C5ky90tNtW0JMVzGqOhiBSdso+OxJJY9roPbXta6o=","B3bS2XKgBMBKi+e18vzrsC4aOxt4cDbjUUu4+XLINh4=","Ih1uVg5U6ydmUSjzfhwxJSi+Sa867sydfFZ1XwdnWNY=","FkGJzf2YM7ccH4Ny6Zm6J7vSDeYvllrUBtiu5nuI4fw=","Hj5zbs+XRbSr9xpNhj2LbQNSPq+C2SdFJjk+EDsIo8s=","H/PTCzKGuYj1AeySCxYi0qC6LPqd/FicU/Y503nBAFE=","ClDZgk/MlanSK8CKWSsabTls02GUCrw/hzpyUjAIOn4=","LbUKHha+Y7tj1C3lFonZkNLkchuToH7fuijyCJZXQO0=","EoJZT/ICEuilgaIo+0QF8u59NERVZvyd6gEdibICu5I=","Ct4nwHeVHNM1/3ibe01j/10Lzq7MRtzO/gaAwOxu8Js=","JzdK3xs4rGLQePpOcTaSvjJMok8u5D4k62Ktzi8+Z+M=","Lv91+jbocWybasCst42pKXDPespqDsOzfYbpdTgkLhE=","GigiVYKh7dRkeEsR7H7/GQ+uM6YaeDuEUydkLoL65o4=","DhET6B3hvPIE5RqMw/IABH89jYVwTET19axu6GLJ9Dk=","IQV10g88KBa4BwdOcqZypQc47QxPoJtvlmIjkDpHn1w=","IeiX90nISsL6/6niZKxhuYPwO/nzN726TcSMWXGhQ1E=","GlaH3LusYpcq7YXFDnDL61AZPYMcB5Due7zefZc4pmo=","BBBUmdXP6vEV/gpA10KEToBrEHKWswbE1VbS8kTklXc=","GvlJenKA4UFJVugPTwcuLya1CgaHaWfN1Xrs5yDGvkg=","Kg4tPuxiWbfOfg6xZn6O0MFs2/oiR7i8fjCO4y4sYDE=","LXyYbT09O+jHAQXkhJIWDvhTifHjHbyIFLDNPoSsXtE=","JR0SMedjl5I4t99KjA9QGScd5eQ4noTAnlpZbU4eIrs=","JjuNwDrH0lP1y3uL2SKikGdbq+1jZK4Sz6H6uMVsN+w=","B8WcMfl526kwuUyJfOcBbJ3fxSemlnhrfl4cGTiiwo8=","AJ9H8CH6Zd5rVOdR3VpL+Re9dXTgcce7Mb8aTmOvIVA=","HBYAQ9z/IzDORB1J8oBIMpafJzE4PlJMjnqYE/dB3e4=","DFtolmh/Bmucsj8hsywmkJLNbHEdvma/3gmFhzXLg3w=","I6y9f5KLvltyp+xELmaEyPDVDPgj8CgEx4UJM7m3DPA=","DoroodEUHcB4KUE4R8qFcQXlGJpl35rEDq1Mr8Idfd8=","LsoJifmrkW0HqylqAiT9o2oLx6Wr1XHzNoBU2neV4wI=","LHbOt9BAtOWP4Gt7D+g+qIt7TPN2KWdx7BXRIjfNjyQ=","DFOv0bOBFn1z0Uq3246kG5M1zsQZSxBaq34AYO4eMEQ=","DDZilWKn3GfljMFb/c4jkrOhZzYC6XDxdM1saxRVUyI=","BS1mthQlOt6PdAACdduFJfiMt6cbFN+diqTs8m9Mm9E=","Dea6FAkEYFjYMg/Q6/n8UnX4N+5d7CeWPbQUUJ9gj5w=","EJrgUkr8KxGH6Iwvo6FvY4hWi3+L28SzmfwAole8G0o=","CxPl8skBtFTKSb7Cn/y12j4T/iN86G7e3BfaQLkEUFM=","DJqYavKtWEg7VT6Vxou7O0WCnvbk56SrhfFyggnsBZs=","AJOk4fxGuGohCJDnQaFP/kEknrCwAIJk6m3DGaBzXMo=","Ab6n5So6yik3VJkj37fjX8349cgSJ2N7MBXtG6cSZXo=","EeiNwLWQC9KVQvvCODLnSbyaq2NH8L+XzTo2xjCP1ZY=","E4dB9ey/OVmX8h8hLnY2ZJHw9Y7BlSAPEDOFXOukMC0=","JEcBKpRpJ6QkC0cT240n4TDkGd9Pu01ooeDxuV3TZtE=","AnYZOngvbeW5A5RTceU0G55dys4EuXaOZ76YMKL2dNk=","Dfm9aMT8MsjAZPbEfVF7E4iGd8mF0+8fHEn7iA3te8o=","KQkcGGE5Y8bLpPTA3vUPzhyrZHqJAZV+4qVTBcKw+ME=","C3j47MZXeWb+1H7mB+JfIbQf1npUFt42QSg/L+glyVk=","Lo8FnJt49iQRsBf4fpAP1wyANr4XacU0TupBWcYrazo=","A+NMKHaoNBMCnLcBj2V7Uqwoe6NR8lIXOK19MJ0bZzI=","E6H2YKh1V87PAbUFwaR/zda1LF8FoexCYtswjOhvayw=","AQ6aWZb44zkLa3hhAsrZFFIKjpPn7VUbSPMkVofxTTU=","C9vumEao1nzZ1U8EMyeQRNhQdgQbB8PiJLONII/0jE0=","I4Hf3ZvDN9XW+4YeFsoo0RfVhtFtXu63QZpmHHgsH4o=","C4Vr2P3W67fw8d7Q7xkgRpHhw3gfipxPWFEfH6SE/MY=","FuwVlZvoNXUTyqij/vCy/BCxaWuBUZsKLPwYyRMXi3A=","GUPXDA7BPJFCZZEhFWp3P0FG1UjN/ULkCiFbFllIbjE=","KeUmiseW0m77wstPmOLCoB7/rLFQG4WCzK8eMRry7bI=","D9ctKOdb5T1iaTf3WvIvdE6ht9z//5TIZvPaiol45P4=","Gc6fmKNphp7EW/7LHxEqX3Bi/NbHXa/OkCrHDMwM43A=","CKTRSaiieiFwvJzmcEOO6mTSEdOpfHAsGwHb071ekf8=","GRUL44+l5f5N5+v5jVn8mvGrqhP1oGjLcWAC86aYORA=","I8RSYRAUQN7xwMI+56r12LFe578x/3N0q4CDdNja9pc=","IEqVQsaQ/jOP6rZT6aRqrOuvLfU+TpBeiWQUy1oMsSY=","Eo79TGJUzQPCGyGRPOUmZfrNDpxG9GXFGkWBJHI63xA=","MFvs0cugf7dCyVKOS5J22HGxgVr6r2IYyw51iq5ezn8=","C7FLaWlv+0pG+5EwGvMmgv7po5GlNyrRnzpOMgv6xqA=","L5gdjuyZUOOcb+2Aef5EovJW5+aGpgy3VL8YP8Ou3go=","LjjG9qdImlTtmCxIOip5Ues9Cyjkjd+LV9KWn3g2kzc=","G9cIbrcVDA3OG+ujmmfLrecri3LhwbtvDdtRwT7lg80=","HItDfyvj5hZx5rYvtpjorxhyAxGWpD/+dtFSeyMVtGE=","K5HHp4KJp8Q+FjXo7s1QukyWaUMfECQ6ZcyuYDFWb8E=","C9+Ynn3d2NlFHEVhyne6cHtzj5zb/10VwRDudHE3D4M=","CtGjIX6GZFps/xpNhsofGa/oWkXnSRLWFqTStDC71Hk=","JW/40/Uk5OpoV4BEjy+MVbWSU0Lwj5RKx41Kzq0Hqgg=","IJ16spf1oxJYIH087aey4SFoPSCuVhxtRgwR6/sbawE=","Ca/OisLCzzr/YAJEG5jqUvyG0+xBEhbj1mm1XOW4v1I=","KfgrHsAuaMJQmfAQSBWJfjPtnCbc/zssieajRxIiyTQ=","A833+PsBX2hhMi963CIa2igAIRl723H4AM7vie0CHdI=","J+smPb986sgk2F8qdTgEaSJwM90CFTNlY23wRNjLC2E=","FijPCEKAvBSanjzL/FvQhyIQGuSgQ9M7L5iudqnVWYQ=","KxaL+x5sTO1qRP3VYYYX3LjpxNrXsExKiVUgnxthq5M=","BX3gcJTcowcjamqMyz8XIHeFSQV663p9r4pGO6GMhf8=","D7B5ZQ1e4/eGA8YOi1RTE75ef31sGmED/XnxAKyMoQE=","GNl27Z1E+3Q3MguR0ylcjjNue0AmWRSbLKuusnL7Br0=","Ht+77xgBQsR8TH860eLMgb0CCr/MtDLuMnyqIuk/9F8=","JRD72gwbglYpCirTtFGcgV8Dl7uMhVBa9nKut9ofklo=","FHg86b1Jhg82TQ5G3vpmbTYTjcQGJVuSAJBPwGDPBCQ=","EA4AR3NpwMZ3j+ZTaXRIFjMb/jd9sz5m9jrOMeO1aFc=","GuqTtRcmqNcEOd37fi+HdL3plrcvnLAMw9fy7i4MRcM=","CxTA32siItl3ITFhQBIpdjpVG4iWlN/TDoDffm92y0k=","CmQ7pyUxoZKx75yCdLqOq3P7GmTDlRtnJynGDuysNU0=","DDahLIOkRaaXmxOha4ehK8xjXO2MhCHvmoyyg585awI=","Jct5Ks8UcIDTo8Lof3KcXr7BxDiY4iL9DlCpUYl9XTk=","HhBk9lRINVSG2/osLINXn+9kMd6sNQRvsne1iFsJv5k=","JkQO5PxMR303mYDBg0o7LzsmHX7XuRPilQZ27SD4eFQ=","MArPPpqQG5xoG0Om6ntILL/ESV3VElJH1Mmyq4Q6r8A=","DSeDPaitzCFdmlMGlsUmk7AE3hUsZHGUXKehcBw4Scs=","HE6PYCS7eWMz+FNGKileDMFqYJhXLvWNFZpSjPiGquY=","DbOOEHEhjvDuXXeseA3Oqt8c953J8k0vPJ1YQSsaWTk=","D4pCPQQK7w7d1u/EafTdnd1/5ZGkruOuOQbaenf4vCI=","CdpXDVXi9kyU47LnouJV8FndNi95amkUKWZ1b62FkME=","DXzVwmXPtbAaWeREjGfHrdvCwJsl8HiyPFINeK9ABX4=","LJxHvEwzKqwVrGi9tGSuGTp0XBNRx9EjCyYfpAuV32k=","GrE188gfw5WnuU4LkRU1kQHsdedq36FFKXWTk6F4nIo=","MFIdQIL1i486ErfI5B0f2WgoSs8SFD2FkH7HgtPfr5w=","G5AQIhAnmkK3+PJse9Bo3YK3bNP6LzMBRWmKEfXtmW0=","LprENBeQKYJs28YksyCAMNTwsmXkqOHHC4lRMQM5gJY=","J4TD1x0SVYYYVJbj/Hw2mZbnAK2Xg7I/QftIPN+O7jc=","AlMFQokh9uNNoqsFw7diJo7Rsbw/BqzdHdXjJpHmK6g=","HTAG5sVyXhe1gotbWiNxb5ptCkyGf+0swlQ9wKyZ2qk=","FodnMj5Ql7sv5mgr9qyLtbj5rwcf8mAlZHOZiKOm8Lw=","Cl2AsgDn7gBQD1Jo3DGeALeX0K01iYmhXYr1UUIeG9c=","Jdu1Qj7ip9eGH5mC9SKww6rm3P0OkFCMtlUPck17goI=","JeG5cqp1dv8ACs9+4QEXXR0e8YJkQV1PyfTFwzYqsCY=","J6nGcOaW7FKHuLYGpcIxrg/jzbdk4u+ZrSVSMbmFAP8=","Jg1mBqHbSFS7NY+kFc4TzhFDFthxp6K5DREsout73wU=","I5ejdPhKKaWtN5i7zlZ+tjFzDHRafTieZUII7s7LKPk=","Ee4cYWME3M8CD4j2pI+kByEm5k4nlv+6id2Ts6kfHy4=","BVrgEVILTsW1p307Xzd6JS7ph4GowpRNK/CuGGfvkhU=","FwB/dKL+K4VYGvh50TbVh8vhjpqcO6GsAcUM+i+47Us=","IUrJZLNLIQ4DKX/s/Ij00GqF/PDxXjgPlIsV+hME7Bo=","HCFG6hU94R+kgLREKF/dHNpTzCcop5bDdcR8Li1XQEI=","DKCvAk2YOuqP9jQN7p7IKN15h2LBjwa9qSJZs8FYB2s=","AS+Czp2naHCmVzVUiYjm4K8YDG1LXZjFrhq4bAVcpug=","JV9hSjM7E3XpJSbjnTdj+njxPlNffsoqKnuXyg1Ez2w=","DQNUrTIvXh3/p6ruxEQp/8ieTfYIHASbftPT3ggue5I=","A59Jbov3a+n6/2nPMxqEjpKA7aAybVoZExG12vwn66A=","GwsOjdhiUj2gkDzL1RjtxaEpUX+mmJQf2wkl/wPPV5Q=","IhtnybkjJ3OHuR/UHHZU03zrk37mkvvsOv5uqs8utrA=","ElJJujyaxMWcHc2qbeKaua0UgPiz8CDkaGCPZb7FEVc=","AmTpOQt7J4fErjXZ41Ng14B+NBS0B3tTO4U4GBHR5zA=","Go36F4Oa9c2sQKyJxf8jR+cMF3BuMmiM97GOCdGbdS0=","At2ydOIvE9HpwYbrcQwrPPe7A3jORiJsG8oFj4AuHaU=","HtkdcKHg4inYVmu8qvY7CqoyNtxy3Hcv+1Jkw0D5Rc4=","JY2XFHSMo7rWKx/JvtzK4C+IYWQJBlgNaD8hExxSBbo=","KAlPsMnOP6Nwc956EmG/Dz5w9jOP1ZjtrvV4SSl68gs=","AbJoJFlgokLY1g9IMJKP0Qsr2bJ9inMd/faUdWA+R3k=","HM3CxIJJSWgYYYhzrOC79Ks6Py9kl/k5vnMzCtGL3Wo=","ENe2/XxxuraIf1HsVjmkR2gtf9a6cQ6PsU+B7XLHH2s=","FKE2oeSCfXB9rMko+L1SNMwyfIo+S6YADG217jsSV1c=","KZEgiEL+tcmxHGGA21f0ecMonJu/K21eY5sU13zCWFg=","CGQnbwbPUFANUcwtbu3KCS8e/R41cXyRtRgcZuqzSF4=","AdoRFcA1kB1C1RKwO8KWLS895QTK7AjxhDfJA2OlzRg=","DOTGFSLPEYtm7dLd32g7QH/dHQAhPy3r+ZY7WoopdhM=","IoIr4Uc2x3DdERAYrTpIGJedoi61Irs+5LPr9PlMATg=","AkiMLvPOzfmA6CavKYrzuBztSQANCe9szu4ZTBPzpE8=","IrO9Q70TDA4umJ/QYz41KAXqcsIUQd2xT6Kk1/9bXr0=","D/6hHZALXBPNjkYy6S0o5V9LArmuGC6yYtn8BUxZKs8=","FKzcBlk1Iw7+gK27Q7pW5IFcxT4eu/05AEKU2eN2ch4=","FfwefLgZkktvrqUfwa3sEM0eOtrA0KMkYKDUqVoDxqE=","BUfRkSg0N28ANXkO5/Nqtzycj0HhxPvNdzm0x2diLFE=","E1+fTBb5dUW5zbXOulrLmk5SriVeKmniKzEUVzeJgJk=","CM5K9A195ZjFZPDDjGYg7dyf7YJsQGCqbCjw7bM0XoM=","Idam2XElkpbtm3KHIQSzQM7bkRnEd0tbCKtLrSnBYec=","KrxiKsNfUCQfNlKqli1LBFyM4bTTp3xRpcrpmVxu7rQ=","JUWyjVT9zr5C+KRWLeEGHrIWJyiJU2Jg1fMt7NvEyC0=","KFQmDmPcRdIq/SLYyf2MIuHaaPQXOkAou4hb9/u0reI=","CV1U5WiYeufDedzkbWeFN6JtYVWKNwYJ9JHP53jo+5w=","KsA8RAyK4PdTpPYz5wS7QfjHUcxGO5GXbcYxVwV8+NI=","DOWXcA+k7wfM79Juo0bDBhjrQr+aS315GpV3NnmJcL4=","AsE6QCf0FTs2gKKbcmjh6veN3u+fjRrAhmWVzZUDuDY=","IaZDg5vjUaTzj7uxc7Ww617KxPeLd/aDDaaA71q6EcI=","BTsHxxzYZLIROr0HBf3yQs88oBayzlRc0Yd6tEujXMo=","GInHBQLj7fs/IMizL77arVH8atHKoUdVx+3eUuHUujk=","FoZrZkqj9ijOnhp5iHr3H/G/INTfbnB9UeBf7HuO32E=","CrR8IBrTFcciBBLhwwS4ElRtSj2E0P9xx6VwGOfceDQ=","BXe/yTsatQ7GIiV87ts9L0pUhgAvdYHJ/zzSLzpd22U=","B5AKo1K/lZ5xjlKEpEhfJBp0oLt/cwFmwpfkSHMtbMs=","JjXflWt98/feKYzp4Y0xCQfmXByWUCxpPRvpVUurRfk=","LnEV8da7df1a38hyYTkiqhcvrZopSDtIcuX9Icg3QwY=","KOMwtuQTrPM02+rxlp1WaXfcpna0YYrCelMLbIWeVyg=","J+ghwgUoaBPhMK2ZGsvixx3lUs6yzDTucnZm+Taw6C4=","CCImhNgBVJMPli3feLLFZWilnl2dohro8GOtrMnCw4s=","D/t8w8Be1KMITb10MRLAXyVPz5tZOr24LiXfxbTbj9o=","DW4R2bUe+PoSsDT9hwaP3CLwpKP3k9xslmLrnrkV0nk=","LF1t3hjSiwjZGfOYHl8nqZ8sENmvUmd9JEzPZIDGlgw=","EFgt/F9TmcTJUlUBKO/uIRaaRyftnhwUC5oi227LwPk=","HFj9pounS9U01RkAbK5xgEwuYHSrph2V99ishKPe8L8=","JxBEyNVOGmQ9xG3bkJ/0B46VNOjSOowqGRbJxcKx2Mw=","GGxeJAFfsLahQNf17OwTKxS4WWZ2jOGznCA2XNP10zU=","HvUoEkO9I+Gh0/DqqGU+KmQlVq+BZkhZyBbF9psTZa0=","Dpr1MhXiNkk1oCclibXDsMgK8VTPps9klpiF03z6aLM=","DApcm/EYoHVASFoCTxz3x88GiIJ/bB1tk/YxXGKgIzc=","AnUuo830EBaaK599lAuTAfhVy4iP9V3KjV+g8UzPtMY=","H0hNThSvOxHNJX63n8Unhf3Nj/FS3Fbcn4IkdSiePWY=","GKQuIaw16/MDSmt+g2r2uploa8B7Hugo/RjOJk+YrxQ=","F7xPz+Fn7XQIABZ+TThkMe8b3yTGEoqWTAJ6r4eSL6g=","L8O3tBCsrgFcY3dJ2f6Q2JQCtrUMnYRHdTFsIEu0o7w=","IwULNmZ2j6kRhs7Yh28MNZmK8+5I/7FBuEGnkhUejhg=","CRuzMrNdbkZHiZURWQA/aIL8hkqHv1KJlxHoTXppbns=","Lue/bOrbV0lhLT8yN7GB2DmzLGa1HD4OUY1hluP7Gtk=","DlA3s4fN3suENGy1wEuhyadgAlPHXyjRTJOJFoA8oBg=","FVbYcNObtQbbtpzfFMwIMIC42BsUUASAkMrdkQ7HOX4=","IZlN0BLBB6Fl+TrX4ovKtzRoZFJmzhI2QM+qgzDbN+s=","LalCVthDCU3Zvbx1tsiGNM2qdubSuyx6S5wjJg4oFE4=","C+CpLtxI2wmAjVCgOVaz6EfdpUgfrh39B314Idm1N7E=","HTMsfQdcyBXdMWMHGJ2T4U8LueIBY4V5zvP6dFaLZi4=","FajVjde0Q7HgR+MwuZ65AHtI5cGkimXwTCukDhNrqYw=","FfC6Ji68XXItPP5nu30vwgN1+vXO54cWoyHqN5B8eUI=","LPtBe167sAFe+pRYaHzZLKwSudeMZAM26ukZNPs28eo=","DTMbMiiIUyc3dByMtTJyjezd1+fDxUWdgwqP9Dlbnco=","GIpIVZGfFLeQAC2busx/wBGYDj9Rl+U8UJubBNcCPV4=","CM7pambB7X4/l4YHwYj7kGEj00P0u/AtAJIKZtJD6p8=","ILYcQ+Jk3syl2zer+3F1IeeOzyXQKb9LphFCbxqC1Vg=","G3C+onOkCqp0ztg2nVYRqtNFKAQZbuh6OHBFDCLBzQI=","JMI0vWxz4XJU76sBUFCgG3rG3IKjNU1uE2qU91oad5Y=","KiGlWUcH7vGxBwyjnVU+x0+Pzoj2T19JTjyiuAencEc=","Cc3P1QOVi5AbPG28FoE4a3/Q4zgxPjveTuTMaQcXXzU=","A3IT/Wua34uYNgYSUyD3PsOLHjPe/2oOcZ6oL7XRVWM=","K+W1XYPMb7Mux1joPsV29SHc2x2hN0zCrgIkcl1tXYU=","H5uYUKOS9toQ/QCI/QYFTkPV4gS646s4UJ2/oYhYkwA=","CWikenSNsjtz4aEDmyqyUzupGhLtgOMK/kdUwDyhyqM=","GmJHherkg72O+dga/tDIYSv+RQoSTiZ92DlXq/aj3RU=","JawkDHEmpkLusSmLwZh22WnZy17QlSzURutUiWK/FYY=","JxUbztFLb1M4O/RVO8koLBfbu4y0fB6Efqib5D7BZ/U=","AezivsLeeJEnL48vEfygwAyq4WLj/bBuBUih/ZBf30k=","J+hW3yJ8/32Tzx0MBaENGEk0XpnWlWpmWeoR19c3TEM=","G6hZGvHFikXfCQNHdKg24xWIQSfWK6ArTpkVe2K4xGc=","LxH6lALFhTvTCBgcZZbc53yVpDGSjRa4U0CYDaEuUy8=","GdzN82eDlhoYyOQyYY+r3QiSzBfL846/zmOiv4RiMu0=","E1DspajLwsU7ap3xo5rH1y8Bg7/5+/0BdX8Ido3VLW0=","IwWFr3WCtqTcZiBw6zfrHDV4Vk+AqGcC1aBG/nslEnI=","BSpxtdrtcNEee7mrGmEwz74Bk4PcFPmf4rUxCO+DEYM=","B4Ud3HOixvl7igigW9HePciOBJEL6g2DcWTyxXTD0zc=","BpmVKH/u9buplsvFqDG6ABCV4ms+a141+XZf799GDo8=","CmkgQVC9x7xzKXqkvxVrB/pYG6Le9pJOKGjH2uhMdKs=","IP2fvRU2oz3qzfJ2eLcENsuBcF4mfNw7zWkmrSYoURQ=","LrGi6vFdtdV4qSHY532mL55iKCu7Ap8MskG2AhNk60A=","BR9VvAl0zLdeabef1pX9VOIQrTcDSDa0AfLyM5edXeU=","DqE4bXfA+JbQCtor+WMDsX8bQxin3V2VnzyKscJdw7k=","EeL84Ot+ZOSI4KY5pfHdIPHbkaHNvHn0cRHg4BSLTC8=","ImM4dPta5HdNHwKpVadHX46SmrZ0mhfLyw4SZj653os=","HuJhO47V+uqMO7Xzj450J1KOUrNqXNEUyNhGW+3WIT8=","Gz7yU111mt0Fq/Qt3eKDEpJ0pxMYg0tWGwfguYlayyM=","JKCE6sYAYS4HowxfFlG5hD++/iXmUHfxu9TtdeR4vDU=","BJwuDn4XehZmjo1qKDHSC/UskVWGtSvjpTXDhuLiP7A=","B2nStW0NSAU6LbrR3dEfcmL4DwS8eo9h3SxKk2FbYJw=","GqIKJeRSZAEwX7JDLIl86DxOTa+dS2/FYJ3w3Y0Mgnk=","ICFNU0Rp8Jaaj1ezb21rshJeLqYbISYUPPxm9zd2Mq4=","AsJbn12w/u/HLqlNo1/DBccS4RYrkhyVlLjJs7kJU0U=","EdBtXNhBSImyCfCCZOH2OLVr79CnrU0cuRqHmGQm86I=","ARGMZjOtu/ofCLc9woFI71AIEo6UlG5H33jlK1OoGBM=","EMvQqXEkPBAM/DRH1Zh3kLYEIGZNqWR3sp7VgVnTwLs=","LX3vpWIYsdAuZLMeDYT7OdQGjn/vL45HwXNAHVoBvnw=","A1v6Gj8WRyrQlkpmA9RMtwqTD0U4qyNdXLHZDnWoqTU=","ChcjKXQq3kbn83YS5jf4oCYmIMzYOIkvP8vOD2NA//E=","LFjEh+pgdpJC0Z3YIwoOEKm2AKBVQWhYFgyriZa9dH0=","EHU7NhaO9IFMvOipIXb+DQQpKUp7v1YlmekBOJcjRdc=","Bcq5jfsycLyfJ8YVExXdsK8LKSZCKX/XY0h5SWdas8M=","JEur0xQDajUwaLOH548GS2w8IaHkN5xkA0hSUouMwoY=","GJ1uoZdUIMFRCPkol17qT2Na/oD7FUP/ZRjF3ZibTvQ=","KDSwbi8x4cLgE7WJwwZinViMlnfqO0cp2inluTFyfhE=","LqZVc8rXBh0gi+6T1vcued+3qbDFjRw8Q7KVt+28BQs=","Kor68yTcoowzGcZCyTn+44D7sJkr0AwNUHuyROefO2Q=","JwDKlkRWISLG7BM5qevQYXD9g1Ds2JP0xLVMpxTozKU=","CI0gumPVI10Wk1HlrlOCpl0KDkVCRmYlxJZITlJ8r/0=","HjsraSdG2y4yIdMcLJ0q9suuWc3qLfjJ1h0JyrVDZRw=","AyAUDiw2NOK7xuq9Z+MVBZNAnhfIqLoU1roQtI9Xvns=","JfzOrnr8RJz2+pWNfQG7V8DK2Wa4nenbBJ5Nmao1xjw=","LQisfD0e9EJS2jxAqqfclVdgZy+72rysmI+F3X9hZZ4=","B3I7fzTDGh1YxdZ+jwCCoRf3e0A/Qjg3g97XVQEojiE=","CPk/EaYoWII7V+vnu08sf98Kma2a5Sa8dWX3/L7VMdw=","JQXAiWb0GMu3y/GGByzaNHi6AwzAijHU3INT8U9f6c4=","InMMd7rO7l+mxWB+y+usD7zKCl+qSKs31PSeYD8zweA=","KGbaj2XO95QXftmcoOXijEXjPwWab9jbi73YPze5O6c=","LLvRafSjLWebgYY0tAGKAKITqrHfdYzA5e1paRTSeUs=","FS1n2hbSSgCoKZGIbG4YQbtY8ZwGRhhTH2b+7nI7rfw=","Bk69nwDTqpJQL23fj+6W56JHrwdJPt/1mmRzzyuHe1s=","F790ML4O0KWSTsaIm4cOOlrh0AVDLpZVlyZEV746kgo=","AtjNbE2r+rRqB5JzxLeJt5IbaJCaad7ftkl0zRIo8mo=","Bhbn/AF4Wu8WcA3XQIYOFEVGTsBSQiF8HXeV/Pr+0L4=","GNMJJ3szykgTAeDKPUKogDPqg/5rmr4sLn2TBhox88k=","B1JIEco1f8Ms88VYLK1mKwQNzBXwr6PgRVBocDGYRlU=","HsBl4OyVZA73T9M324xuD9ehQUFi0dtFu+Ujs3OUEzk=","JHF1Y4azSWwhgOaMasa9CEL4zyAk1uUZo3ES6cKwEV0=","FbFnluVz7oSrhnbawEGj0rCIvOWxfvQ3s9zFllMCvHA=","IY5vCRcxhor9WspL6vlvz6yYrKqmbVc4AU8BOcAv+kI=","EJ+6nlnPVSA/6XHc8yYIpX5FqtZKfI3KV9tIEdwXyAg=","ElpsBRp4FsUWa6yzZHv1TxLsKUXKalG8nfGQUc75sZ4=","Gy5mIdlFjNXc3DDj7/L/00Z3st2K909NdCBJ4VfV7ho=","Duahhkq4XwzGChk3KxO40WcYIaaBzd9o39gqDprMcso=","LF6ouNIs9M5V1KOBHqSs4dryEnqSx3uzvKUeY2xd1aM=","BHaevZSfQk+SXgnS8RY6ZgLyZ4X3AaD25G7vkaebLYE=","FMpWMfcwnN0nw1Ngbo671IuRGiOdhrRcVYm9Wp1WZPk=","FwheCRzLVcsB1Fwv66HIwYyjgM8XYV7dENP9uRBA7MU=","K1gGLgYJf0eEMZhFipdLx7qIqvAbu/q3I1zZkMPsgqs=","BfGXQra5y/FLYi5Vtb9FvHJjlTPBjJiy3YEcTdZ37kk=","KvTLo0szZdaPWwd1vc7MbsH0KXKvSNZIIO/xZuaMRYk=","ME75Zc/AzEzeoA6aK4SH3XkWUrr22YEKXv2uOSwzTqI=","DGtwBQ4X2V6q5n4DuCC+e88F4OmcQMft46TWlDTCzk8=","FSBRVnse19b00oZOrx07BS7CgDfOcJrfz+wNzjZPrnY=","GWp+UMtRfiF2nR/b6qkqu8BAx2QE1xRFVKSoiye9WlY=","HbpNbS66hDObsqejL5zJeHJkrPaHUErkxpqLGilrmgo=","EU+zWDndtXw6gz1AMW7rKOMiIdNP+Gq5ZQetdVxNN1s=","FSCG0SR9qAUDllQSvKWwIPCRjgX65PQCk8XBNWsBWDI=","JI+GWVdMJ7NJuXw0A91fCPyq/J9gallpO4nXQ66VL+8=","ISEkzteLsM0LcI0fDdo6jk9bQssyRuemTs75NeX7zi0=","CdaKcX2EF4ZNpxaz3Cmmqm4t/AtmHMlSa2YCanyei1I=","EAnZAzAROH17WddYQYyjwHQt1q9+yi5eaImsNlGzKgE=","Hc7ZBgTSnMZvWBAQhxPAlXn6+rezF1sS91QPGgPeaFE=","EtQl2pURZXBx83AOc9OjV8HbM2iv9RSNQNOzFcPPTVA=","AnvcBo8j+PkofIvlVGmAmSXf5SJhCJE3lLR4Kwf/Wbg=","B9kJGW1svSCR57ZtFVDjdys2CvpPlkavh5ACvSDmdLs=","LFQII05HPvpyaWBOc9EnM3E6R7VScmMy38WId7r7hPQ=","CZGpp1SOPFxPCUc6rGCBXG4Ey8cTi/wC1DNG9GpbzSE=","DmxuR5JtI4aw23SyD2d4xQe/ksP+XrwmMn7xvFqb1X4=","Adt9f1mVODM7/cG5N2s46M26J+jEm9gZ4I0o4TL/8hE=","FODSu7WWnB4PhoBRAMKE2Pb2wcEB6Ocjmjjjx6AGJnw=","Jrp4TgTZLvWdV6FxE4svK7v5nOuy1brCHNhsivUQZ1U=","B94GnrzWfdWIDQmFSa0+HLvnTyGbjFP4vUkWapcl9yw=","MCiUmw3TPgFaprRgaR2DfY+5udXnCHe9g98DALSg2EM=","C18sy4TbPAPuSEL2Y0edmwqMsI0/HX7UEGn+MBIAOPM=","D1ajDcOW1sGxePaSUwlF0YfWnAgoFBki8pI9+k2T+CE=","Fqhzw/PNgP1qReeCbspZFRwD5OqMF3eyC0+7QtcRj5g=","InR53UpehuRN6Abf/5jQXuLFFI9bQqWs0HdHrHHHtHQ=","JH8XcgTBORpLsCQc8NCE7Xn4H7QElJjAA7obIlUUmU0=","GnoNPgLd/Whjm5jtzKZAm1EaTFCKrEo+4m3s86t0EY4=","BhCQdHFfkBlhid4oCvbQyCDI44YqvWml0FCTL0QiNfU=","ES751GTi7Qw/NIYs2VXSlijDEW/lRSDnYwm3fKkbwv4=","BSr9NIiodbxE5zxU6uasBcrS1+GbSA9QwoWLjsWk26w=","B/6okRt8KEH0976k87e+fLVxCmJCl752ezE0R/sqH50=","JTuIu/RhDRWTTX6Y9KEwNmL5z1R7th+l8QNbEYNzEuc=","EO+PKh5Uo+CNS2QqW1hCB4hRZoQ3CUaWkdM4NQKDSog=","Lec4wB9yUitpgsdY4BVAxteSBA8+oVKFx4ZOO/ksjjU=","GGmgXCQ19O3iyjP62ECweFfv3mX4UJMl4GoG+Jswk/U=","BEo8WJz/GwCVo7uiGMY8RRmY1UNiQ7oek/cm2uglk+s=","Dt8VzEerUKkuVAFLVkMWiYjiU62ubwVR4jnSZdEPH80=","Hd5xo4jhqcsHWv1rahM1RwHgQfw0FbXWthNUHUED9Ak=","ExAXNAgssj+b0mV+y8Md6968iG3LWhW72LEgyKlF+Cs=","JaOnwSisb/3f/sTXoXzTBErQqzCLl0Jg8IPDn/cpN9U=","DFqTg5MBb/oHHjufL+PFjKMIOWeilOYu2L5WVyRmG0s=","G2OgvuBwct+zozxj/QDS2k5oKtrcZm2xIFMmAIy6bhc=","JvmaNPwZ6n3/6carlnGbLO+dONQaIJ6+dLUbL4sPYMg=","HxiEsc8/42zA4KroisZoY3XOZq13AIe2ay0cQB5Jg78=","DX8OIgbWoJLFAsoltEBFXamOadf9Xk4gXFF3qKTfgSo=","GE2gn9Rf26Nghh8SX7U5D1pHYlL+cYiVgs17c9qYBQo=","GEB4FWKVXMGpA1+LG6ZRyDOwcZ/igzM8JJyLJjuwFXM=","AtB30CfzmJbZ2LGmGepgYykNoUd9BtaiRLSAI7bzzcg=","LLqPMFsAkxCjYRZ2mioX/yIwtJFeFWxDwrXZyXeBNmA=","HhxGsGj0gH1oMqlovp95vKqZC2SThErXJPios3u3kho=","Ia01dAS7jNnbU1XlzEedwaoeSPxsdvYvXRrnaKDhpBk=","AOGc6LcsZFPHOjU46Rn0jU7uEfZgm2DPQw4Ut0zqxf4=","D4nZRVZqKGt7xjuTcDbUD+WP/zsTpv0ep2dutmGU0Gw=","FealfLtTIggDxOkeBmtIOjGLqwviEZqGQ+0c7LphE30=","HEXIhB/V1OZ1pGyZEVRcFOnkaO+D4efGZ16RcD8OIyc=","EOqT8CV1EmwjFFiyD0t3SAoPEPU89MW28du7v+jYigE=","Abu3eEsfSXG4t0txTRcmbjpFAIgFrHQkdxQnZ60MX/E=","E4lB+09mas83T88BkKQcyG+UKThq18ogT9wsoiTDQFo=","LImR+ztilc1nFiYx7DSR71T7pxcnwilXdAVSyCWUNCM=","DeZrJMHU4uVngbxinBs5ideN+tYocWqEOjLF20GMdQE=","Dos3wW+2KBJVyyd5CsUj9f9cFb4oax6C2XO04BBLsqU=","D7QQZ9/Z7m6EC4goBZfUNqDL1hUC4GiYz4tf7ZKJyF4=","ARnBnfaT+Ap6ew5kR5qad+9LjrcNa+4H+8M+96z4V9s=","KCbA6zrgt1yWz8GBeX9hM9hDS4EgWL0Yh+carL8JV5U=","HROMhzNBT3AevNMZpoWBeAN6qwgrgE4hQzIqh7ZHfHY=","IuMsihqeIA1+MdaeQnfD5nlJSx2XDgx5IXWH5JVdfAc=","LVK2VYK4O10T8ojWes4ixcUfik8HW45tdmCmYK1c9uc=","Li5wSMCg24kQ4IJ+rdEko1lHyyYGSiLnk7TUq2q5Ahw=","I0+dls9IMzPBP1IkpA3UlTcNrLe2eZ4/k2Hiq4kwQcI=","C7PgAiLNPXL1SZonSd1+Nsji1V4lX+gddYoQcHC6SBw=","GZrlK3VHo9pfVL0rnKncDyHRFZTrUqB5B3Wbgu7nZhI=","AaPYBI2tCVgcGNGrLhBmbT7M0HaWidYSGZwmVQ86GBs=","Fma6lKwss6WMXMhu7HUTU6FDkbDgb74mOFE5bezA/Rs=","FcMDTNecrnXAC3l2gXxZaVmJFu1WNEcnuBGHKvQELo0=","CGrGky3mGpzkGLYSUChR4G1dcPTcOx4e2Oosbfdbh4k=","D0OnDIZOeoHgV2uyd2RlYUGrQ7GZJaG006F2i8city0=","HbOit8a1OK0HBo2XUI31/7NKCeofmO0wOZrymD+hRfQ=","GxU5HKhSN+6OpIVw11lBbxgmqrNOqH06PMNUfRfn39k=","AmOqqfnoPCVeZ/mgmQH+7SaN9WFR553zRUJjQeDzjzM=","LahOw493B9XXH67q7eeT2ZDwTozdAWy7871lwSkTghM=","E66d7UgS0fTSjTeWQrp7ebstPrgdzSI+iRDFXo93vp4=","JbGBxyVQACwrEwSTfv3DSg1F5wlRGSnOoGA1n7Ujv2o=","LRQfh3eOuvZH8tonq74FBNRkQoOPOuIarpB0WD9rZLo=","Bc+1aY9oz1EwwUv9TId0Ggtl4sGX9ZSDHKQU/1PvVQU=","D7o3fmlJs5CBVAhchFeimAzF6jRy7DDgmWzI3Z2jHZ4=","LqW8Iv0+TuhYWsiD5XRQEhWXKyA+IdPKwztIUtm1B7U=","DbL+hKp9E3Ry5ysP+8fnanb5Ik+sHRs9pu41pcck+Ns=","EcgEpBnEfcc9sasmgpea/bBCwSzjSaAN/toccvCk2yM=","FCPfmcie/kPD6Ar2mf76u4Yf4NiXRiTfwZJ9J3ba8kE=","LgfB+Bu6n44b2JFXh8p0wEYH6Dwwj02iUxQN4OPLTuA=","G5Rcyxe8J+EKI5JspVN7SbKLYzErMnjNFtsUSrJ/o8o=","CumCEkPgO36pNzsDInXTLdTLq8k3gfNtUyt8ydt6V10=","GPLmL56Rw+OZNYI0+moMkHw/NUH8DOjvG1rRNdQcTAI=","F9eu4pLbo94ZQ8+DNCVPl1SxetelosVyMO734GxASf0=","D/dfj/c6VdSGvu/Z9di/b2+dMbEKCQOyT0o78hGPmDY=","L4IZ88fBSNyy84xpe//TEA40sOyNz210Nt436d/GWk4=","Fuwe5qdPed3Z0UIhZlnZm5Ej99eJAZ7LXPOgQ/fYIOY=","D+VhLY5f5f9OIkB4y/OQfyUHjSYE2/IKaurxiwIWtX4=","CAIZd330fOoLw4UkLFJj6uBrKn6qymBbfd0y/gsM/I0=","COkMBakJEECBXsCOsUIQahsslO7tUTLGN8+cDEBAPnc=","J50s6DRnMf3uekmQO35u8TYsWZcOMarwGqxR3sf58CY=","EX4AR6zSK2H7+B6ZzBPiufHY24+zg3hZLUQ3J3m98WU=","ArxwU9yFKVpR0PjQURidoi8y8iJIfsnsOdWhdlLZQR8=","B5BoS00muagyJc9y5gwCZDLKU3hnjrjHRN27bmRfwBA=","CM6p8CUj6dy4dwmBLh94aD83OjOJV3RJHB1gcuOrB50=","Gij1VI6+LCEPNhDOML/xzV8CM/4EXw2i0qcGH2OtNfM=","FVFJGqDgNXhyQvW/Q1Ga1WG2YBApxW/IY8Y0dMvGcT0=","JwXnNVb9KYs4z+az0ELk5fS0V+kOfosWo8m1S0nGRPY=","Ge24SGKkoRPjcuAcODW3FnvVjW7csDgHjeUH3IlHJyg=","CTixwmUwK35BSJBv4OkPmt43VRCVDUdSJKCRXb0qNCk=","BDXWYeGNi7KLuhpGSLc69kRBYjFi5bY2uh37en6IfAg=","LOcc4kMWYpEeoz+Z3dQiJ7FHdXOyYfnTiVf5yGKGssw=","F8ddoVIb0/RLLtOXmbdH+0/SgDioelCm79m/OQYPHfQ=","L6GOiVleaZk+qlf3GroVqLuD6ahsXa93B5RWf/T/GHo=","Cpe19zB7m2tGFNvdnKBu7YD6jsY2AIYodA8EZzzM2YM=","L7AjI6jbe6fjvqeGUqPdUP2QcFy2Xy+ZEVzlENHukNo=","AQmEkV+8vLLH0FHAagAgCCPGQxQ1/zh3iLh4NLRqZF8=","JfrvtUrn6KybNRbtRFNoRwRfmDUP6AIO2yT9Aoy5XnQ=","Fj6ahYBRZjhkBq7EMJFlbfijVBBJYKxwl8hdIQfc/3c=","LgHjn90gnt0AOT28eSc3go+B0KJXBkNsRYaKQMI/5T0=","HubKAVbuvtQ6fwJyYzjJJZSEY0iD5ky2w0/0tFnc+mE=","Je/7S4TCwJBuu2Vxr3oVEyXGrWlqwKtafno0NmqSP0Q=","CQGFCG0M+9+UGvCfboXmyRmdpBwLKUwEniFD4tG/lMQ=","GWkho3QCDy989r92t/2Nuq4Gzt7Un/lIJo03KNC6zL0=","LjCoipwaSN62a7H+kjLXOuzS2Bl2gisu1DeqnBEIBXc=","GPyV77hA3VL03lTNAjsLVS1X9Ums3E+GwWNWhSJTQ80=","C9Iyawyq6m1RQbO+Rw6GXa6Z2G2+a9eGGiLvbi2VwIs=","BN4ao/uYB7Iv48UD3LClgyU0DqC1pQcC5idnAYZVqMM=","J50hZXs5tpQYHVCBgnlA9ubhJxoITFX0Lfxzehh+uYk=","JZSpQhXcxsc9ZFELrDswQUq84Yzb/rUJr+bXDT3Jeos=","CVFC485uX726mIWDPGFLv0WYlbbOoQ7fut3bJ23dKSA=","BPfHEigezFbb+Lv5X8GvRpD0GbhBMDQmR7460bZ3MmE=","FQwpW7BKYoClz69w3j6Zj4pCRIt6juVtH86oxRX85IM=","BAsHOuoBtVlIRis8lpZeBwaBukLZJwW+q6fqnOWYN4M=","KFhUquBCw+phbaewKmsu8wl1qqKpCuuHE/GJxMqjbJ4=","CrALvuICpR5C7I+5tcth+RZc62UraVbBIF6N1TvqOwQ=","ARUuGRMJHN5fOKa98KTrDrtQGVS3IfOFmgqiYs3hP4A=","LfSpOOlIiCWXlELYXdpShQEXG9CbeA1D0bLiUy6KTRU=","HRBDPmdsCNw61J1xrAJ9xLK8byGi+z031+npWBknmnc=","CH4qwSzRJnoEkJP3MMKkYa/2pCnCMeX/7bYsxSZ23yY=","Dzdpc3pENA5vyf7btrdghWgm98OmyouZP7AEEYcYrDg=","KfbVSiHMAgmADuYTtEWFJS58NdPApPAM8YqCIPNs928=","ABBt/WoF98VQBMbQeScomF45LWPG0i4YO3bBPNTuRl4=","MCS2ZT39aKGrhe0k8wv7iGkMULmWDa7Vm0YDMfjjbj4=","Lxea4/oWc2EQwpEaUEg31xx89dJ6TIPcRHp+pU6aif8=","BXdA+4jtIcb0rQOtSaszhmgNPQ+13sxN/mXiwYezl70=","FX+Fc8wfl3OzhSyWW7ALwRibyDNVx9gx8ciBAG09IoY=","Idrp3oTIlvs+Bg/kZ8fdC3Rx526WGjsw03ZE0g6PRJw=","LXbro3+QEIu53O0/naGsrVop0qNU7dVCMK+pt25HA8g=","IEHqQNSR0vEGKGI3JxU4PbiXUIKAUiVbHgcfmbo2AZY=","Jbk54sQMbgdaQsuJaLv5KOPWqK+NpMx5yb/HLWghxnM=","LKjwoVl4LSqy/07Nbt+yh+9uWh8g1Qz3p1qLB2Bc5GE=","COGCUuzVjehadPzypd/YZteA6LP1khU7fnwEcH0vH/s=","DnQvomuECK2rqhfKfcor/BT0Djq6RqLW6F0+O6DFdn4=","KHQ8rT2HKEKtI9rml4KV0mF52BJ15S3DCnr4Cjs/2n8=","K3ikd3LfD4AF5QjMR6PCo3BZ/eNA04hsLq/nmur76Gg=","FplLgVIp9m+Q6I+J4Ee07NP5GlfdnuXppWKUwvNQr3s=","Dg8WzXUEEohSDtsYl69asRuFpUX01kL/sVf1dyEpQw8=","GwHo6R13Pb1Kx1YSL455qp8BfaPhXUhlbQfpj5pz7wQ=","DR8lJbat9QE+nXYXCv5vURdqRJfBWIyL5XXATlZ9My0=","CtFQKUWIWdz/4Q8xb9zBNFJ+qx+XwKawmU4tFuP0UhA=","Lu95A0+Mwu4E8PGIEVwB4itB1Cn+sqZrwjk2HupK9Fw=","JeQqIeZemfY/BbNs/Ehel+ct46o4qFc9ND+VzlDGLa0=","BsYsBWQEqjEGGXhhPJuioFLvhTHu3TJjvMNMTxZvfI4=","F6aYtYOnaRReMHeVEigEAj+Cvjdhis3BINQe7e6dTP0=","Dhy8wR1l4hQJKCF5Vjqz4nOFk2OwvunP8Ggc5aEfUgw=","IguOwHxkkZE222v/y6zZvLwqVgv+mLAsqdKhwWIN0K0=","H3GVs78Ympl8LU1/jRB9kcKtU1K2PREc8UJQXC6jVkU=","CUbiKl/hJSzqdJcwqmNja3+ZaA9imagCScOZw4tWZwk=","JHhYdb3snuLcdlYNr53CsBZHIYm3sqfX3ZnoYykxO10=","JNbaCv+EU/ApUx6akMq2lsQyn9BdW8M84+lJ0tNRBbo=","GV4+IQeco4CTvduxFZHNutrM7O6R1EqceXOA/StwFRI=","G/9rQ6RT4WsrEwMjMXzPaMARbMTmmQj8T+qt68AQIJ4=","Bz+dX1JpTYHvYohPupoxQy6MWQCHYwJmqGuJ88Dpx4o=","K+P+TauEwYzOQ2+T1JKnPTM1whpvtvPDJccPJ6sHF+k=","KA91g1DiziKswCIIKMN0ETwKBFRyFt7HZrJmntaHTbU=","BqS4qqNjJhwrpj/DHnPEcEFSkIJQ6613vXkC44HV8lE=","BhGBNcaxmX+W0wphlod+4KEDcTuRAEAnQQp23Fvf3V4=","GomysQq6Ja00RFkXBVuVjxITBfezFIn1Du9HRJTDHAc=","LjTDokuQ+lr8s7krQFkcOAOSHbS7FHX9lJhBJ6/h9MA=","KfTNZLfJ2qiMHgy+NsC1OEC5JBr2vj+jUoy9hJXYm3Y=","ETA0+JnJr4RlTuc0z1kHE0EoUo+MovxicmGt4AbcXaQ=","DdXkHk0ALRf9MDoYLHzk2hwSwp5SRalOZ4lg95oDwiE=","CUlSOaT+0GOjwpKKQkE/As+a4IhoFG+ABU5tX/Uxy2c=","FUhv82tzJVKK/lMpgZhLbAamOgtuJbH7Jx9juMpujYI=","LYquHQgqYNtrOxqgskSSnON8E5J+jWH7DpGPAaFOSDU=","AJTrtVAdrlCz2GgxFwD7g3pcaem9CQCQNgFhb2k1ReA=","H9r/rK2sQbYVSxbJqiyIWcQv2NqQg9KsB8zLJuaQx+I=","C3WEzuHHjpAwF+Oi6D6BWDDbkRiltHebWU12SqWyQck=","FBLoVNqKTJ4KEdJ/8MRgm9co8uDVZqVswpNvNwxAyHU=","A9NNvC5vd6HRKu36XhHeJ8yZHEnt+zlu504mnvXaKYE=","Ku3VeVBG28bJE3g4gtSkVGOVDRCKfmkQUyuhofTTF8M=","Cl3OHsXH0ZkdJ1+R7S/qN5PtxK+n07Fx1sotXsiA4oM=","FY5/ydFZbPBLrICkn0qTRFs3F4qeWna+JNbHCM04lZ4=","CNcwYdmDYQ0wk+BegPBJTOxuapdS+F5/YEtOZeb6WV4=","LrFtkjVqnOLHNyAVtfFqsYl03ynPU/F+H2QdU2DX8gk=","Lpv7HAcv+h8USLzzyxiePI0EVIV6k/LbTB8I9mUG1tQ=","BNo66czyPEQlDunzIJWy03WMMiOquFzU4heRKHuqTQg=","FkSVdJzNfq4gXKFPSIK21an4TXCi6xJl5+NhkyJybl0=","HIGzkz4wLiojBSoe3oDI7ceggw/JDU+WfBPo+hmdupg=","Ded5AqLaRc9nJ6boeQtLOH0mu+PToQ+PGvfXG+gqzrs=","D7yPHzn6VvUB0hjMQoPZ9PfFdYvxIa6Xl4oFRrJ1oiQ=","GxWImN3q9XB1rFoDPQaVQ//ZIm7B/J9f6M0XQo6fnCU=","EKm6fY/DYkm3HOOCgsVQBHwHI9QySFm48zwHIzFX99A=","HmK3xT9RDmDBzLeCZRXADWLrIa7gCwoSu+0z8/CkEBM=","IeKjCXPmAUab049p5r/l/GsfLFRqKY2+S3We7Bg5l+g=","H0JWwBK9tzzGMktgWbGW9mB8ge6+DO/ON/uuNDoNuGI=","KDgVQG6AyUWraoC0t5A1kuMyX+//8g1g3x7swBwxCTY=","DLTODeBf/t5nCKe7FCRUDXgRliRH3qB7vWs+JP/P8/k=","I/na34LFIt89C0HjGn9rpTIw35BGuKM407NxJ8utloM=","IRMG4Z+2WuEChti2KdTMe/IUWrds5RPUr8tdBYpc0Fk=","JvGLsJ7vpwJX2UBsU7FwPtMgLufuKR/2awgHV8i8q8E=","LWm0ZCP+eaocoH3JokBvJCRXfjv6//WOpQTBBOxPfcc=","B0ZbozAm7SPcz3bVIVwR/8jHUKMLXZ05yyrTGW0sfjI=","DkFG3ueM66aIdzgQ5TJ5Rq4g8EesT6ssxFo5C01G1ks=","FiTpYLHcVuWHbqiy4hFc219gpoiYY0V//67qwCBm3YU=","H9DjrieGykHmVb+OAkenGev9843w738BLuWl+TWNesQ=","IFLDbmuJ4YQObRdMlmSaPS57UPJVjL+GKgXDaxd2lqE=","Ese+gL9/+J1p1i9cJdHLgp9ZgYdXjS/RFYpH89ybGH0=","HnEiY2fPDmf57h5bubzsCYoCJAA7xyTwRK2mPw3IhII=","Gxrv3ifUAJ2pyp3RTY2cVGp8hOZ0eosf4qVh1i1HMvk=","KPtvvoDRYbnRnWTGi/0kZ9sDmUWeTgCGmbujsJAfW08=","JwNMmhi1X1JZgF+W2KHZt3Fvsch1cfcfE3sCMUkUzhk=","LmreSe6W0rmc7JTHq5CYnK/ZEdnXT2uWkTDcn2ECyK4=","HvrKPVroel9o1PMRSQLkgKlBbWkzKRTgw8z6ol6BlmU=","Hb+hK7HnsM85GVq5iy9P57C1I8Q/YXeLKtOOF7ZguOA=","HSGtxZW7NGKqOV6drMZxU6WsTiqByLqD/jN+ZNmYHco=","GDoDH2UoOixXqmG5P3H46iqn6piBsKTIp+tiqZxipOA=","BVBdcD9//9Mj3FZ5hy2bv96BpYzlosT6AEoftXAFs/Y=","L6lLk2NuUJpfu9N08RGlSXTq5N+oV7ySfUY/0CxmWy0=","Lxgk7+5rkMcojbzEF00u6ykWitRoyfNDPRg9OP27YNg=","L4sAQ8erffElKjZaZTa17kWG15v07dTOTU6hI2p30pQ=","KgZvqBF1SkyN9ho+7ukqeoBCD5JUHQ3LBuraMSf0s0Y=","LdSDl1vyEk+oXcpBdJGIxPdNqBJ+zvvnjdlyt+nZ4UQ=","A4dSJNPQtAoWR0b6MPeDXtbcvOnSPcSjxB5l4KcPeow=","KYSP7mJlCN4GbnBG2TzmeMc2y/5kg5sP53R3LGUUwcY=","KKfYrqv8HvqlFchVAkjjRBKifn+my9eNILAGfBJWejs=","GVB7FWhuIP4rH5jJoeSVs2/8JNwUmtKfIzlh5kFfkrc=","CmG5aPUF4HBL4vZ2smfqRJCNkp/4Y5vcQUSUWwB1y5U=","EJdaf3BgswKrxNXNLo0rXTMNQrMb1cikeNenaFkFn1o=","I9HvO0LQwVPWIWNPQ7JCMr91yQ9zxbwwuF++GLTImiw=","FbZr0+p5hsfSlkEXiU88Q/4CuCVtLJwYXct/jGO3qnQ=","CeRqjO+onFympblh+9lF8HJVr1TFP3MtMmGUQrj9+OQ=","DnLbSHJsMEkSHL+9HAg0WcCmM81pU4y2M7h55K9sa9k=","FvBTCduRs504rPwd69OakcxEQzDD7URYEhQgFqZNeEY=","Bv/97rOBy/OXlfg8nWnIs6zLLYf9bOQnD1pmBt0M38U=","GiUrHzR9jYlK9huy91xlz1/KGiIR3h+QXPOfptOE530=","IxVhu2h6Wqiq9+HFlb8VWtLZPgki2rMn+5wfJ4dyEO0=","APjUAw6sk+xtp59jBM2msEvjLwNugLQq3ao1HnAHkT0=","L0nd9WXLUyTp091Iu1cCLMt7R5vhI+AD3j8symzcgNI=","Hf7omHaWwy3jBEBjdyWGVTH518PXb+6YEWVqQ1vwaE4=","BYIXveswZVRokszq4hj3/fOkPCODzu8SOH/CnU3HQ4A=","BfhCOSqaB9TH1w8cofcrnjtc9WM+GZ6/VLokI1YNT1U=","GIsIB7eRBdy9XDbsxnbC/uYDrqByt3EvLrtpudF1Lks=","EQP26gnK5iHsb2leB5KaNgN8Uu/LtJPxCvE82wBVVI4=","GkD4ujGS8MkpJItK7WGcgaIvigvwN0XRU3K+Q3sPwIw=","AIgjt2JfhKX1yaiJHL89x6NHfaIVIAukIOUYIWRfnS8=","BSpJSvPs3vUDHYeZTyZJBdJfxsYme2995ENbxhYfPzI=","D8jNGe4x2gGNDGxZhW5ro2mlQpIxET3/TI5T1Q8Vd74=","C+zohwj/RH8mEDVgDZmxE4mqByW0Rsno1UoC6P8t48A=","K8L8L3yTJF8fXtCrbEzft3FUT43+ygIlDZyhv23C75I=","IrFvgyXyosaZB69CaAEB5Pht6A2QG7aXAxDfob+AX9Y=","J4KCPVGIz11BTCgM/Y3sgWrn/zbA/azYcK5kSfJabLY=","Eto8kKzEGJtFsGofdBWY37LZwk9FkSDevs5cX+I9tb8=","LYGl+fpBc/WPdUZDSB0ICJcmuse7cHj0ERtVEGta3ws=","KG28mQFABG4eJjeIXU0pBIdfCvpRIZqyt1j8MstgDG8=","IOejZ0oGZ2bQQiY2LnMhm1TKakJYJgN16Dl/j8EVGX0=","IonzIn9M7rrgwdxRTeTGQvFTFOrpN7OaPDwSR2kT/N8=","ITJR4wp2GZDyf6GXBCb51EoJPdBFJAFnBqEYB1OqRhY=","CRZVYSqT9b480x2ySMe2J6LfKq+h72n38nZZwT8wGe4=","GvYPrzSwV1XxlBGVsC5kY7tC33bBKxDxT4sWJQa41ek=","IbQdDv/SsEQMDTtwEjt3MZA7+0bbPHojrP8Bbq8Qf9g=","FqCHbJbUW1nd6CyPHhAixcrTFjjE44zs5belbECNhLQ=","GFMp+eSqhdSdQqYqtPZB1ixf3t4XAVp9efMWS2kPZAc=","Ej8gjbDE71SVYzXRaucVJTTS2Lp5PWAfFVJJaWOeo+E=","GqVlQnjeIjgNp2vniFOBwXhMgO9PS7AyrNE7CXOcJjo=","CVW4oWd6W2MQrY4EkugtEEShTHjKh9HjDg1/MxbqbOg=","DH/v1O3Uun2SdWtRc5KJBNGPm2/plaV18Oam6I98Dlg=","EW0YiZfuxqHiryrsil2x68XPpYj75UkPCN7RUD7K+wY=","JY0u7Swt51nws5S2o8zS2W4osQAY8+f0U5Osj/6UfqY=","Ip3owpZa6sGqftt4+/tdf7Euf9f/5rmzr7XoiDSabEQ=","Cx+w/q/pjWz2NyFw1MWVrdpxcCwOnUHGyhoD11GPg6s=","KFoFvpst/Yry0PKPLjL1zOaxU9iA2Kz2kGeAymNsTLs=","HYJA6ZAjlO3uK3YJnbA9dN/5GFQ086Tk/oV1lpzk8pU=","IWC+gjPOGwszGYk0nsS9mxJIZEhRCDHmQUZ4sxLVf5M=","KSm4OdRL0rP8W/LMgV7nkQ25ls1bXf9CbI8Ypa2rUv4=","B9DUPD9jNwHl8N6tVRbpS5H5dyXkaYLRmd4DNFkg7Ag=","C5nCfa/5DMBTs3EyYi/dxf1SvOusEnCxzON4p/Ajk+8=","LpUt/MkkwIECzKfpVl7t/s54llCDuFOsH0Eox/PXhpE=","IZC3f5YzkQZtbSbz10Yg7DXlATdrUpnNP36cI7Vcyl8=","Bb6RnFLS8dwNCw0WH3unGVUQIIquu13OsIFfKpEWhlI=","C05LPKiqg0Yiy//7dubzD535l9y/k98ip77Mj/mgZy8=","FiBSKojDtTHEXVHlNj+U+TM1guX27hw8t2QI0RYUT9Q=","D0QuomiD+OGIcV9YQaaQyys45HnYrXB06JPvGePHOQo=","GoVb++gKeIatgd3w577dgMHg5NG7AxMOAwNdU7WbpxA=","Bqk4aGEiM+PWCY3guBJmSQNswUsc48exkUmhfKogtm0=","BnFCSWLpI9qSZhLpwGYWZcSmfFJCZ8Rag97lKBMNTEQ=","CxGXmfbuZ+J3XNSnGoxdRVuCQm4Armzs6jK19Eg7bUU=","JtRo1V3DHNXqFBbcoPfqUZBkK3fK+ndB8SMyE3lsFls=","J2/P4X74IYGAEElL4K7SSrwaQerKUxx/XS9xKeroAyU=","I41AyDbbchW+oUVcySttc/UQBWjXGm0egavvwYwh6Ts=","BkxP0cUO9Yffx9yszUq3rVx82wIwzI4ONNds45n7Sbk=","A3GGafFv4wrcOEdKdUBq8pQx7LV/PbG6e2aZeweypCU=","GfEE+Qu8A3YtYhonSjJcSfUHP8UMR9uIXpRWZiQhCY8=","JIbJPv+iSJC+pO+a5subj2X9dZG9hNU1t2AinAzie6c=","Ke99PqMtljImn7Aik3x4qR17yqBjqBjFkkt7ktAey/U=","JtkefM4dje6ryNfFScuxvv8MFSy4gZ6GhM8gUEoCUvc=","AkjQiZO167JU7Iha8qONPkFcStFU61Nha5sJw5NK0Wc=","IK5G6itwHTebynQx3NIx1aBTin320l396czX3QJRjbA=","CkhNb0uGV41JGT5cAkhoC5YUlQ2OOR9SffD0eOxR2ww=","BnF/W4adJlbCs1wB4oxWlysEv5fsp3YT5bjKkrz4Tz4=","A3g8cTA45UiS3Sp2/M8BGaMp1jOsUz6BHlEYF8TEo1A=","DxO7/sHH+puUEjVXGded63N2r94NoOcOLLMfdS5PnTQ=","JRrczOUxfJiTdw8WlKN4h8/rJvH6rPm//2yuyTphgqA=","D4JaBvxpAXyp5XLHMueqhZW+b2yqof3Jg7mvEoT2Pb8=","Cjzy+zCtLHNYl12W/7iV3o/c1h9067JNPxzW0lHrqTM=","AlGy4GGxLFYBnsBMVNdEbBO7199G0f2RI9b5G5v3ekI=","KVFwLfoSb1C6bQRjvkyjThLsjeKBgHX7BDykcbzC03k=","GCyfCICaKVPmRlzNNhtXyiilKbuVGjVWQ7cInqtxVpg=","DeofZA4J3NaftFAIjNsGHfRjDbYpLx1ghcEdWua2+FA=","FXQQ6+DooMgexwJTvBYCLdq8znBwxQnniqG7b0nhfG0=","EXsJs0c4OXxhY+9kfWCWnW95fP4fS0pVtZSQqm/1WKs=","FXN+WlsxNA9K7FeKc9huTaYcvU0aVLtfufrDZ4p2L+c=","GWsGclE/J59dsgDRJkwDwexfC+AAJVo9JW7cPrcT8RU=","C73OA4unkjAM2xjmidLgZ4oJXmnhCjpWu28rGMB29pg=","COT7XhROLYZ8VcyyzALGZgYL4OvD9vqpi0CXSlPc2sY=","JUzFOuiu3IMjtUakBRb5rSeirBr++drovafVai1rqmg=","GixA8ZhN0jON5ygQIK14Tf2TbKN2qL80kcphywAocgQ=","CwKhT17V++MPmLa77puiXzeUmUKAxjO33AOjqb9TIQA=","FSKLRNuZFeVq7z/Q6WXyvQWBZj3Nx35baphpSAdEFg4=","JO+PojIx80yYseGcDistJTLqEEjwpFw+xgXMp0F2Yxc=","Jc0FqSZ+IeLQtX8i/AfKMyc4pulP3i7HL3Zre91FZqw=","DO6mttht3o1jE/fW5Rme0jpmNphMi64BE62tmKz3EnI=","ImPAcBtJMG3x139vGhRybStu9GW95LlQSS6kAvkBRlc=","L7ZW9N8ChBJI+YpGMDaTN+RD0YFuFqPB8ITDjwBe4Q4=","Dm+e/rQY+gtAFnV+EuZBR2C81FmOZB2JSqJFxvOpZhk=","Aklsc5lRJK4ARBUbtpj1dl+CcvOI17US6pQ24s27gxQ=","DfPEm8ZbcIe+yxlAmU8c3Ouxb08hEho/ZiZ542G9aV8=","AjQ/a4AYbmyuoq1N8mw3Yoqv9xMXYaGA964oufu0sxI=","J2uGUuYTPsFkgQ2vuqQM6Pw6MPeCZtjnxhsvsL6FRuc=","K/CaI1yJ/r5+VvAC33sAQhS/ANoRlAGEZ5CerZXqhf0=","HvkGTCD4Pox1gbYJrFcr3PS24fs2jKvA2/8IrZW3PnM=","IQtBjil+7j2k6As8k34ZBvWw9V2sAj4nZGvB3LjPjoM=","LKnm7lmYwq0GdTYkB13gdxp9AZ6Jptb3av9Zk2Zb7r0=","F0ripdsy3KTVYiZXXx5cT7D/6n7ndksfUd3H9SVshqA=","GGIxnO6N4+5NY4mV9pPzJFRqUjXSKVLN71IEDYu9kCU=","EiGQbJl5jN62bFDxQLi1eeAyEozOCRebsmM5Dsr5zUk=","CE3SWk0UGnI7Kcac3o4Lu1PQMZJvsNFNCRN+P4oSLx8=","KTQa0E5zpuadOsZU1EUKOG7Sx5R7AXae0yTW4zE4FBE=","GqsNyWUWH3fu+ND7TnLka/3249cY6sTlzqF2M5mT3Ag=","GFLBJoYrdC/+PlaP4nrOC2df1d82FVpmCZmFxwDSaYQ=","Am6r7lwaXBsPviJBd6x6Fujw17SMTvti7tlqkxIC8MQ=","JotgenVJiqhqHrZdtfpypUtBw+jtnKWnB9dhE7zapJI=","EKUFHwZP7cC/wOx7a+Vq3flNEHfdv0VqGA86m9UCm+s=","LCeTjOTh4PmNXlM1m87KWpwiBmyz3Q92VHHdhf9kEhQ=","BgOQogNFmWOO0NvCkDzs30kPHCDWBfYrf5W6+9Nno/8=","IQnn3EqvbLKhP/Yrw8vQ680+vfAiY49eSA0BC+/+x8s=","AQaVnhDOaBm9r0jNXBlDLTWsihZygrRMsKZwPuvj7Sw=","J2rPi84muTIVkbxYg5JgW1Dff3Zr6QyDF6Ge6TyNy0A=","JiXLG+Cf9jxeA0B5jRC3dMBDIdIjQOXujSzErqPckks=","F1IjtWu8dKRv65kaT8VfAvrRrJuvx1x2yj2zpp3c/yI=","Is1uF70UJrE+dCITYG8VWNVhm64l/sab4N9sMeprmXA=","AzMHkX8vBYrmKVYR42A2qr25Gg+586S60+av3yg7GDY=","DHTifVNqYnSoq5HfevudTr+UTGgVfEE1qBmTYyukEUs=","EbIhKgjLh3zLO0pWOc54Je90h1+yE/B2E2nKXYepqAk=","LIyNQggOLpYV1MjcDyDDwwBdzrFpfZYj687rY4um7vg=","DWESTQbNdbqgjUY7mjo6HNH6O/bKUIOZER4gbcGfe+U=","GKjM6eeqbfPV6zVAawzUa4fksI+P3JkekftZJKBzQMA=","AUUyJsdXQrhA+3HxUePlNGZIuaB/wQqsMUhdfA8HGoA=","DrBfUgZ5NdC1UXrduXrZE09muSHID75oVI4MCM+45g0=","F4g6D6+jfQP749pkD9zfAv6oIrz2EtfoLgIX0420Ago=","B1Fsuz9n27wFC9LsIbGLudDqmXF3BZWoXEhjYzsOGcc=","H4bvlHFEOyalnaZ+HCoiPkV7rur/KunwCQxVDDC/4tM=","C4TsY1XL+0OraXCdT+2QZoXwJhPZtIYS84zeM8aenwM=","GsAWtA0w0mcjxb206dL8caG574BlzQjM72bKmM54lzA=","ELL6id5FRWBhdqAEVozqbDOBvpYS6DgVRnzEv661hfE=","AL9WdKXqHOb9TLdc5/JnEOUQY5s0NU5Tyi5mMbQE1eg=","L+FDmZO9M3g7ohxewfKNq5cUej6GZIZt0EZo4EwBN7g=","L0A759OMpzNnaKOpx/ZWaShTYo9DeKdKUt9Ilv3MQDQ=","DhwXG6oLo+gl0kLR1wRUuDPD4j/onn4iPUjezYgX25Q=","Fy/IYcgioEWdJ+B4P8YDQJ+DWRP3O3HVH/MaYvbk+4c=","G7niRUozw8CMvjHddbM9nWZCzZsKl4wCUfW5HwgjUjw=","KSk/hCLU+W49xpT02ZhGzNbNW0p4ZiYl78cgNDCNTDo=","KbN48kRqmjHzfUdcgwaQUymU7bZLqkN5ThPx2caUnRM=","AYqCx0utiqx7dheUdg4JCs9VqPlVVvKqz8IP2YwZYW4=","LB/ATe2H432fHGOc7UjdjJ5GYYz0khhjfbVHVZIbFkQ=","KeoOHgFeXK6z/xzm0nclAud3i8+j3AN3ytfV7+Z0sr4=","KhdTxqTHxDcWzjNx8UCmWQPSKNWTneqSjsN5aGEPM0k=","AtlKo7tUmNDXfvHvxZUFGbECk1DUdGOUqmjoUmwJ4d8=","CPJpCE7mN2IKEXgOq9jo+WwrBLjbYCfuiKe+hQSF2/A=","A6v1U/taS51Qk9O1+JihEaQmHCQZ8+BVBg37RdgufbI=","G52E0YnFoivJvikmYjNh/GvnxxTQeVNkJ/x6cL+8u7A=","I6/CAEFPI+dJa0BGKU22kKYLz1y3LEGmHsc1E2XIhcE=","JqXObqY7/Z5uGjcxiTjU3aDc1f6dbCrPGr3SfOFFN5k=","In/AQS9x++SQIlIjeFnwuKaUmQMWkYrWcMNFTvJV+c4=","DGtEin3q5Ir7/PNMt1jYR1aPddcknepNoJqQ+WxnK+w=","IYyS455i38EZxMst7ZUS3CF6mQepqLDtuWonUWn46dk=","EGv5KgF8MI8Pcm3z0FFapv7sHBgCDDgDM892wlAWu6U=","Hyg/6hckTwQ7fDXqHnGTFknPcABpJUasVDplsYyjrao=","H8X1jloG4ccOvz/Sosjf/nvfLCwXm4F/wfQdGibufa4=","ItDXfwrkzZOWz82KJ6JGMDzscP7dVL7vbdhskZOP1WA=","HOURIS2GiFN6XgOZVydumTWz6NW9RwRcbVg1EI7sXw0=","HIPKXfasR3rnQjbEn5MJ3fUqQpD5x8HTCSwRMBLRw/Y=","LnLaDh0dHKzJX4qRPYehBoivCtESlLNQzubRKKl0Qu4=","BFXujnVSvna458JZfZeHHWECtJ6yzx3bb2gbfgWw0Pw=","EHhj2vTKwxjdBqsU8TIVl5SQLjuNoXG4hI0+2gTmxEk=","ATKrr4DjOsSJgtqdXS/pEZHxfxkQ+9wGcxcXtrxjqdg=","E05FZ7KQ7ZTEexY/owSsjRTwD54mN19imahGdw9KrCE=","DmwQCKbWzzBKHdnmGUo2DB6aptdlouUyihvitSNRZPs=","L428D4bNMwij1ZipND1jijwvVulzbpHw931Qi/04KKI=","Hu2pqcbYoDw82e/RvqfkaEDWxw1/qC4IW65nNH5dp9E=","Hivco1idIrwJMVYig3/riVVyBah3FM2AEfsm26GuD8Q=","H+uVkRIXW6byq9nWBR86/zKpxNpFn8XzuqFmt+ASBKU=","G2pL8vsyAxuYN2VLH7qKygS2RyqR0F+WMgu1vdOt1m8=","C8IHYmDbeX8E7y+mDGz10BTYl9MgK+AJ/F2Opg3BjLw=","A5pf8yTKqdzWW4xEvdHUI7bALkBQrYrpMa3m27InPMU=","HlDB96W9ipZhTqJn4MIgOctHCGcGOLFuTE5rS6CI/zU=","JDFRQNseA9NKnokNhfs3hoYa32SCEhQb5vAx7dUbjAo=","ASy281oY2UhccqBzxPkDfdZk2Y0BHokr+gbfi+ortd0=","FJpSjnMDEZzgZt6dpBd4A9d04/Gyxtq+nt/7OVFIFhU=","AJkHOP/sxvjcDmtSab0d3nTG9q/Ud3mhGdjJY9W2XTM=","FbMZ5PUayJMe3mVC/5g8su078wdy5oG63ky9ZGWfx0E=","FVM0P5Wx/yJqbYUyrz5InTBaCOjVxTJ4fTUaXDC0JvA=","Ek1AwVTURU0Q4lT843OYboosobQ90iG1Wo+40ZxaIxQ=","CGMmcvpCNqykP03+oFCMttOJXb/vWMX4D2XqD0jBegM=","GO1CAuCB7+txBwIa7LcG9290ZuXjYQH9kmdMaQvaNqk=","IrYtY+Tap8ZnTcl/Q9fsY/qc/gR+rWAeujb9N12EAJE=","H3a6GIRIwtxQz+KrZcqmRihmxeMbynLRLNfcG+fsFtU=","JZtJaPnkwyiFkLtSGyvvXzuxswpyis1FYn66RdcyYN0=","GhryQYsezU660kxaVK3M0AkHKit+26wEoIA4cPzfIdE=","E8SI77V22YsvWMJloNdtRQx0wBBdIlprERgIz88T6Pc=","LgJ4kz2UuENMUqNk5ao51MAuJoKVgZuwpMmZsV/ja+s=","JvxqD1YOV4EgLpXlhm5nnqOqSnbNi9T+Z1ULtObB21k=","LXzgNU5qRX7V02Ia+5FzLQLlyZJIeGvougxR2mj+lIg=","LeHbbat+ALgYOFlszmbouwqiaYmmk4bOUGFWDyaTz9c=","LjBoCQc9SgC6voNub+SO6o5PoTuZMskoZB+rrUlE9Yc=","Ibm8W6e94Hh6IKiqnvmhfVauKvwde9eirad1BtFrZvc=","A34SI4Ap+70O9IoyV3SApNn2Y645oOO2xq0PjDkUxxE=","BiNA76GjBhkQ/shU/1+pA33ddJ2f+9WmKA6UmLt7npw=","KOLsZ1LQfmRXTk6SQJtBdob3JRJ/FWTRZGxP9Evrnew=","EIHbOe9BlhqsjP2vuMR4WoR8ozSKm26vWpXg/088RUE=","CsA8SK3Wh26ouEdc4W0wb4CupiKdCLPJhmYvu7eiI3A=","CZQTZsVzQ8V9+GB4LVP+itwqddotDxdDZKBVqn6gfY4=","Dck42mCrkYLHEhyKoEwdlVwfcpt+prvYw3uli3S7Tc4=","B0Jr0S1HaeF0hA1KOmS0BUHoXtht0h/11xvn1+upMOs=","LKNFEVOTN88FRxyqOsZgTvBwWz0uSHTbF4d/ajotZms=","I9scEYAi/KkN/JoqvxGGqsCcIjcrWmgUg1RY0zwYM6k=","KCtZliYH7TwzqfmjaJmiSSB2jmecQ7MZx4GswCDGhVg=","HOxxmk6P24OD1URiPPsuz1wIet4DoSzCAgYN3yO6oF4=","J50UkOgc7rc7zOZuCm3ZhEO3EasTF6MeosF3GMU06kE=","Fo2oTrswP6k15w6FMhsQtnYHOSVh5v+6M2T4iNKnFaU=","Fkx74TZ7Ig2qM7X49jfpIAxDySI/1xxB+5gwKHyvNQI=","HAnpl7or0WJYUsUOHWq+u27Gxhsg0cyRsBUISUIWK88=","LsOFou9Z9ZQWcRKxSR1Yd1IGNLsw0A3GgtCJ7kWDNsU=","DPqe/kUHljgG044kZChzaCOLL5DhOublIOxfHl2hroM=","Ivj+4LMTKpU7sPTUrMYhtaU0QD2SL5v1oi5RLMDBA7k=","FEc902UKe/FAdDtDxYMhk4I+JQbGDbZp1xxj/Hy7Qr4=","FvkTlaQvaKkSFIkg5bnDC1NuhPFcp7UJ4RXjOgjfRcY=","DZ9JTuZ1wlDL3/ScvXhgNtiZEXUTsWDAJxyLpvrzDaQ=","C/NtTG//QQHYTdB89tCpyeWrNG1fFMkYWvPbPhPWl/o=","I0UogKfLWdOT5ZgCZvHnUsaGtXqH8EH3XvExiTJXeQU=","MF8qFN8VkLqk1i2kwWhCNiXj5yHyDAwhoPtFzsovV/Y=","GUfwF1qKnzvkkPYDiEhngVM6wL/1uHMKCLQ1+KNAes0=","LeQXqWC1ZqvPhtmr9JrUEUTDthEN609H6jYiVzRedIs=","E7iHx3WS8V2uDSD6JTMOGSAdVXLfJEuY3CsDvAaDvqM=","CXs13Qsm5GgF4W/QSQzgVgkW5J7x68oh2rtKvyxEU3A=","I3oDetlqNgrtWTfTzOOO2R5YkXsUPxcjO8LXVFbdQVE=","GM3ANlqN+rz7BJQnCvSCLCmm2RJOjBkKnAtIJndK20Y=","FjQov5ZghZZZAWE6HN7Z8o1ip00AHmaEvD9qR6izv2s=","Ha4NFfoYIqXlm5QNgbOvJ6W9P33VCBZ+pgZbbUnDMt8=","Aq3Zx0zyLR5JJ/rGdUtcvMFy1K3HWsH+wF/4/KDZd90=","HttWLltDdjJKC2R7kGkP4zZAeNwhLeCtNvX7JtFPZ98=","MB3al+KQp6AewQDlm1nXj+QCGXOvHZ59EBIx7Y/pofc=","FwoRXn+w52pO2wWsCA3STdtcJ8DJSzs2715uxU65jaE=","KXY4FVd1nyTamfruLWxQWb7pOaZvsyG5+ypgnk1H6fQ=","CFjHxvn+x3zHtsKl3y3WMSFAcT+XzHyFA7TXxsge/6Y=","ElV8YSwPdxjsEScB2AV6HcMBzMMLLIR1pGvK01FNOaY=","GrBj/9/6IWpbzikA832Bny115vAMZ84CS6P4Mt5k3LY=","KEk9BGcgaMam6U95yxrx1BUrgjVGNjWJSZwKFBvSpYA=","Aj755dRog4Dd8sFsDQioMSN+5Yd1eXxn2VxuDY2K80U=","EJMyUQByL4g2yvML7lPA7xTrGEEL+RVXCzJ//ZRkpcE=","FwVHnPO9u6941PED0460dBPJM1R4ADgQiT81JZ3ejVU=","AIlsK3nP3aXrf2+e3jq0d87uKziwaBdPFaOze7izSOY=","FJ8TvD5OKwUVs3iidH37qQ99XHcx5Z6fNr3j8E61DLI=","LhQiJEi+UMBo7P6/cJRLWTVAxylcoOR/K7f2MZm4cS4=","HiLAOWAkuj9tsYGskrIppRhxhwM7E4+yehz39thwUNM=","LFoeRTQG/NpdWGFDU/CimEL7VK+I7Etz93eFY+BeB8Y=","LQja5vH7fgJQpmDnGxzTGFPCJ7GI2HVZIWrxxGXYq+4=","IVUzp3d2ImZkEYqAgdh+ISoSUHZhOeo4x2n5PKK017M=","HLu7JvmRpyHHvfg17J0e4MB0CS/NvwB55N86wocpLt0=","CPV73Dx8lWgfAFUAQnrVOZJZ9pEEwiIGrsL5kSKSTo4=","G0WTjHuE8BdvM1IDIVANEpfPl6pmmWZP24zNde05kS4=","KusgkESGjKhEh7eRbmtAM+5svvcm4mnQ6RasLP0/ut4=","J2Nb0q5+DKyv8Lg2WWYHp5JAPboQrDcGyeEZd0A6PrI=","IuWTt6Z5NQJ5OBSb8W/OB/6ecmBV/AzdB+fqoX/lcwE=","F5WWK7UQAjahg95JFp1rg6Qn7evSNxG4lpTag8vQh8c=","AHf8jXzZrbwoPCUyG/N1mM3yiCftNXB89Ih/zkcHxDc=","CuW0lNFm9qMkQtHQvVm2Xst62PZXG3dIakXs2CfdEoA=","KSQim21kgYT+Y3Ga2nBB5pJyzf6JVFXXfwFjSouJLIc=","BR6ECQPdq9vyIQNnSTNoUUKYHAhSpspq8MjRWwaHFtU=","D8UIt+Ygu2xHqFlxv8vijfYmGcUwloXQoKat88i/L4Q=","GfdiG71lmyfRibsyAQuV/CvYdzkuK1avtVisX8Dw8iw=","MD6Y7jW/ytKSaAp5VuC5MvfFcsChMa3sUAbY8pi3Ibs=","GnglPlf4JbDLx0LYeSOyfFH0pTHRI1qKkB2ZfjGy6gc=","FeIgk5umSzo6sp3r87CISkxDhadNhF4g40Sef6LzkyA=","FgSGtuYh36DpASOk5D/WkiHsGw7HPRlkdrUEvM0pC5Q=","K+60JATbirXieWJLrNthSyG1rjhvLCo0p5j+ynYxEAY=","JLQHUAQW/7BFmx25dAZwvbi+itu0/Vr4/pxLXsAh8OE=","B/X9rpiChcSbz//yP8ESO66xA7/8l99oOaDDUGt8BCs=","LOm1oI3szkuFPmfSivbrTHVce+6BkNeAavBCdZo5lQM=","HarckRw+w7jl9CyxIwF/H78W5KouMt6UsBgSiEW/0CI=","H/gLFpYXt+5arvvuZ6pkvWTdFO2O2uFI+ZoW4/IgVlE=","Kv9ozTjRiLirhcAI8wDFCIJJi1Bo0807grWuAjv8buk=","EU0LP1TxTeRcxNtaH+scR1DqAkfY8k6Pb0ctkutwht8=","ErYHV4wtNJtp4PdWhQ3MISWPha6NjKqKOgIc+NAqu5w=","FMaS680H/O9VCSu+lQWJ9H3+x+xPOkKUSwRCaQeVoFQ=","Iinb37kq5+uDROtW10bQcGdjfXX/pDnts9daiwgZnyA=","FvRkisR8GX/FcvWDUeSwB3OtmivK0ErA+HOlVrbs9r4=","EtkNVcjT7BhN0E9cautjm+pwp+PQE/yxdDfrpmISL/Y=","BOLEl1a4tawmr52TlBHK+H8VYm7EQ23uvH3AdJBFIW8=","IZF9cjoz2yZrB/gZSJVcRd1QeFfp5ZgYMdNcVtvQuzY=","DRO0aqG0EWj4G00jZRImjCPnv8QQiUi16fOl9e4MJmE=","F71zEnXWAtF8objsR8sS3xpLy7njsCom+GoIsu7x+3A=","AkDuYBpoI+xpikvHdOba/C89HOwsXIn1vRNim9xpJ0U=","JmP/nQ6qbpEFk9EQItPHe4d6O+2NAH9vwgeorXW/JSw=","AsRbU/py16DXokSrOrC0H8QOnMOMu+KU6MhKcsfD++c=","ELuKdTGrBdIocogPloNNI6MZN2I98/0pU4havd0SIrc=","IiKVDIoczBwhIqNT0UgnRNQuYSVN1lO9Ja5p0rp5sDE=","LD0+tyBTfS3ee/uO9iZdJsnW2Rjjfy6XAw+9awRFfbQ=","BTmmluFRmBaTFClt5W3IdDEuGeWzUY711Qpyz5ijCJU=","JeKl/h8VWi7ur1DQFmT5b31ncrEIrFxMv6XvWh/NWtE=","L10+h99pBKvUVO/KnMMPFUFkIgyeP+8n4YEuCHC5D8U=","De4g5HMcDnVC5OVD6L5sLt5x1uqoIVluT8nmjoncMA4=","BhRCwTudH7M5YVzYr8C8nhG+dBy/y9KzqSGUA06dLlQ=","I6VhheEtYjCg66981KAc0YQQ09LKmR95r1cW/iKZMSM=","AzRLe5rbFaO3w9ZP4e7DU0IgLuPEo22y1J6B5RdCNbw=","KEt1HtYdSEuitZQKGh7h7FNtOSsRPQbbSZWwirZh5nU=","FwGtJqQt539NWKTIGR+dRzAwnF9LzQxtw6Cqs5Y0CCA=","J8rdpRmoNwEI16pukQL2sp6PojhswCllk/L2NEn/PUs=","JibWHLEQuwOzJxLVnw47Gy9bkFnrmUgHsmfkrSYe1pY=","HPMzCJfFTyXxX16LjaV77Qhl8/qEHsSEQanwRXkVE44=","AbW8zp1pnlWkkNPYboySyDpyVqf+uf2K9shNaOFI9k4=","KhdRBdFbo/7PW8snRrPIH8jKRo0dSqmZ+7qo2BEgJu8=","IKI4IpXsoKYciIzvgRFa4GN9fseS0w7Kag8pinf5sms=","BRVJu5rbzibkshiynKeeIhy2kcmrWyeGI574EmutLlE=","CBylNJ5k1gvKCAv8U0yLMLGL6kMJzwL0THEYX+aI4Hk=","KFpADWGly9bKe6p8PJrKVQOxf9cC4AQgvOczI4LAuC0=","BOG/jJVbw8hwgmLj/xSL6iaK22YqwkWUeeavLnNECyE=","C74ZrE9cZ+nuwyyea33XvIBZyR9QGy8mqSswvCaLC0s=","JySsWOHqTfGeZkS457dmXZJI00/7v0xMqJNMYI0uj2o=","BEZ4jZVCav6oMNGmyo0tCFv7QzDLJRTf/WCpq3D/9wk=","Dh7PJsKGyGq9kQwrN6xAv8DmXLKRQmmmpqrsXN/1dY8=","KaJn3J89EtYBqEkUiiRJED8lcTCDsWEcOG19DAXqS6M=","HcNKYOeDtdr0ISVYbqKltJ3Cy+udK5C6iBw0zrmdLTs=","K5/OWFNL9KSGwyIPD/kCb1eMqcQ12DIQJNEO7IK+Tls=","L9nJfwEFT+YcpeB+NoHB3ZqdH4umMN0kylo0TD1mbRk=","AE5qcUbCrAFQN/CoLBvHRr+0ac7J/uN/G3CCOfQz5kc=","D1vrogIK/ecwE7fv4ME4R2LbhhLa4FjQ+EnHODwHlDw=","HF4ebvG+Gq9Lbg0y1ZDcWySeGxu899BdPmDGPgoYZn4=","CVZ1xuHo9tqo3UIGCIOn6XlfG/iBCV6YSX0z/VyM+nk=","BgCTzJ4fVPe7p0r3GOGaEPAzGYwi0h8+6AJxJYCZ3Mw=","LESjXKjiSp9Qk84cuSyNCknFM3zDYBxE5PEuBErODcE=","A+iWI0d8XxNlu6FuyxqKWnDj1cg9UPMHFaQHQ0Pmj2g=","GSX9WG5ngzTRYYp1Y0mfa00AHL86+yAjKENfLUnPc0o=","Ghh9Yt62ObggFo6Lclp2yW5Vam6QMEoayn8ZcQV3Gbs=","FyON3kR9m8bKtmOVf/VMdLR9U7rUJdw7wRSCrUSEqg4=","LXoFk6Vr0zfn6uiphBgad0ZYkctpnQae+7zocRNXApE=","J4OHxO7uas4S8GUxoxK3d4ley0NJW/kKdAtf8linM68=","GBriCXCZg72QP0G1fu6gVoSfSobT154SiSpFJQ4B9Hg=","KGeTTr5mwzVmOwOMliK0HLa/iEAsBJ6RgB1BbXNEGmg=","AWUYcNGg19BaIY2BHkZPxHZ+eYBhUV5DvgFsZnK021U=","DxcJX4orIe3VASbSdRNPKc+5EaeEbVzy2nlb4MGnACQ=","DynqQAl7NPOdAc2InmMZcx2ncwIXFxPimQ6Djty1HOg=","A0UDQY8nzPvcDuJSkRLVdoCHNnOGMVtTCi2aBStgiQE=","LaZYruodt7IGbMmCo6SmL8Iu6papVrjI1Pa58Wm/NPY=","CZiR6PIgW57bc0+wvGyOFNTPLreFClSW/7RNrPvuaHc=","IrKFJ6nifWW32dQl9LL01XvNw5AInTqyEM9GNzVlslE=","JKxBwh4DLxIF9Ik4obqJJxaujUxyMIZLhvO3VXbSSfo=","Dv3hfFYYm13I3T/J1Hlu78fdUjR8DdOtBlOMLLzNhgE=","AfMhob5V5LQcXVqZhdRQ9sI6LbWAzeH9F98eoW85OZg=","EoRjXoqhfjS6sWH8WKPoXsJpEjWTeXpEYi9rxbFKAoo=","GEA6Xt8wy4aA9+uGJkqg78ZCLqbzTv5V+Xg7trzKr1w=","Ka18Xnxe6TyWHUtnDCmYBHF0u/p+3P4osrTRnzyV2ZU=","JoW43scQnACMTrVZrviyiWSHOAh3cNZaik9h2TMwnOE=","BtGhvKdSLWl6k7RIrBHZWXLic3yfbal4lAjvSnAcA+A=","FZ+GKURrJhsX8ruphnnNIV/xio4ioK3a3KoITKcoviw=","IQDBYFtA4WRMUnVx0fKiaNF6icGwJ0/ePBhWdo4TQ2E=","FM1YN2PFqqWWWmzYENOqcI6hsB6GWthJJrbdigwpfzo=","L5r98ldfhESXzPckzcBgFVsp4vRSyVAGv+VNRAIGgnI=","C2zj8G/CO2HmlJCGoniRyyEycw1dl2xNA2x+Wqlg7NI=","IJakrOGcx8DZTJdYT4vR4aoPOKBbpESxWMCk8z3vZfo=","F0KQnSD58X77XGzosj9rhffbDgERGtgOkQ2nOHkmvsM=","EzxIbDvp05kXbIl3eHL29lzEv6QaALEaKwfbeVQaTZ0=","BgtbyblPRUldbj+tXvfCDB0wTD0LXb/pMMiuIiM/w1g=","FsD5KGdpUfrrsal/cN2GuyQ5xPresmAo1p8zEHlJ3Kw=","BFf0Lb2nyzjeM2m60TtoMhdiR3FYw9my7cZXMdKwxD4=","BbxT9L84i19HfVv4xd4efzjvD5THddc337z+QKf8ykc=","INBX4w4lY9fbxdJkEibG9gALy1Sefc25t9+Bn/0QvNs=","FvBXTnwTtBxezsw2+VkHGcMfKUNac2wzrZrBr7kodYM=","G5Yp1WeLGOyl+cUkStvCh78bGolGjlSdF2WDXbX9zn4=","J9gPFWSI/ZA9B9LGRGDdZE1H21lz0Mc22RTj+mD9ux4=","IRl7s/2LZthzUBnN15Ec/Oq6Y7SdzQeRDkjJk/552VA=","KPX0lyjallMqZqLTd+spnekcwdeHAdRKClpcxn3ev54=","Flu84NYtaEESQnb1PLKIg6xefswS0SUU4v6y4Zt5E/U=","FJN4B6LZ1y0iNGmcXzsS8bcuKCshb66RDbVvaMraS/c=","BxQvxJAfDiFOxMdPFoXDWwSFUWt7gn116huAHnjwRF0=","JxTWp3rArHZsTaLPRoxZ/Me+OckxKbnZJ8Kr1oQ7ulM=","HTEQN52Xxcpw2nsEiovIWVh6+Xe1+7g+rw+VGx2yzGk=","Ei+bSABgw15rGwuwISKRsK2+JxnGYOqxB6vV5jLiuW4=","AoFfdvPuypS48sQpgs8YLJN69e+8gCYhxK2Qh2A+W1s=","IorO9ndGa7zoFgvVnJOMXTQAwkoQ0aPPFFUZzhOXkEs=","L28IAMc+C1jE4xY5wdmOV6odezjyQZjdq0072tixsdI=","EtywC5bpcp4+RA7qtW0jtJWSyNMGgm7hjvyPf7EfzT0=","FMk0/duek8G1Of88cmkjF9DDZf16cn8rDUDgRC7mzYI=","H1tI+7EM6g71mtmxJIPte+XGAVE7DMzhzaOoDEWoDGI=","B2iriqXNBA5e5d5SYRENIru9MMC12co9KwdasLDejzg=","K4T+AsME8k+twe3AaR9b/7BQH3voo4HQmaZ6m3qHA0c=","GCfRGRsV3PUaIAvZaPXKnNH5bD/Xnt1kVAbKDK0YJRw=","AWlQoGuStUhe91nQpDlFxIIxsP/eWyKB74fsoBgL+t0=","IRKX2k1wz31D88zXCojBUiTPBD9vrqaKdNb+KCqDFgc=","ChgSF9ExX8P+z16AGBS0Bgp0L4GGiT25Xzn/IXIeTYU=","KGBY7WME8Syde2BT5tInnTSgwYfwKYEIVMgJSG2DREQ=","LNClYhMmePX4QM2iTaTTBgY5hB9TxgOxp61Fn4Hd+ak=","Ic4m6OfIMEXZ55QozZBa1InfvnXKwf5YVAhnyG7zATU=","AUrdxnqekj/4kO0nm2opZWsRRe4qIT48BnV4wXdYxRc=","Cvq033kR0RVPm1ufnUTQjCzpSNDpKgbjpGbBKTYY24A=","B1bdxGhmuiiuICmerFjD1Y0HwMaPhP7Zy+MGoLmgAig=","FeoXfYvB8lTD0pDnLY6+b55fZy7E+lu1O/6vvTDEEic=","EtQZkqzMclhnHh6mFn67Pcmf5idcOPEvt/zJlOMmMCU=","BXCgcCHn8Ml5rkfUL54+NxJJ6ypYO3Bggi2DTmic+O4=","IbbpxNbcd5gpLkkArIn1um3dw9J7u1DEX372P2Pm1wo=","C9c4Pa6P0/GvFpaklzusWjSgHFStxz8a7/1fMfAfwfM=","Eahm/Vnluh2Qw5xaSkFeyDA2EfNFDVLwSHqnrMgt7p0=","LjMOD7KVXYRzrZ4bpiM/2vRP3S+hiNSkrtFcgpebM9A=","LsYUFHZSRPa0Z8XyTkQsk5wEw4Ebmd72TVKxpPF9nas=","E3p3CDjYUjcE53aCfcNy5VqQ8gui3VEyDArHg7Ajlns=","HWrlI3u6a24yqJ8wIAIAr13K8pQBmGjk4VKzMnZeDIY=","H5A3+RiaU61Xc8kT6IrnkQ/QICmaw5TuLk1wO2L6ad4=","LGASJZwzKBx30CxhvytLPbOzMUZVd0d0bJ2x6ru3z30=","Ehffgw7FZEV1IJp1q9w1+mBrJxd19G7be3dCtXPSies=","HTm3IdSNO+nT1RVcWMVFSF5x0APxmp/AxmP/9X+Py9M=","FE72tSmhnFXAfkHShZ099ysPdWAm158y7rHa5XInwjc=","LSZpB9mG1+BzA+LrRbZiDQFkTLjDgeo9FzjXZ0co79Q=","GzG2O5yXNjZS5kzgS4RO/GpjsSLxZP09L4fUnU+w/mY=","GoxFKjGv3GKiU4DXOMbPTlhBxWINqxlBAigJRTfs9Tc=","DZ2BD8faWTHHpJB5dre3f7aM5/qGBDWRDKNGqqiyrKY=","FecwiEHoLLRK0AukrvmkJBAE+K30loGQMjdaEP7NyKU=","Lhf3GK6feJfnK0gfDHeahMQb+s7bE+CVMKfRb+NV92U=","En5//G/4uhlMlCLtVPYbY+WMeuZykoDRtuHogdTQL6M=","DHMJmevawVC21ef6adR/CQhj+rENGUmRGgAVbTKFk/I=","ERQYJUudFu+NZJxaL8QTasV2IZHvYfHvRtNe8Zn5Kic=","ANDjIy976KlWmbm9EVCP5JXgJtqrue/JNe58S3VLyEY=","JRMOl37E9r60rk2/ZPGW9I1g+Av4DI1fIoEYODeQySc=","DL0iynAwAHIWPsG2GslaRelZ9qaEPR96j+9rWykNtMo=","DE5ccbRuJmO8iTkutXdcd2nAgFUdIijYED5UVUi1gSw=","B2O1VzHRBSIL277T4PPY3JIbSrotW/LVmVMXo51Do9E=","LleLnDUnUCws8kj50l5ySyUrH+pdMLloQLFCsGas8UU=","LXJivYnnP2T3hQ5Wq5NFN/Ysr69RFhS8iGmHXjOmk4E=","Iz5e85dmHHNDP6xJC3KjdfMcb2d03WkzADOHPFmo24U=","IEeIHVQrv5dLnp6SAUU8grV0RzDueNL8Imv3Pcckv7g=","E5LgnY49aUN3j1AjrFd+1YVzZA36jPsiYd7lbwIMrgI=","ETzlZB6MCEAe2/jkClj38ZhIbJQ9mItXEmXaO4AJiyk=","Bv40ruljMsDbqnVnBPCsym/UiLehpCS8UHWa1m3z7PY=","IQ7tqQ3waI837n9NsBL6cFHar9PU5iqKdarXPKDEWAg=","KPVTEcpSbjnibjjiBlhh887B5ijeRvQ1ZEHI7NtxYXg=","D7OoCktSiolVFC5kIZSsSmT1s0XIbgzPcCUAFgUtlTI=","H2eKV6dXdbuzypX13sB2G7casUffEH+nX0Oq+TCuo6U=","Bz7lGpiupOnOXd75lhtZl3DlgN7lyykWG/gcCqdLpsM=","EjbBqSWazsUKBPGTUGkYmQ2hvMnyO6/HdIA63qQX6bY=","Fpq5pYNVV/UYoXdW21V16agnMRL1Sx9jR50mGq1deAo=","Ij3JefKDNWnCQTD1mTagXaqkm2EMevHfNzyBrUGHbwc=","Kn4HxCsmT4hHUI93Z/rSC36FM4p8x7jbnPBhWmFLKnw=","LTdMnsFIL017DPRbX2rlsJ+bTF4NPkKGRoIv/FgzILI=","F3IqbJevNhHDHi6cinwb4s8bHmeSDMYZJSKLtrFxn8w=","G+whvSt5vwqrgk0sc0Ob8waXmVB4nHYtPyRu8XJmXGw=","Hk9cTBUWaysNDy4SQ85eTX3w5AhvG2wTwkdgwjs9K5Q=","GyZtagP+amZ+W7uu0kB6ygQvxl/1h6N0WSQuNH2pCKs=","D4LrtKOi2cBhIx0HKXTaeGdGTUWgksNpM31vfzjxnU8=","A18PUQ3wU62Y2VfNY/LFEay41j+O5zTZuc2dPNpxfFU=","I54iRkEPkKuq3CVtCtZJRY2KLzqYtoC9yGSDKHBuWdA=","Iwpk4OOVMbq2noN4vsXs1F3QT3uRomTUuFKxcFCi/n0=","IB2TWS5j3Y7ZftoMHvj1SuM1VugLpR7Gx9TvU3baJmk=","G/54xQ0LhVqmmIXmNTfuy5hMGOLJ/99vdqDTjNiqJKA=","MClwjH87W6/FwN3Nhl0XThuexxJq1zDBJCdMVie4v74=","FaBpLid4DMFU3Pt7zKfYxp1hPtcaxznojMrVMR1Bk5M=","FYWAiFtFIfqx9ZJVvHSsRty8b2fkxbvjwEB/bnn5lmM=","IuVCcJ4Taxj9qNHFnl34qe/PImKWzmuZ8MWkxtjFv1M=","AAmE0YTCCQmxibVtieH+MQdLcRsQaBPjGkMPkjSEX8g=","JguywvVhr3tLujwjrxRGDmP++RkTd51quHgAk68udsg=","ACbi6jcrSYIa5Wu+GXhuvyHEMmwYjEe3D0ey0SB2XK4=","C2xNnTb6wwM52Wh2owQCJLrzi1n5b9CqAq6jCuGi9NU=","LPX8PXXvQrWzdDv6vCFJC6uai9nTgob41uxls8E3U/M=","CEaqaqIfGMdAAPBEFD+iZv8ee+e99gC+Fs5P3ED/HmI=","AC+NDsjPBr2z5MY4cziU1dCpUgTWSPvOraBTrNnTukA=","HOj/m3S3nEzqC83VgGP3RNuWMPO/WWPxy92Vn2ESb4c=","AX15ER44VFLmFcRCxu8IMzOoqeCGKLvh6E9N7nldwc0=","J9Bk37CcUTSMlpKr5059t9iZsG1jrxA2q3SVPAizxVw=","FGh0po3zNGFpJUa4i8B52Flh6kYvDEgX5RIddOK/L1M=","BStjUsJ9CA3PXR5QuHcMG/bP3lWbJOff3RfTc+mpSFI=","HnQ4lG15zRkb7w95q0+WBGaTZ1ciUuuCyw87GdRpEVk=","BHCdoXNvrvQ9YW1Z/hAQyS6R4UEOXdmsN278c4ZwJCY=","KDgdSgKopV+wa7aWxefsILNjYviFt1Ox3cUX24E/Yvw=","Fg7PkLTieknT9Assvp8Katf7qCVrmlL7TL//FQekcRM=","Aw5SHZGh4fiDbzmydzN0X9+W0IZ7v9bMqrzJRzWkcEs=","K2avMxg6pOU8+2ZSFvhrRY/T6QnZo7A3WLrZ5EZXxDo=","HoUWsKInbcupLYuI1v2PmwTWGrNnohBYylvIp1Kqu1M=","KyFytzMR/07r32uJr1FtKuC4q3W4rfgETrfiDVEYJrg=","BkwuBjaEWjsikSyLqpTDnhTn32u21Sy4kUUhurFDceY=","G9T4ln5EPo7+WhhgG/7X0r1Hs0xg3/Cslk1qTrBZtBc=","BO/CNKFzY1S+EGIOrbD6+/AwCS4PFvU57alYJ01UNDA=","L0L8HwXZDbzkE3d/dKNTxX6OZjLTDiiq696IuHjfRts=","Cj/cay1GsAR3MfWZTxk7Nf0j5tTUkG0GIr6W8p2bU2k=","Cpo4Gm8r5bcUUDFPNW/M7v8DGqRqJ8ks7O0s67VH2WA=","K/Kg06wAvp5bwGCjkFPYX0UV0+zG7m2ZJcVX6z/6SHo=","FJzqSsydNFr5uqCwqp27OidTQUh7SAmpctTKSf0Cz6A=","Lq00OkKw6lcOGzWvGck7DCX1DxUDz0pjfbuby1igvyE=","HBJ1nGwzycv2rYka2xzC70Mt40JRhlH4sVdzlNdSft8=","FhkjD+r8gQH2vHmyxyBOuKiwg6OMDUuudLMfzTU9h5s=","K9xLuH/s7KYazgmwq+i23XXPr3ulkfAu61Y1gI7NtG4=","HYM8cTXSdhDmly/fAFeArkHw+Y42tiUZeLa/ldffaj0=","H/ekWVJueWOW/MoZbdBPgbo0Af7Ge2ttg0IumHeCAJ0=","JED7tIds82p3GuE1lPMbBvO6F0jMsG86Fql/lNjWayg=","EOXYSxGrhkh5/tBn2igE91yadSc5Ec3ti7VRz/Prs+Y=","LlbBgw/mY3AwZND3dIC8eLTx0Xk5Yp/qLp45KE8/YmI=","CgmQJ8pvXBAIei9LOMrds2a5jMTdDqdPCIGedQKfRvU=","GpdGjY2bhBpX3sJt1PF6+GAt5pX8U50oTueP+FKUmQQ=","A5SmRYNJpST0mVx3trf5zmRVohYvE3Q4MYenUakINY0=","EhbPjweaCYhSY1KWQy9XakjG3N76rHC9Y8D4bXnelZE=","IcU6nuHY9xCZ/RhavpdyYjNDuLpl4/lpq2ZcxYwKYAM=","DQDh7JkOvVIlxwmQYzLsIYRZ1FKjRWDAAKQUH+kqEnU=","B5A232swo2tPalLMh2sz7IzBO+7T5J2Za8MRMOmUL9k=","BzFskNVwl8IUB+ZHwSkKQtV2bUOo8yRzNCDKvazBZYA=","LKqF87gTIAG7D89BFNhNuo1qxhyWoh8xlddIA4VwhbM=","GlsyoSJpbfBDD84jOr/iH80R3Qcx+Wn5Xy6SQ/3ZjfU=","HUanYzQXDPC1i6DN11sx+Ds60rx598jJMKXqywugLho=","DZm/BIQ3o8xx6mmY+JClMqs6EgJOIw6FNtiovvCE6VY=","GvwvTIuhJuMExhcm/sIjQfRHMCoka5IuM5zYe/Le9WA=","HJ8R6GMc1GZNqbz0W97B2SuoFAfnEyHHJ7FMTFP/SRw=","GZJo46wUtgwqKe/hjqh+wQhyHriB9qSenWuhod2U0+A=","IsM11Hv2cYAx6D3kLUergFvc4D4+rLLuil3YjK9dVlc=","EWC/mfD07Ae47y0Vvlo6jRz6GS5Aa7717Y3V+3XbQbk=","IlTNMv1Ah7cTh9rDVUz8neABlPdHL6Qd5nTYygHL8Iw=","GRl1HDeKglBv4wlYo2vW517Gc78l1pPZgDNgLnPWR+U=","J5FrPkoMiZIjgayUzfiLOk6CpTn89ciZpRIKY8tPdo4=","Jo0/+eGNycNzYWpqWhuByT7CCNwENBRVcxDHSbd5hcg=","IShtUdNQR297Oirj7ARsE9XJERc95BrB3J5Zu7pmnyw=","IPv41oQ7rIRLbLYyT3BUNEEl21TVYAoG/JtyDyIplB0=","Gi+1dEOjo9cDCquBslbIuahNpyQDagA9Q168rMx3T0Q=","IbE7mky46XErvOMvF49ZB0o1qM8HcQYcoHZLaxkPoTk=","LHoRgVpCADj3H9IBuqZBKsKSpj3Z99MJC6FVc7ujxdY=","GMljgJRibbfli//XF7EofIrOcGgjJTv2+Rygajf3+zU=","E2+0q8TglPtLW/8j3g1Bu0dkSB3nk/govz2fnfGqHMc=","A+wPeb93ML2hiKARCJuS0mr6pbrWdyTY4ZMlcsZXlqg=","BinzBtixoGgsd5TDLala2uoL5IP+T2McK53CUFQSV9A=","HwhU7mhhSRchaEJwh532h6EsKKCnk1wLrAly6jmEENY=","BYko98e4UDolhaxDmuTtqTENh/lQQkAv+v6Y70jqcTw=","L+Wk+siIz436ms/O4kn3iOhsBDRBzTYj+5cu5Rms4XI=","KelUBFzMq5YS/4QCrSIsId1c07NNQVZUHVAk3IhbjZg=","JRo5YroPPp+N6IHRBGQ8nDknIJIxKip3HxF5HmOVeyA=","DrBPiVmcuhAO5bvEcE7GONECxnAQg8av7o0mzcZLEB0=","LSBX67SHjEcxMwD4oWHG1rMAjCY+c47Rt39uLSNosII=","D1N8doHqrXUgYfWUahDySPiv4C76pyTZfnY8yMCXFVY=","HkC5qgANcNbuaA8j00ugfqBDVht56LbDBvp4eCMvHPs=","GqOPShGfqcPj/5nQrlSqbLEYDEHXWF704DNnj6yEsvc=","BWYcAjzI/63EJa+O28WkWl2vZJZ7qwO5HG8jg6YZSak=","AjxNnYCbDTr8HCfLax3sZj6WJf1E8fE4nNGyni2xUOA=","CfrA65IxhQ3nllOTqL/RXdy78mWWJ43HibPkBwPbQrY=","BAuEqwBzcQPtWsMS9dROJ9R0nNGRBRv4piMbtHgONU0=","Li60uDVFcsJnzoRsnrIj44GWKLJkVtckSJnlfXDf+Ts=","GYco7Jlq0JU8+Hv+uIEL5cWIrBC3OMytex+LrVDJfjU=","L4qO5B2QqsKpHBzHB3Ltb5g0AFJRazpUvY3ziIcMWyQ="],M:[["K2/XvDo7WVwgbEParHUrdloSJVw3q1GuGDkzc3qLgJk=","BpsXed7D6t7T8H0MPmzs1s/+eNdH+u2tnJBmWqLZLLM=","H6Tv/INJjRmqpZi3dx+IoFVN3dqJ0y3Pim9M93bRO5k=","AWdvXAdBerVMN+yK4agxS97rCZZHaYgVkgQ9/8smv0E=","H057vI1Cd55Yqge/VP8yS4FP5oe0yOuBubfnREjuJ/8=","D2sYyY/In7+pmgTIyWrl2zXClkefSEtoDfkF1MvR36k=","AObNEIg+HhHGwZHTYynzDrAEWvBsLYbQxDn1wfT+9Us=","BCWpZB+wFVi8cXCi/8JOtqUUGYspahYpzChNmDvKh1c=","ADl6fXQ0sKqUE0jeRa7EQs1crSw5iISVDoIzxY3VAzU=","HWbyCPwEQRoThcIuID3AjwusL3zZ36zN7CDTuTJSrQQ=","DsHtOuO+rE3dH9sXucfGSOfsgYhaB6W8vZZ+ajZ281Y=","Cz5gHjal2C4CFDYshBlHTcHMLA7YEmU01po/eQsnxgM=","Fjy046XskuV7JbCVo6qoz9xM5ZJncYzGCQoH4UrxCw0=","LcqQ8+WhWymJX0jXoSkNejNka4liDdCozN46o6UdQcs=","LHjuXqFtOPC+udwHM8S7GJPLM/9nG3N6ESLWT3Kc/yI=","KvMk7E+ed4bc8AQ5x1opS/91PjKSu/YuZkcfpzDxnHk="],["ER0EwIP1Gm/fh0EqU39mAQdtYfQ1CU6haUbvv6SJPpc=","GHquJh7z7iGzcCNRigcWdcbQC96CvX9UQUSKu2Mqdks=","DaKO3n9j91WWolaLLdelhFduWygvKEeVsaeqIWY4IrE=","IEO/5S0pZOSjstpeMBB3Fsx2T5sci6Rj8hWrH38DSYs=","J7SKY2o5tRqTiuo+tVIJFVn7++ceCW1RjEDZCN0lcO4=","F/51o9EbS50qz3hW1t6ju6xireDFATR7FoZPPHPrt/k=","IybD3KeqtrGFJlT7E//0KhUsqWMhJCFsx8xvbTdSKlk=","CAxEKQkif0qdqS4zI3+agssMb30MQVW96lxlF7BG654=","KxwA6gCJP5+RMxvJBzl9uGXDfTvGxLObgc2TFpb9eDc=","CS8Dx+mOYcKoWUP/r5wE27AUX8IFXk1b6Qu2i5AQl0Y=","Kg93uzYk/EgmyaKma+TsddvCFkKhb8xBgtLWXA/Y1/8=","EIO3QtNTMqi3m4Dn3ASnL36GaS5Sm2oexWhzNLYH2nw=","BT6V+UVbxkmdRHts7dC2qtnLztl8zxAGDzye9R4o520=","BZBNrjRw1AzhJ0myfWRuYg6FGeKxfPoBbK64nZ407m4=","LlY7ncWj1NWpP0drRm43EBnHf9bupQYSak95J08va5s=","FFYAg9mA0XLdQMlCbP9BRnrOpB1/SP8RrF/MCHui1bg="],["ATPFkT8l/16qhg0DGPaktDSf0i8tU1MOXHhbcJiKOog=","FpU4CU1PdSUpRx4/3cnvmUz61PltzH1jbw/VCbjrnDE=","GZg12pX26yLFkevlFMfyg/Z0/Poet4ff7leBpk8IJDk=","Db2GYlEd1wAJkbOdoSn50DtWWgzS8hjW6ru0miXxBeU=","DdDBGPFa4H5dtVB336RuCBCZVNmeGNcs0sr2E5IOOQs=","B8khv0XjVISKYLDl8pK7A8JGlJi5weTTIvSv0YZ0CMk=","H2lNGsuqsOpbwCahhk1Wi+VVuJwPSbYTTpuJWuFB2oY=","FgTeai2xIr3V2DlUChAF7UAkJbrDuF46ciJNM3QCvew=","JZcM4xt7EM7yISZ7sb4WVuwpFG3wb9tbT2/mYHUjqgg=","FJVvgKZbAfnul+LrBw6d8nEcuLy1ON2Y5TJjbMYHgug=","AdeZroPvZVLzDtxHuegq3AUD3Et02kC6C70syesbClM=","EkF8ABvoYZcBOytIccTpsNzrg5kZGanK+s/lRmb1kK8=","IXH9EflEhUZqgZ4k0KzvCLDIfXi0bZO7lGK0Q/pAzcU=","Ium/KqAv5l48x0+z2D1OM1GGm9MFKMN4lYr0Yu/WRf8=","By6i9c3Io3ifvOpBSpHnsnu/sxUd9RDQgP9O98xz8Nk=","Jg91HHgjq65huPN0jIR5HAvYSs9+toVIcCUBeOmlLPU="],["CIdfR9b1GMjC31Gnhr8iB6reKEBnIo9EDn0DB1IKVs8=","CmiDDxnApymy+Jvic3PTl64RV79QfneZ1CIBZuoJgtc=","KvVgYAs+JavMf3ik1uLNP9mby6B1q4K1XphBvve5IQ0=","EbM6nxgY7X9YHKwCAFHeJv4o3AvYyxpEV9WoRHvb1vw=","BFxhf2BMGsn7jXbo04AyLlo7afp7fCriyOxZZtakx4g=","DmGX/lAjKNDvf5uTA1UxKzRyBLh35/hdm1adw08GTBo=","DN/gmeehVCeN+2wDiLnaoej/Mjogvmpqp6hDgzP4ecs=","Fd7YWdUBwnM/6t3eIv82+oroWAOux6IE9CsfZVO8xlU=","LUAmv6ezehmjAKuvLh1cMtvNQiQO2GD2gfYd1tYhTO8=","C8y2acsBbUmEZJRPcZLs/2cW5stfiV0nFby7tlsSiMA=","Bd4QmcZfCKmQrA8fRewvuHLHceECddzPpPzhFGY50NU=","LEZdm164UteTOLQnsxhNlB80BGFyqCzOROK45cQ3lHg=","I5GAdcj6CSm+/CsXH5nr6d3WaDWU75qD+E1Kz9lZLVk=","Fdf7piusV75dl0UqPAbZ+nV/FE3xZkee5zBpZ0gKKH0=","Arbxb4ErqQOQE1WVXMTduZ8k8cbiZDCUflGBGmgxG78=","D2Zzt/tL6M3qdKqngCycc/8NU6mOlKK8YGhdiQok/es="],["C6n0ShB6gcsj+6ZvK8NBUnKPX1ymhAZkmn7+R8lHPyE=","AYrjkIbuu5jR/F8F+g+H3csUmwr+ONG7uFplaXiV5j8=","EBVE0TFFTyC1SbJKZeyE8bMiH9m0NGHdxtFWgzs0xSo=","Am8vWNY8pu9Zu5UgbOPtMSSIXsIXYrux2x1qd3HsZlA=","Jbl0/FEp2CrkxiRuNfgC4DRA6tCZlYZTE8jKkcggwtE=","LUCb94vW9qTspzl9BlAj8LtnMiB5JdPOS+759iHaK6I=","F/cyzBNUsftHbnBWjS3LC2aD0wsCQV39OFUEc2qobeY=","BA2w3v5rpHl7dKQxJc802GorM+eiLicQsPt6VWiJOqw=","KeiQNJQkFKH/aDPW4idC1BBuD1830fKrgOVETlpSycc=","Eh0rpb2PIy7PRKrPEETNarb5Px5TfX0VQXVP1J9RsiU=","DwkT607n08AtjOc9HOwrbLsXapISmzSilK3wZiQ/9r0=","Cg/mbA1N4AzHdhAIcyoAl/sU1kZfnR34NeBCP7IH2Xk=","CJjtHsGkNof/aroy3l+BlDRSigdSs5KDMYmbBkay8GE=","EeCyND7zcdLW0igFl08lObblENdh4NoXDQ2pAJWhMmI=","HVnVwQsMndNHiZN32jW35nfH057xtJFmuXSn8ryZyUY=","GhW34t4nEl8uanT07HzSRV8bv66xFV8a+Bm9tf5UJB0="],["BUKDKrI7bHpLVHoQZgNxUqJELpmMU4G6l2mEExU7pvE=","BMXrx3E0TMBhJ2VxC/yxwuYJerw9NG8ElJX317fwbLE=","GlF0DNpeRepNS9e/XOVGamahGvtbyTzxDVMJ4H1BDk4=","LrbtVoN3tpatPLI3Bk7GjjkMJIhuHxItIdfPMpDcbQg=","GBWJsUDJEJ5JL8PsfYyo48JafOWN8G8T70NWHVjFkm4=","IFptWqstIktmjHD8tBWC7p6+H/CZKStLxQr4spLA6kI=","KCOaiC3HsvP/e5qo3p49ga9zbU7m7ZkdXGtPpUAUj0M=","GrFfL95vU1535hXIwmAhk9RYYMwBWEnfV4+f75pbsoM=","AytiZvJAF/3hsoHQ/iBt/zC1OdXFuhO1MS5IjY1vGUs=","BONY8lmjMkT0BYoFYRCiaBa77Dx2q2pfe+k8ngyS8+s=","JamsLR74Sr2YkntSwk84eW6mDmOFjsW1AZbX4WnJO4Q=","L1IfJLwCKGriv4SE+7w5hDiGdV9Sv+x9PdXfeNNAch0=","HcP3pllTChOsytGBtuJlR0EI2LFGkmZVLfvDjLZ50G0=","K6OYRTk/zHdv04PlNdVnYhx/ZABag6b39IIivJAgkqg=","BHMP4E4BCMmlFFpcSOYMVFfkcIUiFXv+D4KvXGZNbqI=","B1oJ5B503ooqx/7ydZHnanfIUeGlEYXzHpm14I8BzHQ="],["C6H3ZDZzYJUpQsy27fBRyPk3kGqBZkHg0eni7SaQb6g=","Kfqn2tyLfpWI1KYB53vYCq3ycqG/7DxEPKPMrIHZ4eE=","EyRVi4pdS6YbF3kBKL6fJEDACF3V1gZbiPCjslN72t0=","GPqvHJHgAvfbvRL0CL1cW5LzjgLONjWCSCHgNH+vU+w=","DuEoiymFXi443SYpKzniYFKYQTRFONZJmZajLnzFI/M=","I4CrBR0KxYCn0Rb0qTN+sxCQpMfsvU5jjncXt6Ur8QY=","FYkmuelLEPyzIbKTu4qGR2J6W9MTFYCNOXwclPZQ8s0=","Jk+tzHkaoY52dRqJUkLDDNu9EZepCkVtwnjhC/C/9eU=","LqAUth7VdTkiOb2UEcCmxCArczTPLg3YwwQFKOSj39o=","LaJgOibU/ew1MYIEulBgZj4VoLHk2TlSWNXm7srqj7E=","IKDj9OEknExq8QDf32P4vcaex4hbzQ0sLpjZj5u50QQ=","AvHT7tNgGPlnlxHgML265RIkte+4sesc3KiriGIS8Ps=","DjiLsQUkJAbjcggOmXoxOSz0/72caUFj/DZurncOQ10=","JRQ2ScE+CNSwC/NNKqGo5FD4l4jid2aJYhcEcVXFvx4=","EuwkI5uhsPyflSVQoiOlLSCdjSK4shrCSIGicZJ2vg4=","B5wElE1QtHd90L6+lTYAZFzsqdZfugIPlzZRRr75xs4="],["LgYR+kyjmF17+vUS8hpAgRQfTtDcSwIoNNPLbP2Lf/w=","Ks80kwErvYGHJOfO2iQx6XyJM7+utddGO1Eubo6Pf8w=","E0cwJLpBn8KndD59+PyDdaqxUNN1OlQlCoCNZvLQa5E=","KUN68bFPY3ofDjmVXyYEvyBDn8sqCQ40aqZanr5peI4=","IG5NRFMVt2QoDMZDuUefSZRuqG1zBLaixpKsNNfJjTQ=","E4LDwkvySJ/p79gKFj5lARH12YheWKntcp3KH5p05Z8=","F80Rhk/Sxz0IZ9NyZLTKFN+TWoLypvQyxJmBNfpfSqA=","LeJ5/Pd6JwgjqRps0ar7WOnjqzL9/ws7BcmNVU22+tM=","Es7VJU4mCp23q+DL6iY5ZoD25X3AdzKnVdQJ73USALk=","DvX57muhrh0SZM8aNuD+S4BDqwvd+bnDIA+2h6jqXIM=","BrfhjQG0f/jk7wgHjoEooGaTvmV0iUkqxBlahUcivf0=","I6p8zDdRt0DuyfNaKZhryVik28fEsS6rK+g3Zwbesg4=","InPDcOtYEMA5A2BdfMlNWpKvaqqnuETzUYnndAan6Gs=","KnMQ51+v6QLiAoepGr44iq6EILHqRmDdfBWcJrljLNE=","IAmDmXJe4V2T/9PkgeSnuVyMUIP51pv/FxTup8fYLUk=","AsorrHwaoMZOaEEj8P/iIXOSMFK2oB88Kb6AE3/Ylyw="],["Dm8jwO9vFZ3saDQah4MPuGS2wIy5VKFKJQCHZpeJf7c=","I7NGEufQUvazEsoODPcANK0jLZv2PIiCEIU4O29uxKM=","E/FbxkU99vk4NEZVBTTcV67bEBOeMFPoO6/dmTVhdfA=","Dt+GvxsVmf4nxm80lIYtdd93ZAcKgmPPiHePcoeTjY4=","FkFkjCa1otwpfaqm1N22ovJYunOPkJTnxc2m76jJk7E=","KAxFIq0P/ZLDkelMcPhxILg0GJDDMprwUGJfK+UvOkE=","HXcgmLYVSSHbjnUG5vA3LKRPIK8zhuE7z3H/XcDWGxs=","BT7YrVUNiZL0uYFJIBg92Dm/NV6sqMx7BwIKImFKgIo=","HU+bpP2M5O8ZO5+HD0SVYHlTjWO840T5AWrF7WOpml4=","DVPWHIpSFODEcVJ0rWel1qLPufw8HnkdQd4iyLqEaKQ=","Es+HJTkT1F0ofpdfK09bkJ0WqH2JyIkFf2Zva6YTibA=","KwiM0woQiZurwyW7oyqjQ9Mp+ah4JGnE0l8PI3/2B/0=","GZcv/d54mOyL5Pso5LGe+qQ8fuIMiOKQluvocuHBlHU=","H6aURwP+ABKhbuYEJSn/AryAQxPvjG2LD5EKdeb0dzk=","GCN69zO8REGKyE5iP0g6a+KLjyHQM/vwmdZFuiDx/CY=","E9kDWg3HmLBNzvDwjt0kFST9yg6VupysBdIHvTF+Gc8="],["AaeipKCNh+dfcgMCvq18ohyPfC7S3rrO2bixstpGHLw=","EWgMxugLDkMKTNNgcBf6gzHYbE0DqW38GHZ8l8vgoZc=","ExS1T4eGCWJEUyyfBUs3ljbitYv9zrPUjfsiELUptOU=","EzayCOANjrrIMkapbr3eNRBj+j9jWIfnU6DOPinH7t0=","GIe+h/ejUkEEgu873PfvF5duCH64mQx21+lxxEwEgjk=","H0BalIMxHhSXVo8b3NbVjNa8gTmCoOcVYbYgADuIggQ=","IJV2vnLbewyf4rgykSXn3/BImo6QCl8UwebkhgQTQmQ=","ACeXArE10UTt6UMZUmnAC/Yg8Fi/AYbOn/88s4siJFo=","AsnDE1z2S4nrW3FNey682B/H7a5jfMYRZZHfIItrJYM=","JS54tIOK1QB/UYu5xqTOUBhx9xEo7uPwyXhM1ksYP78=","KafVVOn/vuY5hnhC/Q59QeqbG8liG2VPyzmPcclbZo4=","MFoMLCxNNZmOmROCn1YCUENj8hvXIDRzULYEGT55vD8=","Bh144ZU9GUPi2WgzW3PhX+zviQdelslD05cCshTdxfo=","Jh+XW6vXaSgiRzuOOflIuc+YcwqXhd45MXnUu5nazcg=","Hj1s7zf5vawj0bOBpsWNDs8Gpuv1jfp6mVpEPtffaOk=","HWZX15GDEWnFa26aIB+LeyQCRqLQ+FRDBIm5g0VAMtQ="],["HYAF30jIVlmH27RCtILK5b/BDuSG7MW2cM6GE0WXnR0=","H6dy695vNzJERiPWf+mREWKY+PMKLRAQyK5hMqPWkH8=","BWqOzSMqZ0xj17YD74zQYyHFYN8v0/bCZJr1dkZ/15g=","JkY0HrRLSADVYITLSFAPrEj8UziR9VfpZ4TMYATYkos=","Ix8smL2o1Iu0ptnJi7vBYCcjWiKh7U+IvI06blgiCfI=","HK/Ptikm+8BIV7C9fXOSuNit0WtcvvtUtNUxKCbomUI=","C3qx7xf/YjX3c38EQWGQLwPVlM9KDMZ7T/tHEa3h6w8=","F5qCt38sy5SzjrWCrEq7sW30KezCJHG+c8x3ZvltmUg=","GLY2hfb+0qoZBIVjeEQhUd0foBx85hIdI+Hp7iC0JVg=","Cieo0a9qBGCuFyTzLyGgawNmaNCoY75Q/MR/7FdjzpM=","GGdWd1BY0JxjnNq7rNAb88J0QVIVb79+jz6Zn7YQ7Tg=","CL2d3RkteXoZ3R2gSb6zn6ZZZZiicDHqHCsolm2WGAw=","GUGEqCXenptj7Xp70HElPvWQPh51pQU225PCYxGnIBc=","Lgiyi9zEF9lkOzAICFon9KmHZ5LTkVyLnaNWem3WzoI=","KOVbC+1ZGRIW1dvh3QWyLACbB53od/1UqvVAHSyGfgI=","HInY+XXwMEKCrY971BwSw7GKxrgOQGX8zaQju7P/p4Y="],["KBIiVII/iSast+mPVX55YoLl4ScWGIWOdtSdCIbaFvM=","LmPxdAMy9X6DF/JZLr2NsIEnFNZgQTLVJeM+GbPJhJQ=","AJi3QJdsKhAx51Ey4FC/ODi3OdBhWCVDwcf5XBUu4mI=","BvU8ef7Z4JhI4RKgdC2K6EoEvZulqidlseXt+xYCFA8=","H86okobcHbYf4REWBq85bpjLU9q1GZdQql5dEVYfsUU=","ChLhYmIOcb7rIDvlZZRBawg+fpTuwj4PRKX/6eFZUIs=","Gxu/Tp9wYFFxag4omQyvF1cwhqXYGMA4g2aWgIsS2OU=","CJ7+0A6dmT9fwdWvLytdR6m3Dm1aYD+6qo9lECEj79c=","KyAuHSYmxnk9aKrPnDqP/7J831oLg/+PNQT5qyakPRU=","AwSKJl0O60DlpTFjOsIruCX3XO6QNuZqBhvj1NJIyGI=","JTLddIf8rg3Dp6xQuA7DMMb7bUz4hfETWYi/bfwBCm8=","Es7o49HKwcqEUXqz3vSHxGCuwFg0j/IgyAG3iXmvnmE=","IcDRh03sr5BhMYPqgnuRwbKVGDn3HzKcucmwdT/67+4=","AX6e0ZHFZB12iw5V7A1KhfblQZ0y9WaNOX1bbLgFOH8=","DGyewxyeO+B0SRn8VVx3wMElknvRbeKAdxKzXKJt0EU=","IIKe89+cGD+JZeScjzFcKZWmRGp2BTVD63UBRfGndAA="],["JBTUrvx7SFffaBMo5opYLSOy3P/Veajmru1sYQUOBc0=","EgLjSdHXuAWEbpCDTvyRHraxDCoJ6uqintKIvXebFPE=","AkuW2+v6ttI/oywsjndYyyQLrNgUMyPFPNtI3Itl+OQ=","KjyfVa+s7nNaG1FVJkJjhK0EQpH3aRl02cBcY0tDlH4=","D3v8+rF9s0wUTO5EY2verfq0Smv0/I7zhOyJpK6e0gk=","FyA8TS4aQooXviwn0cTFlg38aqNvIr3ei+VqDNROcas=","IqjudDZ0E+zPeqA/3UIMa7YlWm3YIIHWsU7ampdSMps=","IeJfCn+O3DjeJbpgWobMCOCMywPnfF4Lntq+dHaLYMA=","BqeN/eFFjuNBoInBX5U6IZNSff+0P1Us2tWV2nxv7MY=","A/2U5Ru9poQ9MaKCUw1UJAqklhZdZE1ddzex5afWDVI=","Au/lKdsd48Adb+f7inHx6qtq8WQfsfeq1PK4jNE8n+U=","DKtQSyKjVz0JUJ+F0/vZTpRBesslOSNCus1oQAbDcYU=","HLM60rp90MIGNENDKoR7zM53Wo2vho4MR0kFpPo21w4=","Cq830fU90FVuNH7HBZYjeQd81UMZjhwnWT9EVFISYfc=","KmB/rNOTb90OhOm8PktLrIboECwrWtFcrlUNKLNlTnM=","FKK9Wlb4cAnbmBVGUzIC86+BLS701rA38oMIU7n5A5w="],["L3EMctbaGcfYfL/9VWZbRysCZdE+IyapozuW6V03RrY=","Fo/cMtSqjckDStSk+v7onw7VyYDT20JNOPjOXNBMI3w=","FbvVYZ8NWXkIBPK5s34Gn8kJonltH3fQxiYJ3totAng=","HhbpyiUC1pYCO840JyRK1lU86Gu8TDSaNLphBnxrbWo=","Ad0KVQJ0OqqfWDvQrTXeE62NX8mPGWHyYSrUwo/Z+fo=","DtLPrns29HCn0faUD5FOjs0yK/1rUPmtn2oiJuepXbQ=","LHhfnYg09c9dCPEG1fmRg0D9QUq+JPCp/yuOBJK0TYM=","DY28P8hUwGZcMMSIRte7DrGNPXik9w/vB/JC5FuGXqo=","IvYuReUAhGlqwlEqJduZJSRM8CFLa1Q9Op+DuOjlj/o=","Lya8E65IUgpDnJ9Uars1oSIqMH44+vw+f/yEP2x3160=","Cvgl98oktKKF9UR2LZ3v3JnyuFwbifxf8gedPVDm1Oo=","FgWQloQp9ID1VhHGRIkS/fQj03v0g8NqzMwayaKdKlM=","K7Ms9g+NRp7bG2xWST1Mkzi0BRriUU1LYILvGLHVIoo=","Kkpy6d/lvyX2/edQoYR+W0Qpi6WPtQS+V6WV5/zNxAQ=","DFCaS/SK126QQQvqNKiRl0Fgi7u2tVA8k+cyA28HnRI=","GZcz2kru2NbNFIRhYX6ORt4i03IEMfwWBWGbEqf9Tio="],["LihUQdC+2Qu0HWSAg2hQ5NdtqCEbBKI228fDwwMgwA4=","C5rp9e5q1wplG0tm409SGxMNGMSUZNhv5dSxggSJAo8=","BHYAVL1dBxMlSL7XZX8XxhwDjrzf3UAlx7gC4IlI4Qg=","AqTG0yWXecOW74Fzrl/oe9YR2+JdHASK2pYwbbHjpA0=","GVnbAfXIuwz0g0kDc+dbBFG4e0PlkYG+C2AWZ08/Xvs=","GEnNCRDXLqzDLYkbcfr1ALy5PhzvJQSvRDuU+LHOchI=","BLXcIFe4gXCnGKEC4MqRd6/HV+4mdzoCkMa6sVnKT7k=","F73zOAcohLUizjxQ70cRCRudr0ikM3S9wKgww35dzcg=","LZN55psXggi4SWuKCgqQ1XiyHwkMUwQr5HZ+PBDTtA4=","AUBX0C5evPM8Fm4Y/pBN76njQqGeiNQjNjd/HF5n7DA=","F4GN0CVLKR0Nj08aRYxqIdiEEVNmGBK76YaxQDzycN8=","HJXCkXNTxTtM2391Cg/obOEPjVvbAYAy0/eTeX18CjU=","AklbPBv+xgdBgIFJMz/EPwTXnexWWCwpKCn/37PBo8Q=","Kt7IVJ3/3nI4sr2m53MpkKkRcAyNNSiLqjnmcBWVMjE=","F4B0MDuQ2JheN2WEuLjft/lS+PTPhNgV+Quqo7ZExMY=","H1/AYAKLoH0R/JR39Pr/55qBBA6poExWgmdkSJXmc38="],["KWSQGitC6a6hplk2Yq654SB3oodDS9pOwgEuNqGdyVw=","BsIZSvcvrFjKE6Kl4yIxBO9JpUD9Lq6g1nqSDYVnBAo=","ClSUybz6Bqpyw2/SLZj+ctwU3A5OdOA9F1XzisNAUK0=","JlyiERgLASw3jgGY8LX3dYwVXjZ1+t+SynkVa9Vv4zk=","IfZZ/tr2wmF/F9Y3zW9UoneC9OhDH4evXIWRkyzn2rc=","HkY64/TDvQR6oQSfTwkaLx1dNVDj1YAfz/aPml5oKPQ=","J0EhkforLlMnoR0pDktDmkEk9IFFxh/07OhEikNz6t8=","Czp2nIs3FWImA5XuTzSPiLsFai8OwPmOTmM799lDYV8=","GttMh0M9hm6P5a4m0BR345YoecIMjDoXDAcnFnwG0Lg=","H8Ju0Cfbe55yQcLHYBdmYvY0ugWpynqFDhhK5YjL4hU=","EBdftvgbFkNq8waC82+6s5bt23gppQ6UbHXyfiYJh8c=","I9MANzu46/fbzzFKPAsf3s1criP357uRW822pngrV/s=","DwQX+mI3Fn50FSUmEwbBdmTcPvqSR6oNS8//OOid7e4=","Ho/SCoAw/dlOLENT2PgrSyEr+Ie8WWFYFIkLD5KkfZA=","GFcoJjhd/G7spNPHHRELBKuuATxUUNnklHo9AZu0G28=","IIt8jB/4Qi1KG9E6AqlGgc4hfZJfQNKHX3Pe8U3noiA="]]};return zo.default=a,zo}var xd;function sw(){if(xd)return ts;xd=1,Object.defineProperty(ts,"__esModule",{value:!0}),ts.poseidon15=o;var a=n(ln()),t=n(un()),e=n(aw());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return ts}var es={},Jo={},Md;function rw(){if(Md)return Jo;Md=1,Object.defineProperty(Jo,"__esModule",{value:!0}),Jo.default=void 0;var a={C:["L7WDdis3WSxsWpXrHQZpS2xvncTxrUhi3Y9eZ8t6P1w=","Eun0bNgjG7A9QCi/ehHXwOMx3AXAiObcPR0AHaWLhaU=","EnXNcDJvUvgWp8U/5i4yPv5hpbjTdH9t7Fg3qCWHOvw=","BufRZbV7ApnSPnUKdeouEsnHoWlUxApNEJBKYeh3NUE=","L2fyOpPvHiFaSt0uy0G+9LnYXvkTUGXZkoAONPqYEIs=","Fp65lS4qhiPvON5X4V4kLfOIAZSJ4Bt8hPqDnYZNzRo=","D0zUBLQCTKE6UTujFW1N6cs6okDGg7Pg63JTvJjItfY=","HEhr+uOrAy/1GejcptxB6gYLDvkIMSe9fCxOCJ/UWso=","EC50WGQlHOlAxnseL0vE0n/ThRVxzmgTuqxmXozAx50=","HmptYgQz0iKTBE/+NqXypynBKczj7rC9r9zQ1SvDurU=","CPOr+XrY0Bz9hlH/LVduPWjsxHqtgrQYjZITi65gO20=","KD2j8c+Ed9mCHuYDeLHDnHJChRGhudZoPAMCk4wkjOY=","LZnNjYjknguryEy9WK28FDp1omuhb5ZGai5BYpc0Q30=","Fx7danRWpMJf74qm2LdI6thpNp9ypOUChh/QN92o93k=","L6tkaUNp46K9VzwMw4NpXAKjgeeFeSo/q9bhyo3y06E=","DGFVlE9k92lPyOzSormiNwVow8iY25Ux3BjHJHT5r+c=","HuDlz64DBiIkkhDNzacUN/KPCxcwZTwJFe+/wIYHw8c=","J0Hhp7xrossWKFjE6EVNug0OEtzZVtEnvtBxc5ul74Y=","MBGUpmMwmrjYCkNIIqb2VSWF6IjUmFgYRfVL5jTryTo=","GIrSU0fsJeaoobWZGz6W34H1XL4sUrpIdBwE79Rx8pY=","LRoKAyVUxQsiaZSW3sSHsBQB8lKC9YfhtXX8mMn71kg=","LEf+ZTO9NKdgCE6NTEiMTKKzvRHCJJMXmsgamfikSp0=","L9tBTrgGm1Vz21wR7eBFpgCfJnqNkI29fZDWoPAo8o4=","AJzr+ettBvsnj+c21roJ+T4N8qBA392l/n2a0PuUv2I=","AdVaOACmTugnA6sVkdGK2wAlnRaCduGw+tRxjL/gWWY=","Ci9rBZJV7e1truR0PAj6hNw8UbrjF5BABWs6jfOJgq0=","F89JwFaDhOk3+BtBxixHbburh7vW9NkiiwRCkpnMgbU=","Kyj2Cz7hKEAdrdPZTclvABuUMvcOobOzIZ2A02mSGqI=","JfDP0zJX3izDJBXmXr/sQkbZChgegUX5OH3vPExeDYw=","EXw8K3AuzA0SzfJk/Cb7i07GCrN1LSDx0tfEQM1GEnM=","CshgPugZJ0p7rGE7bSZCC8ppodFHBy3pCqOdSvgDds4=","EsOx3DfWZRI/p0ouaO4ymkL3XbQtKxwFWnHBbwTURVs=","EHsPVQb9wud0Zo5BkrlZQQpKjgyegtBcXLuovpPXPzc=","G9ufXiz3rvabJvC+yLvVALo6Vq3cslUFyHfGYqgQiZs=","AIIkp0ao9yy6YZWCvXIEuOIdPO1zcLt/x37lEkHBz3I=","DS+1yHl6KKFb0nZl3FEP96+66Vq9MteIbSI9GuhuwvU=","ITl7RcAk9szuu7nRsOQ2RPbKdtLenrBQXIYvBdczBYY=","DiBzBebTAotcRZ32CQOW/j7tuuDPiIThX6W0/Zxe600=","HNpkbJTDJPhNzMAvd6cW2qhudnfFcEfKoAJnJMEnid4=","AzktHBKe7PiA373X0wtKjTXFc21x5uGHn64jYiEaeu8=","KkZ3VYXMnlvOpIIWTmaIGOxU/XbZ0sfZM74JD3poeLc=","B1bXkce2cN+9GOu6/sVvwUg2Xx35lRi2NKSRoiA8njo=","FoLSgf3d9vNLQqS60LJg1ZfoI4h4wdegIYCmmdtPqn8=","C6Bp3sABImKcLuu+b5hCBApA2KEjJ7wITvNP0ULLoss=","JdGQo8HiNNF07BTajbkDqN8KdukSF/kZPciR8ZZdGrM=","IgYnDNf2yw9GklYK4t4O/x+tn4YQAFOj6lLbMvbekt4=","ExNbQXGtdS85BvegInQG2MUNyuWHtaZxxj6uwLQu/Yk=","D/mjNDKH/120lfZC0ypx8ZPOJWUO6aPws81wzN8R9M8=","LF+/hrLfdcnxTuILMU/ks9f9NRlZOtjHOs5pz/ZAapQ=","GtbfqrLL2zUK8PK7qDwhQ4oHjwnW9Qp2UJZGkHUwfIE=","Jt7zq1T/4E0hbXK98+NDRcIfKccV28lkpw0VZSJKYv0=","GtgCs3yWxq02CjFssIg6FcPW6VHz+Bsp8tpRepMpfDA=","FpYxd7U7UWK/L5gpUUyhrGAZa0KKd3CoC+ASpC65hOM=","AyBlKbcj2ASrWCxEY+HTnsV59kFeDDwQDE3fy4ehtus=","G3CA5bNrimeCMHiC7da6nENxSjGVRDYHJfEMvkA21Wo=","H1Ad9mfOQPICMnKzLsEjhU/eyoz6jSH6X4+R9LPG4VE=","Kdz9IEisC16y2yAxamy4BUkM+qp/fFLP4yXQ7j88gTI=","K1wKTzrElHHe/0dmLPQMIFPhq5vYyQJZ/TmViBnxzCY=","K9FS56cEWrZKlC1q+QLMKZXOyj1fpSmPEL3kZ9IOs4M=","GSQYD8YIww1xymvBlva2tlkV2Cq7aqpm30FUCI2+8rY=","COeoSj7J/qLFaWkENuG4n46Xh0J8wur4lfhr7zemprw=","G7k2zYqS46yx1Ahhrnq117Cw5NFUjhNuJ1HiYWMs1dY=","L2/bBKbdug2gPvcKNsiRLOQHuB6WP0xOxKBeHBr9u6o=","Az3TdRfE4GVXozS8TCcqvBmIU+OBWZpfCw8kjV6U15o=","JXvZNqpW1xsNZLqYAG04uoX9B+LFVkQ8EQHeuTDWJ1Q=","HBiZckZp7+Gx2bF9Vib6fqUtYri8k6Uvpp60paDWaas=","E25AB712nQWQltzhuNFujV69kmLWRjg7gMzsw/Zwji0=","HN77BWYYtShiZffRzYXNrZRdycbSA7l3VnAKaKfjBeg=","E772QK871o7duZ5lMuBfp4cXGrIQYfLVEoJQVViw93g=","IixDtExYH6+SRDD+WxZ04V5fYrF06TYpno+kGu4ADBc=","DLdIkUnXh4S1Xe7xaFPj+vEpjnjaXD0Znk9iVu7DvJQ=","GYjPiwmCt+uzxd8b5KoJfKWTEYFqwcUt+H9gR3nl2Bo=","KoYkPVU34OG7lGuoevwEFBpPRoO3OopkL0MBE7WDTXk=","CBDkdnwPg7CO7kXHQ6KPaqD2xHgXnckjpzDACnd8CA4=","ERBRtvbmRbER7hb41yd8VzZUQle5k99Rmh7CxWvNz9A=","E45jcYahrqEM0ZKfR4vnXq47qQiDdaXxAy65A4n70W4=","HEjofDpfZYXH/rkAn5WRJ1E5ZYafZzErXcSuEJHZexM=","G8keOSNznYVXpJ33PWsY6s0/HYQ9L5oZ1aVE0s9hux0=","H1XLhtROiXW8FIPlb9uNp8SuU+HsMbhLstoCcAXUUn0=","J99CgNwP6eQLPGn4HuNbnRDDp37hqlaMuZ3jwlozxEU=","L1yfhyYGTZ7yrnC5yLm9jGe9C04B4z2hTusIyehJALE=","GAOfya3Wnhw4+qMgu2ob8P3vRP6wk1iC3wGZIMh6+C0=","AyeQN4jDJF2mqwCx3QVO8KiQnHRjgdNr4yxjVA9q7dg=","H56dGukMGPGLMzhuGQKDzXlbAKXnANm0UL8wWXv94yI=","EzXyolHZfB9P6Yyd8vXgtJqZFbY65qyGBxWkUM4EXGk=","IW/ePEfUTbEsqbOJC3RlUeFN5h1h6tqoKHK4sC0IwP0=","IK6l6id9XBeZvwVlA9FunBgGfM5SNlVSBQCkUJVY1t0=","LJhz/uTzanZORjPK5Y1ZdXkOiHjQL2aH/Vrs8P6kXHI=","DFnQapgngRiqMUwKLh/xOHgqEBZZJkMUH8EerEWO+gY=","IO0ooOXdbTUo9t20cp+tQhrQeIAvKDUiizjASs21yz0=","JCqEygEoZH27PvPaJcs4fUIvVxFx21CEXVjqa+q5Dd4=","KawUoLErWB2LdrceIZet/1aHkJDYTlw5lS+R8r+MOXs=","A33N2yUw7VzambOJDJ5+oLCRoA9QaHvaC2Iz2gu5tCI=","JaiYf7b0wYqgHS5UKWl9Ye7EgwowGmDDVithrjKQypI=","HJv3HxE7Yce/cZ2Zu1rr8Mq+hxKzBPHh7y0XoJjHms8=","BKDJ9Zr0M/Ry8d6SzDnWBNTOg2npHE35/rbXZwbRDiE=","DTAONScK3J5F9DFfPD2dk5rp5t3RBe1PftOAXSn7DXw=","A7PV/pjNPUHWVgONhPP2PVA2zoOasQyshtkxvG9Jxx8=","DU/x6OX0ccDLYMS2TiXUYFimS6MNn9Umtt9SjzalxYU=","DmmDM3WYX2yZ8yz5BH7XIxmnjRzEUldLFgrlAfkQa3A=","IYotoacb8tlJVDXBOCboG8T7xS9+nnaAHXbvptFQbV4=","Igt8XH3yWdKO9ch4GNN7Gu3TMcXtZOK+NpY7qm8OLt4=","Beb/O7LDw9Nv7jCXQ4HH6eQlfPyxdSJpdfgMeCZgHX0=","BuohMEdQOEgtQ7QNcB8uVxn4tSkeMucOfstnyElSwV0=","Do6j4yo5zS8FJBYJE0JO8BqZtJDs+36shE6b+Fi5sBQ=","KU5cuG5N667g1Q250hgo1U0plqbSycGEFyxuWPq2bxY=","G3am3GGPcCOy6SAYFrVuBGAKH2AHcEdXog3npFMTfuY=","FYuH4ftO4DoM82TXc3/qW1BcjyZdheU82LbtIbj34Mw=","DWhF+P+oOukFyQuTm8Ahe5ahFOrhkRQreznMz2oF+Rg=","AecLh6pe7DH8/KVvAd5vDhar1o6UAWpoYvH9hKx1Prk=","Fa/QjZzY8Rn2uEwbzxvYMhv8Jp98pLoxL3jBjO4GMyo=","DooYr1CIjA5nihjbA16V8+UU0SrdJbMSn8sKEXW/INY=","BaQjt2oGb/2Gv6ziSmnuoBnXQqwlZzz7zi1sjY+pWfk=","HNZjP8eBdp3km7BgIi9w52TApZnPpj3KVGzHcKjJbgE=","C97GiPtlGkGoRUurcrzre0uaTmThWndZr5bDkQ8a8e0=","Fv4vZ8uB30ChOu4Gy8o5GqnzY8i2ETlw2ld/AOy2hjI=","DZ4wMWza307nhhu/BY+YZLpBlJqX2A9XL08yHFyBwmY=","K3JQ3itnAUPSeVdnvmK0AbM8qHMX1Rd0My79wNVh4uw=","IRkRB82Xzm2C2PJFgNPzEjhP+PfDcqam+EvqRhlDISY=","LT0U0BmQO767OESVH0kq5kA07/MR9vrS5+4iTfEiq/g=","CxdhU3q/5SMT0phHlODwy1pn+rbH3mBkqbI6nBaC5I8=","JkjAIeoiNA2cFb87TeEBnKW7KxVPUorL7IebowYMXnE=","IQODuSlaz7Cv4KJ3mQT/aFEJecuDCM1L4bp01Q+OvS4=","I2a+ufsK77KyeRmpNqkOUXi2ySCnza6ywk2v347sT2I=","CsC6u/6wWsoLr8hqE3NFAIpHhYKK7K5udXJuUrGUc/U=","FPTj+Sn6MJ/3a3cCL5g1WIHTpGGYJvj0bz8zB7ftfL8=","JsF6cFwfsW/JO0mRKjsCYjmqNxRxFlSK8ixQsXxj0vM=","HAQbVgUnV6qLJRyc+TrITxY7UClEa2udX3NzjHFWnBs=","HbhHr1X03uSwSwfYx1be0EsQw4Qjq9qIz5VWhuGbTZg=","FKn2tSdspkxx64VCEyTqItqeWUGMPz0Wii4lYUqrslA=","Gell2AFPqiFSCoefpwYvjNg+g9I9NOuW9hVctpj8xa4=","JymDtHuYfJSqcEoByIaYwof2bNajWwxTsK4kglcyhJE=","F5CCRF9+kAUPJ1FhOhi+fGFUQ6WqvZ7jDdWuGu0UHQ8=","KkXZkXZdaBDnxt6Vt1EHf/Os0ani7YQdTjUWQbUxr3c=","DOgGAK53e3V33LDDjjAX3bvLzoa+2qePPugP6PjtnEY=","GDbv0ynt6ZntoCmsdpM+UdN5wuyfgRBgkdTdgRhLSpA=","I8L59cMrn8nYoPBqH7lDQvjg9yhxUyrmIuac0mmDy9Y=","Ippg3p6nuaMa8FN6FfwMyPThh0sFsCmheqYGm63HBwk=","J8HKzYR2NQS7namV+5wR3+HeT5tN4AcMYkWNwG5vcYw=","Imkl47KOnTWDMGERQSx/sxJaYinVZJnUrUzidfuUWm0=","LUw+9rhkn9UhwxfUQPDeIXDH3AzirP5VR8liZSNyKaA=","LhYzUtPGwgSk85xjR+0qFUbaHBYsF7N/5RItvgyjjYE=","HVCUSrUmFOz3lKmeydk2Ssl6yxc/AaV5PVX5rb6kw6A=","K0vXC18fQ09w8flS0CsDFyP3aa4YIHeBs376fYYLajM=","AdqEGUvq5ZnqvN0NnKKc7gXI1wEYryLXlJZmS6Y9lT0=","CxRpwUhq2DemSkiJwkrNYMeXX1mnAYG+vemVD8BLlNo=","GR4tz026QQrFD36apJelx4O/+9zC24Rxy89wtW5QEEA=","AWaGB/34ZNVPS8YqemS8yE58mSilv4IV/fvyKHdnMxc=","L5lnIo1wVCbVASx2ThdU4fQ+HLnb3imo2kuoYq5GSRY=","AXTBUUjNZMapx+Jb9+ksDu2Tup2dINydmRJ7mDf4Qq4=","D+rgvM2QYfAVeKegAzlN8CDQmLG11NmU6cewHVwqbj4=","Ds0UaPulsxQta2o2mL0n6ylh8iMtpWFIkerm+y9QH4M=","I7i7K2bM5xsIBVhsnQH4LB96zWYIuhQ3cFKrUii50qg=","KWwpQsBBc1qAaH55sDFZ6gvMnIKIv2HpMrFtmndBhwM=","Df5/nJQXyJKhqkJeNuq9GoMHvxQXjMG/8w3icIBKxrQ=","D5yAwe2dv6UmTsDKfykHtFWCqhqtyPIkTrgm82MCB14=","E8dqng72oq/hJFPVLFreB5yUXeZwCt6ZnSZU8A4OHbA=","CNFJNsUcnVv6iTTqaXUlYOf3LTPG22gsbuqo03r+crM=","K7/SnnEDK9bfNibK541dfZULglGqmtOHuv8M7MVa54o=","IK3Z2uKMC2xWrPjdj7+Lgq7oueRkcEJDB3GFRoxseiU=","H+yWuqhth0FG/stJUwi5J8vGPvCs8kgSUs/ul313oFE=","EH+ULNH32wKoT/QQkTsHyhQGfAjjzuaIPIKfg4PbVq8=","IERqVIgCRjLByloD8+DZkn23kRtI0K2jRc9ELVdPcI0=","FsRcbuLgm9hgIEoSVQz+3xwVz1rnkhD/VsOgZ76YIjI=","CVr6yenA5786N1ev4aWbHNLIqd0KQBanaN5OOUxa/0o=","F4m41QxPRwogQKjJdUBTDrSkuhiOBYxc+Y7v8phjY8s=","GuSgk/H/BW1D6x8XbvrFnmTbsLMKF7+c6+c5ztAtfuo=","IHhmSFKSOvjuBaw5O7G3F3Gu4jesS8E/7vXt24JLUhI=","BFwmO/0sgM9WP9HdCTkZ5hcCxBgGZ87UcQnyIpPW9jU=","Bb1orf6SKepfkbm5t8ZIkwJ4/5zUI1p03aopibjtG2g=","K6YUe/YfrG/p+J9dA0JLvT3SWr0bqAmUmM3eh6g1CKY=","BsKcGpZDFuX/RoIB7NpcXqso5csMvsH4P79V+RHb9uY=","CzpC4QxbMqTbSuV0KRe9KitkhNWNBpmI1A9LLF2SNRE=","HvBcRB5cRJ3N4rAQTMDPCTOMh/we8knkchm+AfiQDUw=","E0a5dNNVkj+IErG4HNac6sArou1CB+B4sbzdZbmcHEs=","BkG+hD3FurraKJOgAIVgOLDEgMc7sSIiQvXBgrA2ZWY=","Dgq5dU+lVBhXYznHSlGNoj2kUS70TZGPPOetwDh3wOg=","BSTtqajPdMiu1A8n6AShGPR52jYzECnY41+jBnqKLmA=","LZzCaWi5VtKC2IKtJgYmkq1XVBriB86Qo260CP/MHC4=","IIvoFELw7qIAFNfFDP4/hJfD7vWdI6x1Z22G5t9nIXc=","ChA8eRgp5fkekUOqrzc8Ewvov8NXnzYIsu7yPdonJ3U=","JMJQ6163stAMKQ9UjyWLQgbaBQ/P7EOTIGmBRqaHtNE=","BK9hHcdWIovIfHkeq8lBK03FOeSCsRNg3eLosVxc6yY=","Lt2kwMjNtqwfdmrzDylsMLrSmn+jRcSSxf1GHIOnStQ=","JKV8yXrHE9Ei0goPRa8yoZLVfuLfAQoqv5MtP+3FMaA=","K3hpJW74RJ7xYyaGwuTuv2x9wBkl4XG2owU8AMf9k4w=","H8LK3B1CWY+or5oIffl9EVZPlhJEhvnTYnSlKQdxY38=","FyGDB0DqtdPoJMpQHZ27J5wzzKRtlXz03/2GxGQ4Uvc=","Blusw4Renh2xZmZ5upGYllqWBPnQ4XpQnTQ1Rhvdqss=","FLRpAly+OuaVSABKdauMynPmaPP9vlsEEhSdohK4YpU=","FpFVYZXK7m258+kqdAuOPfl7pluUAdZAcXIPw/W5PRE=","IEN2DAhG7xqDB7iJZAw0lbzRe4VfrSOGbNyUCp6b8gI=","JUw5qTN9rgd+NO/8sr9hSdqx/0xHB39WWhFkzBYGXfI=","Fv/4G4Tctu6BlfyaK0MYPvLJPrpp7QH9ZiFa/UEYvHs=","HdP99JPld5HicM8eRZMqA4ca50nYsHGyEMETx0bO0+g=","GfNMMNKeKy5x0Oe1iXW1LliVEApkLlJQn3NJlHBmTm4=","DlM3irUk/eNbr79bBz9gM303zHuwJOTXcLR4yrce/e0=","AmV6Qvt/5w9p+900z3fizB2b5dq1w99URoQC6YI7cww=","JweX4YETGuRU++A1t0yBhXTbSwsUYXFFYUv80X2Gb10=","H+hQxu6r6MwyQQX4eA14ArNSY2OcwJ18J+LD0zn+xTA=","ETsP2E+Jaxcm7X4yTwN9Sbz8YRBzQbpQ5s5Ge9T7A5M=","BFUwHJw6lXaGTlNJuduqJLtacxlJKeICL5+UYtxg/Fg=","Hniv6ec/T6w8BgPxqZRPrJU+hkmmOrnKOG4U92zJgD0=","Ki34BizU5AGev60yavdfB1rZkQESyeVtz1wUAq8utac=","IxmdLj0hPFk+oFDFta2fafGwywo7x4WSdQlIHZNlp5s=","ERLz9SBsrW6gb4Hn6T9tomBdEhEffYLa2rchqGKCBFQ=","KnhQl1ND3S2XNqQfrZYXOr347JVaXb8P71mKNCewbNc=","Do8My1VHOG+zd/jrA84xov2ZY3yCiKzIJLs8fhGXYkc=","Lf+gy3mCohX6o65Yfz0Kj9s4vWf+SX1uxqmvOFp95f0=","A4EE2HWGHBb4aWYw//D1ZKtjZ+67VK7ABESr98oBCX0=","LhwUYFBST80FnlVElsc2XcokmDH4884ZFUo6TyXAoV4=","HxsAcROyVxY6Izj33NMQGYmLyd6M1DPG9NKg1htKiVs=","AkXUFMAhPSs0GRg47OUkg7m4I61fxgsNG1+qGdxJlCg=","J7ibKusgSYz8TqELcFe4U80GDZ9Dq9oLYuwKy1DvsLQ=","HHfMxlF4netarI08Yzrg1hAh+ST9Feo/ZLIZBpLwuEo=","E0SrlgMQg2SnHNCPKROPF7gTouUHxaNxJlCUw/8JFzM=","CW9H2kCb4rh9cqW03/52jkZLnzQxSFYcyPf2WZZHMzg=","KpY6LX2/G2ZIMkylyiAQBXB8aPGQM4YCEG/3ocgYAHQ=","CiSh+/jp6l4O2bL29FGQuvmOsTDyPjpZuYgAR0zObX0=","Hvw5MmWT2zVx0fgfbiOe+7tiWEjiBAQ6Pq42G3hNqMs=","AoePGZQ3+AzrYRWkzGmtQwbLkMr30zpX7ix3L8sOfEM=","FOcUEWrwLqxoyi8tf9xWAtFLDjFWv2id2K8CIl9n1qU=","HMT4laSURCpMa9C5vkTqjVwWTqCuvc4Ra/biLqnJ3/c=","H3LZ9XzOaaepU6nR6taOD+5ihHjVmzf8zx5xByn58rU=","FQQSJFLtH9ACHCdLL5DoYNYhxTA5fUmZYlcyhBwkF1w=","D4TCGF3yV0JsxxYL4AFm+r8nk/F7Tc+VVTeELMOevsY=","JiEYdc/rHwhAKQa24QCD6r80GIwPHJ5u5mZvx0mRYbM=","H9r5pbfctIfrQ06uOjobYyBFxPNnJ6FgDaXGfXFivsY=","GoLHxA4LM7w76Pg2xLWMEWe53TuJpkpA8lD7peeZJgM=","Jqgw1Vkydf0Jg4ozfc66nXO2sLzeV5TzeVosfZoAW+s=","HKG1EDG1TWwgnGAJXrpGPPJ6/B2H22C4UnM2WGv1rDc=","Au0LLA/ATpndNz8Ro/zlKAApFyKk9g9p3kSwvjabQwE=","E4v5Jsn32Z87NWeG7KBtA2lsNKKz5wRcz001A2uo9eM=","FMkATTqkeTLsxDtk9IASKW7sYXWZiyfUrp5nrDfiUt0=","Lo/OHavgzfP8Xuv62Pp63G+K/al+QpFy2bdT3eS5j9U=","CG2Gw8cx/kVya6/FF2tYQ/0E3WT1gIBnfbGsmf0nnDQ=","B8UiqpWCMTwQejYpQD9Uafd36GuD6nLVBghxh6jnK9M=","D4rhHY9vQm+vhRbjUAE7539IklElgO0052DaHCmLaOk=","C6WqDms9x8Z4BP24S8G7zB+ETpBGpmJKkQFzzaQVS80=","EloFfBCeRshtSgedOqQ5aviz4BNlVWobVPOdjt5m/SE=","KMpsEBAnCtxJYaqDNc6DaWskvttLtHPfwV6C0wW5XXU=","HWNpN4YdqhIhXwMd0x713bXSmP6KaH8VQcET3GpvmC4=","LnVTNeQCLXusCE3M4UmFIPgK6T2pfS9lcVAn3I8G8N0=","Bx8nE7GnkzoKIPUHuRIFZK9+OZvss8Nk3E1P8A6CyEs=","L/1dqCgOMpmeGaFxfhDImvzgxvgfXTKJ49X85izg8yg=","HdFP5jZelBUX3bj7MI46k/VAA6tL9fKsx6e8KLUTPXc=","JxARKfx/zmIoDKLFiOwVfZblruXCsNvyBJ7SSywTBdc=","IZGf4lN4Tw2zltT55MdzUjhrm3JIkEN1S6iisfSsEmo=","BwJ5WKj1MYd9HOus+CjdiwF6ElydKHWVNzpaOeWM+NQ=","D0wSt2gUrcHN2zr00c5pAJNO0hQgPP9Nqjwyf57OVFY=","CNmIaD6vSRWKfJrocUYGj24c91RVqdgiMWRfcpDRCzY=","AnLnRCbQdNllj9lSa4YWkH1Wc6707jNnhQf4K87vWGg=","GkcJ3640z13fcAbXwpC7WMdCl8jEgY/fXzlQtUySRSU=","IgAri0F1dQR6DtXTWRQ67aGeiBDFNJnqS1fehtRBraw=","JFdIaOyKSnAuoM+lW94uo7+yKCH22IpmGDUnscf48Ok=","ENlm3n5oCIdBLu/YfYEdxGsCQIhtaFSTQzjSESGBl5g=","LufH4+ipeQh97e0C5yVewGexxGR8xxS5bhooJY1waWY=","BwKfBnlF7R9pRolNZuKo8XUTt8rr1Aya3K857O7+uoY=","I4+W3OIsEMmsqaGYLubuqHt86/rlo4d4K0mmL+paq/w=","C0aGbFJIL9SSuqM5XgoskEcLQC5Tiz2NDFByLlYh3R0=","DXZt8qEQ7+JaPZwAcJz1MJpxw+2nmUGfw8uw9pzOKuY=","BwFDt0DFTHEI9fYYPOhDcfdwdQ3aBLp2Xvg72j+y1e4=","FwC1efFeUMKtGM933d1UnaAApsg5Del+ftDY5o3XfVw=","CWakx2cB0JZ2oIbpXZC+z6B7uANGQiRM9q7wClQNI0g=","Db7+i+8K8lWY9UEvhOAKPdTofeZTB1ugxdp+14OXC/Q=","Fm2GN0w512YAlshyeOJwJMqDkZfmXNLzQeeliMU4f6A=","JRWDve0VTrI5YlF1RYhxLQ4beMKc/US0Xymp/VLOrsQ=","EE+i82HPaWCCxfztR+eKdfOTYxQuh3s9gsVcaG5SYno=","LpN7+Ekwl2WjUO2HkalthZogNyKbtqZSvGre0mTHxbk=","Kx2f9/twiDUIxWAh9X4/nqHbrGynQRaxfukmwewxkKs=","BfY4TBm+migG6JLIEJF8ECJBiL9D8EGk6WM/Nw+rzZ4=","Ls0yEeBe8npQ6M68Qv8LGDz+Id+rI46p73Yimz8QkwM=","E0zEJKJt8n0G3+zc4mQaAb0QLn/xoHmi9+AstcBND74=","Bkkb9t8DhQmZJrMiGX8DZrJ1fX3WLuPCoE+bTJU0BRw=","GV/CWg8OUYk2r3Ouvf2W2bOKQ1NQSw/4wUGJhlUpIMw=","IdkFLM4oz25OlAc/hjzo7fEvAuwyhiN/nSI7YjlmYoY=","C6qPcwyjHwP+7PrDSpbDrHrxSAeRB70dFyQZF5FzIb8=","JVgTiSEPbfx3TTcW4ZeEmE2Tg39G5RncdT026yrH7Ts=","JOAOL8sZ9kJNcjoC3uUDlrd5okbaU6GiQPG9iJqJcKY=","CD1IVLMO4GedLbQQsgfg46Z1eIYxxaNWzIdzKWATTHo=","AK9UQW1zQzyi7S8WE1knJ3C24wCTgdcSmPgiPerPrxE=","DYYRLgtcqTj6ftvsqewW6enrRYnHdwb/OGtPEh//EC8=","Ii7rCxapt+0xCIkX6+HNPeKlHxXh45IpoIv3NPss9U8=","JqsYh5evxzMiywL455V44OKW+ZG7K8/rtjXRISEW9Do=","AYmjMJViSp/oQ+42frIyJNuQyNeWFJQfQwCSAr8/dpI=","DLEW8FxbGI1mChUQDk5TIT+ckaLHzEhJdGjuAJIEFV0=","BncWe6Zc4xztgSxXIRYCER/Domu+kiaRingZyUKBGWs=","IDhwnnz8w6H9UOyER2yQhwdI67MPZDG9E2/emc/eJS8=","ETBLRx8HhGS8IATCJNwFpMTsXbCg0V8yQTDhJ5Onruk=","Jdjiq3+HqtN52j4+t/XTXyl+uAxDDHZa3sf2N8T1kuw=","AlJwX1TVW/KbMCN/jRKq0rIbSl06eqrpgvfN49pjCGc=","Hbnt54rw6/JtwYj2+nVmPuyPZbbJpe04+7NCHex9fkQ=","KJFb36tyNThKAFLtc4OfO2YAp61jKCIqW1z26DOiN3g=","Ckj9mw4AJ59R8kC0cpwTYHQPAD6ASglXnijAM8R9WyU=","AEqolejBJOpiZD4dR7KBYsQEqjkP1Fwy+coAwID+wAc=","L2/yw9uXFHrQRZTRhYmUtBb5iqEkO/ud7qZcEJ3ydxw=","JPT0+vfOT0BambmXrL6U9PdWRv59Zpd5c35q6npZMYs=","LG3og2GPYb9/P32NJ6YH1qfER3SRtKUFlVMSoerTvBA=","CE5tTjgh4TP7kd3xfFKjw+BW3FIR2ZxQel+OsBDyBR4=","GCaVd4rCUDvVqyMvega/ZwqVD6sPUmkeZthdZ49+xLA=","FgMzRh76oqua8MgxCE1U52adijnFzbZ7Lc9B08T8XgU=","LNFBQmrvg7YLrySpGWT6A6ShWpVtuWuf+LGALPeIaQc=","Hvz0beQNAx+EM1A/NbV+fgXnMzKS/E6H6M9pAWcXYCM=","E1ZlNMYh2AbtFi7+ht4T6Z9boLh7dmK7x7VYq9R/ty0=","E90PPnrXCRhA8PpG3ygEKXpgoAr7XLTK3mLvkwELkH0=","BjB01kcpgHJ0uVgvVFn6XxOlcKoMjBzflw4KZ2z8a+0=","LPC5RjJAGJ+RsNAIHx/fEXAT47v2ay7CB2i2GWynikA=","JBS8CGmJ2cWktDiSMWcuEGcPqg+kY5PtOsuPdZLVPP0=","A1w3UhDEA3jedjo6HKgLb1nucuYLzNyrmYdWdgenpmE=","JGSbIkhdQWSlhJ5v4J5JGAC7l1xMGNvgduxMhDCUQQU=","KP8wFUGR5zS7+INQhtAmlYdw9YwFrfKrh0UbD1tqW5A=","EzPgaO7CRJ7J8+wlCQM6le7n2Ts+IbrL8THzUwIers8=","Gq8B/vA2jabsJdQg32K/f8I47raPnAHv4ICr2SGWmZI=","GoFY6dbv/7P3cEMBNnScE6w7V7CsZ7fnkLh+TJUzFk0=","JnpLzkZEjSUPvEdiQL3ygIK7ez/U/fa0lZ0gLKXCLMA=","GQks4XnGgs5lSFjzPX23U7mmhkJo7qw+AbnHSZ1mk4I=","LLyEM0UFFByFRGo2i9zm9DxMcwArnH+idVuv08kTzeU=","DyKQ16zcJu8g4Ov2x5CyJuwnYYeA1ps0I124BsLPf60=","CJl9j+mKOweyRauxov+STmnJTsUS3YcX0m2ROXb3AJo=","KBJXppMEQqBLYrcu2F4GwmUQ7zVyuddqWkfTnMjs/Rk=","G+0+9Z1ST9OOsoNRrNiSj+aDfO5ELNQSjhfkzqv1xeE=","JFDEIi+SE5HC2IDQVJpmh5sfA25hlrDtBLb2XXUBrog=","E8vIFkUvGnhZxaFah96nxwdLBvUGI7jVNa0x84CGIBQ=","KkR9q2Dpo1beBOCSN7Cl6COZcHLFV8KDmNw0NJzmsQM=","BAOvsp1YvXqZhcR/j8XiMGGcMGvDueUAHlZBeB4qJ2c=","AfGzTXTHuksknp7RpAPt667bfN1omX12lwLGFnXPn+0=","Dl48VO2t812YSSxGl128ji/wjBOFir6PzeX/dAGCtkI=","DWO6ZgA3sJrYkfKnPuaHzZP+JqzRAvkK1ax/zm48wk4=","Cvty7Pj9AuFpmAzY9NaSzu7O1/VEBqZJ2gtUITgXdQY=","ChjRgpO1OwQwV8SMrudS93fry77Wysh4rm3X+CPa+Ic=","A0GHWGAUm4AjiZ2lSZEvbKYz0M1kMIF4ta8wWDECXJs=","HnT0f0MOHZ/k7a/PZIQpPUddu9MuTbevsQk0TWshfKE=","E5POMDxSwtcny0AERGuOKtIsGPPGuq9/C5gHtNyrYO0=","KZaphoiziWsSv4RGMASx5s/UH+v6gqdsOYKcAKWQlWM=","EQEniES7HtFTKojJRe6j8XccC3F32ekKifwU4Vc1wPI=","D/lE5YSVw/rPnovOPqfmO0XgCURT1t46R2808Ly38HY=","CWhYkrFkeTai0G7CkEI1oqRzI2+64AB4E4MrOyh0ehE=","LflZVmp/dPB6bY2w7kjM4z2D122Dzfty+OYBy9qKYZ8=","E3HDDfhPb6F3F9yr8hJAsfYrag962I6pdLdEJFdr2y0=","Bj33il0q5lk32GX7ZlM1jxEKFiC0YiIfxTci4+WRS/Y=","BpQ8OzuTpR91ue8Cfn5InEAx/5LfyebMjBRHZe1FWWM=","JYpjAeHU7Yb0MMEhuKegKsQaRTENbsz7HiXFDhRNVSo=","FpRsFgUJvaDmoosxDR49RlSW9Q8zHroSo9M16A0Czv8=","Ioo3fcBj7pXqk4MgPgnNxE7orUzko71qzPru682zr+Q=","KdViyDM1WhMkbq/tnLgWtwDkMmiPnQFh6zRfk8htHDA=","Brwy6FGfumNkr0jGPUaHlOQ+rwRKEi9d91BttzKBFXQ=","BbX17k4d4BZUhe0uiJ3mUkRZfOl5W9EwKZXWRItwmcw=","Io4PaudZArjG81Hjr+kRhS+3JZTaxthLslAfbB+2K3s=","Gt7ho1f5vQe5ql1d5sHPE6uF48Y3VyxEBRgCVaayYss=","D+jiMPemU+cNfma2jN3jsJHJC74zku1wxlfMGFKcSNA=","F/Ljt+Kl6VnKxLLiq9WyBO0dHaeI7LYB4gnpE1tCd24=","Dl67jZq3suz9dPXH2FL7cu6h0pQ45YSdYMO+EQ3M138=","EXb/YLCakw/DeL+lv64TfX6RSywuXUFxi75Zh+pCBKY=","HCieKo9O/FvwJyv0UBLnxTsuolk1PKX6wTRSVw8Owwo=","CJcIXKgGLfQ0pPlSb2Xe9rkN9CJESFpy4jti28OtSy8=","CHAtd8brSFSrmg3CAKlJYCI4Hh/DNgb4onbK4KAIbt8=","LVV94ESwupk0tOhMFMJ5C3ff1zxglk+sQ8EoNK4WAjY=","G3xxtUcpVIUlGmAeeVpb4pHskxDQmvTL9sbx2dl/B1k=","DC/6nQjQH3hjrPMnQeb0D1phTVtbyWgNRFC8w93P5+A=","FrTfdglIDcSWycgMIFyxMNx1o2vIbtOXU3+4Yhu1Wqs=","J4hwKFAiqOYsAH6hqA37mDEIkzkWR01wWX6yI9s40SA=","EtCG8kJwmVUy9eml/g9FQhHfbg1wpPVkjewVMrztCCI=","FAUbWyRscGFYGORgBypjNTU+0Lqv7nyifdHtMjoaRgs=","ErZPP7NJF0AjTEsqnCKw02FeZAk3Tb1RxoSA/+2DxXg=","Hbp3w3FVz8OkDmCjyrIqZe09CzueFKCI2g94I183jEY=","LTze58IOmB33hBSvvBGsC6VTiwXYs+5k6T3fedFq92E=","HnLsZFkESoVFzwT8l1zqQ5aTJBGYX2P2nPWr/Qeeozk=","Az3kKq3zQr9juN+ojxg0MW7AoaIDH+a5kLiTnq2QI2c=","AQM6+kIPwxHfhzz6Zisap0wyk7Mvr7bdi1CVe0DkU4w=","AyRgifxzWioQ7/gZiN3fa/bLNspMlOX4EdNKE4r3aV8=","GEN4h33CnqyW1w8sPCPQOxW7XMM+9Gqk19i8dDbi4TM=","JKRXCcvP+4Zl4Abm2hOHGLlhoR5fgzr8FN43JzoU+rI=","Fe35xWurzM+1l3I8Ti7MTp8npmIsFh6Q9qoYnMwoxHk=","JKWzc6QbYoS1jf/IU+V8HpTdgBi/YVXc959TmtOPBYg=","ISZngWrfs+quI39LxQA4NyR/8WbPjLof3UMkTzSqVA8=","HviT9jcVg2jpqWt4k7E2k9GgjaxPRSMQiwqZzWDWJ+c=","Al0U0dnQOarCrNTS3aP3OoCIRq7XFZgXKJ24/wGlEsI=","CdGHCdXNHmajClrypAICoG4sS2RW++KMVQn8+PUBAJc=","EOSeRRWrI/EbqZsKjrK5wMAP/THil8wOv/S3ChkISgM=","Eg2PPeU00550poZqCVqjA4zVqKbaLIw68RxqV4ePvSc=","EIahxnDAs4pGFeK1ydpFJDWyjLYYp1XLjk1sxKGF4Ng=","FD2k8eVsKZU5DebVwgOoGg+FNK5v4bVIvAbtZu63G4I=","A/Z/DGgudBhvqKQxha0QWJhteCkDfJvE79EzA98lZbk=","LMyCARXxc9bfGQY3+GD3VZg41i2khHaKqRR+OHGP5PU=","FseMAD2xet5JZAJtnIBfmPa8wY9asIS/bbR4MktMu/E=","LO1z/vwsyvZbKJ6dvFZetxGPlKHlW0McF2ZZpOIDALs=","CANV0mdEbmV/T6SERda765K9ByIiS2I1QQL6+ZXIzw4=","HXsDXi40RxELVpoKKF/MdYSOntsF8mB5CxhCgnyqacg=","De99aTIZZXTfqju5PkVeswc688b1sjUQrzBORK+dRes=","HXvul7g6UIqvq8/CFelL5sMZyRoGpEbv7qXS62Qz0B8=","KX3yDxFo3zUqwvby66N8AfLh3OjGyatv30vU9zqKphs=","JwTaahciNWNVUD0saP4bTMgcfsjseeYCk8br4s0Pu+Y=","LuHJNiFWkEL8tXh5hrFix3E8P0a6mA+Ew1YF85xr0Jw=","FD2tsnApQ/DBq19NvFRHQScbX+rMQQd4ORu9Md8n1Xo=","CStIgNYpdRyIDFKlg+fIl7lvjkAX0DYVJAtYsJlxA0c=","Lfu54w391qYQn/YJb6eIC73KYwr1hamN3cJsPAugax8=","GD9e+rzQuztbzcMHowAECP+iJ9fqCdHkZyi4pB3BCxs=","GI7BG45Cef5daIXK5otHsOLzsbFJGCPVbUW37guBm+8=","A7ky9C8FdFLPfmO+HXkd8TWxIDoFoe6HGBt5Vp3Zyvk=","DwBOQRhmvzgn7od/8muQMOgjSvkc7Bq/Sx5j7DdstPs=","B7KaK/JsMlNVmskYZuGL0kIxhzxijGxUCFAg6dlOTgY=","DdSTMkR32rP7guv5u17LJhsWBT/94HgMehA/UiTtDZs=","FaJIHZoC8PZg8m9zGABnLU8BOGqIs5pIEwBST/fW138=","Ag/Kjemx7BsTBgaUWRNDhexzbOPUf8/jHJA23kZlmdU=","E/EwBswhxEE9EmuQNDDH0PkYQ/zIyp1vKeCI1T5tVtA=","FWInAyHzUdGf8DDNsQYZBuyvHVRahCYR39L2K1F/rcw=","KhusDRN2J3FKZNJc/4A7Vjl+t8SfkW8hLDJeNuCZohs=","CmJrhBPENxb7OUdareWl+mAyvmWHChTHU225aazNn08=","AdhhSnUBuFCLlyuzqYZdfr4Q2h9++aS3yq4ujb6v3jg=","LEzVQhO8nBGFhJIlc+3Ql5aH/+YBlO5heomXEJX/FxI=","Jztn5Eu+DzbgP+G7fQJtOuGNdCgOpmD362revxNiQ3A=","I0Xtw6SU/QhicN+OwzNwIbv+2zE+Zm7RM1jYCNf7lr4=","FOMkDUALLzfEYnMeqxq/oxIf/0RSrfi48eotff7+W5Y=","Jv7RAML+GK/UVY21aQ8fXBrkhI5F95hLl1oSeyw+Q/w=","CU8MBDLj3WHdWfePPK57LOrMfqUuHkKWGBMtKZNWGz8=","AbaVKNHLBl6hu4y0/81vcnpDwYSZioxSKJcT5S8aTxo=","J/QeVT+dWHqEes7am8N0raI/1aMQaGQM6IUfKslBa50=","HnjcV5njGuAEfsQzjM+LU2Nc6/7sfeBQmKyaSfUbThE=","FAjbI6AZUWP1f/VzObxpV3uWqnyfWyNHz/7nxsrNOJU=","CkXtKHS6oeVYU8qGnYjs4LGPknUqamIpkvLECoD6G9o=","AIxp4RYo718lz1qpqGxYGSKT7ae4A4sPzb6exDo4ezg=","BEGL3dG2N7Vm6YOvcXSEDzEW/u5j7PgRujwYMgi3NFc=","IVzaZHhzXrFD/7kGdPz3W6TWD4Hy4TujoUiuMvctS0Q=","A1V3pU5RZpYzSUTTVfj18ZzcAAaj2PGcv1KjFfypJlc=","FAB+CPIFCmcmetyJma+r8t9AjFJLYtZiQuB7yoRrc08=","HTTcFvebbjDtWmYc03wZF44bm172gUEEsPAbMEL7wfE=","IQKHOD+OqdAiMwWDA3yXx4vGVZsG2pmNNIbHhFGOKPQ=","JPFOhSkNadUBojR1cHIP+4Be36PEJXTxDBc2MdwVqTM=","MBFiAkuye7y+dgb1D+f/Yfnvb+xscPrySF0RhZ9ZJJo=","ARLsfPGrd7qI3wvyucmtzVu9OQR5hVex+xfJ8JrrwK0=","AEBeWIiFRoQ5jKoKRH8Qd/IpTSPE/hiL0dkCS1x4bJ4=","JkgTfW9I6S4bzKysvjCERzmfY1g3CDRuLr+Yfzl8jxk=","KCjtcDkwPNKrGsB+JOLKjfE1YvGXSyyfKz+udC6twjo=","AV5txYPk4fRibYaZkQFw+qMjXVTU/awkgAEMvEODc28=","Dg2QHxJhNtuK5AgDU4puY4pnvklaiw2mUj3RUr4kUU4=","FfHWuIcX83YDH0yduTiZIsgyda8+Zb0G8WOUV9iuptI=","LUotS+9CCUUS2iXx/ERRl9pBFsvxpfGd7acTKbP9PMI=","K3VRa5DIMYdaUu/sZjs6wkQwCkrqM5DLt5yrBKQcnDc=","It/nuhqLg7T/nlmOT4U1aOSSEu7AvrVmy9g6WAyRNRA=","FzVtIw+dpNJF6V0xk5xUaP1rT+HUOl5qI8MlvreBjoU=","AHcapaActVHWdOzHekVm0wQT88bz+YiD8il7sq+QFwA=","IDjCvcV9kv0igm/Hbm0Iwrnw38UoT/+SBnyncRhp8fc=","G7steDEp1WR9zYaNQGi0yykXVTQvTRiWZ8q3P1iRPFQ=","DPo81ioiVpvZ+D2sdZgvXZrnP20R6UXbTxaR5H1pDN0=","ILi8r7IZwOjMdMVkw2Xn8arc6+nR3jB6fYv+vZpZRIo=","Ez+PSTJM5Vq+E8UgZbn9VSXRmuH9lcloQA78LTKj5Vk=","Hjk+KBbRhLtv0GJPD6fQvix2fODNqHqiI1hjVktvDsU=","Dqn5ltp3eSlpf9nAtweBKOcKzkTg+cW9K0CAlrpqyrI=","H5mCObsTWZ2yXFYhQ+En2H9/epTTIXesRszrh8uZArs=","JzGVT/P6k/5hE0ll0/LboL+sz8kep2ylljjS+pxKego=","GNB6mTn6+lEuLbP1I9HK1d5e5hONwtaMjKBtWrtK5lU=","IcUSLwDw21/YTOHXwjcOAZ+oJp/nYxVg8wpMeR8ijg8=","D5TL3knXu3R/G3qDvbw/u6zJXGg1V2e+7QLWj0RFBMs=","B3hlhVd9gWOMjfbG++lP1jL3rX41zv++Nn6co8ozwWU=","E4mfobQfEvm6nYW3K6MQ4Chzb1IAKTvBXfVCwfP986I=","Gj4rSjQQuBDQ2NjpG8CrvFhDyQ4fGWkCkkkB5KQj3ME=","JGk81SmIhlA0OL5oUnflgMqgxhCQzn3g59QOSdErkZA=","HLiHB9OFBIgo7kpP9GUdJrDGzkQDgBtw5l0DZChb0l8=","LV2ONshy9boImQXnSLAMFzitUQPlYzQlDbjDT4n0y1g=","HfSP0EGw53Yv/3hAhwZP27uvKSQqNb3Gokx2TxIB450=","Ia6hjWUmT0hsmGs9zeery8DOH4JBi2/p3EIO9yj5pa4=","KVqXjWsRQ9403tb4Hir1C7r56To8T5jwe2mpEpeCGNo=","BPDwtU4vmt1RfFPxHehlps403zUtDIt7Dqj8oFIaO18=","DE2qa9iigGlc63c8I+qTbq4wua7LfSlzLz0AXo9r6HU=","AnW1+VDla+0BMgnjTJiVn61Rsr3rrPsVHimTyGkeHxk=","FC5iK46wlNFWR/1pEW9ZpSfYmEcQq4Q3N5IGvJW6sGQ=","CazJD7pSV0I1t+vpSzr7EHpou37W1gshcUIZ/BcNVbA=","JlErTlNZHxhxCbK0829BMfwLzRzGBraFOqIFJrlZHd4=","MEy00lizCmeYz14/yG5JGAnKculEBmFgon7GDGaH+u0=","CfJNhGlxeiu9s0dAlCy2aATtZ9kyt2jIe7a07PNU7M8=","MCpgTRSlzqSdBBHW1ml5dXjePt7dS+5ZUQmlCfIAX3g=","FwV6kv2C8ndjuYwBN6Papq68gtHuhNwoZSHEszrRas0=","F8mMPmsU5cOL/T0ZGOezLYXUMk8W5DRImS/xK9AGOnk=","LYW6ppK74B7o7Pq44guAuMASyW1p9pS67vwlO7mOSec=","IqcTrtFgfTbKrrRv/0EeZMG7MWDbPzQx+swHlp2rTU4=","L3rk1Kz8hJf9pKwNCCytOBlvJlyGCJI1CT4arFPGfoo=","Gv1SlEYoye72pNXPIanc9vpJsdofvZyXaXqlDc1s9xI=","GY6HTrMYdbV5bDCBQk2nOpJwjs106A7e1cisSSqAEf0=","AU6ht47GJHEU1GFc4NEeKAwzsKH7rGNvVfBDpevwTKc=","I7R5ezv/sh20J35OsTl55ndKzwRS3qs9BX7WwOtfFxI=","J8hcHBRwds13f0G5nS5VUw1NQ7NBEhGH0BBjfLtmroY=","H4RoNwl2OfrUPA9AakApo6ttgJwaJ8YeSLFcG3E2Xx0=","JrM4v98VAxE1f4BkSe6Bsv0p4/L0O638eEiUjdd4GvE=","LMxueXM3Rfm3WcHrX6NnHcPZkGXoQT1lPrJIN6m9xUQ=","G3+6a9KFte514ZXeK7sYnoIt7RmihnxTI8f2xXXBmNo=","GEpchYWGmW8IrFz1tfZzZ9kc/NcbNeujd4fkTnz8YbE=","I5FXa6kRjbEodOUWnpPHKfiq73HS3tyB0oPdlT1Z4Kw=","Bv1hO+9kavpPHVf3EoUY+DNQ5e/A5B+BSNLru9kZQFg=","Hs8UR5SHrY+OXkZ39z2+gfPON37Hvtn78MCg8WuRJxg=","Bv6YcPA6j4NJjnPs8uIUUyuLEUoUzzs0LXYj6dUZK2c=","BLjac5elGRU/B1b3LJtiZw7V6YPAKkEJEx5yddfy0bM=","KxxA/L332duF+Biq1/szO3JJ23kdH2X0P1Kad+MRiZg=","J4+yHkytEQCRcC5cjNyEQlvKCIKGdy8YFzCPMQl4cFc=","F37wPDQzKN79UijffU5E1M0jlW37E0RIpIWxllcpJbQ=","DSAWVL/N1Ay6UuUb1BnA+VwSEB/BBj67jYFVTHHBYVM=","A7IcSjcCasXZYhGVcti7q7RTND91wNVcdAqtE5aNbgk=","BypSFk4xdfY1BPvnoOAlCdBQ5VUkkOI9fJyCQvqHDOU=","Aw0MGEt0PjQBEUsfOVsS+2qWIZHHfFvf7xZZd836y+g=","JLo797kTSAOrPch/2enCfxKXZPkcNOtTtVfvP+qHo5o=","E+BdXE4dutRohd/yevvwIffhu9Qy0Knxo9/88zAKekg=","ETov5ukBnoPg6JhBDDUybBDN0BQprLsfq1+qnPR03i0=","B4rryP8poC6JUU6aW+tWkLdeWY0q8vkBa7+9rAL0fRc=","Ld073wTX0UScEuYAMLlxtExld6tWD57+joZygu8RY+k=","Ig+vNqAX/v2d9CgqlGUTWFpPbPpbxfl2aGH7+kPKGKw=","Drai6p9oJwZf5mb/PRMYKAkjpjT5HvqeQ6IjBgJXiB4=","C+lFjpz9bMZInX8g0XOPPlGbXCKtFTUstEQQXvS4moo=","GSXSRjW/rAlDGxc4Njb2nyJLrtNXdijeM9Gigs0Y79o=","CkCYiUcp1Eu5aksmXPmAkAOe/2z4sXDOPdb45CVm3Zc=","GcnUgO84qhMQW1dKQZUgqn0JKmjtbnYXEGWAPaUEgr0=","HApsB8vA1quJSGTfzp30BrBLsMP319TwCzQDVRQRwHs=","HUC9QM2uZHz/OLSSia0szP/Gab2UpqpyT6L+Iy1OawI=","KO8tS7NPtP9nMWmqHN/L/XqGmXSVf/fse+9Mcx29tmY=","Gy1daxcbAUiUfVX2GwaYKChWcPS4Q9Kap/RJO8xaiSM=","DqCmflBKVeB/yGjthfPLJEMYNUCdteZlPMMfwwfSnr8=","FKmbvLj/8GdyFJ377QED3ueLViKvwNmcyyvN4GcywEI=","KPcRZ26K6MJEPD+CqLdl7cF8/G7SVLfSM4+SK2hDqOY=","FF7voBSgLZzvO9swUgbfsdzU5Li7kVE+rdE3TDjpQZU=","I3nSnV6cadb7qMomFlbJ0DcCNaN493zKKFDPs9X8IXA=","LRLOT7Ae1e5sRExZWDzRom2OdFRDpnIatIc517JoXh0=","La2l/KznTXTb6+iNr9dUuFmYmwkkC0OkbgPcb7psj0U=","LiM4ZXXi8PH5fk+whDihNyjf1QMNOYGS/6qh/G2l0Vk=","Jw1YkB+Iig0zMTkddLctNf50mEmt1kGc10fWzWfbLVI=","KeSLFXy0B/nOBp0PgKRTfNnocXnZ7sqzUMeNaZCk4OY=","HRXVBjG+cj4s6L+LVZ2XWvNwVXq+4ztlFM7RvH2/v3A=","GalUqlVWlpcILZcBfLZsxnbQO+1lQqWKIjfnSDro49I=","EUbYzULm4eR7UdXYBmDX4Xq0NGeipbXIwNJxv5KDcVE=","AoGjvCh3uC6al5a+++jbNTaq/xK7zr2R3miHQy83u0Q=","JxkE1vmN594ccCddPjYsOYWy5+vAc65ZBYrCtOcTlOs=","Gwfw+IHWC3zt3+Tf+Hj8cWLJLYwje1JBAX/Aoq70OIE=","K80nAaY3Nec7Ale3PWOsfNd5LPlu0KD6POO/YiCDWus=","Ex8l6KqWY8/4/NxPMlQ0/hRAVvrauwHU7/wCAUjwdWY=","HgPGJFHLv7gqakyFE2i5qc95Nmvkx5N+8W6JC8ps1sY=","Ko0wF/KyGoGNPIyTJWa9G6qqfEVgC6oJkKpnpJMJyzI=","AXTCDhENEG6wOM2TGNRmkaaF13e3HYhS1FYCRi7F46Q=","JjnfBz+jJ4nQ6a+rDzRCJIjq4G/XXvVZleNp4bFdvd8=","DBcNaPEzEldjuncUYksAdHX7Z4ehsXBDkmlj2tFq/R0=","L7KZNASDoXObAQjmMaxuiRc2clOna555k7Gq2faU7Ck=","JYjP5CGmBwIhb6C9VnyyZq8QQpI7xstX7Wi7kEiPNfM=","Isj9RjhWS53pDKNeZhll6m8B83/2Fe8wgEb+E27l8Bo=","AXzvCcmAqAxOU9coS1sqEN0c0KtBJg0zzBnfraiOVEc=","HZ8KMCLEdk+eXmQEOXu/RL4EnlGFysSLxymslIqwEzE=","G79rFK0+dma9WMfpdQ97ufbW9wxMKr6R4g/FHMXsKMU=","FMjSPnsVeHAkeU3DPFjauMEXtRtFiPXsXNjFn5zDDcs=","G5H8jmKnnpj1Rc2iYI8ppBaWQaP3FerXi/SUgiVV9WU=","CukEFHYgvPBKS0qWebJxP92M1QKW1CyjGFSOMrgeOzg=","Fm8+MyV3zhDIc4kbXMdC58NLtNYrV3MxZojlEPTYK4s=","AUHgiL/G4Aei2Cz3F5VHIMspuXswyMgSXV+bRsLiZiE=","EY4O5CAtEnoFd6buopu2FNmcEDT+Di50Zekel8g3qik=","KXC48x2bmvs9O5EtkFlKhHugSD3aSwk03xJ4uhS8Lsg=","L0peqkt6/z/NBsnWj6LjLktOYprrk+zLVSyflvvaPd0=","ApHWzH6OUVKQL1sFwTACu6lctUZX7zk+krzCO5u/f/w=","LiIar0BwwsDXNbWwpSCZxllNOJNpFMk5PY7NIycIjEI=","ED1mn8RrB6r2zESJ6FckGBUDAAgX+MH7XUcbKzYXnyI=","ENvjc+1wZ0ATqTm0agfuT4wZHj+2OfjQp4HR/7qC/pA=","EWIpuhz1gP+G7QBrkgcDbmnMDxtV1AiKs04Bo/JfpTE=","F5uzk7m+6O+RiiuiI5/x5r1j1tSMrUq28tMZ8pmb5PA=","JXqN0BULElS1hRIph+O/zd5/kU03TSvsBZXEavvAmXo=","EBX3+IcdurDRIVcLC6ZBeYCi0RspL7KjesdMim4Zjfw=","FgrPPcmNnR/7FersIofVzHQ+89FvuL1AlGokYz0jgl8=","BjxzVSsZ/m9o6d+UOKWBgn7ObDFSARfCNTxnzwcU1bE=","A+jIDa+IeTjNNV7HEKnjL0TEdSCqul3P+cYsS8BBKoI=","GsP3gc2WdsQeoh/St80/OMx5Xra6RaUlspHGa4znumg=","GJ1xIUkybXGwMn+bcQLKD5MEP9vPQAwY479wEGSTNUo=","JakSdh+Ni938+8CZvJlKNVF2xUoYMfjupVcsR2WSwco=","EVjJdY/bvWVR/SzNYV274L7elpps0PKAQOk7UjntouY=","KOe1bNKbFhM+Zjg6IO2qanebavuCdyNEzSwll5qaXu4=","AsNZf+rxA67wzw2pbHgXv+VxOCjGE+MmyXXKEwmSdwA=","HEy2AxVUovQPzRtxIjqXl13en09cJsoIZ4hwoTntk8k=","Lsco/ntpzEIfGNlr96gmyhsEJh8kqY/pweigpBtktYo=","B54zH2XIqCuHWSLIRJu96joRGmgXnl0t//9gXhykfco=","AmzYE/JIBwM9fAJEyfB5D7gNow5ePB5F18cDLyqqGDE=","Bb0RwrZN4ac2+TrI/34MFm+MVwpvBo3tr3IifoXBFFE=","JeFuxb5ojhN7LMzug1Qo2rk5NRsyJ+i+v66F86H5wnA=","CzgHOYGwr0GP5p6lXtob5dKJsvDeO93kfuZIPwM7Fs8=","G0C+Ux7froGjPkBjj+hfiAZ5GaFN0d55Po6xUg2zor8=","GzQ30PQFqyfBhWVpmcU4pnZUQ48oVis6AOrDlecTODU=","JavpbdwhssF7a/s6ipCirAUbOHHIf7njU4PPbXIjiIo=","JeP8k7zf/rQovfjBJJGWPkrKGEdYRLZ/xWdsc/0Os1g=","A6+WtLlywzcbB2ghNZz6rq+WOKByxPk+CKsRnmx0Kac=","IypIcy3yWZsJ8fFjHWgSkwP/bUAJj4smAJg+VTRDXBE=","DN1RipGzj+2kaB07yZIYLuER4EQOmGDNxxzbNq6Aweg=","G4IYmMQ7TzriAH6ZTqg6hNP6Y+dZXbL0ExLN+tHPJJk=","E4YgOuQTwZQqM2svoIA49OkuWVLlI7vffPM3gRPvDP4=","BCVlflepQQ66A2Zc8c6O/z4N6UabAy1Gi6Fdkgj8ILU=","J4hK3ky07sDJHIF34Jcb1am4RK8YjSisGYDMtCX+aYY=","DsgXMN4IeJQq9LOCe4vZrEy7Hzq3rpfNG7E1sLfHj0w=","CpPxyWKeyQceJoFIxlA84YAPTMPFOJw26e3j7rq7cCU=","B+nFjdfEdn/KXMvNe92KT0vqeFhUKymHQ2YGVAAexS8=","CXXgdhTM/jzzn9AgjpfK1JxlowrzWQsk3xAW5qetmzk=","AoPzAsmJdaQYojLTJj2A3XQwARPYUd5te17zx/kplFA=","K5mZP4EnLABVPHGCfp4ksycFSecDUVpnBDk7OJSn03g=","A8zmPO8LzuS51cdToZDCSRJ6YotO/11Vfy7AW10DPJ0=","K/TOE0Ch5xf9jfUl1GQ5N16zZCIoranbrKWATmmYUHo=","GulFPcuIkM5XiyIdhGYSozlqskrIBX7Uggnv2/MRZc0=","J2TT43yCx2OCwsR/SpPdjnP9x8rb7Gi9OwO03XXAmHE=","FQ+UGaO21G2v4FKULhXtSW5bFiZIt93Tz1W/HlL3Y28=","CHbcJCyNKqGD0YTLvENA1amjpHTqhKmQRpmdlceIS88=","Ia6GrQtprmnkub4M6uAWZ4lanZOBocDebThk0ijo7FU=","C6CudfPHYunvoReUyBIdK3vG6+448QX+wANZWZJBlYA=","EKFqv9azg2DU8yV/PFHJ+5TsX4Rd2D4MSsT3eY8tkHc=","CdzZsAfQRQfAvHcsDr+WTUluaXRhdTvRu4G7w5WD3jw=","CxuyoQlmGO47riJWP2P89+hagX9jRVAUJsJxos8ZdeQ=","BEx2UgaPuwmRrtaURUAyG9awmh8NbpGlS4r026GEccs=","IU6pVcSypRB9iFo3c03lya/O90TEgVWT+XC72sUdtV8=","FoTTbc2GQItoIwyp+Y54SVe/t1UqklPq7odoIL7jEKo=","AWZs652c+ky+0VmuaslFUWsJPOWJxZ39Wr7/bGwu4Gs=","IVGpnve8B3B+9+IjhkyejFCDYwLymarQXeNa10xAna8=","L1bhUyYpW9cBpAMU5CzP1cpOCBT6VNMS53F+SI2gWVU=","EWrgCabEu0wowBZxY2T7fnvjshcjdV4WB7GiYrkaFq4=","L9vnH1PVTls7y4UM5hdD1nW+YB10Qw2euAc/aBQgUYk=","ARqR875CS5VbIkHXU+PW1bDEj/nGi6ho+KYRIyukQvU=","HHyc93USVQcOvdDj23+X5dlVZNM9KzKTyv+gQ05teI8=","Hrl5Ihwx9peNQ+dWinzudwnWi4blbXfsiVh9+qeCYbU=","JjtI5G7f+J8t5dzSWIUNIAVD7l3eMUWbb7UkGmvO/XY=","B4W5VZxdoL1XqAFQwim7LXX1EJTI4aEb/qU44hfS7PU=","I88a1axXZYXsz5cJG+V88Oo7uy06+RdPgEJYJCQyHZo=","J9TbS9sw6k4HVQ2eB3uoqdXKodQYwadqEtxx7FWIEYA=","EV9iQv1UErEgjNQCPYz4f7YtM6gpKyMcr42CVwGraBo=","CJu8gwlPZOKTyRrnmot+AJ0PZ5xn3BnGJZewThQVxCQ=","HUobPnptJqjIHX6fS/CK8L8TcNzQ0hAUae2H1GnSRq4=","KGhYPpvesQU4Ni1/7YmX6c60tDq421sKSy8UCUOuUqg=","C3lFnqgOcVOegHnPs+quA85tDjyFZVfD9x/JgwlbQ08=","EZEZ1O0W641HZsY40MNKzBWaK44k44kow7qHWJDqGYU=","C/2+S0N3IFN39pw81ek+zSqcs7SuLBVB2OdLZOllp80=","DUEXTNa1xMDTSy9NhB8/naTxAOIM9hQIZO/m7uVMCKE=","IcWRW4bSIRBn0Z/poxgjQEO4C1MxJ0mJi1N3g8vk4cc=","EDikqc+iDKui0j7wZOdBl5LoOjHwyr3k7qsuSZcv144=","AXzAB5+YYxdxR4WMidPX8xra6/vkyeB07KvSC30iQ6Q=","KU/35eNvdpDWD602uATjVlnoIRfs1E3u63nli7jIdNg=","HwP12BDfpi7dMlIavR0oPCQWoo/KokTTZ4ju6xlakEE=","ACET4nFeqJPQDRAbsw5uFwIVfRD6/+hQlUJ9ydnK7sU=","LpLCm3okOimdkueBlfMKmWo/U01XkaMqC+KLt+iWDH4=","ALswCsdFZESfhyZ039nhehhUMvH0YzF8351JnIfPhZU=","JQ6DXM2g5Gbb1ZpUHh0DxPvtY3rGtxXILDKvWI4bsCA=","Brd2xQJKtjdMhPVSjKeTBDnaAS1BL5Np7jbbM/xDWCY=","Id+LMYpEzF+dVLvvyXqRt4eRK91c3KlfR+ucyJq80eI=","Hk4er10XKdVSMLr7F0PeRzKhjWapaShJcB+aJedMqbk=","JozrN0lxk3mxTqBixjs1lEnnCtWBbfAUy9ECrGR/Iig=","DiUrIxwfDvGMjWr72Hnqp/nmHepzJHyjr2Kzweh5T78=","B5nBTuwgQ4oOU7aYgskMbZI5tzZ75Q9kzpLZl0wr2v8=","D8BQAAyCGkz07mv02RukbSysIwURjrwZRoSi3LfXOD4=","JhqM7DHBKJ8jWMc1MO1+AcLu+Iy61AEOwJ0DblfSqcQ=","D+U2ycfdpQcKN/0xE193pn+fOphrHCPeuD6FeTzzz4k=","Gf/drv21ADK1jgi083exwOs38GN1/3jnq3tgV4Hd6Nc=","LiBEE8U0RTUQBDFhEPU5hJrnlx+Hf7CEGxnudT7iCD0=","Kq2YaC3+CK0smxX0RVogHUqWOsfbsYmkLSs+HD4DERo=","LIn4VVRFlLCMpDp8MsMcDZCurzABMsi0pMxmhDoYGuk=","F6ofI24OidbIITN+yQvXp4sy65uv3Z6D/4x7G5eEgos=","KQ/qrv8pjYh9WluqR/4uhAcOt40gedeRrLkGepeawaA=","JhA7hziWhnGJdBL7QkbahurGkjXEoacap6koA0kV9n0=","Aopw/OoPJ3l4Eg20vUeKawnVTqqKl9Np2seXFpibQ8c=","JJnR5FRMbblOne2bqT/ZIWJobkEgmd5brxIyEbQTjKA=","ChqqaqqX4Mcij/rlF7WTkiEa8476ZwqgYgetfwW/Cvc=","JbYYnM9qs6dZZBrnk4Xz594ON1phwmDYTZGzMPg2Fto=","F0awuYL+/Z2Q585yzbX5LODGmQ60OifNU++hvOiB62A=","KJ6V2FjSur4lJlF9hQWHw2Can0rTKmRt5R6Ga7oLQr4=","MEhBGuIc7Rsx1D00lskuZqJtU6JPJQ4X8yjDWNl8Igw=","A37HEXkLW5gZ7S8g2gkqa++pvETL5sHCHzPT77F2iPs=","LUAp3nK/AeWTe/o0/01eu+rLAQ6oFtn81uevkdmmcUo=","BGb9iyODbY5FoXUaHQ0o2wA80gVFqI5BMYxXHDj9OxI=","Ay7fXfbYM7VJCEDgFAJHIY1iVMNpfQBw/c+/bxFo6EE=","JAmOcz4wem7knjj/0BBYmlHB3yEoLYJ4j1vQz4ko0eE=","LV4vpeYwBCoHMeyE9KVIQg3VZ0thSz3oPlynB+yzJwY=","DnchDcnyjwqguTML2mmCWOQpraPhDwhPUGaq3IbX3gE=","AuvaoJk/anAucQ+PxHOS16DlGGKUunjMveKRNRCHtPs=","BWZ2VcL1SyQThbhvz+J00fJFaZzWqmC2/lFRAubtnA4=","DPl666gk5Fhcyec8YvAzS47UzOEna5OVAfwvv2ss8t0=","Gw2B1YuFqA1f0QtMOZ4LqWA+DWDHpjyJyDOd+ss92Iw=","FlJhgG1XTgYS2TXv8wZHVK7w+fyGmEseMdqZaWG1Ze4=","JUPBIup+CEBrfFqJ84VXnFhc5kfZjsRAC2247L5tr8g=","GKrB6TMywGlWkYUogLMI8GnYdJ+UySNywTZ7ztFx7gE=","G/Y8/7Ra5vCDWN8BUqzhcFi7OmOwsfJWfmnUK0QEi6s=","ICg9BEPIQ9+izMsoURn7ShIJTJDOatoPbe8R7Gyqa5Y=","HZVP3WOz7hOmyhPf/pgyqp2eXy4ezT5AcnLYfCgSULI=","AxuA7zDrD2OcM/1OfVt3jWB85iSrfAu82bKSG23QsWQ=","G65vI0YfaCpjicYHZwyiyXW3aLpJIlQ9/gx43N4+2FQ=","DBXTS07w1t0yTx+o7wWL8ktXQZweSTlq7MaylFVieA8=","DJXZH0brWHUGxXu8LM+HoPxTSKwNrTdetAmqZM+S2pY=","LR2hXKUiqhhodAuegBoAjdt4hGV66JUH+5lFcyZ4bds=","BXLM1/xv4Gvpvyv6i0iRo35yiAXGCfHigqAhRIDmKJQ=","IBa6dm3BTr6yack5+YjAsOXXoW8mSeOId/L/ilJaiKY=","HVcLX/hXMOmtjDJhtq6FdJmSIVdP2oqX8ZutUNwuxyQ=","FDIj0CfLIvQrIKJYYDM2V8JDoF4W+KD7B3hKP4s/g7I=","D2ftUw8xUEv+O4cyVoKl6bkW11yqe1s9XiIsf4ZBfc8=","EBOFFkaUeClP7wUIFR6oFk8UbI43fpBjfEYw0LRd5Tw=","KG3L25yF5dbGgGa2lyC1UPRhWDdLiOdrpICRZhtZHhk=","GJAXrQ7GWZZV+l9cBBsYnUpQVag5FOXrFWUgnUQ2bx0=","EjvOn9QMfxli0AZoVgzDGSQovCKWyS/ROkLXW0G0QaQ=","H5ql4lOHmFBzyiINp98qbO+LYKCJ5K/ZPhTus9XcteY=","ED843bbhpmmqQuoce5qwV2HxgEoV/iLya9NDZ2VDJqA=","EjieAQk3eq1Ca+RxY3WEHC/Uq1mLYLaytOei74pIrno=","IE7wpP5o2/ISNxQxJlRg061jaRJFxWzNT2mQuYlTfZo=","FCXH4fX1pCcIYzQ3Zy+Mz/HBe/dNvvoemc0EDNGT+5E=","HRsl08q/9YQo4mluzqmXWpSEMC0X+hLPM9hBa0/h0pk=","I5CBhnZ/B/E9CtrRFihPLxeRRHULDx/9zmLrR5fsIOY=","DXVEc9fIdX6CKolxjLfXxazRElyl4NEnGEhlUqN0GXQ=","LVneccZbhnjdedns05FRl9FhslORMpkjjvjT0ozBLWc=","Ky9jjc5sXcBL/L+0DW1UflJzDN+8p08MC75f4l4KbkQ=","IIMfMxiNqt93xILB8667/MubwnVZQGhEQSdvgAaTx1g=","G96gOocRKsX3HSewaQ61eL4gp+qwLM976UqbUEMGv+8=","B/GQYmxc5ANnCrsj9zkRL/uR3CNIGRgNg94jTedDox0=","IdA6isxQAsdWXf2E/jAB2dcCWSnHF0neJTgr+Tg8cM4=","A3+OH58xC5CQhc7ZOLYA1N0GoUfVGDmS2XkqxEWPeTY=","AmgMtCDqSuScIobkl608u1U2CHWitp4X4f0JbrrFMcU=","E6OgbR+4J/8UBhkhYusjs+J+lM/aaqBahqteMl5d81g=","BwYJJ7PGQRF0ZkjWqEM/+PNzpFNIQeXL/+W8QbnmiPA=","HUFDUmBFxsQYyn7fv5hQ/SYNIxtSsgl/0iQRBBy+744=","BPbbJTC3GaN2xufUic1/vGUufS0JBk4+lESXjJvhl6M=","BULvw99bzvaZ8Pp75ccc0y0lPyBIi/cNc0JB5DTb8J0=","J2lCS7lqbCHGSlBhB9SIX+U2A8Cf+7AYYGWDMKsbV/w=","EjvNsM9uevtHuGaCfbcjMuk8VxUG4HPEmK0akr766vA=","FaHSWrZNsDU7M60QCahnJ2CX1aYLSxjdAr/oVaSVKyE=","C5y2/X5v+uyCRqzUHkPgcS/XbVyuVqlAds2BY1TbMb4=","HzjB/+VHDINnZ3yMZbP4MZTNnH0ugIChwxUTosI5Esc=","DzIjfS1u0AscqVTfN8MMmI+JQV7tgpEz9ac2NNBfDGA=","GQX3boJeFnH4Z/tYWPJeU6RfjzBqmhtt7nAzZH/IrRU=","CRx9VOAgZ63AeUSU79CtkG6MM4pSTDf4JfkAOsMS0Cw=","LbpaIZQ1mAQfkIYMjpIiPXURx0vrRkjKquS43jhw8/g=","KTo1C8PHidv3wuWgFUgGeKdV681o4csp5B0dKULFedQ=","BJ0BmbbA8rMSLX10sxrqj8twGiT0C6X+aY3mMdIvYkg=","K5MlKRyhSMhuq8LrMsrkd93oMPAo9Ui1tcbhQ/uKto4=","CWpu6YxWhr89WGoOVJYbCjr9bVLaN3Ei6Fo1UAn0pWA=","E/zHfMtKCR6kUqP0oQ/K3bqnqxjrP4hQi9EorS6lqBg=","CRmfBhVu2nyBAzQ7NEurEfQ1UbuVB7zNR6KSrz1Pumg=","L8QXxXbj+ptrOKguAyhCLC0tq5CHnkL+pzAzp1YhZrA=","J6gaDJ5dDJj8/mea/eDK7c4sX9ZnQkkugNzpX8rHn/E=","BGe/jVN9voI9an1kyix6JBei13WPwaif+TME/etNB5o=","Bx2CvKkq7+djbxDJzhb35bQTFBKK5ZB+GIS6oYNEJGk=","FHPkQ07uMLLn2zTa7vsN9H0fXpOayiU5SqEaaG687LA=","IwNAMBTt2DM7h9XMTLCP+inudS9qNnxcmRj447gKzUk=","IT8vNBdJ3McC++uOuRauZXVEXNnU5f1b8Eerp+wl3II=","BkNpvqTGdtN+/jpl29Qxbg4ba1GsSL+cAbUsFbJOihk=","JhiTQVCZUeY647AiOXCY5fqTU2JSgBMbMdrDocGDeWc=","KMUatGMBLYup8Lf47skczXaR7wVwIXiS1XSUxvqmq9M=","Kj5aZgdTwPczgnYgzz0jUeTxcRM/dJ6uDKslrFqk8Ms=","C/MU2ddeNUhs+fYvZTlYTQ+W/P3+oWF7dqRkCZnz0Qk=","LZY2hFbF/ibRGaV0LQFNuehv6w4jFcKje/v34CygFJQ=","Htjy90Pkr57dYtmt1jRHTVQRNxLl6UjwW4LQbntZkT0=","AI1aBHojOWq2scAtEIl0slrhNeTw3mgFYnygdPPFiok=","BH2KtsUjUNZU+GuJQvENLAAhv+nf+h2yVNzFAorvcQA=","GZHIV7MPPtilj+Ip2lwT/gfXUZmZjfEJIQaK/tCaajY=","Ai5IZrivFs63/UVzesNSgFscV1RW4VNanp2fenngpbU=","CghAzDcg5lnzEdrM/mNI8ofOHdRzkSw0l5pI5psGqlQ=","Dk/5EO45IMWH0GENsfvgi/3C21OBkmJjsXdpiBDdpX0=","FV0nsESFaSC721Zn02GlNsP4xaXYWZ4qeVXf/ud8Jm8=","DNwAXVX1dcYaQ9iij9u+8+7DXlakOKuZaAxNHvrmTns=","Ix6Hupimf4bVAWUfW3S9U8/ia57gnAep2Dcba/fEK+Y=","BrTYeAW/t1+cN6YeEOVXkSLTaTJ8NE1RbizmyJOYs3k=","FuZtFtP1cK1do9weyz4Ys4642OBbLo54hEkaLhsuViw=","DGamNAycIM9m3j1u651J6Kc3wjM0PfjYR+WnGO1RGKs=","FUpLGVdRR7ZnK7CnIc5AlX+uPjNsgsf8oZmrMOdRInQ=","FeS2pwzavyxN6YQZ2oEdBiyo6d/L45vHVC9m97YL9j8=","EWGtj7ogdgoTv9e36h04JX7f+oxSvo9BAIfJFvUEr74=","J7g7x50q1NpLXvSYLpG4EHSYXPIzEaZY29DtMB6Q/Fo=","GkEVcw11FeiujQAA5I9s78yJMZBWbZTTnbFVF/QB2d0=","GpwrO5ekEIgovXa8QZaNMUArQEGq3EFtZcIJlu5qxq4=","FWrrUOEcOa+UbFMS+w4U226RlJBXHg7WtVVVbDH5fZA=","FNJVB9uGnigtB1nN8W6BAG+vnxDmY4gwMJl6uJQUnio=","AzaXe6VRD7O4Er85+hlGWUp4qZwAEB7xAXJ8Lo581oc=","B/i7dx5Y5XYQF6lWLGsoW5PWtwmu2hhtlmFhl1efG2g=","FUxHiiVmKU0vltg0MjAJrw2+8V2mLe+BccMJoF7R3Wo=","G5OL8wbef0gyXeWYd6vL/i7qCJ6rCQOALHvz+5UyYn0=","GqRGiQz2W+bOf31gO9QuA7f+wNIBZo92DdYJ0xtYfiA=","F+t+5Bw4dHN0p7HxRXh6x1uNVC0zSU1l8O0Ayk7Rft0=","HRuV6eTc89+QGq/hvaLMgjcDL9Nu1QjGHItBCfggu2E=","CZ19+XyrUibMfjo1zqpjXCKrARDpOmJRbwNwopZ0KfA=","Fh5TsvEO6aryJZbGIUgOHeIJBQP8xVqClcI9Rbr2j5Q=","C5u1PWYDZM4aUiK9zyqAoWGTTj6S3lBX1mjc9J3qmfU=","HIRXomXBdW3nVxswKQ3LSPoL6yt9HkQRQmJRWFSAgyY=","J/nG/QuQmDAQ1go32ApYq7DzUA1tFsm7TWpSrJHEpJE=","JogM+gTsre39o6JKlWc01KvIri+SZENpyEYN9fIWR6s=","LztY6by+N+lc3ZmQrrJkgsVesqlAnijlbK4k38643eg=","ERcQTezGeaZq8udYjZcYBbUYrCGfrIB4zVIqyJgMaYA=","AcdFQY5M3YDqGKM571kOWDYrOCOx/tLWqO2UIZB3HPw=","DK2KlU7GZ2tC5DyGkCQyoeF+LPSvWjJ0vBvmcm4dvj0=","GzC7mJ2wM30EMg/M3H1m8LsVtDd/zhp1tCeL+qYdX1c=","GaVXoXIAX4QkLUDFa+fDeVXPdNoiNVew6t3rW1XGGB8=","Kh+IPF6ttpZNSEdHn1LIJQtMzKD9spIji5N13MIY9Mc=","FioORNuPqgLb4apSsWgHEKjcpgkTh2lcsiwf+ESSg0E=","DtmUS/5IVC76EMnyC33UxrFVhOEmvywByOBFaLyK4h4=","HVPAdsEF2mf1z9gi/MnCkd+ikjxMbSdd20XZJslxHC8=","Byugos2uV7WDuh1y8Jx0XlD04Wre3WSIyti3k+PSrc4=","JuctxgnCkBhz1Ap+c59wr3IqpDmg/kF9dWjDjjj0fOE=","HzyrZaq10MxkWFGaFNKw3930wAWmMwPRc49W1MQWAr0=","Hfs0WrVllw6VyJuil7Y1XesvIwK2YXnh3FSJg6rgLXY=","C2Dml1NSFb8Q8csSCODmmb2IWYGZxtjWUuabkK2A5sA=","CBWTeG4wJlA5awpF/49iNmMQofU4adBVcoRIGsS+4lg=","JgJ2pG5sYkeB86d3qbRbSDWnUcawFuWE2jWjwwmEQ1E=","IBILQEUWcxN4TQwstO3gev5/sGBVGPb1DOwbiktorHM=","AfweIpJnivjcXcHy8fVzw6xOGVxamFfkD66SMJvHaKk=","FMAEetALfXNqjYF+Vh5YLpAbRIHjgxZWixviZ+d1uTs=","JQtOatHH74ymwlHCev8QHXvh/CX7xIRHfLvk6Q1FbS8=","Ea77wMSh24Hlt0WB+B96g857/u/Oq3SrS2raDYrKKsw=","EAkX4IhnJIHIPOnj/LPbMvtyqDMy5bJ69VpIxzpvmok=","A3te7b9NqXYX9TuJg3CTM2diA4jTjhagvaandZcUu88=","CvmLGoVsUTh3Z7wmFGiIsoBuZmQ7RG/MP5GFn7Oc3bM=","AP3QCLysaX6BE+ccHA5JBPUln2CqQ+1Eh5bA7ZSPutQ=","F4Hh/PUEbibxm9rzQW6mBEVOJU/rCkk5BfVmtRUQtZY=","DoDu8U1c4GhHpRsOnkVBs6uUyufKKlNtqaJkyDkYWUw=","A33KA6a14VC1BWQSgILmmApncD/LeD4OPhIDMAT9drs=","EJwo3LhzsyctQL6wo/6PT9seei7Fp5s8Q3wZ3E5WH2c=","GUk8D1w3LHrQxPCWv0wgZgLq0j0Zdz9nZvE1px4Be+o=","GxC+lly35G8VTjwIo2ZWwuiVS11QfJSfdZe5ccA94yU=","LeJucAMg7UzJhlUNnk1qFlYRVnDzQR9fUDQERFtK238=","Edhqxx3nRgeFner/PPCT+AdtKGIKiGIcCaeqsSCakaY=","LDw80T8jE4loFwEkGlT1jJ9q8ev9bO9Pow6fovpOAqI=","B4hkvnpfNsB/qSSOmBgQQPxakRgVmEuHUPlEv6U2UDI=","D9cYfLYJauDhLk4nZBmgPtwNMkYgM2LVg80GSmx5//A=","FeYmWWgp2ALwrb8kdulWbhw2NIsCJe6ufji9Dj6y3aY=","DUbe1VIdFlxPsHJWovf15IGfbYit6RC5rT+mxdffqxA=","B5U5e95Gtal6I/cqi5JqMp880rtiAFBufoMqu2RTuKc=","EwCOFRm+MCk09CADKduVG3AOMi2xqH3VeYwrnhJZ6aE=","Gj9AP2RHN6RmFeBHpCrK3t+z2E/MtzmZyrYn+2BQEj4=","DJIbwyqfyerGBl9dxjRhWe+fbc7ZZJiWsU7b86qCZPg=","AHj5ejfVX1D71juH1ZXcZl/SBu1siHUJrafxrw0eZJM=","G8Y5MhQWKlICbQf+dw5TB2PHJbdTnZshnMV0lDl3xtY=","EhiYwBLsiFFPFViAw2wXVcFYk5CJ+KiVtWVAHeB7xg0=","DxvKRmuyTdzGDOkrmu/nv/Qn0eV+VvZU+9zDYuseDWs=","CvN57E2NZTMiGPUTjcEo1BsbNaM6XQ78XbtsiBREiQ0=","BPIQhjkt2+Iika+QBwm+h/5OnVKx3WWexWO9hI1C3Xc=","A1iU9YDIJsZp2RKmlmR47PoZqxu+gOWnDGoYZ8AsjZU=","LOuRXS5Hh83I6Uik6jWuBLtqAsByDFHs+ZialLiXlII=","BjPXfaXtiPnBJ8RZow1fjMC9hTd6Y8TnVB/3NSceZvc=","IvcTdZVFF180PQAmXDrZFWrpmjXzBFoDRG/NiP8zFo8=","E+MDRTfiuCB6ItF1NHTyxLv7ED8kc+xQg0jdxQ1gKXo=","EiNoZ6e94hq9KXp3AY7q/kuEDfZ/eE0baYHX6R1wQks=","Fa0Q1oCTRP12o4uZ9F/D0Q6Y8LTRr07t9GHEPpKmwOY=","Bec1LZXcHHogMTpT5m5pUlkCoX4e1DhZRTFC/ElSm4Q=","KfbibY1hQeGVXZ+zImp0rHHzk7Fqr6tB48eH5x+/4ZY=","HKPAtAVtureXxUaIg4oHTP+N5r1qdce2CB8ROx/jc4A=","FB0xvXHca8jErVlYL1m5Y8BWI95GGZQ4un7b5L4qRmA=","EGNTj6RGVzmeEll60MkiD9YIF43jmeWpj+ir86xBDIM=","ChrvcGTMmqMZNd2lfNxO4PEQTUNFvPLkKsSKyj+5FY0=","CFKAeTEo4VVsu/s1yaqXqgdMSmDYFpQn39o2bkJoaqw=","BqPI2ruaAECvVnHLHdv3JbSExoNg71EW6bfsBf4KaWY=","CaX2WW4IkdzF4no7mMz1N6zJqLt0+FAiCbQ23AcbtMk=","EWIEEpQ8V7kCrzYm7P9gj3Hj+VjIfNABSiH5TJ/zVek=","BSFE17lOrjPeDWzOsuJsgpt/ci7S+bYBBgb8bzi3zGM=","B60co0bW9MwXv+WCdMGzVWWQksWCleTA54ERo4euqx4=","KWMFLdNtM4PzWMgCQwja4hJyE2QMeF8gKo2DJRJE1L4=","BIlpCl1WNytFdjLXfMyLgKokh0c36aBd4mnhFhjtaf4=","HAH/8Gs3pRfTnsev2mbudo/TnsVomx7N6/MSmcN2zGY=","BrMMFYMY2bXIHt7oBSKvr3LogPoyfMsH+Nh922bxXt8=","FtVx/HHl5KljA3PRK4WkEiaDIs2UcH7uDWeNK2Jm6ew=","Bn3ZgdpgUgh7vkTtNXiYvowQj7ftahNIGmUJATAM1YQ=","ARRPM78b26kD6wtDRJskaHvZlfDbvLZU44rrlKbZOhs=","FhQDZ4W6Fsw+FYv3DCFPwFhOQz/RQAnVdqZ4eXDsC/0=","JXdVIoMAljWBZi+g52f0LVvG/WQvBANyxT06H+6Wkt8=","DehiiitR1w4w//0lHbTcYY33MIHQHfFhIYKy87wHuhw=","L7PIuW/hfMFDJ+hIphAHrH8EMtO0DwgC92TOfBaGZCg=","G2gDdhfqZfhj2Cjyu+RBIouddtlGPYPXeeXuoN3JIpc=","KILBZUfLaPiAa3etgT7jY3I1PpvRwAb9GWECBQh3RBE=","C78J74OTmJ0opo0eC/m0m5M10MNhETZJThKOX3tk2LU=","AscK9tNsB/TktlSz+K2Ysska8Jt7+3QHmXeqh/mbE5Q=","A+ft69GMw/+CuDWtCLxMM3G31VKG98SMdH2TASf2K1o=","LQJN8EGVS6I0Qd2SezCh7RAo6S1MNRZDKWdCqXQTm28=","KYwNH8Lzbo//M0JWvFzX6eQ7iSyhdikrOmTXYifMSak=","GOZBaViJjsiYhTU2MElsLF9XLsUNwtBO8XhpeY+a7+o=","LVOifCwH+5YFi4jJeJ/D+OHTYaQSvxZLKqDmbnALNng=","BVJ3BBy3oSKxYYsF/7k/cjQW6o7raBMIXdVKmds+sT0=","JkPm1d7QajtUCjoX52y87Qbqzkx/jpXpnbCaHPZ0+yU=","BMfQDNd2fhwKgzdaexHUO8L8LZrT/2NmiQomHFPDELI=","D4nR5TENBnZ7LwsSZtVr5lPYNkiHjqJdecS6BdcZLiY=","LmqQRKX0j6m7de46dZnacX3MiZbOwAPSbeh+SU7U6Xo=","LJnB/2padXKVQMQJs5+u2Th3WbVzHwQB6Gyd+arQjKw=","E+rXJn3GzWFikxg2sHdFvxQuvzj7sWwDCkEAVar0Hmw=","F6hxBclsICbHd6ozpTKS7iAMu5+FXZkJSaNtVdV2980=","Lq07bdr0lmG9S/P2zR8SEnuOJte6+TZgBYYdCKur1M4=","GUf4wNssWCYEeSIqcbaS5O6/M8yiz/gvLtYvkPUfF6o=","K7gRDSEJxqHy7Fa/cuBaFh6UkZu7DYVdW7NRYlpAnoY=","AX3XbLDbpJVvi/tTEagyIuYL9d8uIDFrM2aT0ocadF4=","G2of2ljAhKkJMuJpuOVvtRy3dB3jJigOA12diZJaRTw=","F9lVEURpczerLcKULLd0vEJECN/D/hgZs7sw/K9AS2o=","Eqtou3uio2+mRfkPxyINT4LoOE4jGwnOmTk4o0ng1bU=","Dajf/Hvzyj0q3L02IDWuySlrx06mfR6Uovb332oNkhk=","FJbLPsfNpR2F93bYYTsEMOl018OnpqhD5m+iUx2idXg=","LoGVfS9zqrRKWQMK/8lFsmFy/OCbTUNRrlPs2sgt2Z4=","L76Na6UCcpa5jwJ3sn4ofkxZ6bH4RiTgCX2zkPplwJA=","KATUXJbS2EIsjB3a2MERXZKuwrFpMM1wB5vUTPQf2Y0=","K3uotkocsv5ndFvlI/9GpMjAQICS+qIzPEXRg0ghFBU=","D1BrHbsbXt8rLZO/vCl8EX3yEtYSfLKcbuYKL1e54hU=","LptSx/BQsueb03fUe9wdgkb63z23mYJjZMS37iEzIH4=","CBUfrychALRZ6jG3LDq8KqDM1xrdouwBlolcmy+abDU=","B33YpUYUG+CNrKFkYA410Q1NTp9TYWPUHCcMev7bWOc=","MGHlVZBBHp+BFHbW7ni9r9iPT8PUvmC1Yet54OF4MeA=","D1AAwm5zgkpFMA0EIOgdjP8+hYA4fpMQ1PRpCM3pqS8=","CR2DHPFerUdRG5OvdcgwW1VhCzEW0HoWT+62rush96M=","HTo+c11JmRAwWQebWViNtfoHa5TqjHCsfqbNun96lVM=","HonSs+MOxmTukpw4hCchwHRFCgy7QqSpKWVLN1bQu7o=","HEu9X3Lzun0UhOUX2lwK9yI2NBtqjpkf6eAqGcskv3E=","KnyB94E7guOyY/xXOcqyPF6zXYTH2CEj8IYl23tPuWM=","ANSOQGLPJe1gfRebw9hOH0nTDiH3g4OGrDsgNwGumIQ=","F/QzBZQvNWYmWXK6VUPUqIRdrAyA4svLVqqxedKFQVc=","CNh3F9Xqzz5bs/tHN3alzEfS74Bb2h53BZAmx8Zil0E=","GebidVAL0OgCA6ogwP9l95hUVcsAlgiKW5uN4xSQCkc=","CW0PO238XpIz26qs9pvHCgqqob9sDgTgLew7XPiIn4Y=","ALmlZDSbrk/82wRTy3IwrsWhXxjszfGRDBDdetOu+wg=","I31EnBVI24mHkXV0zlQLHM0k7v2Q4oEHhmoXXHwWrwA=","Eu0I97nRK8MEVr9CTywFxryRKZDecxjiJX2YpBPkfes=","KWEWAavhjSb1wZgmivXzKbJfQrjwemWEn9vfkAOECOA=","Dhcofut30IX+egsQ/hZUA2jksbRXQlv8qGOO0Q9isgE=","KdFYE9tmZQ1ftjPP4PxW4kKsPQOdHeIFsKJheMRkNOM=","B/5/e+H8s2quFaMxcenQ1/Lg4ZPnieV7y48BbggRYYI=","H6h74Zb5ONoinOrETuND2o8sP5VsjlAJXTa3MSO36w0=","JP/bUvT0Q+38BrjzGpNXJTxqFXqg7TURlDcZbCMI/S0=","LUvKd0VxIyCP5FCOpOtJxhcDK2vHNfxTmbDC/W4Lb3c=","AjEdfwzldj8EvhIOgE1+iU94nbnr4vhaYmWalKJ9O/c=","G2vvjVHpRR8A1frwmng5O6g+WO0iSi4hwAOWWL/3mZU=","CQjWBF2W0RE8T8MDNt8wEbzFa6ZuyofsjSB1oXana94=","DZTz7oCDMB+OOIEAjGZlHDL3QyTUFCOuCFnrwJb3a1A=","AeqJ4RuH5v0AYjSJ1t3am/Z+/XSnA9O99YvAn2igES8=","DQdFfcPuz8bud8etqsofWjaeCW3vNp5mUZqIcBuqt4Y=","JgRho/drsGYJTXZAZYerY3chf+1SgiLaKb4sx7kPHS0=","GiKeOT4tMMeXglC/7zFl8mdkPrPCLdnxyxreV+wb3B0=","FK4jSWlFSE4ViCJFC+4dWd8opVKvydvc50jjZVPSF4Y=","AKKHIAq32SWpRVPmk60w1ReWHXtbopPZ1rpnlTQ4unI=","F4uBh0hjNhTpIt4xWD8nxBfDZYGJU9QM1E8YBC7h0dc=","AISuiu71+3ksNs1XOgsS8N0MkdbUR2d54dmbKSWgVDI=","KKaqYNVw8Jmbdy18g89Vg8myPf859jOI3aQPbqStzvI=","Gv4qSDkTKwyuSU929vuwn8l6Lc/8PPRV9kTfoeieAZ0=","H10AwMOiS8EVeYcgsfm6a1L+qkRSKtH+wsGsnMLPqa0=","KAwgMl0Qxcn5UmV21gGdwCSPEFigr9XaWgzGWm3rzpM=","CqNOA687Aoy2fR9N7H14lHijy3OifwHHX4S9Rm7Zsyw=","LeUe/rNt1/W+6bZ6/hkq1+9Kv2O0YhJHvog69wiCgHQ=","FDy6YVsGIj9VYr0KKKYaM8+N2hNMK0GVThpWbdMLvwE=","FDUanSfWcLeuormZuxh9fssFKfkgOqA2FC5Sd+aBX24=","BGkikEKUkn5rWAKAUBOQAYQwMvaWetigWiBEJXEeGOw=","LgVuHONp6pA8Rzq/eYiiTYL+n+DIe3yaYFxlbazTxao=","ByRTk5EvhTAu17XTYB/Lv7qm81kgFF7wxZzojBpqkhk=","Iwn+bDBu9zb2Hcr2W/bZs50Q0un89o7eN9UR+ku97hE=","Fw5DMtohfLNWLiX14gChnPNvhMmGKW5x3h+yYSW254o=","Hj6svBHpyBkCdNcLvV3QrGSjdFlct33AjjPuXg2Cxgk=","CZgya4+T5tp6RguvbL/R0p2zdzBwvsqwAcW0r3bMJOk=","JX2UDtDNdmR+LT9io4kZs8YjJqSUrJ4Dn4KiLvHmiJE=","D0M10Qv8Bal58DjekNr3AnK73CQm5JiGRmUOFkxWJ7E=","HeKnKunSpWMsPmI55h3ng7e4TIv76X35Zcc53KdgkoQ=","EvRLDoxpTnu9Vpnk/QynNKjJzD9Zui6rSjKc9csikok=","D+JpJnT6wv4Bf+59kiko3L0xWOognXlIo9dppwnZDUU=","EHWrsOWiCM7hiEETGrTIcwXxRBqvy4CM//aEd8xPssQ=","GmTPjAIOcSszTcgWTyR975CYVT3K16RAw0n+kCQ56Tw=","KWpRpKuZDFk0kiufVT4FMpPK9GMW4Fi8ea0To398gtM=","E471yoSYDhHcm1TOAr1RZiG2XqeK4JdMHbmmcgwAIjw=","KKdc2tU53DAKLpUYu/tHz+zOXaAc8ekCEHgmBRgTALg=","JtK5IznY1Es2h3CaupXDgEODYP34i/x6AROCvSp4WeE=","HfEfvLd/Dt5QZQS/tAiOMnmnn+a4TDpRr1EqX6nirjY=","HCR4+nYqvGB/sKFiokc7nkyYOFngzPUdq95fp8jWd4k=","Ld/gLN61dZMy6uTite3VOBIFUVZTt6dmlnuCnKuA4Y8=","Bn+dCCxK5S5T6wKsEIDTGpNTfqJNdKUQyJt9p5vDFY4=","AQ9WNJFpqYwB9+jaYuUV5Vrr1NRMRQN4MBL1iKN8coA=","ArA1h5scVwSVQ20lCipFvYVRC4prlRYppKW/76pxF/w=","EFnk4zILjC1mpraxUR+gnmGcSydCAe6HQb53/Fs5prM=","B5lLkTaBRGnLCihgZ/Yys0m1riTa54sFbORdcidS65A=","Jp5HDojL2Tb0w17F8AQrnW/BOPPcpd46g6mTIcjB5Kc=","Ep8/CXsqpXRv/ISuF6/5qJKmvEvJZatL0cZa3e/BYOA=","GfObQnz5SmWqe/dqQFtDwNC0qCTI5g3dZF1m8Kkeu8k=","HLgvfOSHG0qwT3dGnQEAhX6Y1tlQ2+jvZONWgc+IjDI=","L86ga7PE+ckVhBiSG4xKsTgNFVoTmJRkiuzuiRJBQTs=","DIjS7R1v/FhEVQJ1IkffU0wld7GPyD+EGf6jNyflb24=","Ch2lgaOdtOjb5PX2hjJ+fK+84HjKfN/inKXTrnSrHSY=","DVbxHRkwCyFKYwl2nCOBbZEJtBX+ax+7F95vrX1+Ess=","LldFvY5l3y6MSQRl2Ok1fpr69Vqhgrikak2LR8o+a+I=","HagDw9CGBkQjGpWLF9LCLqStoTR8V0j4q2ikAud/6Oo=","FGptH8hCjKZ5++jGlhb/Z5j1moJ9R9r8Fa80/lGC8I0=","EuoHMe/z5TyIGqzA6nfBY+MAAc50oPV3N3kFn5Y2D7A=","IcRVkQmWGH7Gd8CDc+IMQaMKLUwGzq8huR8LFKE8kEY=","GJiQxo5g2XWsbkTTQ7Kc2h3LoJ4KZ+YeLOyLL7n22Mg=","IRLflsv1uR5PGSaej8dPJP82Y+1WMqJsnDtyUrUCz9s=","BcS4Kr+wwVKSPVbw//BBGjtdEb8AU5RF/xg9azFw+80=","J9iP4o8SxR6Ur5srPxQJmvznOjc2qf4cyJsR/UuERHo=","F0ULM7A1qX62E9KJ7Pd19AAwRNhh60GWOl14ME672QU=","DumIqevI5gjWMf5DJP14+nfgDkAvW0sEdHI+5H3cJv4=","FKiVZtwvD/C2Tfr12HA9yfdKD57jlZYYMsGU4yV+Dt8=","DOZn2TF349rJkB7DI4+w9AO33rNwvAaVE0KL5wATRkw=","AWqsQMpF+Bir/vnBWHBKl5syogixVXZHxgbehoWCGEw=","B0Xyzr5MfrOhcLOqtYJdXCvLqMBNZt4QB/WHsqHlNbU=","MGHxiOtU3HGhnGmPGTHuJh7Gkpf3nEIIBa4HUUlnA9k=","G3GkF9Es5zo7enAloU+PtRqQ/eya+bHc2AZ/WDD8F/4=","Krqtl74ou/Qzm1pL4uJLV+jZzBR3X1txeujLInyMWB8=","FXl8WgcssAzao6l86pabzVP7KYTCO3rbI3tgZcZQ3HM=","Kd9+2ss0okscUtgULFM4uY3DQMDPJ7zaloiR5juKems=","JAI6xCCyf4OBS9GCqEP26+Vzm7G5xob1nOihqUeNcEQ=","C6tAXtEcqlQ/nNbYhjpl3YAN0I6MlJnl1qWEdIADOfU=","EnDROaDdima9nTYKngERzEQLOa17OrRpSzzlB7pkqSI=","BNciUDpzQaaQ8ziXe4CtZtBxCqZcbye9SYI9fBLH+PA=","B6CDAM9VxgGR656etjtASXmAiDeWhWrOthR+OQ31cUM=","FDbqOgM5mpWHENSnb6kUCzLVGA0W3YN9ozXff74Y3EI=","A+WXKp7lRz0r7nBoOkBUCY1B+vikTAPqnQnMpGCxhq8=","ISmJ1JVA/AvGsaLRUOO9dqYhuizbRHWrG3KwtjkdiKM=","Drf0ALDpoqRjVRClN5tKA9+NVsVDNPyMcT25a/s6XZk=","IzjDSP2VavbhkZCaIqmQCazFO/2BgJJvWRyn94+PmGo=","Amr8x3YBHIvsXjL1bxSaUR0GTfCc2yjwlltwFVjmODg=","IdpIa6CqRXcEFXiycWIh8VtbsFTvJ2zZpDg+ZGo6I/w=","BKzNu2ylAy+nOWwlb92PUr90EtEfMYwvgpOqHJgyuEk=","Leio1JYMEO6d/oqwGP6jyHVTmS9ZvLrjbNQq9LRVvFs=","IVrh9X4kIbszwrTC6FQITOoLErz2GlOWMFep6q+hmn8=","GoHfPHkbsIdolIrmP9u6G9Qu/LAJ/7B6rYgLMbuKpoo=","FBmDRxyXwN69zU8PCFFFNkkA+6hCnh5Vg6TlYd2tW8k=","AXbLembFhuwfSAzu7fMyzWzVUI1LVaGjKGKJoXiGTB0=","A6J6E3jmARh7gd/dduP/gZDRcNHM1/fPMzy2H15qavs=","F+HYkZtq2njJ0YI6/oJHFP0JSEBjEbIaK5TToNHAip0=","Fh1kI99k4asenbYEgJ06xf7HZ21X1C7zE40/DSIRb6I=","KloYPALsR8AisvZWQqSTcw64bZd+WZwNV7HVfiHLq7Y=","JzTMM2cCZFpXaeF2tiYnsK2Jno0+8k6ENXIU3qBnXho=","GaC8Wk7WW1GJDGCZRib4bXytNxmHngD9F7Tbby7wmqs=","HbYIfqn0JoUmWEfeE93xjcRGsVj4S/ogpSfWLsmEE5g=","HVRL3zwvELSu7rhUOvVDCXBfeidfCT7cdpAZe6Oly6E=","KxqHYSeSG3Xb9Nfadaa+23QUvF1VyZjb7kn0fOIA87g=","J2qzNQYuNhl/5EJET52UUMt24XHADD6/t2F78K+67qg=","Av7VjVkgsFvHQstlodflDdjmobrtwntt461qT7vCWbU=","H2AKUp361v9i7xcZdK1w5283M/DJjg6xsQyV8TZ2CVo=","K6NersLDj0+qrOUrvMBo0wshFJpgiNBGeVJULp3YMds=","FmMOQqqrwCAWPofBv3RjwQB9/c4+HOnFwo/mTBt98JM=","FYXjxpKyfn40K/u0vUIY5+0B7+E8ldqqymLS9UVfZQY=","GNfPnAmPc02ioE+Town3dIIOFB+aqS6M/KQtjiLGHZ8=","BkanMqfVLoq8BEHsmwTSr2/36qCFoiwM/YKtAkO25k0=","BP+pV4ReHgHykW8iQ4Ffjl48djYfNoDiWSGMDSjznxQ=","I9PIkP1lJbeBT9PDJd7i/6EfZ+FMuL894ispBYJ20dA=","IAAxVyOlbL1naSFGz0Kc7kCVLrxgezEA8hNUvgYFwt8=","Dwkr2zmVMF6/5ydRLr7sHqSNKazJd8/RFpWIMm9Q+Zk=","G4BZ5hYie5qDYJnp7jcyn7WiQX47W6/tcx2q7hK5saY=","HY5gsl8fsdC5faDxfglCWK6qQLFCyXqGOyRfeHx12uM=","HNc41lGdPoIqZ2en2/0jQo42HjclqVv2LTByOkFO0dw=","IyyF1JJZbTJDzXIInFDzppH9efvWC2y7rOFmGibHpek=","DeYL21ik58fvvZW1UBfTIBt0bnippvS+vrUcHW7k5ko=","AvwQGgIwYFQDXvWbYOHj76ssP2UCf5PaIHVuir7xIFc=","A/U+us3vVytzvqmVUAZHgtKRlDag8rXZIjstqXTjygk=","DieDTMj76jiBzkPZiW5gebjoydtNdxktqria3TJq7sg=","JNQGFscTuQmffI86q7xzHvUuDpZpOnRqOH2M5nbW9w4=","FJ0n0MsBTlzpxBp4p2qP96N1Ad72A7Vr8Dl+3RduDGg=","ALzJeO9pqAUXOnvx0dVlGIEwMlAuSh13Ktkammp+cAw=","BpZKCvuryGovSR6GJw6tRPSfmGIriPTET/hoMPzOFkA=","GTQhInE7ZiMbCny6GZPF2QTUJ56XhzX6B85oMtpNbmE=","JvU1wgQkJnqRAF/SJCMKSu69OsB5pYp4pjUg1YcW9x4=","K8Q+kwkFIWdkiBRFTL13lW9zqmmyAclPtReEWoxxmLY=","DZkio2Q7TJ4XW1ffWX8QtwpG6e2kGVZMM2dbavt/6/E=","EbQ4+x3wpFV/5rFAW2cgrUoVN/4bQviEuEEAf1XGGv8=","FJXer6G9Hye3VBE46uIHc7oB0NnsELdxcHlV54/a6jM=","Jqc9ShBahmEaAb0i2Q4OtS3QNAunR293EZDP5YerfZM=","Ft2rzm5t3TKp+KOmdIUe2JduD1PB9/bG9aKMywDZcxc=","BYHrplWgON5JbHhdMdZakZQEvCXwkip3S8OZpn/hIvc=","BldippdOt87YD/QrU0vFRe1s3ghD0lg+5wIrnOQP5vk=","F7/xpw42toSi7Z29lVMMvps4uH126utjNZ/9JQt4xeI=","GOaCie01IZSRcvBuilndmwdNw8nbyCA9j884GMcKGp0=","AqjY7gPV8DppwLDSsfNXknR7NCnwC24BH0oUE0Xlcks=","AwAkOr7UsY4GH7ERCrrGMo/1XcUxYjiPnbx1N0mUa48=","DyrOIYdxJc8ueKvpavt5/bXVcqNp8dpPLde1d29mUq8=","JrfpK59Ph3ayua8x7YUPyB3/GPcLFlyERydfbqXBuoc=","GHizpPrh05glOG+uXxmaGztfj1BFWrUAJRfL0ut7X6c=","AGLQ2J6We7b6TJh8CoP2W8x5XA6pd7bdY9Yl4G/7ClU=","CgOyeLJa4ufTGzEIKg0MxXyOekMvJM6f28zZNHXz0TU=","EA2hIOwq53KSHHwEuD7Y7naC0gd89HdACGyYDgTjj2s=","I0IiOyBaKwJ52eXwzn8Pm813KDmjTFLFfQdQvh5ROF8=","Lff0OXv8QtysWEgPVzFod/mqIbqQj3AVPfoZt+UvNu4=","I2IlhMhqirWfuvJWlIHZZNHhX4BzuvqMbpL8LAsYf7Y=","Br+AjM5lH1gaGrJSYdZrdPYEtwSAr2BUzEX4HaMpCsQ=","D1PJcnAs3uD5/KCnBQXLqvbJYFkJ3eA8/kwzczH9/XI=","KYixp5+NIml8DVG1N6mzCPl5eSscpHzECLi9i6b2eQ4=","DEG+AQxBiWCS90CTeR2QyFwEBPkoYfdLoXdt5toPPoM=","L4jBkqgioqCy8SyzSeFeorPzscg+or9UYauwEPgL8+8=","A6RDpLBwnr1AiRxZPtUoy56fZe7MQK8fIxV0t8lzgYk=","KPghHsGaTcGR91c3Ht+3iGlu/CsLWS1l2Al/OOcj8TE=","CruqfvI6XZhxDkKmab+kIwWt/B+OSeBbs6vclsjKc+w=","HwT7VKCe4t8oa2xeCJVguPph4GK8kPtymNUhNJEhGrA=","BnnBu7/X9NDywsGNgpSNBg81Y/KKGmMsmfLGSkYegmc=","K0TXDr6Web92gbLhoySeKbXYABCTZ6ekj//1PpaaE9Q=","I/P54AkTjwmYtT+EEJMwekGsOANI72YuNI3ignykmeM=","JIEacM66Un6mx/r1di9YE1kchlFw0oeaCLytSWsjIBw=","AapTWBH7sT/jFfQRzuA+IKSjxI7G2vp1/tDhI1LDS7s=","CuPfPk5ZyZmxZgb/OJAsdhY04rSdY+pxaSmmHotXMGs=","DsGsyquKduQ8SYTzgNL9Sh+Lu/SaFriJRn90JMsGlF4=","GxbvxXKcgVZZvLG+z9HhlIZW/63/B5eNE4tUNJ+Xt28=","EfsVFK4bA425dQgV2rXX7pKc+4BnSsxUG9BnmxH/B10=","A+igi88J7sHcLq2XhKkZgQzsZJk+tAzUk5nC6jHvJ/0=","Iy3AYXtgNcmPZv/EqJRdH4eN9eMljptUIXjWuhtoTkI=","ErLF1RoULX+KBUAiji/zzsd46R5P9wHe6iNexxQgR/I=","CdbyIorNudSgZXesn4928shY/1MblX+JuCKo0o33Dws=","JuYQGP5LPvbZZpVMdMY+HhWHeE4nbsGYIytl49HzttE=","C+6WNbmsUQCZucgt1iIgXGfxNhlyJlk5wMGX98SKDoA=","Lvx0VngrkCY/V4U+soB+Z6iM8V8sx1a39KlXC8w443k=","KD+y6NaxjsP0EV0EMXU+tvrP6Z8JnsZ5q9hWkX3CL44=","KIm4cO6YaI+u6IY6VISvy2eHSzOp8MF5S0apJj4YGrQ=","Bde9vz3w8B+6+cH72H8NjcNUh15FFnhHaupLDuDAFrw=","GyMSSjZ4Adk7j7/SIusn0UmuLumMa53DC7Kc47UB96c=","E/Vzuq7TKqY+8u5RydJamWzJzbMzv73SuV4qOjI7n00=","AP2GxjEq5TjFgMb75n4HU5ZDln8HXIHPxQTUoLUdTVI=","EdB+GQdI0V0ARHtMZTsFWIdnfR0MuJmkpwkOoHqgs5M=","G4++s8cVB3sKCU1241cC/+vEdA/syj+u6WCNRgwc3q8=","ApdCPiEYB4RSe9kL5j0CH76MS9uLIEOY7h3m89QfzDk=","Bp+tSy6vmp/UiRvl9PEo70zBHkWXysfFXjsr7e2MBaQ=","GzUfMOIEwhKl6oa33imbHfdE0HyP9/f0lEUUmFFgxJ0=","A8gUu3Bvc/kzuwPTv/g/tbeT2DjC3gAInV1YIYPJVKA=","JjwUgq+SZy8o5kyj1NxTdIYuLmCwLJ4vqV3sqdlbn8g=","INU2Mti9UkLZ3JrY+rxIxsYMb3GiNYB7GzvQ1C4YfAI=","ExKDOEbU0CHmuFRHjajZ1j8eH+NqCMapWVLuTRuCRX4=","I6vlmMvJcf8LZiXkQQGOH/hOoH7Fo32zrX/y4Y0e/fQ=","GJsTShqnLIBrqQ1wWA7nWNlowaCsvB1f06qYgedCt4Q=","IXOTlvgZPU7AFUy7MC1yJudWO4A9m2Y5p8oGVynYem0=","DRe9pbDysI8spHYPvI/sGclhwOuCGVZaIBfBm4/q3c8=","IpT9ILYqGFSBlUDlVgMCtFQDFI226YkL3gsKiD/hkJs=","K8qhIW1XN0dcAT28PYxU42vgGW3HHqCYGwFgk2nSBLw=","D/xi1Zy473HwPVt8/73z8eios5Bsj9Jbm6hbdW93TlI=","KCsplkSICQaMJfs0MNu1vbA46cOBDVVNerPKH7JbCOU=","Ixt3Z6TLsAiPzxVv/4xxy98Csn4x37z3WXr0n8yZ1hA=","DVLpcD1P0LQkY51LgXO8jucwvD2zyVncHx42c3ur6GU=","Do0SBfdokOlL60RglVrpe1vylWccsdCcWBuA0Mlyl1U=","CbXivIKKvvqTpQG/dcCmdob9igzxBv3PrWWo8guos2M=","CO5iC7c0IsazyVBqlz7Q91T52BBhSP1ibNWgTUOGgA4=","FN62iYOvK9s3a4czA+B/RnLXd5j4+opIGiLCI+s1fRk=","De2yMNlVy5sCuopYYBAETkxuyoNzGStf/9ElKSfOCbE=","FqbpAIDqGqTg0ZKqE/cBp4EUI3PA2amFpMpacObKIPo=","F8/kbtZEHu4ems+/z2ae+zhvJw0UJCmz0cao89mEz5M=","CdQ8vVQ0hrMWlLsfhW2HbPPxNbhqoOL0WImWaRIoDzE=","GBRXZC5pFlfVskFLeoG+tYQyqxyau1iMfhstofHoqpY=","FAUEYUg5/Rb5DxpaKknxnIsuCjoKxn0foqMc7UPzons=","EgSHBhyn0fo0DxGy1scRXq+5cVaVKUJBcbsdPxD7Kv0=","FnjqHJqfY/H/DR62X/fH1ccEsqDaw7FVBftFIkzM44c=","KYlkwoKNUqF2S0G1+0YHUq4birEI+8BwvRvhW7b67XM=","DOl7byd3w6Xrhv7GoOplqCPLm+5lJTFXoLlzOsakTAE=","Ao6BkjG1VB57UkPP9vBEti5uxfuK3t0rar+Hmt1fj9I=","HQSikXB3MHPDaAoNc7oHWegGMLuyeY9KbnfAA6FFttc=","KsMuXZB7ySF3lSW8ua1K4ajHgv8Kvu3tMnh+slJ1rdo=","H3YA5zbfg3QE8MMnIFz7kxzqSLsUcsoLRal0trWZi5U=","KSHcpcDcO9MX4MoVV+LnLG38SFb/9NcF94p+H1X1o+k=","FPgL/FIfULjXlFekwunXVT8/M8N2Se4YpDpICrLNW78=","La4FmsFwebFfa20N5kemzpr5zJtd9WWfFpvoJuCudFo=","J60fxtpUZbi5AT8MzpbbSvHdDRjieZtzzFQWNlCEptk=","E+qyP9At4BTjBVtKtCiBUJxrYl4ESI6O6ThVfGaIJh8=","GM+17HdesWg9t6cyeUXfRFAuRBoAgrv3YIJf3AUFTcM=","Jsu/vHGc8GV9mKb8p40lcq2yMBk4oewZv3NBeMIghlY=","DM/i+XbOK6QI5DHKMZ6Vv77tWSdB4Lsz2mOgP8hALT8=","Fzh81mghT3Nq9YLcv4bACoDct3JQvgMcLgIHE5HVN9U=","LZrPjqptFebaf/qxThY1PPc39+VYXvni5DrKxsyHl0I=","A5Okwe6DevrrEBFM7RL5a7kITdSkwnUNcA6Ha2yu+/k=","DwQHpxGLaRDdkJ6JSWa0JEDWFtpAPgoHs/hvS6gBHfg=","L3c1dl4nif1NBceDUMNca4SmmnTH9p4K+pk0Lxxs3Dk=","DbqReNLvavHgHNwt5+hVeEGMJq2/N20GPLa1sRgfQbQ=","IUT/1Wk5XIMHP4guz8oNjJQosyyUadt3YNN3hkn+J10=","KYQTfF4gEti9ebHVkIeRW5l6iq9WjfNVvPUx9AFDd6U=","CTTzshkSkc8+YxgiCHwZ+DWijMSbmHQngyJM5s7oWI8=","DgulkYqky8OMR2SKWyjYPHrC/2ikEn7OmINrVCmsMHg=","BJo3NKjiov8voKAeWmw8z+N9Cf7WyPXbp+9MRrXTO5w=","Kf/4GSEo+uvG+oQywVYrwBtyibP7UoXinRKjVWzArEk=","IgGCDePPpKohY3vHQq+qOcNhGVEzBZjmGtPc2BkIGOE=","CUghUnZX5xfcF3EnobEFMaKp0Y+RQaEujJ8C0ffsGh4=","ELWNqjbFbvLypN3hhpjichEvzAHmh2mGjp7xte27T8Y=","KdrWjOWIJLpdibez5+wf3ZXCU6a2qytsQY1TpX4+6PU=","HvddDfL+JJ5vzsbPVWmbvWFrux29s4TWqiH1xrV5Om8=","F1SRQmewsJqUhoX9fWBpLabGvJkNO9hsBdFAkTKSCjc=","D1k8mXrgqUJrT+MFS2BjU3SgSbxVr40Tc1oKkDkZpm4=","CqkYVMq2enoeKYKo5RWEWnGRNTD/Wu6YyR7r9542GCU=","EvLmU6c6kHc2e2q9416mjLoUEGKt59NYOwXaLI8Lqtg=","FpLDf5Zmf6YsYZ/hoOeavfhtm91yQXKCKNtgCf/b9Dc=","BOgzYgsTnVDgM9/tOzk5RXT2MTceMcK7DpxEq4oWhJA=","FPE9/T5Ygagg7OH+SERiixTaq5wPvv6IrNGJXENXZhk=","BFi3gzDXkCtOhPcMJQv6CBySuh3ili4ZyrYosYYI09k=","LFIHflutps71OXAZORcXJkFAuKmbfS/eUg7InTEZIxI=","Ad4vV8KBMyJkUAGVMa6G0WCg5ygJ8BWTwXceTsynojw=","CnYfzSNMK71mG814j1sUpe5CVRkLgf0xU8AD1ooxmac=","DryXThf3E/PqDYsS5GP9WvBFAUkGbW5yMi2NDh4baDE=","G5bgJBtyIakxJSFSVqtggTWyIU4vBMEno+RR1/j3eH4=","HfNiOoGs0XsOtFzuZjjR3R6Elm44zerYjKX5+QlvvM8=","II8Rk7dPSPUAIdHAzZd9vGpV4vaO8O8AAM0ho4zlvwg=","JGNSuzbrUS/082/Y33IEL2nPZ/F0RSGJihF7bvrseJU=","Aw6U/0AYpalyUwDydKYZ3kkBd9FATa2agpnvKeCwTxo=","H1I1QDXkSsBQ7obKYxwORetfdbRNbn8BsIBeKAZqzMo=","JlklDk8uzD08xaHHQ1WqAfK0w66sYH9983LBW4Xsvj4=","G+IxG3i1wSRvrYqMNG6D5sCCLfWVV1iLVRG06CHivyw=","BQm13k3/cy2kNDcpcrRm0RVNGU4QkVtDR9/QZlpyv58=","AyR2gIUKWGLAj7yw/vbHOd8eiAQ8Ol5zUx9oL5P46XU=","LREFQO/2h6lFAQ4EDcQEl6PRNguZBzur1pEVQdML5fM=","B7ohs61PEz9pYnshHBLzJE0atVOubWodqoiNAECwd3k=","IAd9tlFWqN+3wxYKgdYuEZsqhhEYvj3VCc3M7/2ojRA=","HP6iuJhLYrKPvWuNvhNCQOK8ENa7vTwvc6MIhxCwmXM=","FUm6l/xTiGdQbzSZKafRuGITiG6NKr+2D84DaHmP0pQ=","JGJSq3zzRemCcXIl+VTnTnMDzgybGySx3Ab+EP3O5KI=","K3UNd9qVd08r7hKbMU0cPdXjArZmwr6kbPiGWF1atts=","I2/UlHd0OV1/lCNSfFujTKvW96lQHM0zNTI0ki6JbhY=","GKSRev+7d1Fmf3Yp7Aha8akC6bVHGgLIngVnjWILsNA=","Asz7d/ndl9fmqLqe3kI2QhTFKgLIoKQgzNB2jfyhcaE=","GNtJtPmfaFkG93KTiYBoJXKDehNw8CPQ+jefzxweyFQ=","IEDcCeh3y6AE1AYbNwHGqSsD/KQcHcbr/1JcdqH59+s=","C+xcRJTAtd2728vG+oj0ODBVJbTAivWYYAVcH4tz7Nk=","KHnuxH5ylznR956D96ceYx7M7CyDtD2t1u5WhB+DofM=","AaUMOgGAWQQuXOlaeJkU5cKAC09O/hczbFsqIWQQAY0=","GVC5jCK488yFXBZ8fZu9/U6jeqyYsSsfsBclfD5/KT8=","E7dxDZIYwLFp7koSdnFSdM6aZGhzDS3ncxNJrRrp33w=","HvgNkIBe0oL6T14ShD7Uq8jyL1tZ8E7hM0kgmou1ge4=","E6vEgtQe8ituPQ25J2t1WZBEQ4r4lAtcjVjn3+gMRMU=","Jn1hZw5T3QNOeVuyDCCRIWOlgkhwnVq6ipXA369QsCw=","JEQc0c2BReQrRx+C5Pf5wo1FrCxV5OYNPmbXTotWORo=","A1X+iD91waQ1PBwNrO7y06camnTGIFMZnkMbj6gcuNI=","BVG1P8kq5jwrLsvfQM6TeiCV/OBkdILmSg/fUVz0Lqg=","KLaqpK7iVgcdmYi/8bzChO1op2FGIjkuU0ZabqkSWLw=","LfMdhH2//LBEQljmmHbtO3RjpJRUvmq2JQqERsagFwM=","G9IkU9NpUP8bobSbzEP5ydS6OIt4DEP0rTIWudqNoSY=","ITq+J5y4l/p0m26YGAocgiVVis2IZnvfoUBwuqZdyBI=","BIU6jq55DDTldRiT40upMgJNnFScendR1Ta+nMmva5Q=","FSQvvjFHfZ3gxDHSXQyONdSJ3NTJn933LE8K1MSS3U8=","EvYyPzHhRXYyiVep85NFHdyGiqV2ksoye8Whaek6ujk=","HdogNbdYDmO6soU13DkvJAhdWdC7+7VJkbo+6VY6GJk=","EyUbtzoo2ua9SYUB255sWMT51FjoaVWWZpss6QAHYp8=","AjHs7dKCgTag923c3cWPnLOnfKBcTA+5XdtpYEA5Eyg=","IAKnGpJvziah537kn2iEbDcbdMp63dZtp+xShrt8VKs=","LKtvD5i/EH80XiLb7xaxXq2UQHCYqTOtBZGzxFACOKU=","BAGnShe1FPBTLhubSqRCGt3+xyafk0h1s01Pc8+eh2w=","J8eL+j0kbahPzHZcqLAOzfa6yiyWd5ao6MjhxQG/W0M=","GO2YrNLI8UCtPVZifZ8Oi0HoTjDdHBZeQEPBxD4y9mM=","GI1R995w4hiFPESkDlBbOPRcrKjJLVCQ1HTy0BUw2xg=","GTC4mzMDE08fkAiA/Xw5x7oAqWqXL8T0Oxfhnj8fPUo=","H8yEJqSTZzYZnuaCnF872UfPYt0KkuetSvTLr7SQsKg=","LThHlx4zaETWJrbDntJT1plAAr0H7JRrUh4G6Zk6LUg=","JCF9aDuYydYwpwTDvEVQy/cOoU3U3XcKukW0H/OsAwE=","KK7yaeCj3uZaHfQ00bKtTcr46ECxodBns1OimG2U01o=","I4s9InoBKuE9/LbwsGURuaHX3d8AkymfBACoh6kOBw4=","GX16Y0k/Ies+mREZRMwTAmlGH3vYjTAvizV7t9aGgX0=","G9ysmI7bAKNQVWfe1vlEClQt8J4grrATxDlyu/s8p7Y=","EWkXEWO9zCwMi9nlax/KZuRL9h+SQzQ82x4THMA0sLU=","CrZqvLeGlDeyT6zs7hyJsY/40tAkBGv5eLhEoaXdEjs=","ILmlVaiznwz7xgMafM3mwRhavNBuP2+ixmhQOLh02rI=","Ay4HAo0f73a3zLncVP9PQdoQMf+olSxkpUN5g+g4zOg=","FXNpQ3MJW8MQbpK2tieuTH0P+OSZyy6kJtBE7tgYzwg=","AaYC39NS5D7LL2n8vVaLYKFAq1L6n2W1OvExI9URywQ=","Hiv0+ldOqQfv6yhfZ2a0oX2zW8thhshKBGAtQ4puMhY=","JQXI1BdznyHSFiEQ22Z3AXvdRunhBb1KPVYUfDcyegw=","DmVFSc19oVooCNBthhF5bAAChvp30C9qAjDevvyIwhU=","BvunMsYWx4KM7FV//s1uOuIq61LHKiEOAH/NxcN0AHk=","FlgyGtnD0KNjnvu54jr/MJUSWZ8N8lGZi7OwO3ylaSo=","KzMFLGGDh7i2Z3mby4Vmprb8Xizj+UQNAl/akVDUqCs=","FBCxrp2yGODKZU3nDwXOzHlTznEK76SIXwhjuOA0cMM=","GEjoDtFEk24xIt48cGz7cH6j/OMQR+Yyx5Y4qwHe4ek=","J6J//V58+h3FVB28lACFvT3FkLIUc9BThPjEY/srqTY=","KblBJvVTaojHY9AwGuNmq/JIa9MA2zEjdi3zy5PR2YY=","LVuWzdAsYQFKIo+rraWXpl4cV1d3IkgAmAK7pFC2BJw=","AgLFNQpqN8bxWREu+lFr6XDC+I4WwBqoRi1i7k5SBD4=","LKxxjYa7aLgM/D4Xy3QGCdQlqlR67hT5EFtNqUkNqN0=","KD4aOeisCxkTlD6GGKGcicXHS1jVkpmxH9En8Cz8mJE=","Eaa88O5rC59vYtwMSBaMrdV26NhjkPhcR0S9cOPB6Wc=","EmghdxQRGGrbVe1+WeWEgyu4w1RN7XIn6NcHpbNNYTc=","EwHSgKEr78AvmhPzqSUB2nIIJ5vAPZnnctpJDnrgack=","KOcpzZyicWz16CsMFUf/PEiVjMxJ+Ab5381vjZCy5CI=","EP+SZ8OxkfL7N0UNTgFaoTeyXxIpRDDpNujRJKH5jV0=","LBm0mdPcT4VF0xzKalimJAyyzVzgIEI5387dsrd9FCM=","L5JyeBLIYvWrJUOuiLtVOfymqXzTMfpOXgLvcjEBfuI=","K5vM6hjQP13k3Lmk8QrID7RL50b6W/MHJP4EwNV2gUs=","HIW7F2HZfkpXb69cU7m9tHmg+8N4GN2osqvLNl4Kc/k=","B9rp6H3zekAU0Rh4tJ4FcWKKIP8+ahAikdIRuPux6o8=","K5s73+NCmHk1ydeA3xPwYfbOmk5rRwzBvHx6qlMHUzI=","Eq2r4odJi+nd+rJO95m8Sb59WPBpy0m/AcnEsVBdBYY=","KyBqEaku21R0rnq2W4/oXUUD3jtvQzB2f5OOfGcGD8Y=","H1QMSDfEpKddj4MJNcbS5Ncx8jDdp7pQUqUNVyQ5wBk=","BU24cmBQr9oOigxrXq9fln2A/g5LhRecFj82lwcA0qc=","LOqa1Lr+E2zONJ/G6q4tsFBxEYtLgvJZignNyNsAWvY=","JS9pnqc51VZC74oitFtY7qjVWQD47X85H7Hwd9E/lPc=","HwYbBLX5J7IQjHtr55XDyTFJZRBwALE7tjKD9BklrYk=","CEWe6nOpSvNh08ZW51+X0n9vHkJQP86Oy7rxmikYaDU=","Gz1wD+f1GVPiJ1YE05HxNsH9qYaj0wIB7Q+hQCCKyBI=","KOVgKHmBlu1esNiO2QXVsMR+nWEQx1YypaLuioakhh0=","Cb2Q8jM8TCy9S/ft2t0f56keW5iQivpVl4HZiiV5RMg=","Fbwabmuq1fawwq4zeKJSsUKZ4K9m7MtrJmgUJ47RJ40=","GcUvDcyqRBmaf0/DO7R9Qdaggc82MX5/4Vno/msfCok=","JUe7X/INteDFkpg+VPyWLw9l9HhZiyzF/s1y8WlImpo=","HvC8pwA2878dfT8pTIsKEFdpEXJ5PFvmWLjVX45TN6U=","BBmNWOzc+vC5wtas7e9SU30QQxNrYkpaH1iKQM3spSs=","LF7fVl7SBl19BP731PfhsXIqLQZMAFSXJeBxWUfCb0s=","K7oz+9SosZ1sxShZJZN5o7Rqn6F8xcRXCVZQPvNOuLc=","Lpj62COrqap0Cq4ISGDwQIGljeObuxAe76EZzWpHH7A=","LSDCzQkKvQUzqgXksl7ZR56exLIetZx2VjcIO4epWSE=","EJZ77unaJQXNxTvlyYN2cujzcpxqeEsBOXnYq4o8Cok=","Eh+3rGhe8T90/4Kc0YrxQLvtJQ21iW8P/OukLV2AOj8=","AULghYdohOZXLIaJmKDqMXdvOKsw5sb/dMu+8UHckG4=","I8oEH/4SMfzKEtYwyNtZe9hEGRiVcU3RYj6vwgVsG8s=","GjB2e19PAdAMKwGkTwG18TalJY96UT1vfQYn93iXDVE=","G6D/ZTrmvYFXP615AVM8x5SAaqYW8aJjwG/N8HA510E=","CUpZRaiBhC2AZ7p36eaZzPx07oUXYg5rCQ9WJ7/XKT8=","IchPIyiDwEGgeOHPYI7B8woHuIWfbrju9yKfxryobwM=","EPg/5Ss4oJG/rQfey/KV6GEMYxEoc7sFt+8I9wQ/e84=","A3IzQB4D9ZBxkuR+cz95LBVSDH9Jdagod9tt6mOP1Ns=","ExdD9lvtot5+S8+qekvco50Gb5ydVxUp5i5/XOR1EqI=","LD5vtwBwI2bdRtN/llpFSGnWo/G479kM6pC+DcFd7sE=","C8oujdVxnySQaZ6sa/wrPnxlkTF8dv+xUW0SbOPsFiw=","CerS6+oSmlYCOvpy/xt3xuhnpy34GDn7dsJSP5RSIFo=","GaIQ1742Buv5rs2bDI86sLsECZWEvOWnrio1oPgIzmo=","G0TfBepG7BIxgYAI7M+DjmJ6+yzkt3mKqob2CcJCNjQ=","Dk2Xj6LtBQffpH3RVLUQBtJVeOGNbJ2D+HNeagy38cQ=","FU5NGlBvwMEAGfL4nRhvSvii0basOtqDHssA86klymo=","I/J/JGTBFvVaW3SCoc9ebHvJnxLij7rcb9SCYHLrduQ=","LfGWyS1TVYF4BcbMPKEClEDifbg7F/rkDDX+NRiVR1M=","K3qJrRQZ6F9NQU8aNy/spqq91p9yH2hPNP6CmyBIyNA=","IsKddIJIF6BCOrHXDVydUkmxahgQNFUGaef6NX2dwz0=","LURVm/ZTwRKRj7AzyBU73ORJsPHnaeRruR5frJfvfPE=","IdcPGBsyL3SrUMQy3flzah43OMTog2JYiUNNpQ2ITI8=","KkN7lw/zJkW9UwP5R0tXQ0JzM8ZmPRf0TZGOnyygBdQ="],M:[["GWt2zv3Mf2pUxx1AEUoLuCaUyTbxVzrHrB6j/M4f6Tg=","FEDcJXj0RpTRjCX4ktmMI8/bh6dyIAAg6JeCPUvITTs=","I67rDGSZuEv8Mq48Qt+XKHmP0u93TxUYuHC8V9E4WQA=","HtnT6Sdqy3tNrlProUiAb9m7B7LdBhhyEvq33L5j1yw=","L/V/P36VsDQR23kKhmR0Z1gRlxJNIXUg7y5jMqWzUYU=","Ffrvv4WEo4lptKcZ/+XwLCGRqMztoLd1FiID0wuAIIs=","Hm6qsRkVk94NicuyOZq4qpVdgprZWUKM1Tm+MLcv3pw=","KjuwIMilDTEO9bXHfMQIsHf+JIFFR1TEVo/2aP5fCXQ=","BR+BXEVLYBXH6/kMKXuQ6WBM02rMavB/mbXlH96zIjQ=","KLdcKsFn/fGEclMXx7u4CD5axbupN7z6bO/LaeQEi/A=","AjrzJFmWg9m3G2HQk9Y9y72X5ElXMz0ml/3QYMHktYU=","BaB4aKfJX1CgFYef583x62wxfk1InUUVII3fQKMjKeo=","LFtKZbxVrF++695Tzl+miIL67SqSp7P1cygyxy9/LDA=","Fz+JXkcsTrFqKv87jgQX+zK4PrHjIzRxx2oFUFBdBgc=","IGywOMwyhSbQw9xa8ZQ32DIZdRxe6PYbDp4vWIE2a+M=","AkDFeJcWFmbyjQALiNM1OSHZZ0IPQBzoa77kK+KHpPg=","Gq78Lpkl/NRTmW/agEBj/asnazfF9R39/vklW07BDMA="],["Ew/FRHf9lTN3/COrvXpBvmdkiSqHh8dZwUQP4BM8hS0=","Bl4TTLjYREfW6h4XkyvUo0Hr7yVoMTwkWU+vnX7KIRA=","DnbEA5K9X0WLwYe+VAmTEqD+//RLRBY3Ag65JnCm/PM=","C5gXZeyuad1687EP+kJLiusgbMT0klcmXGdTscxU688=","Dk+wRKn8tAh+NRNB8l2YsTmbV24tZlRTTzSCGaCs34Y=","MD45yojo2m5cljVkcS34p/hQGnr0qZDkzOwZ5fj8gF0=","Abd5ldvzDMVfnUzUhJztlJNJ2oEjmgFUQP2zi4dqvuU=","I2Q63TC+IEc00CnPA0yVgURVEGDBkBxCCijJaI7DaoA=","GUaiariVP5vlWBBfpRefF152okQp2tXVMsLOs8/qBck=","JItTP4deXujnUc76Sx0HMvzTAVHDpcxKu7sek7RlXUU=","LnocUdph3SFKF4nW8e4pV/adIbHxbR+UWOslpAZQC9M=","IGXjdO2x88u9KRncBNFK2wcGLdAewVAbhVIufg+vkl4=","LzZTWoOgnPCfw4ogpyVHeuxWZo8DSjZKn0pWBf/9M8w=","ESPTyX/45rWJ0Ri8QMoLmsEq6QlVjyWCVR96QjRbRiE=","FgswyHTZwGcEySwmbHpbf9lmpipdsAjxv/30Q7EJmoI=","E2HSfEKntL1urrmKM5WSYWwNTY/Orf2xZGgWK9+ojUY=","APHo+Ghgw7XHi8FN+2fSLGvriZISNliELyP3WuOpLpk="],["LJyR9IZhdxuu72d0V4p49pw1XI6QcVb98m2znSRGQT8=","LGsTPoCr74SQT6SnX5aPuqvviQKG1f0RuHoeUrfrbQ0=","LOhUbLWfQg7eYWkudk4On2cVsWosgEfNgTHJdkb1DSQ=","Ctrq8od2uBPVGPZFx5Ple/FgZ/2A65Id1aZ+iVZGycQ=","IIagG4FkOKKkHFnkPXP6mqzwwk5Pa6winWX7pZkiVUo=","I0hYDeSarAHOj8taorRn9nh92Klszs1vtH331aQwc5g=","H7a9bfZQ0n6MrAWsC0Xu8HAOMIsptL1B7s/1gCftxFw=","A+lxgjfBcA190hPgJvMH6AALOFFGf+2eb1H6UCDCNpw=","AJJa81ozZoAayAox1j90X6gHvaEFYDRa1XK+9M8s4NY=","D4aS1kpbaalWxOIAa/7DREd/318MmquGZgmEK511Jp0=","K9/n60+oA7wdwAUqRthQ7j4JHrqKfxJXloL29v1QRNQ=","E72swTe7z1HYvJ0oGTHW5xEi3G6T5//ouDXjOTd1w9Q=","B9eM4MHIc5GgagbIPTANUlJLKfGDiE4wDg6t2s0F8Gg=","CYTBMrKaBfK1BsoHwG/pplhPNruHUG0tMWpPNTysXx8=","GwD6qFE2sb/EluDqmmKEyuUlqpZhL/7rUUgIlVaTh54=","GeHkZTZwTOzqw+q5kb2AbjR75AoLeVbc1wNzUv28Q0c=","GcJUC7sc1OCPEFQ3BjyUXP7yiundULl+C3lfjcWuNOI="],["HewLr6PoGQYh5eCV73UeoDyDbbuARbKnP405fPuBUZI=","J8cjMvWaABNbqpS94pSRHRNdHZX1PFLrizuVWUN0kG0=","FuZGYRRNgWiFsy8/eAlwNHd4gmjVfBSx2TmiaynLfvM=","IBjbOGo+Tlfq2o2RQIsVUGHfBQFA+yL5pPNPtOLQJCg=","EiY7fj895giZosIv7pGZcs153Ciah/MfG0S68kOdyHw=","EOQg7cttp2Fwsk13fOnTFhLtsVk+ptMOjP2s+2l0+ZE=","DryzWPlfhLcZxjHUBFzvA6xvwjj2g0Uizr0C5HQRu28=","DEji8wT3MNSOg9rlx4pGGIUAvIBApJVC7qXvGiG50iI=","AOdm8Dr7t69jDqqK/0/mDzgQ8w8/RDhJjv4BhjM9rcA=","G4p5CdfnvU8LzIADlo44SsLotAWtBc9hA2TT7LmC234=","HZLkIT2ECjMOy9sIaT2/mpcbvWIpBH64igPzNMre8ic=","DTs/uGpEt0IkKaJJiEyFZErxl1ZBIG5hAHDALvWp9M0=","Jcfo+vbEihVsuR2BqZfGZz0yaUo/3WT16VlOn1BLrYM=","LXr4NMnN8bOMjP7SGPHvDOC5kI3p56p6VRDE+5F6AoE=","F1r15Q5Whewtuxz3os0l1FaA9s3faNfAeV3smLh/anE=","Eh9KGNe32WUKq2JevoaVqAeUOfKrAMCQJ53nRyYjTm4=","IfCPmzwj86AlGBFKlpKbbRBW600dsUfODIiC4bD3vRs="],["Cl9SrW7EqKo3fY3SrjqvbuoMaMY6HQNPvaZxM8oLhcs=","CHSI9zWx/i+jxscUjElo5/NHmxQYoaVmdDwcohXc/Pw=","Bs8NuS+GsnMu5fuIHvAXYBLcSt/YSbm+TeF4RqbOXZk=","BnxEEXRdtsaqZZ7HN6WGqPShzeA1LjCqAGN5SGX8HAQ=","GZCSQcrFAojA0SND4MEs+bl5C0Be8KkAGqa+AokGOqk=","AdJblLt8ScAXDuH7Klgktw5FVLzFS2yPjMDMnXTxml4=","AydOc12y+vGGeHUoJUJy7gGWfmrp2CUUE3i4NU2EOWU=","DKwyA2LiNbRY1tNkzQ//kU88BWrbsDjcKoYaSff3DiQ=","ERHtema6LM1L6g1D7shuo1q0AlOhIJ42N/ED3LhPxCk=","E+c2zHC3yCijjdY5Ts52ucza4spPQ5Y0MlAv6MKtGf8=","HygFCEl2sUL3x0pBb/Q5/xvNi457BXATAEB1SmG3GRI=","J6pQoOXVWIwUhujn/I3aZUif/7hmdWwhj4fnKAzd+mQ=","HzzG9l2dNDcIJaOP0fSPUJ98VhcbnnpiTZsOzfasTqs=","GxFxN5HqTLLhfIxYZ1AgQ9Coz5VThMHHk8UGt1/A2yk=","EEVg6VxJ/rt6Awhi7bOjPCsqPUFLBTay5U4lqzbo8oE=","CMRfPExIb2tTeMd5xge1FyALtwtVM72s7xhRn2Jbkls=","LSGTxne7zVanT8KuUKtPLMaap3zPwzx3B0UtWtrHfts="],["IKtzlL/as0TLtvISOACg4jUI4hJb/nlatKdnzstNkwY=","GfDi4UGJbq5tVtGCtoe4psZMu1ngMbdJ81gi/H7jU/4=","GPdUqVsK8ORwb/kCS7E1Fkq9b8Fu5AzC1oUtiKL/yfc=","GT/g6bSAEPoxnDO4a2sY9CjzI/ojfKkYo4+qqRuklWc=","AR/wkd1VG21YYgPuDK+uL3ZS6SOrqCV0pTtjKgZvSIQ=","HaPgBgHKP8DZCxl70qR0tG7+Ov87LPrx6+Ffoa+t8ts=","AE70GUVVnB+wshFssr4fBDv86NvJb+7MzaR8v2i+WbU=","LwU/3xpy1q2Mnfl6BNY3kW8l40JbbcM+mcp8rFzH5Mc=","Ha90hCx+eRBDSa05lZLFxMzhb3nhqG9Q2UFZh3LMqVM=","KujajQsSmiL4NNDSNMiRfC+Hf/ANwWIVSY1LdI+0DfE=","CZsKYzCSakoVZN/pT5oRBLuDdLtRioneCMWRwX36oFk=","C5rr8EEUbBGRmXV+qM7uWrzqnsQs2yi5IcryHoSEeFE=","BV7yceOIJ4sayjTTywARa9b3y1hLPGnw3ip6/I2Y3rg=","Jvvxo1GWP7vatZDb12DOYoQnNSWhtGxB8pImxlM59LM=","Ev1nhjsuA7b7RSJPsEH/KA6TZ0K1TI5U04I+CQ4UQWk=","AGAM8mY1stVGQxUHWJc5AQ0bdXzqrmF7+VuOHvqYZD0=","D1KPWRK+SUVdQyOyWeMM4phNgXBgHutL1wlrRzU6t/w="],["EQ6jIrDCZHbGe/osG50XE/k7O5z4Mgzg3NS2Qoi9oHo=","KZxH8ePsxVerHJq+NvDSug7OAQUeB/CFjpepzhb1Zk4=","HMBTpqTW+W2nfl5zrbnUm8TQ7yzC9p+t5IBAt/jXE4Y=","CVWOzFi+5PPFePYkid2QCECpiJCWwKYhFKotsEWh0DM=","CT19VWPjzNC18VqbCT/muGOqzM+a8R/+qbKVt91CsfY=","BF3AV5ymbn4JbU3Ya4guaK8tNdcM9eOxeDyqoOxCQlM=","DaAvZBDiQFih6QQSzVMCxXGX97GvKplJb5z/P/1YgI8=","Lftt1ZitpX6nGo1o5pJGCPDseDiAhojuSz/NUh975tI=","EFcGK0C9zx/iqu9FiYyHEUZ5mpLIfQ/OZDAta8gxct8=","JubRiup1qUhhoCMztTZM7Oqnit+7dCgXIYyjr2B7kQ4=","BWW5ZlkCWTXZwCXHqyCxYR2wC2fsxRQms0L4x6F/7YM=","J3a95SoSWUcsHMAg5xn4IZHew6t2mbfQ/Xad0/45KZc=","DBoyTEnRX4eTGCGYm4yEN+qetG7Tqs+Ilf0cwxEFPmA=","J+aFaOnP/Qf5JT7528NWJR3GstapA9bHBGtekOG83Jo=","HbDn4BciqtIQ5SlsNukQPoLRV2XDGBNNF3FGodn9U1g=","Cu+KTkfV7HYOBWWues2r5+jpiXLeht0vRHqvIWq0zBc=","CMAMTls0Z/AZAfZPn4nBW7C5CRjUiLcwyswylmkekgA="],["BU6r5hMWgfoB+8bb8+fVNZXQ+ICZhxghQriQrIr4nL4=","Gkvv4RwCMMYt5E/6/qDekDujKMbWevc2gDEraPms/9o=","AeQGZfW7jFwNycEfOdR+nTPnF6+jG6dPkvhzelXv4TQ=","I8Sr/rgxkjYqriGy6e5c/HZb8QAPeYw65wEzVWq8eL0=","FmnkS/AiOnf0j/+8n08gtYFPYYWuEaIQ+P38tfcdYD0=","LVs/UjqWaMvkiHiBv3tAGE+XhxPjWN4nDYemAOXFyS8=","EMGFbygvVW189tSik2IVBnJLptPFguTCYYQvKkvbDsY=","IsxDSfa6o6jgth/ECrlyEOS9Oz3sfwW7jvg5yEaSr7w=","EtAZ43zRvXb+4GW7c4CpvYMxpNvNHJx3Z5K8GQRcI7Y=","J6o4+gUcQ0GJ31e6/YByPuKb3M1Z+8GqmvEYkdNyLmE=","DwuTNttcFtRy/aP7msE7EzlMCaufSE7PatIGAhe1iWo=","J1pvWWIzVNcdOLTiAM4ulnaqt06ouDZvzjO9vEfQWG0=","Auu2cw17r+rCP8C0V+qCTu6jxV7KY0vySyrCqaIUg+E=","D/IV6x443GdDLiYt8n7afDqpQZ1bbimb2UjpcPw1pi8=","JH+cf6YQMiU1/rBnbP9UnxwXfQ050/Hu5kLpJTqvuC0=","KtC9n3HieFCEqguEYWt9raBTIHxBjmX0A1vmagzcjBI=","D8PM7wDWpkCAq77U/tkLacXlgDE0witCzcoKYPA+wzw="],["Ik2BH73vjsCgBtN2oBnlfJO9WWIToHgjt9Srzh/Y5iE=","FAdi0wxcOgsHULFACoap4vXPwlMbcpNw862f4dzUP5Y=","CXbXw4RLyN7qDwM3+JsqExMC/9LQqHAYHKX9X7bU+2M=","AVJgQgHKffBZlOnV8FjztnSc6mOqDLW04cOgC2ZnlY4=","GrbY/jn4e7DuW4g+6iclyqUsV1dA1awwsFj3cRPQUjk=","G2K6gDeoPxJhVEwwfwGdvqHMaoTUgeqJYLD8ZwdF6K4=","I5q8fJ+GauwoaFwm9OBGqS1DYNNstQiQ9CLhjtb4p7I=","Av7VoDIAQXZkU334+jAna4XZG9LtId4z2QH7TYJDmFc=","CZbK502WJ8o8VsZGCV85cwJ00l6CxCziHPeJJT1Io/A=","ME28CTaGI1bgAksqMt+jCFq+29M38iuJBivmFNg8sIM=","Kn3o9f9HbYHTk/HSdGNsqVbwW9QivJ88wPrABUtYywI=","Esb2yDo1MPrO1gyI8ZqC/RK32TinmGTtIKVFpS/c4R0=","IB4D8f9nJilHOiTzLS1QKs3I/dKIMBTedMmPQKGVs+Q=","EYw+/pIMnD+QfIZ3Q9NdLMv/fInpwxu2oXxVLvkrbAE=","D3Bf66XwHLJ7J8EEvJPwyXT1Yfom1WFPap2eR9A7xlU=","KNMnocLWAS2eaemjtMEa0zbTwNzf9MXITd3fkR62RfU=","G85n9NyZVH8sr/G1xtY+PuJWWkBBkGZFM8HGXdnY1TI="],["DmkfykIxKKfUr8qlgrGpR5m6H10qXVO8K7pWu+yyJ6E=","GAqkur+nU5dT2cIi5eM1mspZ4Gu+/Hzzo/+k+WH6HVs=","LFQofu42jV1S37BoKC1o5rCbdr0bXJMzs2hIrCd3RPU=","L2U2GkrtMg/NA6RcRN2nQCE1cfOXXOILlr/9lgy8biU=","I1vxeLW1YmLZiL/GJwiw+F1XOFzeK02s+ebVkt6yr+Q=","F5TsKw7rIvvXU7IfzZSee+2zBfFaWer3SpYcMEZjX4U=","CD4c1ZQ0YatQWyADEb3kAD+09+0WqljIvCjy4I6faSI=","IqZ6iHdpgtahX1d9z3gKxIXrqub99vvlC5XqJmp7YFk=","LRGI2efmrCTEssncPfz7D+R4LWifMblLH7Fe8p0R8Z4=","JlxDyIbwfQJSANVs0kawFnCz6Cq0gvWHmxBgjMBaN/w=","DybQXpOPgxe9YI7/CJXTUtynErZTsUkvjC6payb5OB4=","JXaJpOIvaodoqv5UIY0x3k5An9v0IxlYJTa7WDMTo5U=","HtxX8XThMitifG+dvieuJwPD8Rw2SzgYi/QdjKDBcJo=","F7OfOGNtXv9eBu/wietWBRpgK8j0vxuwrSss0QzwcTg=","MGCU7P5jMAsvlbyYoEBseJjYaFIzCntp+bBLVASz7vM=","Ea/syFWQVDvS34q5Ur4WRnCj8yWT6WLUvUk7zTyE+E0=","Gouk830jFTichWDXTaxXKkRHoCFFUWKHBT5rnt77yi0="],["GJ4nnJLeC6tmcH5ubjEFJOYVzUxqrMZlNyo7jjctjOY=","FyCOqc1Nwabe6+ao0noxgatfhsanBub9AH/B62eOneY=","Ioo0iMq7+fKe/AvOIRoJAxlys38l6jWsqEDcIzGgzzU=","IhIsYxP8mkxtD5RNPOI4JyvzUUext4iqsrjbzrYCTHY=","BmSaE+ZQI6cTqu5Th9OI42Ca6bFLpNoQZC7gt7ShZjQ=","HtTJXGKDtF7AzYj1EZdvBj6ivrBpW4r3zBBYlZOnl4w=","Ff5ippsEOClDldob/JMnLYh5fO7vZmuiRD8MFG+Kt+4=","KweaHQm51KdtTlDEXAH7dQixxEOo+yHr0oUz4F3viGQ=","DDRJan21q7MwsvbOmtrvWubjCMj8LFY0CXrjUqp0V9Q=","BP/iepLLQwDndDiO3DFHq53MSrNUw4D1HKei5/4EY8Q=","KLc7M1xy8HdIcaIDDUROX7lUl5wcVo4RL7kRpGxmZ2g=","GVghuZrywhdATuWC4piJByujzZlLdJVcJhta02Tlqcc=","IKVvzjcSK3QAq2GmXqyBXdGA9S+tKDX3/ZZJBjUjiB4=","I1EykS2y2gekdQxe1d8lkOcYQErvxIvmlTQy9kQkBC4=","EFnbXpfyWCawu+/Wv6pulJbFXvWoj+/pcSaR9vvfQpg=","CwUMiCBzpYHnZyI3Bc2VEMBMMBaMUP/gyYdaKLaTgpk=","EV5gxOKTfrU8bkpUiPgBJm6E0HVHoLHNkbGPSe/vmSA="],["HZvLvRe5OxkT0vec3xKEREEjcgbwKUdG2T+OW9zrRyU=","IAB6D103eYeJ4KjvaDU22c9IMaZWbrcntBGR2fKXRxA=","Frrkn167H/6Ia2NNIV3mHr9PRNHNxPhGcN+O1pMQv+I=","IpqltUemN4DY0SniCf25L4VmJhbVnakIB15mj9gXgi0=","KaWx5OLyVEVJat7CMO1To1mTs3YwrstdduVmCNG3jMY=","C/znsSAGi5owAp29s2vgHQcegWP6FyTxPGyom+Kbcp4=","IAVVaLMzZ7wSv0rtegkJwXNYildjxqGnWYunxsfjwqU=","LfH/hmRPzEKhkyzxXTFO7UB2CCRvFKgJhyX/e+gJyH4=","HU+w8Y8xyCcLRjbmtdejPkVbEFDeEWQYLPy3OczpZdo=","Gdbx0RDZ+HPbAC/y7YKJBb1sxdeSHCONdWnaqbJAHTI=","KCoB6PLOCcvdhi+Y/auj+a8CRD7cliyzSALQRHfeHiA=","MEtnkAjoofCUSEI6BYieDfZjorZQVcqe5amd/hP7mhY=","GZgUftrzqSqxecYawsNq9crz54vL+2hM/qFdsXuDWQc=","AopFcstlQmHPk1hDWSPmWv+PQDk3UnSLdqz9Lj9XVck=","Fb2ZjCcp2+rMwptdbk8P2WrQpgN8hKGhp4UWn7M2+24=","B83zMJ4TD5zt3WiK84hTafus9tikTeTUUGZ8DXZBIT8=","FS1HrLmwbJ0SwhOKMUFru7uZGmXcTU+O+Ro91yjmO2o="],["EXkYRjWpeA7hMS3MPRXH7wQrGK6UCWcOKMTH8PubYI4=","Ip2kQaMCkpsLrpN0G3x14RM3x5flch+dfuWSNc2ppAw=","Liadx49w+RA7K87T7b1B4VbmSRCIe03d+KPu6WD2Abc=","Iakf7YvtFJFMT9SRtvpNy657O4s9RWMDr4hsMoq/Rpk=","KfB8Hv/GW1WJ4cpSy+AL1l716WLQEgAwJnC23Oee6wA=","BQanpd5rVuvsXnCKcKPOyzos/SXnog7UleKVqTAjxag=","DAKxSPShVZtZfNMg8AwCuWp/x8g4Eb2GoeecwxBrIgE=","JKRm906ZpgKJT0IQEPQ6gccIsbStB2QlGQuFNH9oWxo=","H+4YiIQlcklwvSiXtUx/qOnDZ93byEhNo3hk+v+fkFY=","GXEcQddvZKNxq6YvP0ZxDe4MOq0he3ywC9EmE7JO9Ss=","J3DRSiIBUvpwgwQL6bPNOMis6eIHBzSGvPr8rXBnSLE=","CN/+aEqjP5EdNemmRLS9v80VpNpJtlMYFrYOjOT2teA=","HL+rfLBeLyglSyML/OAX8AX7Ty3Yk1rRF2WzR9IANmc=","IdcmmlPTcSsgVDsAOa7MlGZSATPSmehEIACzMYSjnoQ=","If3lgKGYhrEzWPGKMtWv9oW0vXfZTwZ/RPbnqTNQ/So=","BSMr+VgH5IrYKh60vEgemwcg6VGW3+Nh9VxNHPx5Jtc=","E2AmRriLoxwNVEx1e9kYFyeDXb5pDDBYOiPzf1L+Xj0="],["DkhGYYKugzOvGJGmqhlzZ0HtBoDVfJMe3hP8B66C6Is=","ETe1xhuWhL7EHk36p2Q4JWYipDeOpOZGooRLvIW/gcw=","H0uFVSuWDRwYt7j2avcwWmdz2bBfr1Hg7RpfLvL5Xn0=","C6ilSRSIb64WcAwC7993Z0E6C+xaGe0M8KfYrGDB8cM=","MCiclnjAMw+Fz442JoOmFE8iuEGqCPWG8hndntrveLw=","BIkASPzb3mNmdhzVj8xqwKM2DZpkIz0+pNjWvooj7EU=","GkFi6KdwREe+DB1NXPL3d2cPSEHqJ6wnCc1r/+7Szr0=","LpRLRJwTac6XZvpvT5modjC1wfLWNnekN6U31htsdHA=","Itbnh/RNqmtlk9/eVXbS/fXcBEfmWh1edxLk5iw73O4=","Dgjdtp1e/ZScPWceTnjk/HYoxl7Bz7wYumoQGqGdv2Y=","J6VzA2UJqKKakOqjTSra7V7R7GsgcnTzxcoj2tOIDlc=","ByNyCD9iGVvMK1r6sQOBmKPwVGti0XHqIcN8jzFVEXY=","FR4LwhEOQwDdgqTJJELEdRxlspRCbIwyDGnmGDGVjOs=","E/Gsw4nE+OdSzH5LgcN64hMMYN+ci36H3F+3RZyvSRY=","BoI6m6pVYjcysC+icLL4h/04BKhcGn8qNV3z++/GncE=","HkGTbmvAw+1mXC4kZquSFrmXP+E22fmq2Vh4wbVgfG4=","Bldm0pgDMaVcCjnYO+eL0Se67nfVOiQmjgZMcdqvK2o="],["HJ1W9xwvIsRNOowXv1tARS4FRx8Lbf6f/kcl6yn3NGQ=","ETADwdx7rzXkU2+V9Oqy87rdosehxrWvyVYjSt4+cSk=","DV+5sOFQPyuSaXxHO2nPdtOPwSkS4sPLM5ltuwzfqjg=","LhZKUk7iLrWokD+uHzWjp4+ILz46mJK2/0dTuqyTSUk=","AfncvefQWBNKUQpxHQNtHxgA5HOmOzOn4PsE3C4J468=","KFsgeZlwtYxjrJ9K9WTODyggm2GAIhTaW/r9DPJMZxI=","DOPdcn/dEai8cxUA7/ojdjCJzjMyy3MPn+VxRu4gSBA=","AQeXRspR2VGKDDCSlspIIGKSeYkQSUJ3viu2WmsTSzo=","I6hdT5Htpp8xDEUdfUgML0DA1TOC3dP8qq5ie5YXFw4=","JAZX1n+SteQmGs5DT9KGIGwxVWU3jOi4FmFSPw5t3FQ=","I4SjhLzCxKF/98nj59Ex05FzxDEzOpx8HW/XEQ4lkCs=","JVR7UbLGh05FOMqbNAk7cUrTao81bkx44NZrHxkAOPs=","DlnhqZDsAPcu3Dckg0nXpab3vK7xWBEEUPHlmF8KXZk=","BmxgkJNvawVPF96pFoKVQzKz4y2PIKCuFx1BcxbTYi8=","GyVmKEOwmGqxpOmnZhk+/KR8cNSTZPA9UMXttbVRfr4=","JkdjVHfuX6nnrFmD+S2zTXM2ZGxjxj4t1T1guHFL11k=","JtsuhakAbvXBHNZ1omfULv759a+QRmsqr3XuqAJLALs="],["IjRUb16FQej3KteUiRlQsysc2JHMZndcW2NZYWQunBU=","G2FGj6tZySXxmGGGvLl5ZahYUjolgtQ0MZqVJa5xFY8=","ARKR71FKENbwZR5K0NpdSkieMBiSeHnalC3v299wHd0=","LfL7LC4yHjzOE9FgkXBaQMXHlfi0G2Hf1q59l9Y1eLQ=","Abqvj/lrsiJLw0z4DDi/EwhvHkKbzuwSCQ2KfDdqmoI=","B7DXDM/xtw2tm7SwFC4/bcW8ldN2av+tN4zFBCSE3sk=","EfKO5dqA0Z4xWBtWakOVN0ZtnKf98UtwhoML2KwTxMs=","ABPXsD6Pyfpkf8ps3KlxRpAd98Z1oWSRPCvSo7buPLQ=","JEDnhheaf7z+jSmrGND8bPo4PPt0f3otFbd9gtmw2dM=","BWFJIhcSuI7CkfwhgyQULQKHPN1TGZZ5/OTfy13akRY=","FixbvIG0RCe+ToLF5SU71mwwVPXFtzsospI4SHhJp5Q=","F48qqN+aEe8zVY3Mk0lx92l+Ymz+8A/83rbzycGn0Qo=","JK/ZL4Dld4j0D7srefKUVNxIX7r7WnJj9GK3yEtOUAs=","BJKuX1rCpRAuqW5grIN1VTaHFRrkQELb9YmSMsjyEAo=","ENyxH4FcfinGa+HdPF92AsmOn7FofC2CW0h4nFIfvQs=","ChHVh8t11IVE7sZirSfKas/smPeot5Y6KU5LsymxcN8=","HdawlctoRZ3Pa9rdQ0qoH4ClWgjmeCxlOpOv2KZfMmc="],["FMCdFVxdQoGYwjS1U9ozjyJ8vBKw5C8rnOcVY+4UlcA=","EX/VKHcPsX9xjimi2Rpj7Hw57x3TA58JQ/cX0YBCU9U=","Eg50FtdDCOJAR/aCjGiuKLwoiyFuiiXosOvPc4SA45A=","BpleUQ/XZpN0w50nkD80KsW/ihRkgH8wi+9hC3bLaT4=","HYFLPBdlbCMn+UzAJHJ4C4hriDlPGly+NNxPRP8TT84=","A7kNo0sZjLyhfjSqyYsWmHXs9zrrXG/x8Ayf5TWqmQI=","J/p3oGWHkeZ1V4HDZ2g/nJMzpBNk94cO3/GTWjR0hdg=","BtbuUxuj/c7QXiTPkQPQli3SJ/HeaSwBmUg+kqskulk=","HlB5Ib58dhJIef/OW2LdDpYlnpjMZMJyCNYrQL/j5II=","BoGtrqec9FfbVwGTHw7i8V7LsVntUM90ahW4XG+KU3A=","HmGWFHUIvy7chyxOiXqWd3ixGfaftDGn9kbSAY6rQBA=","Bo76NbxiASSrfYiZAXG65BAq0h3937OH3w3gyKOhiek=","GwEiJKTwUN+EESLRfF6k7e18jsIDR0OkMqLO6JOXbyk=","II2BQVG83N38+DWpWMJZpkd7/kszknEO352AeHolxdA=","KPkB/KqGCw3EGSre+OpK5Vr2zkMsheDOTQc+UUqyQlI=","G9Y5h5cxgjyHH5zUcU48xWpusZiEtzZk7tJLEZKRGaA=","HT7oXwePvuzaJHPvwr7dG6fsb0eV+q6uOw3kjTCAxiU="]]};return Jo.default=a,Jo}var kd;function cw(){if(kd)return es;kd=1,Object.defineProperty(es,"__esModule",{value:!0}),es.poseidon16=o;var a=n(ln()),t=n(un()),e=n(rw());function n(s){return s&&s.__esModule?s:{default:s}}const i=(0,t.default)(e.default);function o(s,r){return(0,a.default)(s,i,r)}return es}var Ud;function lw(){return Ud||(Ud=1,function(a){Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"poseidon1",{enumerable:!0,get:function(){return t.poseidon1}}),Object.defineProperty(a,"poseidon10",{enumerable:!0,get:function(){return c.poseidon10}}),Object.defineProperty(a,"poseidon11",{enumerable:!0,get:function(){return f.poseidon11}}),Object.defineProperty(a,"poseidon12",{enumerable:!0,get:function(){return g.poseidon12}}),Object.defineProperty(a,"poseidon13",{enumerable:!0,get:function(){return L.poseidon13}}),Object.defineProperty(a,"poseidon14",{enumerable:!0,get:function(){return S.poseidon14}}),Object.defineProperty(a,"poseidon15",{enumerable:!0,get:function(){return k.poseidon15}}),Object.defineProperty(a,"poseidon16",{enumerable:!0,get:function(){return E.poseidon16}}),Object.defineProperty(a,"poseidon2",{enumerable:!0,get:function(){return e.poseidon2}}),Object.defineProperty(a,"poseidon3",{enumerable:!0,get:function(){return n.poseidon3}}),Object.defineProperty(a,"poseidon4",{enumerable:!0,get:function(){return i.poseidon4}}),Object.defineProperty(a,"poseidon5",{enumerable:!0,get:function(){return o.poseidon5}}),Object.defineProperty(a,"poseidon6",{enumerable:!0,get:function(){return s.poseidon6}}),Object.defineProperty(a,"poseidon7",{enumerable:!0,get:function(){return r.poseidon7}}),Object.defineProperty(a,"poseidon8",{enumerable:!0,get:function(){return u.poseidon8}}),Object.defineProperty(a,"poseidon9",{enumerable:!0,get:function(){return l.poseidon9}});var t=kL(),e=GL(),n=OL(),i=qL(),o=RL(),s=QL(),r=NL(),u=JL(),l=jL(),c=WL(),f=XL(),g=tw(),L=nw(),S=ow(),k=sw(),E=cw()}(_r)),_r}var Is=lw();const uw="6.13.5";function Gd(a,t,e){for(let n in t){let i=t[n];Object.defineProperty(a,n,{enumerable:!0,value:i,writable:!1})}}function to(a){if(a==null)return"null";if(Array.isArray(a))return"[ "+a.map(to).join(", ")+" ]";if(a instanceof Uint8Array){const t="0123456789abcdef";let e="0x";for(let n=0;n<a.length;n++)e+=t[a[n]>>4],e+=t[a[n]&15];return e}if(typeof a=="object"&&typeof a.toJSON=="function")return to(a.toJSON());switch(typeof a){case"boolean":case"symbol":return a.toString();case"bigint":return BigInt(a).toString();case"number":return a.toString();case"string":return JSON.stringify(a);case"object":{const t=Object.keys(a);return t.sort(),"{ "+t.map(e=>`${to(e)}: ${to(a[e])}`).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function dw(a,t,e){let n=a;{const o=[];if(e){if("message"in e||"code"in e||"name"in e)throw new Error(`value will overwrite populated values: ${to(e)}`);for(const s in e){if(s==="shortMessage")continue;const r=e[s];o.push(s+"="+to(r))}}o.push(`code=${t}`),o.push(`version=${uw}`),o.length&&(a+=" ("+o.join(", ")+")")}let i;switch(t){case"INVALID_ARGUMENT":i=new TypeError(a);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":i=new RangeError(a);break;default:i=new Error(a)}return Gd(i,{code:t}),e&&Object.assign(i,e),i.shortMessage==null&&Gd(i,{shortMessage:n}),i}function fw(a,t,e,n){if(!a)throw dw(t,e,n)}function ns(a,t,e,n){fw(a,t,"INVALID_ARGUMENT",{argument:e,value:n})}["NFD","NFC","NFKD","NFKC"].reduce((a,t)=>{try{if("test".normalize(t)!=="test")throw new Error("bad");if(t==="NFD"&&"é".normalize("NFD")!=="é")throw new Error("broken");a.push(t)}catch{}return a},[]);BigInt(0);BigInt(1);const hw=9007199254740991;function gw(a,t){switch(typeof a){case"bigint":return a;case"number":return ns(Number.isInteger(a),"underflow","value",a),ns(a>=-9007199254740991&&a<=hw,"overflow","value",a),BigInt(a);case"string":try{if(a==="")throw new Error("empty string");return a[0]==="-"&&a[1]!=="-"?-BigInt(a.substring(1)):BigInt(a)}catch(e){ns(!1,`invalid BigNumberish string: ${e.message}`,"value",a)}}ns(!1,"invalid BigNumberish value","value",a)}const Pd="0123456789abcdef";function Mr(a){if(a instanceof Uint8Array){let t="0x0";for(const e of a)t+=Pd[e>>4],t+=Pd[e&15];return BigInt(t)}return gw(a)}const pw=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];function zs(a,t){if(!t||t==10)return BigInt(a);if(t==16)return a.slice(0,2)=="0x"?BigInt(a):BigInt("0x"+a)}const Re=zs;function Lw(a,t){let e=BigInt(0);t=BigInt(t);for(let n=0;n<a.length;n++)e=e*t+BigInt(a[n]);return e}function Ba(a){const t=a.toString(16);return(t.length-1)*4+pw[parseInt(t[0],16)]}function Lh(a){return BigInt(a)<BigInt(0)}function wh(a){return!a}function Es(a,t){return BigInt(a)<<BigInt(t)}function oo(a,t){return BigInt(a)>>BigInt(t)}const ww=Es,mw=oo;function ql(a){return(BigInt(a)&BigInt(1))==BigInt(1)}function bw(a){let t=BigInt(a);const e=[];for(;t;){if(t&BigInt(1)){const n=2-Number(t%BigInt(4));e.push(n),t=t-BigInt(n)}else e.push(0);t=t>>BigInt(1)}return e}function mh(a){let t=BigInt(a);const e=[];for(;t;)t&BigInt(1)?e.push(1):e.push(0),t=t>>BigInt(1);return e}function bh(a){if(a>BigInt(Number.MAX_SAFE_INTEGER))throw new Error("Number too big");return Number(a)}function yw(a,t){const e=[];let n=BigInt(a);for(t=BigInt(t);n;)e.unshift(Number(n%t)),n=n/t;return e}function Tl(a,t){return BigInt(a)+BigInt(t)}function ai(a,t){return BigInt(a)-BigInt(t)}function yh(a){return-BigInt(a)}function Ah(a,t){return BigInt(a)*BigInt(t)}function Aw(a){return BigInt(a)*BigInt(a)}function va(a,t){return BigInt(a)**BigInt(t)}function Iw(a,t){return BigInt(a)**BigInt(t)}function Ew(a){return BigInt(a)>=0?BigInt(a):-BigInt(a)}function fo(a,t){return BigInt(a)/BigInt(t)}function Qn(a,t){return BigInt(a)%BigInt(t)}function $n(a,t){return BigInt(a)==BigInt(t)}function Cw(a,t){return BigInt(a)!=BigInt(t)}function Bw(a,t){return BigInt(a)<BigInt(t)}function zc(a,t){return BigInt(a)>BigInt(t)}function vw(a,t){return BigInt(a)<=BigInt(t)}function Ih(a,t){return BigInt(a)>=BigInt(t)}function Rl(a,t){return BigInt(a)&BigInt(t)}function Fw(a,t){return BigInt(a)|BigInt(t)}function Sw(a,t){return BigInt(a)^BigInt(t)}function _w(a,t){return BigInt(a)&&BigInt(t)}function xw(a,t){return BigInt(a)||BigInt(t)}function Mw(a){return!BigInt(a)}function La(a,t,e,n){const i="0000000"+e.toString(16),o=new Uint32Array(a.buffer,a.byteOffset+t,n/4),s=((i.length-7)*4-1>>5)+1;for(let r=0;r<s;r++)o[r]=parseInt(i.substring(i.length-8*r-8,i.length-8*r),16);for(let r=s;r<o.length;r++)o[r]=0;for(let r=o.length*4;r<n;r++)a[r]=bh(Rl(oo(e,r*8),255))}function Eh(a,t,e,n){const i="0000000"+e.toString(16),o=new DataView(a.buffer,a.byteOffset+t,n),s=((i.length-7)*4-1>>5)+1;for(let r=0;r<s;r++)o.setUint32(n-r*4-4,parseInt(i.substring(i.length-8*r-8,i.length-8*r),16),!1);for(let r=0;r<n/4-s;r++)o[r]=0}function wa(a,t,e){e=e||a.byteLength,t=t||0;const n=new Uint32Array(a.buffer,a.byteOffset+t,e/4),i=new Array(e/4);return n.forEach((o,s)=>i[i.length-s-1]=o.toString(16).padStart(8,"0")),zs(i.join(""),16)}function Ch(a,t,e){e=e||a.byteLength,t=t||0;const n=new DataView(a.buffer,a.byteOffset+t,e),i=new Array(e/4);for(let o=0;o<e/4;o++)i[o]=n.getUint32(o*4,!1).toString(16).padStart(8,"0");return zs(i.join(""),16)}function Hl(a,t){return a.toString(t)}function ho(a){const t=new Uint8Array(Math.floor((Ba(a)-1)/8)+1);return La(t,0,a,t.byteLength),t}const Bh=Re(0),ki=Re(1);var kw=Object.freeze({__proto__:null,abs:Ew,add:Tl,band:Rl,bitLength:Ba,bits:mh,bor:Fw,bxor:Sw,div:fo,e:Re,eq:$n,exp:Iw,fromArray:Lw,fromRprBE:Ch,fromRprLE:wa,fromString:zs,geq:Ih,gt:zc,isNegative:Lh,isOdd:ql,isZero:wh,land:_w,leq:vw,lnot:Mw,lor:xw,lt:Bw,mod:Qn,mul:Ah,naf:bw,neg:yh,neq:Cw,one:ki,pow:va,shiftLeft:Es,shiftRight:oo,shl:ww,shr:mw,square:Aw,sub:ai,toArray:yw,toLEBuff:ho,toNumber:bh,toRprBE:Eh,toRprLE:La,toString:Hl,zero:Bh});function Od(a,t,e){if(wh(e))return a.one;const n=mh(e);if(n.length==0)return a.one;let i=t;for(let o=n.length-2;o>=0;o--)i=a.square(i),n[o]&&(i=a.mul(i,t));return i}function Uw(a){if(a.m%2==1)if($n(Qn(a.p,4),1))if($n(Qn(a.p,8),1))if($n(Qn(a.p,16),1))Gw(a);else if($n(Qn(a.p,16),9))Pw(a);else throw new Error("Field withot sqrt");else if($n(Qn(a.p,8),5))Ow(a);else throw new Error("Field withot sqrt");else $n(Qn(a.p,4),3)&&Dw(a);else{const t=Qn(va(a.p,a.m/2),4);t==1?qw(a):t==3?Tw(a):Rw(a)}}function Gw(a){for(a.sqrt_q=va(a.p,a.m),a.sqrt_s=0,a.sqrt_t=ai(a.sqrt_q,1);!ql(a.sqrt_t);)a.sqrt_s=a.sqrt_s+1,a.sqrt_t=fo(a.sqrt_t,2);let t=a.one;for(;a.eq(t,a.one);){const e=a.random();a.sqrt_z=a.pow(e,a.sqrt_t),t=a.pow(a.sqrt_z,2**(a.sqrt_s-1))}a.sqrt_tm1d2=fo(ai(a.sqrt_t,1),2),a.sqrt=function(e){const n=this;if(n.isZero(e))return n.zero;let i=n.pow(e,n.sqrt_tm1d2);const o=n.pow(n.mul(n.square(i),e),2**(n.sqrt_s-1));if(n.eq(o,n.negone))return null;let s=n.sqrt_s,r=n.mul(e,i),u=n.mul(r,i),l=n.sqrt_z;for(;!n.eq(u,n.one);){let c=n.square(u),f=1;for(;!n.eq(c,n.one);)c=n.square(c),f++;i=l;for(let g=0;g<s-f-1;g++)i=n.square(i);l=n.square(i),u=n.mul(u,l),r=n.mul(r,i),s=f}return n.geq(r,n.zero)?r:n.neg(r)}}function Pw(a){a.sqrt=function(){throw new Error("Sqrt alg 4 not implemented")}}function Ow(a){a.sqrt=function(){throw new Error("Sqrt alg 3 not implemented")}}function Dw(a){a.sqrt_q=va(a.p,a.m),a.sqrt_e1=fo(ai(a.sqrt_q,3),4),a.sqrt=function(t){if(this.isZero(t))return this.zero;const e=this.pow(t,this.sqrt_e1),n=this.mul(this.square(e),t);if(this.eq(n,this.negone))return null;const i=this.mul(e,t);return a.geq(i,a.zero)?i:a.neg(i)}}function qw(a){a.sqrt=function(){throw new Error("Sqrt alg 10 not implemented")}}function Tw(a){a.sqrt_q=va(a.p,a.m/2),a.sqrt_e34=fo(ai(a.sqrt_q,3),4),a.sqrt_e12=fo(ai(a.sqrt_q,1),2),a.frobenius=function(t,e){return t%2==1?a.conjugate(e):e},a.sqrt=function(t){const e=this,n=e.pow(t,e.sqrt_e34),i=e.mul(e.square(n),t),o=e.mul(e.frobenius(1,i),i);if(e.eq(o,e.negone))return null;const s=e.mul(n,t);let r;if(e.eq(i,e.negone))r=e.mul(s,[e.F.zero,e.F.one]);else{const u=e.pow(e.add(e.one,i),e.sqrt_e12);r=e.mul(u,s)}return e.geq(r,e.zero)?r:e.neg(r)}}function Rw(a){a.sqrt=function(){throw new Error("Sqrt alg 8 not implemented")}}function hi(a,t,e,n,i){a[t]=a[t]+a[e]>>>0,a[i]=(a[i]^a[t])>>>0,a[i]=(a[i]<<16|a[i]>>>16&65535)>>>0,a[n]=a[n]+a[i]>>>0,a[e]=(a[e]^a[n])>>>0,a[e]=(a[e]<<12|a[e]>>>20&4095)>>>0,a[t]=a[t]+a[e]>>>0,a[i]=(a[i]^a[t])>>>0,a[i]=(a[i]<<8|a[i]>>>24&255)>>>0,a[n]=a[n]+a[i]>>>0,a[e]=(a[e]^a[n])>>>0,a[e]=(a[e]<<7|a[e]>>>25&127)>>>0}function Hw(a){hi(a,0,4,8,12),hi(a,1,5,9,13),hi(a,2,6,10,14),hi(a,3,7,11,15),hi(a,0,5,10,15),hi(a,1,6,11,12),hi(a,2,7,8,13),hi(a,3,4,9,14)}let Qi=class{constructor(t){t=t||[0,0,0,0,0,0,0,0],this.state=[1634760805,857760878,2036477234,1797285236,t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],0,0,0,0],this.idx=16,this.buff=new Array(16)}nextU32(){return this.idx==16&&this.update(),this.buff[this.idx++]}nextU64(){return Tl(Ah(this.nextU32(),4294967296),this.nextU32())}nextBool(){return(this.nextU32()&1)==1}update(){for(let t=0;t<16;t++)this.buff[t]=this.state[t];for(let t=0;t<10;t++)Hw(this.buff);for(let t=0;t<16;t++)this.buff[t]=this.buff[t]+this.state[t]>>>0;this.idx=0,this.state[12]=this.state[12]+1>>>0,this.state[12]==0&&(this.state[13]=this.state[13]+1>>>0,this.state[13]==0&&(this.state[14]=this.state[14]+1>>>0,this.state[14]==0&&(this.state[15]=this.state[15]+1>>>0)))}};function vh(a){let t=new Uint8Array(a);if(typeof globalThis.crypto<"u")globalThis.crypto.getRandomValues(t);else for(let e=0;e<a;e++)t[e]=Math.random()*4294967296>>>0;return t}function Qw(){const a=vh(32),t=new Uint32Array(a.buffer),e=[];for(let n=0;n<8;n++)e.push(t[n]);return e}let is=null;function Ql(){return is||(is=new Qi(Qw()),is)}class Kw{constructor(t,e,n){this.F=e,this.G=t,this.opMulGF=n;let i=e.sqrt_t||e.t,o=e.sqrt_s||e.s,s=e.one;for(;e.eq(e.pow(s,e.half),e.one);)s=e.add(s,e.one);this.w=new Array(o+1),this.wi=new Array(o+1),this.w[o]=this.F.pow(s,i),this.wi[o]=this.F.inv(this.w[o]);let r=o-1;for(;r>=0;)this.w[r]=this.F.square(this.w[r+1]),this.wi[r]=this.F.square(this.wi[r+1]),r--;this.roots=[],this._setRoots(Math.min(o,15))}_setRoots(t){for(let e=t;e>=0&&!this.roots[e];e--){let n=this.F.one;const i=1<<e,o=new Array(i);for(let s=0;s<i;s++)o[s]=n,n=this.F.mul(n,this.w[e]);this.roots[e]=o}}fft(t){if(t.length<=1)return t;const e=Dd(t.length-1)+1;this._setRoots(e);const n=1<<e;if(t.length!=n)throw new Error("Size must be multiple of 2");return Cs(this,t,e,0,1)}ifft(t){if(t.length<=1)return t;const e=Dd(t.length-1)+1;this._setRoots(e);const n=1<<e;if(t.length!=n)throw new Error("Size must be multiple of 2");const i=Cs(this,t,e,0,1),o=this.F.inv(this.F.mulScalar(this.F.one,n)),s=new Array(n);for(let r=0;r<n;r++)s[r]=this.opMulGF(i[(n-r)%n],o);return s}}function Dd(a){return((a&4294901760)!==0?(a&=4294901760,16):0)|((a&4278255360)!==0?(a&=4278255360,8):0)|((a&4042322160)!==0?(a&=4042322160,4):0)|((a&3435973836)!==0?(a&=3435973836,2):0)|(a&2863311530)!==0}function Cs(a,t,e,n,i){const o=1<<e;if(o==1)return[t[n]];if(o==2)return[a.G.add(t[n],t[n+i]),a.G.sub(t[n],t[n+i])];const s=o>>1,r=Cs(a,t,e-1,n,i*2),u=Cs(a,t,e-1,n+i,i*2),l=new Array(o);for(let c=0;c<s;c++)l[c]=a.G.add(r[c],a.opMulGF(u[c],a.roots[e][c])),l[c+s]=a.G.sub(r[c],a.opMulGF(u[c],a.roots[e][c]));return l}class Kl{constructor(t){this.type="F1",this.one=BigInt(1),this.zero=BigInt(0),this.p=BigInt(t),this.m=1,this.negone=this.p-this.one,this.two=BigInt(2),this.half=this.p>>this.one,this.bitLength=Ba(this.p),this.mask=(this.one<<BigInt(this.bitLength))-this.one,this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=this.n64*2,this.n8=this.n64*8,this.R=this.e(this.one<<BigInt(this.n64*64)),this.Ri=this.inv(this.R);const e=this.negone>>this.one;this.nqr=this.two;let n=this.pow(this.nqr,e);for(;!this.eq(n,this.negone);)this.nqr=this.nqr+this.one,n=this.pow(this.nqr,e);for(this.s=0,this.t=this.negone;(this.t&this.one)==this.zero;)this.s=this.s+1,this.t=this.t>>this.one;this.nqr_to_t=this.pow(this.nqr,this.t),Uw(this),this.FFT=new Kw(this,this,this.mul.bind(this)),this.fft=this.FFT.fft.bind(this.FFT),this.ifft=this.FFT.ifft.bind(this.FFT),this.w=this.FFT.w,this.wi=this.FFT.wi,this.shift=this.square(this.nqr),this.k=this.exp(this.nqr,2**this.s)}e(t,e){let n;if(e?e==16&&(n=BigInt("0x"+t)):n=BigInt(t),n<0){let i=-n;return i>=this.p&&(i=i%this.p),this.p-i}else return n>=this.p?n%this.p:n}add(t,e){const n=t+e;return n>=this.p?n-this.p:n}sub(t,e){return t>=e?t-e:this.p-e+t}neg(t){return t&&this.p-t}mul(t,e){return t*e%this.p}mulScalar(t,e){return t*this.e(e)%this.p}square(t){return t*t%this.p}eq(t,e){return t==e}neq(t,e){return t!=e}lt(t,e){const n=t>this.half?t-this.p:t,i=e>this.half?e-this.p:e;return n<i}gt(t,e){const n=t>this.half?t-this.p:t,i=e>this.half?e-this.p:e;return n>i}leq(t,e){const n=t>this.half?t-this.p:t,i=e>this.half?e-this.p:e;return n<=i}geq(t,e){const n=t>this.half?t-this.p:t,i=e>this.half?e-this.p:e;return n>=i}div(t,e){return this.mul(t,this.inv(e))}idiv(t,e){if(!e)throw new Error("Division by zero");return t/e}inv(t){if(!t)throw new Error("Division by zero");let e=this.zero,n=this.p,i=this.one,o=t%this.p;for(;o;){let s=n/o;[e,i]=[i,e-s*i],[n,o]=[o,n-s*o]}return e<this.zero&&(e+=this.p),e}mod(t,e){return t%e}pow(t,e){return Od(this,t,e)}exp(t,e){return Od(this,t,e)}band(t,e){const n=t&e&this.mask;return n>=this.p?n-this.p:n}bor(t,e){const n=(t|e)&this.mask;return n>=this.p?n-this.p:n}bxor(t,e){const n=(t^e)&this.mask;return n>=this.p?n-this.p:n}bnot(t){const e=t^this.mask;return e>=this.p?e-this.p:e}shl(t,e){if(Number(e)<this.bitLength){const n=t<<e&this.mask;return n>=this.p?n-this.p:n}else{const n=this.p-e;return Number(n)<this.bitLength?t>>n:this.zero}}shr(t,e){if(Number(e)<this.bitLength)return t>>e;{const n=this.p-e;if(Number(n)<this.bitLength){const i=t<<n&this.mask;return i>=this.p?i-this.p:i}else return 0}}land(t,e){return t&&e?this.one:this.zero}lor(t,e){return t||e?this.one:this.zero}lnot(t){return t?this.zero:this.one}sqrt_old(t){if(t==this.zero)return this.zero;if(this.pow(t,this.negone>>this.one)!=this.one)return null;let n=this.s,i=this.nqr_to_t,o=this.pow(t,this.t),s=this.pow(t,this.add(this.t,this.one)>>this.one);for(;o!=this.one;){let r=this.square(o),u=1;for(;r!=this.one;)u++,r=this.square(r);let l=i;for(let c=0;c<n-u-1;c++)l=this.square(l);n=u,i=this.square(l),o=this.mul(o,i),s=this.mul(s,l)}return s>this.p>>this.one&&(s=this.neg(s)),s}normalize(t,e){if(t=BigInt(t,e),t<0){let n=-t;return n>=this.p&&(n=n%this.p),this.p-n}else return t>=this.p?t%this.p:t}random(){const t=this.bitLength*2/8;let e=this.zero;for(let n=0;n<t;n++)e=(e<<BigInt(8))+BigInt(vh(1)[0]);return e%this.p}toString(t,e){e=e||10;let n;return t>this.half&&e==10?n="-"+(this.p-t).toString(e):n=t.toString(e),n}isZero(t){return t==this.zero}fromRng(t){let e;do{e=this.zero;for(let n=0;n<this.n64;n++)e+=t.nextU64()<<BigInt(64*n);e&=this.mask}while(e>=this.p);return e=e*this.Ri%this.p,e}fft(t){return this.FFT.fft(t)}ifft(t){return this.FFT.ifft(t)}toRprLE(t,e,n){La(t,e,n,this.n64*8)}toRprBE(t,e,n){Eh(t,e,n,this.n64*8)}toRprBEM(t,e,n){return this.toRprBE(t,e,this.mul(this.R,n))}toRprLEM(t,e,n){return this.toRprLE(t,e,this.mul(this.R,n))}fromRprLE(t,e){return wa(t,e,this.n8)}fromRprBE(t,e){return Ch(t,e,this.n8)}fromRprLEM(t,e){return this.mul(this.fromRprLE(t,e),this.Ri)}fromRprBEM(t,e){return this.mul(this.fromRprBE(t,e),this.Ri)}toObject(t){return t}}var Ei={};Ei.bigInt2BytesLE=function(t,e){const n=Array(e);let i=BigInt(t);for(let o=0;o<e;o++)n[o]=Number(i&0xFFn),i=i>>8n;return n};Ei.bigInt2U32LE=function(t,e){const n=Array(e);let i=BigInt(t);for(let o=0;o<e;o++)n[o]=Number(i&0xFFFFFFFFn),i=i>>32n;return n};Ei.isOcamNum=function(a){return!(!Array.isArray(a)||a.length!=3||typeof a[0]!="number"||typeof a[1]!="number"||!Array.isArray(a[2]))};var Nw=function(t,e,n){const i=n||"int";if(t.modules[i])return i;t.modules[i]={};const o=e*2,s=e*8;function r(){const R=t.addFunction(i+"_copy");R.addParam("px","i32"),R.addParam("pr","i32");const b=R.getCodeBuilder();for(let w=0;w<e;w++)R.addCode(b.i64_store(b.getLocal("pr"),w*8,b.i64_load(b.getLocal("px"),w*8)))}function u(){const R=t.addFunction(i+"_zero");R.addParam("pr","i32");const b=R.getCodeBuilder();for(let w=0;w<e;w++)R.addCode(b.i64_store(b.getLocal("pr"),w*8,b.i64_const(0)))}function l(){const R=t.addFunction(i+"_one");R.addParam("pr","i32");const b=R.getCodeBuilder();R.addCode(b.i64_store(b.getLocal("pr"),0,b.i64_const(1)));for(let w=1;w<e;w++)R.addCode(b.i64_store(b.getLocal("pr"),w*8,b.i64_const(0)))}function c(){const R=t.addFunction(i+"_isZero");R.addParam("px","i32"),R.setReturnType("i32");const b=R.getCodeBuilder();function w(Z){return Z==0?b.ret(b.i64_eqz(b.i64_load(b.getLocal("px")))):b.if(b.i64_eqz(b.i64_load(b.getLocal("px"),Z*8)),w(Z-1),b.ret(b.i32_const(0)))}R.addCode(w(e-1)),R.addCode(b.ret(b.i32_const(0)))}function f(){const R=t.addFunction(i+"_eq");R.addParam("px","i32"),R.addParam("py","i32"),R.setReturnType("i32");const b=R.getCodeBuilder();function w(Z){return Z==0?b.ret(b.i64_eq(b.i64_load(b.getLocal("px")),b.i64_load(b.getLocal("py")))):b.if(b.i64_eq(b.i64_load(b.getLocal("px"),Z*8),b.i64_load(b.getLocal("py"),Z*8)),w(Z-1),b.ret(b.i32_const(0)))}R.addCode(w(e-1)),R.addCode(b.ret(b.i32_const(0)))}function g(){const R=t.addFunction(i+"_gte");R.addParam("px","i32"),R.addParam("py","i32"),R.setReturnType("i32");const b=R.getCodeBuilder();function w(Z){return Z==0?b.ret(b.i64_ge_u(b.i64_load(b.getLocal("px")),b.i64_load(b.getLocal("py")))):b.if(b.i64_lt_u(b.i64_load(b.getLocal("px"),Z*8),b.i64_load(b.getLocal("py"),Z*8)),b.ret(b.i32_const(0)),b.if(b.i64_gt_u(b.i64_load(b.getLocal("px"),Z*8),b.i64_load(b.getLocal("py"),Z*8)),b.ret(b.i32_const(1)),w(Z-1)))}R.addCode(w(e-1)),R.addCode(b.ret(b.i32_const(0)))}function L(){const R=t.addFunction(i+"_add");R.addParam("x","i32"),R.addParam("y","i32"),R.addParam("r","i32"),R.setReturnType("i32"),R.addLocal("c","i64");const b=R.getCodeBuilder();R.addCode(b.setLocal("c",b.i64_add(b.i64_load32_u(b.getLocal("x")),b.i64_load32_u(b.getLocal("y"))))),R.addCode(b.i64_store32(b.getLocal("r"),b.getLocal("c")));for(let w=1;w<o;w++)R.addCode(b.setLocal("c",b.i64_add(b.i64_add(b.i64_load32_u(b.getLocal("x"),4*w),b.i64_load32_u(b.getLocal("y"),4*w)),b.i64_shr_u(b.getLocal("c"),b.i64_const(32))))),R.addCode(b.i64_store32(b.getLocal("r"),w*4,b.getLocal("c")));R.addCode(b.i32_wrap_i64(b.i64_shr_u(b.getLocal("c"),b.i64_const(32))))}function S(){const R=t.addFunction(i+"_sub");R.addParam("x","i32"),R.addParam("y","i32"),R.addParam("r","i32"),R.setReturnType("i32"),R.addLocal("c","i64");const b=R.getCodeBuilder();R.addCode(b.setLocal("c",b.i64_sub(b.i64_load32_u(b.getLocal("x")),b.i64_load32_u(b.getLocal("y"))))),R.addCode(b.i64_store32(b.getLocal("r"),b.i64_and(b.getLocal("c"),b.i64_const("0xFFFFFFFF"))));for(let w=1;w<o;w++)R.addCode(b.setLocal("c",b.i64_add(b.i64_sub(b.i64_load32_u(b.getLocal("x"),4*w),b.i64_load32_u(b.getLocal("y"),4*w)),b.i64_shr_s(b.getLocal("c"),b.i64_const(32))))),R.addCode(b.i64_store32(b.getLocal("r"),w*4,b.i64_and(b.getLocal("c"),b.i64_const("0xFFFFFFFF"))));R.addCode(b.i32_wrap_i64(b.i64_shr_s(b.getLocal("c"),b.i64_const(32))))}function k(){const R=t.addFunction(i+"_mul");R.addParam("x","i32"),R.addParam("y","i32"),R.addParam("r","i32"),R.addLocal("c0","i64"),R.addLocal("c1","i64");for(let I=0;I<o;I++)R.addLocal("x"+I,"i64"),R.addLocal("y"+I,"i64");const b=R.getCodeBuilder(),w=[],Z=[];function P(I,y){let _,T;return w[I]?_=b.getLocal("x"+I):(_=b.teeLocal("x"+I,b.i64_load32_u(b.getLocal("x"),I*4)),w[I]=!0),Z[y]?T=b.getLocal("y"+y):(T=b.teeLocal("y"+y,b.i64_load32_u(b.getLocal("y"),y*4)),Z[y]=!0),b.i64_mul(_,T)}let V="c0",nt="c1";for(let I=0;I<o*2-1;I++){for(let y=Math.max(0,I-o+1);y<=I&&y<o;y++){const _=I-y;R.addCode(b.setLocal(V,b.i64_add(b.i64_and(b.getLocal(V),b.i64_const(4294967295)),P(y,_)))),R.addCode(b.setLocal(nt,b.i64_add(b.getLocal(nt),b.i64_shr_u(b.getLocal(V),b.i64_const(32)))))}R.addCode(b.i64_store32(b.getLocal("r"),I*4,b.getLocal(V))),[V,nt]=[nt,V],R.addCode(b.setLocal(nt,b.i64_shr_u(b.getLocal(V),b.i64_const(32))))}R.addCode(b.i64_store32(b.getLocal("r"),o*4*2-4,b.getLocal(V)))}function E(){const R=t.addFunction(i+"_square");R.addParam("x","i32"),R.addParam("r","i32"),R.addLocal("c0","i64"),R.addLocal("c1","i64"),R.addLocal("c0_old","i64"),R.addLocal("c1_old","i64");for(let y=0;y<o;y++)R.addLocal("x"+y,"i64");const b=R.getCodeBuilder(),w=[];function Z(y,_){let T,B;return w[y]?T=b.getLocal("x"+y):(T=b.teeLocal("x"+y,b.i64_load32_u(b.getLocal("x"),y*4)),w[y]=!0),w[_]?B=b.getLocal("x"+_):(B=b.teeLocal("x"+_,b.i64_load32_u(b.getLocal("x"),_*4)),w[_]=!0),b.i64_mul(T,B)}let P="c0",V="c1",nt="c0_old",I="c1_old";for(let y=0;y<o*2-1;y++){R.addCode(b.setLocal(P,b.i64_const(0)),b.setLocal(V,b.i64_const(0)));for(let _=Math.max(0,y-o+1);_<y+1>>1&&_<o;_++){const T=y-_;R.addCode(b.setLocal(P,b.i64_add(b.i64_and(b.getLocal(P),b.i64_const(4294967295)),Z(_,T)))),R.addCode(b.setLocal(V,b.i64_add(b.getLocal(V),b.i64_shr_u(b.getLocal(P),b.i64_const(32)))))}R.addCode(b.setLocal(P,b.i64_shl(b.i64_and(b.getLocal(P),b.i64_const(4294967295)),b.i64_const(1)))),R.addCode(b.setLocal(V,b.i64_add(b.i64_shl(b.getLocal(V),b.i64_const(1)),b.i64_shr_u(b.getLocal(P),b.i64_const(32))))),y%2==0&&(R.addCode(b.setLocal(P,b.i64_add(b.i64_and(b.getLocal(P),b.i64_const(4294967295)),Z(y>>1,y>>1)))),R.addCode(b.setLocal(V,b.i64_add(b.getLocal(V),b.i64_shr_u(b.getLocal(P),b.i64_const(32)))))),y>0&&(R.addCode(b.setLocal(P,b.i64_add(b.i64_and(b.getLocal(P),b.i64_const(4294967295)),b.i64_and(b.getLocal(nt),b.i64_const(4294967295))))),R.addCode(b.setLocal(V,b.i64_add(b.i64_add(b.getLocal(V),b.i64_shr_u(b.getLocal(P),b.i64_const(32))),b.getLocal(I))))),R.addCode(b.i64_store32(b.getLocal("r"),y*4,b.getLocal(P))),R.addCode(b.setLocal(nt,b.getLocal(V)),b.setLocal(I,b.i64_shr_u(b.getLocal(nt),b.i64_const(32))))}R.addCode(b.i64_store32(b.getLocal("r"),o*4*2-4,b.getLocal(nt)))}function G(){const R=t.addFunction(i+"_squareOld");R.addParam("x","i32"),R.addParam("r","i32");const b=R.getCodeBuilder();R.addCode(b.call(i+"_mul",b.getLocal("x"),b.getLocal("x"),b.getLocal("r")))}function C(){const R=t.addFunction(i+"__mul1");R.addParam("px","i32"),R.addParam("y","i64"),R.addParam("pr","i32"),R.addLocal("c","i64");const b=R.getCodeBuilder();R.addCode(b.setLocal("c",b.i64_mul(b.i64_load32_u(b.getLocal("px"),0,0),b.getLocal("y")))),R.addCode(b.i64_store32(b.getLocal("pr"),0,0,b.getLocal("c")));for(let w=1;w<o;w++)R.addCode(b.setLocal("c",b.i64_add(b.i64_mul(b.i64_load32_u(b.getLocal("px"),4*w,0),b.getLocal("y")),b.i64_shr_u(b.getLocal("c"),b.i64_const(32))))),R.addCode(b.i64_store32(b.getLocal("pr"),w*4,0,b.getLocal("c")))}function N(){const R=t.addFunction(i+"__add1");R.addParam("x","i32"),R.addParam("y","i64"),R.addLocal("c","i64"),R.addLocal("px","i32");const b=R.getCodeBuilder();R.addCode(b.setLocal("px",b.getLocal("x"))),R.addCode(b.setLocal("c",b.i64_add(b.i64_load32_u(b.getLocal("px"),0,0),b.getLocal("y")))),R.addCode(b.i64_store32(b.getLocal("px"),0,0,b.getLocal("c"))),R.addCode(b.setLocal("c",b.i64_shr_u(b.getLocal("c"),b.i64_const(32)))),R.addCode(b.block(b.loop(b.br_if(1,b.i64_eqz(b.getLocal("c"))),b.setLocal("px",b.i32_add(b.getLocal("px"),b.i32_const(4))),b.setLocal("c",b.i64_add(b.i64_load32_u(b.getLocal("px"),0,0),b.getLocal("c"))),b.i64_store32(b.getLocal("px"),0,0,b.getLocal("c")),b.setLocal("c",b.i64_shr_u(b.getLocal("c"),b.i64_const(32))),b.br(0))))}function J(){C(),N();const R=t.addFunction(i+"_div");R.addParam("x","i32"),R.addParam("y","i32"),R.addParam("c","i32"),R.addParam("r","i32"),R.addLocal("rr","i32"),R.addLocal("cc","i32"),R.addLocal("eX","i32"),R.addLocal("eY","i32"),R.addLocal("sy","i64"),R.addLocal("sx","i64"),R.addLocal("ec","i32");const b=R.getCodeBuilder(),w=b.i32_const(t.alloc(s)),Z=b.i32_const(t.alloc(s)),P=b.i32_const(t.alloc(s)),V=b.getLocal("cc"),nt=b.getLocal("rr"),I=t.alloc(s*2),y=b.i32_const(I),_=b.i32_const(I+s);R.addCode(b.if(b.getLocal("c"),b.setLocal("cc",b.getLocal("c")),b.setLocal("cc",Z))),R.addCode(b.if(b.getLocal("r"),b.setLocal("rr",b.getLocal("r")),b.setLocal("rr",P))),R.addCode(b.call(i+"_copy",b.getLocal("x"),nt)),R.addCode(b.call(i+"_copy",b.getLocal("y"),w)),R.addCode(b.call(i+"_zero",V)),R.addCode(b.call(i+"_zero",y)),R.addCode(b.setLocal("eX",b.i32_const(s-1))),R.addCode(b.setLocal("eY",b.i32_const(s-1))),R.addCode(b.block(b.loop(b.br_if(1,b.i32_or(b.i32_load8_u(b.i32_add(w,b.getLocal("eY")),0,0),b.i32_eq(b.getLocal("eY"),b.i32_const(3)))),b.setLocal("eY",b.i32_sub(b.getLocal("eY"),b.i32_const(1))),b.br(0)))),R.addCode(b.setLocal("sy",b.i64_add(b.i64_load32_u(b.i32_sub(b.i32_add(w,b.getLocal("eY")),b.i32_const(3)),0,0),b.i64_const(1)))),R.addCode(b.if(b.i64_eq(b.getLocal("sy"),b.i64_const(1)),b.drop(b.i64_div_u(b.i64_const(0),b.i64_const(0))))),R.addCode(b.block(b.loop(b.block(b.loop(b.br_if(1,b.i32_or(b.i32_load8_u(b.i32_add(nt,b.getLocal("eX")),0,0),b.i32_eq(b.getLocal("eX"),b.i32_const(7)))),b.setLocal("eX",b.i32_sub(b.getLocal("eX"),b.i32_const(1))),b.br(0))),b.setLocal("sx",b.i64_load(b.i32_sub(b.i32_add(nt,b.getLocal("eX")),b.i32_const(7)),0,0)),b.setLocal("sx",b.i64_div_u(b.getLocal("sx"),b.getLocal("sy"))),b.setLocal("ec",b.i32_sub(b.i32_sub(b.getLocal("eX"),b.getLocal("eY")),b.i32_const(4))),b.block(b.loop(b.br_if(1,b.i32_and(b.i64_eqz(b.i64_and(b.getLocal("sx"),b.i64_const("0xFFFFFFFF00000000"))),b.i32_ge_s(b.getLocal("ec"),b.i32_const(0)))),b.setLocal("sx",b.i64_shr_u(b.getLocal("sx"),b.i64_const(8))),b.setLocal("ec",b.i32_add(b.getLocal("ec"),b.i32_const(1))),b.br(0))),b.if(b.i64_eqz(b.getLocal("sx")),[...b.br_if(2,b.i32_eqz(b.call(i+"_gte",nt,w))),...b.setLocal("sx",b.i64_const(1)),...b.setLocal("ec",b.i32_const(0))]),b.call(i+"__mul1",w,b.getLocal("sx"),_),b.drop(b.call(i+"_sub",nt,b.i32_sub(_,b.getLocal("ec")),nt)),b.call(i+"__add1",b.i32_add(V,b.getLocal("ec")),b.getLocal("sx")),b.br(0))))}function j(){const R=t.addFunction(i+"_inverseMod");R.addParam("px","i32"),R.addParam("pm","i32"),R.addParam("pr","i32"),R.addLocal("t","i32"),R.addLocal("newt","i32"),R.addLocal("r","i32"),R.addLocal("qq","i32"),R.addLocal("qr","i32"),R.addLocal("newr","i32"),R.addLocal("swp","i32"),R.addLocal("x","i32"),R.addLocal("signt","i32"),R.addLocal("signnewt","i32"),R.addLocal("signx","i32");const b=R.getCodeBuilder(),w=b.i32_const(t.alloc(s)),Z=b.i32_const(t.alloc(s)),P=b.i32_const(t.alloc(s)),V=b.i32_const(t.alloc(s)),nt=b.i32_const(t.alloc(s)),I=b.i32_const(t.alloc(s)),y=b.i32_const(t.alloc(s*2)),_=b.i32_const(t.alloc(s));R.addCode(b.setLocal("t",w),b.call(i+"_zero",w),b.setLocal("signt",b.i32_const(0))),R.addCode(b.setLocal("r",Z),b.call(i+"_copy",b.getLocal("pm"),Z)),R.addCode(b.setLocal("newt",P),b.call(i+"_one",P),b.setLocal("signnewt",b.i32_const(0))),R.addCode(b.setLocal("newr",V),b.call(i+"_copy",b.getLocal("px"),V)),R.addCode(b.setLocal("qq",nt)),R.addCode(b.setLocal("qr",I)),R.addCode(b.setLocal("x",_)),R.addCode(b.block(b.loop(b.br_if(1,b.call(i+"_isZero",b.getLocal("newr"))),b.call(i+"_div",b.getLocal("r"),b.getLocal("newr"),b.getLocal("qq"),b.getLocal("qr")),b.call(i+"_mul",b.getLocal("qq"),b.getLocal("newt"),y),b.if(b.getLocal("signt"),b.if(b.getLocal("signnewt"),b.if(b.call(i+"_gte",y,b.getLocal("t")),[...b.drop(b.call(i+"_sub",y,b.getLocal("t"),b.getLocal("x"))),...b.setLocal("signx",b.i32_const(0))],[...b.drop(b.call(i+"_sub",b.getLocal("t"),y,b.getLocal("x"))),...b.setLocal("signx",b.i32_const(1))]),[...b.drop(b.call(i+"_add",y,b.getLocal("t"),b.getLocal("x"))),...b.setLocal("signx",b.i32_const(1))]),b.if(b.getLocal("signnewt"),[...b.drop(b.call(i+"_add",y,b.getLocal("t"),b.getLocal("x"))),...b.setLocal("signx",b.i32_const(0))],b.if(b.call(i+"_gte",b.getLocal("t"),y),[...b.drop(b.call(i+"_sub",b.getLocal("t"),y,b.getLocal("x"))),...b.setLocal("signx",b.i32_const(0))],[...b.drop(b.call(i+"_sub",y,b.getLocal("t"),b.getLocal("x"))),...b.setLocal("signx",b.i32_const(1))]))),b.setLocal("swp",b.getLocal("t")),b.setLocal("t",b.getLocal("newt")),b.setLocal("newt",b.getLocal("x")),b.setLocal("x",b.getLocal("swp")),b.setLocal("signt",b.getLocal("signnewt")),b.setLocal("signnewt",b.getLocal("signx")),b.setLocal("swp",b.getLocal("r")),b.setLocal("r",b.getLocal("newr")),b.setLocal("newr",b.getLocal("qr")),b.setLocal("qr",b.getLocal("swp")),b.br(0)))),R.addCode(b.if(b.getLocal("signt"),b.drop(b.call(i+"_sub",b.getLocal("pm"),b.getLocal("t"),b.getLocal("pr"))),b.call(i+"_copy",b.getLocal("t"),b.getLocal("pr"))))}return r(),u(),c(),l(),f(),g(),L(),S(),k(),E(),G(),J(),j(),t.exportFunction(i+"_copy"),t.exportFunction(i+"_zero"),t.exportFunction(i+"_one"),t.exportFunction(i+"_isZero"),t.exportFunction(i+"_eq"),t.exportFunction(i+"_gte"),t.exportFunction(i+"_add"),t.exportFunction(i+"_sub"),t.exportFunction(i+"_mul"),t.exportFunction(i+"_square"),t.exportFunction(i+"_squareOld"),t.exportFunction(i+"_div"),t.exportFunction(i+"_inverseMod"),i},Nl=function(t,e,n,i,o,s,r){const u=t.addFunction(e);u.addParam("base","i32"),u.addParam("scalar","i32"),u.addParam("scalarLength","i32"),u.addParam("r","i32"),u.addLocal("i","i32"),u.addLocal("b","i32");const l=u.getCodeBuilder(),c=l.i32_const(t.alloc(n));u.addCode(l.if(l.i32_eqz(l.getLocal("scalarLength")),[...l.call(r,l.getLocal("r")),...l.ret([])])),u.addCode(l.call(s,l.getLocal("base"),c)),u.addCode(l.call(r,l.getLocal("r"))),u.addCode(l.setLocal("i",l.getLocal("scalarLength"))),u.addCode(l.block(l.loop(l.setLocal("i",l.i32_sub(l.getLocal("i"),l.i32_const(1))),l.setLocal("b",l.i32_load8_u(l.i32_add(l.getLocal("scalar"),l.getLocal("i")))),...f(),l.br_if(1,l.i32_eqz(l.getLocal("i"))),l.br(0))));function f(){const g=[];for(let L=0;L<8;L++)g.push(...l.call(o,l.getLocal("r"),l.getLocal("r")),...l.if(l.i32_ge_u(l.getLocal("b"),l.i32_const(128>>L)),[...l.setLocal("b",l.i32_sub(l.getLocal("b"),l.i32_const(128>>L))),...l.call(i,l.getLocal("r"),c,l.getLocal("r"))]));return g}},zl=zw;function zw(a,t){const e=a.modules[t].n64*8,n=a.addFunction(t+"_batchInverse");n.addParam("pIn","i32"),n.addParam("inStep","i32"),n.addParam("n","i32"),n.addParam("pOut","i32"),n.addParam("outStep","i32"),n.addLocal("itAux","i32"),n.addLocal("itIn","i32"),n.addLocal("itOut","i32"),n.addLocal("i","i32");const i=n.getCodeBuilder(),o=i.i32_const(a.alloc(e));n.addCode(i.setLocal("itAux",i.i32_load(i.i32_const(0))),i.i32_store(i.i32_const(0),i.i32_add(i.getLocal("itAux"),i.i32_mul(i.i32_add(i.getLocal("n"),i.i32_const(1)),i.i32_const(e))))),n.addCode(i.call(t+"_one",i.getLocal("itAux")),i.setLocal("itIn",i.getLocal("pIn")),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.if(i.call(t+"_isZero",i.getLocal("itIn")),i.call(t+"_copy",i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),i.getLocal("itAux")),i.call(t+"_mul",i.getLocal("itIn"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),i.getLocal("itAux"))),i.setLocal("itIn",i.i32_add(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))),i.setLocal("itIn",i.i32_sub(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itAux",i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("itOut",i.i32_add(i.getLocal("pOut"),i.i32_mul(i.i32_sub(i.getLocal("n"),i.i32_const(1)),i.getLocal("outStep")))),i.call(t+"_inverse",i.getLocal("itAux"),i.getLocal("itAux")),i.block(i.loop(i.br_if(1,i.i32_eqz(i.getLocal("i"))),i.if(i.call(t+"_isZero",i.getLocal("itIn")),[...i.call(t+"_copy",i.getLocal("itAux"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),...i.call(t+"_zero",i.getLocal("itOut"))],[...i.call(t+"_copy",i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),o),...i.call(t+"_mul",i.getLocal("itAux"),i.getLocal("itIn"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),...i.call(t+"_mul",i.getLocal("itAux"),o,i.getLocal("itOut"))]),i.setLocal("itIn",i.i32_sub(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itOut",i.i32_sub(i.getLocal("itOut"),i.getLocal("outStep"))),i.setLocal("itAux",i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_sub(i.getLocal("i"),i.i32_const(1))),i.br(0)))),n.addCode(i.i32_store(i.i32_const(0),i.getLocal("itAux")))}var Fh=Jw;function Jw(a,t,e,n,i,o){typeof o>"u"&&(n<i?o=!0:o=!1);const s=a.addFunction(t);s.addParam("pIn","i32"),s.addParam("n","i32"),s.addParam("pOut","i32"),s.addLocal("i","i32"),s.addLocal("itIn","i32"),s.addLocal("itOut","i32");const r=s.getCodeBuilder();o?s.addCode(r.setLocal("itIn",r.i32_add(r.getLocal("pIn"),r.i32_mul(r.i32_sub(r.getLocal("n"),r.i32_const(1)),r.i32_const(n)))),r.setLocal("itOut",r.i32_add(r.getLocal("pOut"),r.i32_mul(r.i32_sub(r.getLocal("n"),r.i32_const(1)),r.i32_const(i)))),r.setLocal("i",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("n"))),r.call(e,r.getLocal("itIn"),r.getLocal("itOut")),r.setLocal("itIn",r.i32_sub(r.getLocal("itIn"),r.i32_const(n))),r.setLocal("itOut",r.i32_sub(r.getLocal("itOut"),r.i32_const(i))),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0)))):s.addCode(r.setLocal("itIn",r.getLocal("pIn")),r.setLocal("itOut",r.getLocal("pOut")),r.setLocal("i",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("n"))),r.call(e,r.getLocal("itIn"),r.getLocal("itOut")),r.setLocal("itIn",r.i32_add(r.getLocal("itIn"),r.i32_const(n))),r.setLocal("itOut",r.i32_add(r.getLocal("itOut"),r.i32_const(i))),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0))))}var Yw=jw;function jw(a,t,e,n,i,o){typeof o>"u"&&(n<i?o=!0:o=!1);const s=a.addFunction(t);s.addParam("pIn1","i32"),s.addParam("pIn2","i32"),s.addParam("n","i32"),s.addParam("pOut","i32"),s.addLocal("i","i32"),s.addLocal("itIn1","i32"),s.addLocal("itIn2","i32"),s.addLocal("itOut","i32");const r=s.getCodeBuilder();o?s.addCode(r.setLocal("itIn1",r.i32_add(r.getLocal("pIn1"),r.i32_mul(r.i32_sub(r.getLocal("n"),r.i32_const(1)),r.i32_const(n)))),r.setLocal("itIn2",r.i32_add(r.getLocal("pIn2"),r.i32_mul(r.i32_sub(r.getLocal("n"),r.i32_const(1)),r.i32_const(n)))),r.setLocal("itOut",r.i32_add(r.getLocal("pOut"),r.i32_mul(r.i32_sub(r.getLocal("n"),r.i32_const(1)),r.i32_const(i)))),r.setLocal("i",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("n"))),r.call(e,r.getLocal("itIn1"),r.getLocal("itIn2"),r.getLocal("itOut")),r.setLocal("itIn1",r.i32_sub(r.getLocal("itIn1"),r.i32_const(n))),r.setLocal("itIn2",r.i32_sub(r.getLocal("itIn2"),r.i32_const(n))),r.setLocal("itOut",r.i32_sub(r.getLocal("itOut"),r.i32_const(i))),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0)))):s.addCode(r.setLocal("itIn1",r.getLocal("pIn1")),r.setLocal("itIn2",r.getLocal("pIn2")),r.setLocal("itOut",r.getLocal("pOut")),r.setLocal("i",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("n"))),r.call(e,r.getLocal("itIn1"),r.getLocal("itIn2"),r.getLocal("itOut")),r.setLocal("itIn1",r.i32_add(r.getLocal("itIn1"),r.i32_const(n))),r.setLocal("itIn2",r.i32_add(r.getLocal("itIn2"),r.i32_const(n))),r.setLocal("itOut",r.i32_add(r.getLocal("itOut"),r.i32_const(i))),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0))))}var gn={};function Sh(a,t){return a===t?0:a>t?1:-1}function Jl(a){return a*a}function _h(a){return a%2n!==0n}function Yl(a){return a%2n===0n}function Js(a){return a<0n}function Vw(a){return a>0n}function xh(a){return Js(a)?a.toString(2).length-1:a.toString(2).length}function Fa(a){return a<0n?-a:a}function go(a){return Fa(a)===1n}function Mh(a,t){for(var e=0n,n=1n,i=t,o=Fa(a),s,r,u;o!==0n;)s=i/o,r=e,u=i,e=n,i=o,n=r-s*n,o=u-s*o;if(!go(i))throw new Error(a.toString()+" and "+t.toString()+" are not co-prime");return Sh(e,0n)===-1&&(e=e+t),Js(a)?-e:e}function kh(a,t,e){if(e===0n)throw new Error("Cannot take modPow with modulus 0");var n=1n,i=a%e;for(Js(t)&&(t=t*-1n,i=Mh(i,e));Vw(t);){if(i===0n)return 0n;_h(t)&&(n=n*i%e),t=t/2n,i=Jl(i)%e}return n}function Ww(a,t){return a=a>=0n?a:-a,t=t>=0n?t:-t,a===t?0:a>t?1:-1}function qd(a,t){return t===0n?!1:go(t)?!0:Ww(t,2n)===0?Yl(a):a%t===0n}function Zw(a){var t=Fa(a);if(go(t))return!1;if(t===2n||t===3n||t===5n)return!0;if(Yl(t)||qd(t,3n)||qd(t,5n))return!1;if(t<49n)return!0}function Xw(a){return a-1n}function Td(a,t){for(var e=Xw(a),n=e,i=0,o,s,r;Yl(n);)n=n/2n,i++;t:for(s=0;s<t.length;s++)if(!(a<t[s])&&(r=kh(BigInt(t[s]),n,a),!(go(r)||r===e))){for(o=i-1;o!=0;o--){if(r=Jl(r)%a,go(r))return!1;if(r===e)continue t}return!1}return!0}function $w(a){var t=Zw(a);if(t!==void 0)return t;var e=Fa(a),n=xh(e);if(n<=64)return Td(e,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var i=Math.log(2)*Number(n),o=Math.ceil(i),s=[],r=0;r<o;r++)s.push(BigInt(r+2));return Td(e,s)}gn.bitLength=xh;gn.isOdd=_h;gn.isNegative=Js;gn.abs=Fa;gn.isUnit=go;gn.compare=Sh;gn.modInv=Mh;gn.modPow=kh;gn.isPrime=$w;gn.square=Jl;const tm=Nw,Wn=Ei,em=Nl,nm=zl,kr=Fh,Ur=Yw,{bitLength:im,modInv:Gr,modPow:Rd,isPrime:Hd,isOdd:om,square:am}=gn;var jl=function(t,e,n,i){const o=BigInt(e),s=Math.floor((im(o-1n)-1)/64)+1,r=s*2,u=s*8,l=n||"f1m";if(t.modules[l])return l;const c=tm(t,s,i),f=t.alloc(u,Wn.bigInt2BytesLE(o,u)),g=t.alloc(Wn.bigInt2BytesLE(am(1n<<BigInt(s*64))%o,u)),L=t.alloc(Wn.bigInt2BytesLE((1n<<BigInt(s*64))%o,u)),S=t.alloc(Wn.bigInt2BytesLE(0n,u)),k=o-1n,E=k>>1n,G=t.alloc(u,Wn.bigInt2BytesLE(E,u)),C=E+1n,N=t.alloc(u,Wn.bigInt2BytesLE(C,u));t.modules[l]={pq:f,pR2:g,n64:s,q:o,pOne:L,pZero:S,pePlusOne:N};function J(){const m=t.addFunction(l+"_one");m.addParam("pr","i32");const v=m.getCodeBuilder();m.addCode(v.call(c+"_copy",v.i32_const(L),v.getLocal("pr")))}function j(){const m=t.addFunction(l+"_add");m.addParam("x","i32"),m.addParam("y","i32"),m.addParam("r","i32");const v=m.getCodeBuilder();m.addCode(v.if(v.call(c+"_add",v.getLocal("x"),v.getLocal("y"),v.getLocal("r")),v.drop(v.call(c+"_sub",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))),v.if(v.call(c+"_gte",v.getLocal("r"),v.i32_const(f)),v.drop(v.call(c+"_sub",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))))))}function R(){const m=t.addFunction(l+"_sub");m.addParam("x","i32"),m.addParam("y","i32"),m.addParam("r","i32");const v=m.getCodeBuilder();m.addCode(v.if(v.call(c+"_sub",v.getLocal("x"),v.getLocal("y"),v.getLocal("r")),v.drop(v.call(c+"_add",v.getLocal("r"),v.i32_const(f),v.getLocal("r")))))}function b(){const m=t.addFunction(l+"_neg");m.addParam("x","i32"),m.addParam("r","i32");const v=m.getCodeBuilder();m.addCode(v.call(l+"_sub",v.i32_const(S),v.getLocal("x"),v.getLocal("r")))}function w(){const m=t.addFunction(l+"_isNegative");m.addParam("x","i32"),m.setReturnType("i32");const v=m.getCodeBuilder(),et=v.i32_const(t.alloc(u));m.addCode(v.call(l+"_fromMontgomery",v.getLocal("x"),et),v.call(c+"_gte",et,v.i32_const(N)))}function Z(){const m=t.addFunction(l+"_sign");m.addParam("x","i32"),m.setReturnType("i32");const v=m.getCodeBuilder(),et=v.i32_const(t.alloc(u));m.addCode(v.if(v.call(c+"_isZero",v.getLocal("x")),v.ret(v.i32_const(0))),v.call(l+"_fromMontgomery",v.getLocal("x"),et),v.if(v.call(c+"_gte",et,v.i32_const(N)),v.ret(v.i32_const(-1))),v.ret(v.i32_const(1)))}function P(){const m=t.alloc(r*r*8),v=t.addFunction(l+"_mReduct");v.addParam("t","i32"),v.addParam("r","i32"),v.addLocal("np32","i64"),v.addLocal("c","i64"),v.addLocal("m","i64");const et=v.getCodeBuilder(),ct=Number(0x100000000n-Gr(o,0x100000000n));v.addCode(et.setLocal("np32",et.i64_const(ct)));for(let dt=0;dt<r;dt++){v.addCode(et.setLocal("c",et.i64_const(0))),v.addCode(et.setLocal("m",et.i64_and(et.i64_mul(et.i64_load32_u(et.getLocal("t"),dt*4),et.getLocal("np32")),et.i64_const("0xFFFFFFFF"))));for(let ft=0;ft<r;ft++)v.addCode(et.setLocal("c",et.i64_add(et.i64_add(et.i64_load32_u(et.getLocal("t"),(dt+ft)*4),et.i64_shr_u(et.getLocal("c"),et.i64_const(32))),et.i64_mul(et.i64_load32_u(et.i32_const(f),ft*4),et.getLocal("m"))))),v.addCode(et.i64_store32(et.getLocal("t"),(dt+ft)*4,et.getLocal("c")));v.addCode(et.i64_store32(et.i32_const(m),dt*4,et.i64_shr_u(et.getLocal("c"),et.i64_const(32))))}v.addCode(et.call(l+"_add",et.i32_const(m),et.i32_add(et.getLocal("t"),et.i32_const(r*4)),et.getLocal("r")))}function V(){const m=t.addFunction(l+"_mul");m.addParam("x","i32"),m.addParam("y","i32"),m.addParam("r","i32"),m.addLocal("c0","i64"),m.addLocal("c1","i64"),m.addLocal("np32","i64");for(let yt=0;yt<r;yt++)m.addLocal("x"+yt,"i64"),m.addLocal("y"+yt,"i64"),m.addLocal("m"+yt,"i64"),m.addLocal("q"+yt,"i64");const v=m.getCodeBuilder(),et=Number(0x100000000n-Gr(o,0x100000000n));m.addCode(v.setLocal("np32",v.i64_const(et)));const ct=[],dt=[],ft=[];function Ft(yt,It){let Ut,Dt;return ct[yt]?Ut=v.getLocal("x"+yt):(Ut=v.teeLocal("x"+yt,v.i64_load32_u(v.getLocal("x"),yt*4)),ct[yt]=!0),dt[It]?Dt=v.getLocal("y"+It):(Dt=v.teeLocal("y"+It,v.i64_load32_u(v.getLocal("y"),It*4)),dt[It]=!0),v.i64_mul(Ut,Dt)}function rt(yt,It){let Ut,Dt;return ft[yt]?Ut=v.getLocal("q"+yt):(Ut=v.teeLocal("q"+yt,v.i64_load32_u(v.i32_const(0),f+yt*4)),ft[yt]=!0),Dt=v.getLocal("m"+It),v.i64_mul(Ut,Dt)}let z="c0",wt="c1";for(let yt=0;yt<r*2-1;yt++){for(let It=Math.max(0,yt-r+1);It<=yt&&It<r;It++){const Ut=yt-It;m.addCode(v.setLocal(z,v.i64_add(v.i64_and(v.getLocal(z),v.i64_const(4294967295)),Ft(It,Ut)))),m.addCode(v.setLocal(wt,v.i64_add(v.getLocal(wt),v.i64_shr_u(v.getLocal(z),v.i64_const(32)))))}for(let It=Math.max(1,yt-r+1);It<=yt&&It<r;It++){const Ut=yt-It;m.addCode(v.setLocal(z,v.i64_add(v.i64_and(v.getLocal(z),v.i64_const(4294967295)),rt(It,Ut)))),m.addCode(v.setLocal(wt,v.i64_add(v.getLocal(wt),v.i64_shr_u(v.getLocal(z),v.i64_const(32)))))}yt<r&&(m.addCode(v.setLocal("m"+yt,v.i64_and(v.i64_mul(v.i64_and(v.getLocal(z),v.i64_const(4294967295)),v.getLocal("np32")),v.i64_const("0xFFFFFFFF")))),m.addCode(v.setLocal(z,v.i64_add(v.i64_and(v.getLocal(z),v.i64_const(4294967295)),rt(0,yt)))),m.addCode(v.setLocal(wt,v.i64_add(v.getLocal(wt),v.i64_shr_u(v.getLocal(z),v.i64_const(32)))))),yt>=r&&m.addCode(v.i64_store32(v.getLocal("r"),(yt-r)*4,v.getLocal(z))),[z,wt]=[wt,z],m.addCode(v.setLocal(wt,v.i64_shr_u(v.getLocal(z),v.i64_const(32))))}m.addCode(v.i64_store32(v.getLocal("r"),r*4-4,v.getLocal(z))),m.addCode(v.if(v.i32_wrap_i64(v.getLocal(wt)),v.drop(v.call(c+"_sub",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))),v.if(v.call(c+"_gte",v.getLocal("r"),v.i32_const(f)),v.drop(v.call(c+"_sub",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))))))}function nt(){const m=t.addFunction(l+"_square");m.addParam("x","i32"),m.addParam("r","i32"),m.addLocal("c0","i64"),m.addLocal("c1","i64"),m.addLocal("c0_old","i64"),m.addLocal("c1_old","i64"),m.addLocal("np32","i64");for(let It=0;It<r;It++)m.addLocal("x"+It,"i64"),m.addLocal("m"+It,"i64"),m.addLocal("q"+It,"i64");const v=m.getCodeBuilder(),et=Number(0x100000000n-Gr(o,0x100000000n));m.addCode(v.setLocal("np32",v.i64_const(et)));const ct=[],dt=[];function ft(It,Ut){let Dt,Mt;return ct[It]?Dt=v.getLocal("x"+It):(Dt=v.teeLocal("x"+It,v.i64_load32_u(v.getLocal("x"),It*4)),ct[It]=!0),ct[Ut]?Mt=v.getLocal("x"+Ut):(Mt=v.teeLocal("x"+Ut,v.i64_load32_u(v.getLocal("x"),Ut*4)),ct[Ut]=!0),v.i64_mul(Dt,Mt)}function Ft(It,Ut){let Dt,Mt;return dt[It]?Dt=v.getLocal("q"+It):(Dt=v.teeLocal("q"+It,v.i64_load32_u(v.i32_const(0),f+It*4)),dt[It]=!0),Mt=v.getLocal("m"+Ut),v.i64_mul(Dt,Mt)}let rt="c0",z="c1",wt="c0_old",yt="c1_old";for(let It=0;It<r*2-1;It++){m.addCode(v.setLocal(rt,v.i64_const(0)),v.setLocal(z,v.i64_const(0)));for(let Ut=Math.max(0,It-r+1);Ut<It+1>>1&&Ut<r;Ut++){const Dt=It-Ut;m.addCode(v.setLocal(rt,v.i64_add(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),ft(Ut,Dt)))),m.addCode(v.setLocal(z,v.i64_add(v.getLocal(z),v.i64_shr_u(v.getLocal(rt),v.i64_const(32)))))}m.addCode(v.setLocal(rt,v.i64_shl(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),v.i64_const(1)))),m.addCode(v.setLocal(z,v.i64_add(v.i64_shl(v.getLocal(z),v.i64_const(1)),v.i64_shr_u(v.getLocal(rt),v.i64_const(32))))),It%2==0&&(m.addCode(v.setLocal(rt,v.i64_add(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),ft(It>>1,It>>1)))),m.addCode(v.setLocal(z,v.i64_add(v.getLocal(z),v.i64_shr_u(v.getLocal(rt),v.i64_const(32)))))),It>0&&(m.addCode(v.setLocal(rt,v.i64_add(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),v.i64_and(v.getLocal(wt),v.i64_const(4294967295))))),m.addCode(v.setLocal(z,v.i64_add(v.i64_add(v.getLocal(z),v.i64_shr_u(v.getLocal(rt),v.i64_const(32))),v.getLocal(yt)))));for(let Ut=Math.max(1,It-r+1);Ut<=It&&Ut<r;Ut++){const Dt=It-Ut;m.addCode(v.setLocal(rt,v.i64_add(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),Ft(Ut,Dt)))),m.addCode(v.setLocal(z,v.i64_add(v.getLocal(z),v.i64_shr_u(v.getLocal(rt),v.i64_const(32)))))}It<r&&(m.addCode(v.setLocal("m"+It,v.i64_and(v.i64_mul(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),v.getLocal("np32")),v.i64_const("0xFFFFFFFF")))),m.addCode(v.setLocal(rt,v.i64_add(v.i64_and(v.getLocal(rt),v.i64_const(4294967295)),Ft(0,It)))),m.addCode(v.setLocal(z,v.i64_add(v.getLocal(z),v.i64_shr_u(v.getLocal(rt),v.i64_const(32)))))),It>=r&&m.addCode(v.i64_store32(v.getLocal("r"),(It-r)*4,v.getLocal(rt))),m.addCode(v.setLocal(wt,v.getLocal(z)),v.setLocal(yt,v.i64_shr_u(v.getLocal(wt),v.i64_const(32))))}m.addCode(v.i64_store32(v.getLocal("r"),r*4-4,v.getLocal(wt))),m.addCode(v.if(v.i32_wrap_i64(v.getLocal(yt)),v.drop(v.call(c+"_sub",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))),v.if(v.call(c+"_gte",v.getLocal("r"),v.i32_const(f)),v.drop(v.call(c+"_sub",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))))))}function I(){const m=t.addFunction(l+"_squareOld");m.addParam("x","i32"),m.addParam("r","i32");const v=m.getCodeBuilder();m.addCode(v.call(l+"_mul",v.getLocal("x"),v.getLocal("x"),v.getLocal("r")))}function y(){const m=t.addFunction(l+"_toMontgomery");m.addParam("x","i32"),m.addParam("r","i32");const v=m.getCodeBuilder();m.addCode(v.call(l+"_mul",v.getLocal("x"),v.i32_const(g),v.getLocal("r")))}function _(){const m=t.alloc(u*2),v=t.addFunction(l+"_fromMontgomery");v.addParam("x","i32"),v.addParam("r","i32");const et=v.getCodeBuilder();v.addCode(et.call(c+"_copy",et.getLocal("x"),et.i32_const(m))),v.addCode(et.call(c+"_zero",et.i32_const(m+u))),v.addCode(et.call(l+"_mReduct",et.i32_const(m),et.getLocal("r")))}function T(){const m=t.addFunction(l+"_inverse");m.addParam("x","i32"),m.addParam("r","i32");const v=m.getCodeBuilder();m.addCode(v.call(l+"_fromMontgomery",v.getLocal("x"),v.getLocal("r"))),m.addCode(v.call(c+"_inverseMod",v.getLocal("r"),v.i32_const(f),v.getLocal("r"))),m.addCode(v.call(l+"_toMontgomery",v.getLocal("r"),v.getLocal("r")))}let B=2n;if(Hd(o))for(;Rd(B,E,o)!==k;)B=B+1n;let Y=0,tt=k;for(;!om(tt)&&tt!==0n;)Y++,tt=tt>>1n;const $=t.alloc(u,Wn.bigInt2BytesLE(tt,u)),X=Rd(B,tt,o),F=t.alloc(Wn.bigInt2BytesLE((X<<BigInt(s*64))%o,u)),M=tt+1n>>1n,W=t.alloc(u,Wn.bigInt2BytesLE(M,u));function A(){const m=t.addFunction(l+"_sqrt");m.addParam("n","i32"),m.addParam("r","i32"),m.addLocal("m","i32"),m.addLocal("i","i32"),m.addLocal("j","i32");const v=m.getCodeBuilder(),et=v.i32_const(L),ct=v.i32_const(t.alloc(u)),dt=v.i32_const(t.alloc(u)),ft=v.i32_const(t.alloc(u)),Ft=v.i32_const(t.alloc(u)),rt=v.i32_const(t.alloc(u));m.addCode(v.if(v.call(l+"_isZero",v.getLocal("n")),v.ret(v.call(l+"_zero",v.getLocal("r")))),v.setLocal("m",v.i32_const(Y)),v.call(l+"_copy",v.i32_const(F),ct),v.call(l+"_exp",v.getLocal("n"),v.i32_const($),v.i32_const(u),dt),v.call(l+"_exp",v.getLocal("n"),v.i32_const(W),v.i32_const(u),ft),v.block(v.loop(v.br_if(1,v.call(l+"_eq",dt,et)),v.call(l+"_square",dt,Ft),v.setLocal("i",v.i32_const(1)),v.block(v.loop(v.br_if(1,v.call(l+"_eq",Ft,et)),v.call(l+"_square",Ft,Ft),v.setLocal("i",v.i32_add(v.getLocal("i"),v.i32_const(1))),v.br(0))),v.call(l+"_copy",ct,rt),v.setLocal("j",v.i32_sub(v.i32_sub(v.getLocal("m"),v.getLocal("i")),v.i32_const(1))),v.block(v.loop(v.br_if(1,v.i32_eqz(v.getLocal("j"))),v.call(l+"_square",rt,rt),v.setLocal("j",v.i32_sub(v.getLocal("j"),v.i32_const(1))),v.br(0))),v.setLocal("m",v.getLocal("i")),v.call(l+"_square",rt,ct),v.call(l+"_mul",dt,ct,dt),v.call(l+"_mul",ft,rt,ft),v.br(0))),v.if(v.call(l+"_isNegative",ft),v.call(l+"_neg",ft,v.getLocal("r")),v.call(l+"_copy",ft,v.getLocal("r"))))}function h(){const m=t.addFunction(l+"_isSquare");m.addParam("n","i32"),m.setReturnType("i32");const v=m.getCodeBuilder(),et=v.i32_const(L),ct=v.i32_const(t.alloc(u));m.addCode(v.if(v.call(l+"_isZero",v.getLocal("n")),v.ret(v.i32_const(1))),v.call(l+"_exp",v.getLocal("n"),v.i32_const(G),v.i32_const(u),ct),v.call(l+"_eq",ct,et))}function Q(){const m=t.addFunction(l+"_load");m.addParam("scalar","i32"),m.addParam("scalarLen","i32"),m.addParam("r","i32"),m.addLocal("p","i32"),m.addLocal("l","i32"),m.addLocal("i","i32"),m.addLocal("j","i32");const v=m.getCodeBuilder(),et=v.i32_const(t.alloc(u)),ct=t.alloc(u),dt=v.i32_const(ct);m.addCode(v.call(c+"_zero",v.getLocal("r")),v.setLocal("i",v.i32_const(u)),v.setLocal("p",v.getLocal("scalar")),v.block(v.loop(v.br_if(1,v.i32_gt_u(v.getLocal("i"),v.getLocal("scalarLen"))),v.if(v.i32_eq(v.getLocal("i"),v.i32_const(u)),v.call(l+"_one",et),v.call(l+"_mul",et,v.i32_const(g),et)),v.call(l+"_mul",v.getLocal("p"),et,dt),v.call(l+"_add",v.getLocal("r"),dt,v.getLocal("r")),v.setLocal("p",v.i32_add(v.getLocal("p"),v.i32_const(u))),v.setLocal("i",v.i32_add(v.getLocal("i"),v.i32_const(u))),v.br(0))),v.setLocal("l",v.i32_rem_u(v.getLocal("scalarLen"),v.i32_const(u))),v.if(v.i32_eqz(v.getLocal("l")),v.ret([])),v.call(c+"_zero",dt),v.setLocal("j",v.i32_const(0)),v.block(v.loop(v.br_if(1,v.i32_eq(v.getLocal("j"),v.getLocal("l"))),v.i32_store8(v.getLocal("j"),ct,v.i32_load8_u(v.getLocal("p"))),v.setLocal("p",v.i32_add(v.getLocal("p"),v.i32_const(1))),v.setLocal("j",v.i32_add(v.getLocal("j"),v.i32_const(1))),v.br(0))),v.if(v.i32_eq(v.getLocal("i"),v.i32_const(u)),v.call(l+"_one",et),v.call(l+"_mul",et,v.i32_const(g),et)),v.call(l+"_mul",dt,et,dt),v.call(l+"_add",v.getLocal("r"),dt,v.getLocal("r")))}function p(){const m=t.addFunction(l+"_timesScalar");m.addParam("x","i32"),m.addParam("scalar","i32"),m.addParam("scalarLen","i32"),m.addParam("r","i32");const v=m.getCodeBuilder(),et=v.i32_const(t.alloc(u));m.addCode(v.call(l+"_load",v.getLocal("scalar"),v.getLocal("scalarLen"),et),v.call(l+"_toMontgomery",et,et),v.call(l+"_mul",v.getLocal("x"),et,v.getLocal("r")))}function d(){const m=t.addFunction(l+"_isOne");m.addParam("x","i32"),m.setReturnType("i32");const v=m.getCodeBuilder();m.addCode(v.ret(v.call(c+"_eq",v.getLocal("x"),v.i32_const(L))))}return t.exportFunction(c+"_copy",l+"_copy"),t.exportFunction(c+"_zero",l+"_zero"),t.exportFunction(c+"_isZero",l+"_isZero"),t.exportFunction(c+"_eq",l+"_eq"),d(),j(),R(),b(),P(),V(),nt(),I(),y(),_(),w(),Z(),T(),J(),Q(),p(),nm(t,l),kr(t,l+"_batchToMontgomery",l+"_toMontgomery",u,u),kr(t,l+"_batchFromMontgomery",l+"_fromMontgomery",u,u),kr(t,l+"_batchNeg",l+"_neg",u,u),Ur(t,l+"_batchAdd",l+"_add",u,u),Ur(t,l+"_batchSub",l+"_sub",u,u),Ur(t,l+"_batchMul",l+"_mul",u,u),t.exportFunction(l+"_add"),t.exportFunction(l+"_sub"),t.exportFunction(l+"_neg"),t.exportFunction(l+"_isNegative"),t.exportFunction(l+"_isOne"),t.exportFunction(l+"_sign"),t.exportFunction(l+"_mReduct"),t.exportFunction(l+"_mul"),t.exportFunction(l+"_square"),t.exportFunction(l+"_squareOld"),t.exportFunction(l+"_fromMontgomery"),t.exportFunction(l+"_toMontgomery"),t.exportFunction(l+"_inverse"),t.exportFunction(l+"_one"),t.exportFunction(l+"_load"),t.exportFunction(l+"_timesScalar"),em(t,l+"_exp",u,l+"_mul",l+"_square",c+"_copy",l+"_one"),t.exportFunction(l+"_exp"),t.exportFunction(l+"_batchInverse"),Hd(o)&&(A(),h(),t.exportFunction(l+"_sqrt"),t.exportFunction(l+"_isSquare")),t.exportFunction(l+"_batchToMontgomery"),t.exportFunction(l+"_batchFromMontgomery"),l};const sm=jl,{bitLength:rm}=gn;var Uh=function(t,e,n,i,o){const s=BigInt(e),r=Math.floor((rm(s-1n)-1)/64)+1,u=r*8,l=n||"f1";if(t.modules[l])return l;t.modules[l]={n64:r};const c=o||"int",f=sm(t,s,i,c),g=t.modules[f].pR2,L=t.modules[f].pq,S=t.modules[f].pePlusOne;function k(){const N=t.alloc(u),J=t.addFunction(l+"_mul");J.addParam("x","i32"),J.addParam("y","i32"),J.addParam("r","i32");const j=J.getCodeBuilder();J.addCode(j.call(f+"_mul",j.getLocal("x"),j.getLocal("y"),j.i32_const(N))),J.addCode(j.call(f+"_mul",j.i32_const(N),j.i32_const(g),j.getLocal("r")))}function E(){const N=t.addFunction(l+"_square");N.addParam("x","i32"),N.addParam("r","i32");const J=N.getCodeBuilder();N.addCode(J.call(l+"_mul",J.getLocal("x"),J.getLocal("x"),J.getLocal("r")))}function G(){const N=t.addFunction(l+"_inverse");N.addParam("x","i32"),N.addParam("r","i32");const J=N.getCodeBuilder();N.addCode(J.call(c+"_inverseMod",J.getLocal("x"),J.i32_const(L),J.getLocal("r")))}function C(){const N=t.addFunction(l+"_isNegative");N.addParam("x","i32"),N.setReturnType("i32");const J=N.getCodeBuilder();N.addCode(J.call(c+"_gte",J.getLocal("x"),J.i32_const(S)))}return k(),E(),G(),C(),t.exportFunction(f+"_add",l+"_add"),t.exportFunction(f+"_sub",l+"_sub"),t.exportFunction(f+"_neg",l+"_neg"),t.exportFunction(l+"_mul"),t.exportFunction(l+"_square"),t.exportFunction(l+"_inverse"),t.exportFunction(l+"_isNegative"),t.exportFunction(f+"_copy",l+"_copy"),t.exportFunction(f+"_zero",l+"_zero"),t.exportFunction(f+"_one",l+"_one"),t.exportFunction(f+"_isZero",l+"_isZero"),t.exportFunction(f+"_eq",l+"_eq"),l};const cm=Nl,lm=zl,Pr=Ei;var Gh=function(t,e,n,i){if(t.modules[n])return n;const o=t.modules[i].n64*8,s=t.modules[i].q;t.modules[n]={n64:t.modules[i].n64*2};function r(){const nt=t.addFunction(n+"_add");nt.addParam("x","i32"),nt.addParam("y","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("y"),B=I.i32_add(I.getLocal("y"),I.i32_const(o)),Y=I.getLocal("r"),tt=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_add",y,T,Y),I.call(i+"_add",_,B,tt))}function u(){const nt=t.addFunction(n+"_timesScalar");nt.addParam("x","i32"),nt.addParam("scalar","i32"),nt.addParam("scalarLen","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_timesScalar",y,I.getLocal("scalar"),I.getLocal("scalarLen"),T),I.call(i+"_timesScalar",_,I.getLocal("scalar"),I.getLocal("scalarLen"),B))}function l(){const nt=t.addFunction(n+"_sub");nt.addParam("x","i32"),nt.addParam("y","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("y"),B=I.i32_add(I.getLocal("y"),I.i32_const(o)),Y=I.getLocal("r"),tt=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_sub",y,T,Y),I.call(i+"_sub",_,B,tt))}function c(){const nt=t.addFunction(n+"_neg");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_neg",y,T),I.call(i+"_neg",_,B))}function f(){const nt=t.addFunction(n+"_conjugate");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_copy",y,T),I.call(i+"_neg",_,B))}function g(){const nt=t.addFunction(n+"_isNegative");nt.addParam("x","i32"),nt.setReturnType("i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o));nt.addCode(I.if(I.call(i+"_isZero",_),I.ret(I.call(i+"_isNegative",y))),I.ret(I.call(i+"_isNegative",_)))}function L(){const nt=t.addFunction(n+"_mul");nt.addParam("x","i32"),nt.addParam("y","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("y"),B=I.i32_add(I.getLocal("y"),I.i32_const(o)),Y=I.getLocal("r"),tt=I.i32_add(I.getLocal("r"),I.i32_const(o)),$=I.i32_const(t.alloc(o)),X=I.i32_const(t.alloc(o)),F=I.i32_const(t.alloc(o)),M=I.i32_const(t.alloc(o));nt.addCode(I.call(i+"_mul",y,T,$),I.call(i+"_mul",_,B,X),I.call(i+"_add",y,_,F),I.call(i+"_add",T,B,M),I.call(i+"_mul",F,M,F),I.call(e,X,Y),I.call(i+"_add",$,Y,Y),I.call(i+"_add",$,X,tt),I.call(i+"_sub",F,tt,tt))}function S(){const nt=t.addFunction(n+"_mul1");nt.addParam("x","i32"),nt.addParam("y","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("y"),B=I.getLocal("r"),Y=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_mul",y,T,B),I.call(i+"_mul",_,T,Y))}function k(){const nt=t.addFunction(n+"_square");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o)),Y=I.i32_const(t.alloc(o)),tt=I.i32_const(t.alloc(o)),$=I.i32_const(t.alloc(o)),X=I.i32_const(t.alloc(o));nt.addCode(I.call(i+"_mul",y,_,Y),I.call(i+"_add",y,_,tt),I.call(e,_,$),I.call(i+"_add",y,$,$),I.call(e,Y,X),I.call(i+"_add",X,Y,X),I.call(i+"_mul",tt,$,T),I.call(i+"_sub",T,X,T),I.call(i+"_add",Y,Y,B))}function E(){const nt=t.addFunction(n+"_toMontgomery");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_toMontgomery",y,T),I.call(i+"_toMontgomery",_,B))}function G(){const nt=t.addFunction(n+"_fromMontgomery");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_fromMontgomery",y,T),I.call(i+"_fromMontgomery",_,B))}function C(){const nt=t.addFunction(n+"_copy");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o));nt.addCode(I.call(i+"_copy",y,T),I.call(i+"_copy",_,B))}function N(){const nt=t.addFunction(n+"_zero");nt.addParam("x","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o));nt.addCode(I.call(i+"_zero",y),I.call(i+"_zero",_))}function J(){const nt=t.addFunction(n+"_one");nt.addParam("x","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o));nt.addCode(I.call(i+"_one",y),I.call(i+"_zero",_))}function j(){const nt=t.addFunction(n+"_eq");nt.addParam("x","i32"),nt.addParam("y","i32"),nt.setReturnType("i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("y"),B=I.i32_add(I.getLocal("y"),I.i32_const(o));nt.addCode(I.i32_and(I.call(i+"_eq",y,T),I.call(i+"_eq",_,B)))}function R(){const nt=t.addFunction(n+"_isZero");nt.addParam("x","i32"),nt.setReturnType("i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o));nt.addCode(I.i32_and(I.call(i+"_isZero",y),I.call(i+"_isZero",_)))}function b(){const nt=t.addFunction(n+"_inverse");nt.addParam("x","i32"),nt.addParam("r","i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o)),T=I.getLocal("r"),B=I.i32_add(I.getLocal("r"),I.i32_const(o)),Y=I.i32_const(t.alloc(o)),tt=I.i32_const(t.alloc(o)),$=I.i32_const(t.alloc(o)),X=I.i32_const(t.alloc(o));nt.addCode(I.call(i+"_square",y,Y),I.call(i+"_square",_,tt),I.call(e,tt,$),I.call(i+"_sub",Y,$,$),I.call(i+"_inverse",$,X),I.call(i+"_mul",y,X,T),I.call(i+"_mul",_,X,B),I.call(i+"_neg",B,B))}function w(){const nt=t.addFunction(n+"_sign");nt.addParam("x","i32"),nt.addLocal("s","i32"),nt.setReturnType("i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o));nt.addCode(I.setLocal("s",I.call(i+"_sign",_)),I.if(I.getLocal("s"),I.ret(I.getLocal("s"))),I.ret(I.call(i+"_sign",y)))}function Z(){const nt=t.addFunction(n+"_isOne");nt.addParam("x","i32"),nt.setReturnType("i32");const I=nt.getCodeBuilder(),y=I.getLocal("x"),_=I.i32_add(I.getLocal("x"),I.i32_const(o));nt.addCode(I.ret(I.i32_and(I.call(i+"_isOne",y),I.call(i+"_isZero",_))))}function P(){const nt=t.addFunction(n+"_sqrt");nt.addParam("a","i32"),nt.addParam("pr","i32");const I=nt.getCodeBuilder(),y=I.i32_const(t.alloc(Pr.bigInt2BytesLE((BigInt(s||0)-3n)/4n,o))),_=I.i32_const(t.alloc(Pr.bigInt2BytesLE((BigInt(s||0)-1n)/2n,o))),T=I.getLocal("a"),B=I.i32_const(t.alloc(o*2)),Y=I.i32_const(t.alloc(o*2)),tt=I.i32_const(t.alloc(o*2)),$=t.alloc(o*2),X=I.i32_const($),F=I.i32_const($),M=I.i32_const($+o),W=I.i32_const(t.alloc(o*2)),A=I.i32_const(t.alloc(o*2));nt.addCode(I.call(n+"_one",X),I.call(n+"_neg",X,X),I.call(n+"_exp",T,y,I.i32_const(o),B),I.call(n+"_square",B,Y),I.call(n+"_mul",T,Y,Y),I.call(n+"_conjugate",Y,tt),I.call(n+"_mul",tt,Y,tt),I.if(I.call(n+"_eq",tt,X),I.unreachable()),I.call(n+"_mul",B,T,W),I.if(I.call(n+"_eq",Y,X),[...I.call(i+"_zero",F),...I.call(i+"_one",M),...I.call(n+"_mul",X,W,I.getLocal("pr"))],[...I.call(n+"_one",A),...I.call(n+"_add",A,Y,A),...I.call(n+"_exp",A,_,I.i32_const(o),A),...I.call(n+"_mul",A,W,I.getLocal("pr"))]))}function V(){const nt=t.addFunction(n+"_isSquare");nt.addParam("a","i32"),nt.setReturnType("i32");const I=nt.getCodeBuilder(),y=I.i32_const(t.alloc(Pr.bigInt2BytesLE((BigInt(s||0)-3n)/4n,o))),_=I.getLocal("a"),T=I.i32_const(t.alloc(o*2)),B=I.i32_const(t.alloc(o*2)),Y=I.i32_const(t.alloc(o*2)),tt=t.alloc(o*2),$=I.i32_const(tt);nt.addCode(I.call(n+"_one",$),I.call(n+"_neg",$,$),I.call(n+"_exp",_,y,I.i32_const(o),T),I.call(n+"_square",T,B),I.call(n+"_mul",_,B,B),I.call(n+"_conjugate",B,Y),I.call(n+"_mul",Y,B,Y),I.if(I.call(n+"_eq",Y,$),I.ret(I.i32_const(0))),I.ret(I.i32_const(1)))}return R(),Z(),N(),J(),C(),L(),S(),k(),r(),l(),c(),f(),E(),G(),j(),b(),u(),w(),g(),t.exportFunction(n+"_isZero"),t.exportFunction(n+"_isOne"),t.exportFunction(n+"_zero"),t.exportFunction(n+"_one"),t.exportFunction(n+"_copy"),t.exportFunction(n+"_mul"),t.exportFunction(n+"_mul1"),t.exportFunction(n+"_square"),t.exportFunction(n+"_add"),t.exportFunction(n+"_sub"),t.exportFunction(n+"_neg"),t.exportFunction(n+"_sign"),t.exportFunction(n+"_conjugate"),t.exportFunction(n+"_fromMontgomery"),t.exportFunction(n+"_toMontgomery"),t.exportFunction(n+"_eq"),t.exportFunction(n+"_inverse"),lm(t,n),cm(t,n+"_exp",o*2,n+"_mul",n+"_square",n+"_copy",n+"_one"),P(),V(),t.exportFunction(n+"_exp"),t.exportFunction(n+"_timesScalar"),t.exportFunction(n+"_batchInverse"),t.exportFunction(n+"_sqrt"),t.exportFunction(n+"_isSquare"),t.exportFunction(n+"_isNegative"),n};const um=Nl,dm=zl;var Ph=function(t,e,n,i){if(t.modules[n])return n;const o=t.modules[i].n64*8;t.modules[n]={n64:t.modules[i].n64*3};function s(){const b=t.addFunction(n+"_add");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("y"),I=w.i32_add(w.getLocal("y"),w.i32_const(o)),y=w.i32_add(w.getLocal("y"),w.i32_const(2*o)),_=w.getLocal("r"),T=w.i32_add(w.getLocal("r"),w.i32_const(o)),B=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_add",Z,nt,_),w.call(i+"_add",P,I,T),w.call(i+"_add",V,y,B))}function r(){const b=t.addFunction(n+"_timesScalar");b.addParam("x","i32"),b.addParam("scalar","i32"),b.addParam("scalarLen","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_timesScalar",Z,w.getLocal("scalar"),w.getLocal("scalarLen"),nt),w.call(i+"_timesScalar",P,w.getLocal("scalar"),w.getLocal("scalarLen"),I),w.call(i+"_timesScalar",V,w.getLocal("scalar"),w.getLocal("scalarLen"),y))}function u(){const b=t.addFunction(n+"_sub");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("y"),I=w.i32_add(w.getLocal("y"),w.i32_const(o)),y=w.i32_add(w.getLocal("y"),w.i32_const(2*o)),_=w.getLocal("r"),T=w.i32_add(w.getLocal("r"),w.i32_const(o)),B=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_sub",Z,nt,_),w.call(i+"_sub",P,I,T),w.call(i+"_sub",V,y,B))}function l(){const b=t.addFunction(n+"_neg");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_neg",Z,nt),w.call(i+"_neg",P,I),w.call(i+"_neg",V,y))}function c(){const b=t.addFunction(n+"_isNegative");b.addParam("x","i32"),b.setReturnType("i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o));b.addCode(w.if(w.call(i+"_isZero",V),w.if(w.call(i+"_isZero",P),w.ret(w.call(i+"_isNegative",Z)),w.ret(w.call(i+"_isNegative",P)))),w.ret(w.call(i+"_isNegative",V)))}function f(){const b=t.addFunction(n+"_mul");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("y"),I=w.i32_add(w.getLocal("y"),w.i32_const(o)),y=w.i32_add(w.getLocal("y"),w.i32_const(2*o)),_=w.getLocal("r"),T=w.i32_add(w.getLocal("r"),w.i32_const(o)),B=w.i32_add(w.getLocal("r"),w.i32_const(2*o)),Y=w.i32_const(t.alloc(o)),tt=w.i32_const(t.alloc(o)),$=w.i32_const(t.alloc(o)),X=w.i32_const(t.alloc(o)),F=w.i32_const(t.alloc(o)),M=w.i32_const(t.alloc(o)),W=w.i32_const(t.alloc(o)),A=w.i32_const(t.alloc(o)),h=w.i32_const(t.alloc(o)),Q=w.i32_const(t.alloc(o)),p=w.i32_const(t.alloc(o)),d=w.i32_const(t.alloc(o)),m=w.i32_const(t.alloc(o));b.addCode(w.call(i+"_mul",Z,nt,Y),w.call(i+"_mul",P,I,tt),w.call(i+"_mul",V,y,$),w.call(i+"_add",Z,P,X),w.call(i+"_add",nt,I,F),w.call(i+"_add",Z,V,M),w.call(i+"_add",nt,y,W),w.call(i+"_add",P,V,A),w.call(i+"_add",I,y,h),w.call(i+"_add",Y,tt,Q),w.call(i+"_add",Y,$,p),w.call(i+"_add",tt,$,d),w.call(i+"_mul",A,h,_),w.call(i+"_sub",_,d,_),w.call(e,_,_),w.call(i+"_add",Y,_,_),w.call(i+"_mul",X,F,T),w.call(i+"_sub",T,Q,T),w.call(e,$,m),w.call(i+"_add",T,m,T),w.call(i+"_mul",M,W,B),w.call(i+"_sub",B,p,B),w.call(i+"_add",B,tt,B))}function g(){const b=t.addFunction(n+"_square");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o)),_=w.i32_const(t.alloc(o)),T=w.i32_const(t.alloc(o)),B=w.i32_const(t.alloc(o)),Y=w.i32_const(t.alloc(o)),tt=w.i32_const(t.alloc(o)),$=w.i32_const(t.alloc(o)),X=w.i32_const(t.alloc(o));b.addCode(w.call(i+"_square",Z,_),w.call(i+"_mul",Z,P,T),w.call(i+"_add",T,T,B),w.call(i+"_sub",Z,P,Y),w.call(i+"_add",Y,V,Y),w.call(i+"_square",Y,Y),w.call(i+"_mul",P,V,tt),w.call(i+"_add",tt,tt,$),w.call(i+"_square",V,X),w.call(e,$,nt),w.call(i+"_add",_,nt,nt),w.call(e,X,I),w.call(i+"_add",B,I,I),w.call(i+"_add",_,X,y),w.call(i+"_sub",$,y,y),w.call(i+"_add",Y,y,y),w.call(i+"_add",B,y,y))}function L(){const b=t.addFunction(n+"_toMontgomery");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_toMontgomery",Z,nt),w.call(i+"_toMontgomery",P,I),w.call(i+"_toMontgomery",V,y))}function S(){const b=t.addFunction(n+"_fromMontgomery");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_fromMontgomery",Z,nt),w.call(i+"_fromMontgomery",P,I),w.call(i+"_fromMontgomery",V,y))}function k(){const b=t.addFunction(n+"_copy");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o));b.addCode(w.call(i+"_copy",Z,nt),w.call(i+"_copy",P,I),w.call(i+"_copy",V,y))}function E(){const b=t.addFunction(n+"_zero");b.addParam("x","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o));b.addCode(w.call(i+"_zero",Z),w.call(i+"_zero",P),w.call(i+"_zero",V))}function G(){const b=t.addFunction(n+"_one");b.addParam("x","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o));b.addCode(w.call(i+"_one",Z),w.call(i+"_zero",P),w.call(i+"_zero",V))}function C(){const b=t.addFunction(n+"_eq");b.addParam("x","i32"),b.addParam("y","i32"),b.setReturnType("i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("y"),I=w.i32_add(w.getLocal("y"),w.i32_const(o)),y=w.i32_add(w.getLocal("y"),w.i32_const(2*o));b.addCode(w.i32_and(w.i32_and(w.call(i+"_eq",Z,nt),w.call(i+"_eq",P,I)),w.call(i+"_eq",V,y)))}function N(){const b=t.addFunction(n+"_isZero");b.addParam("x","i32"),b.setReturnType("i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o));b.addCode(w.i32_and(w.i32_and(w.call(i+"_isZero",Z),w.call(i+"_isZero",P)),w.call(i+"_isZero",V)))}function J(){const b=t.addFunction(n+"_inverse");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o)),nt=w.getLocal("r"),I=w.i32_add(w.getLocal("r"),w.i32_const(o)),y=w.i32_add(w.getLocal("r"),w.i32_const(2*o)),_=w.i32_const(t.alloc(o)),T=w.i32_const(t.alloc(o)),B=w.i32_const(t.alloc(o)),Y=w.i32_const(t.alloc(o)),tt=w.i32_const(t.alloc(o)),$=w.i32_const(t.alloc(o)),X=w.i32_const(t.alloc(o)),F=w.i32_const(t.alloc(o)),M=w.i32_const(t.alloc(o)),W=w.i32_const(t.alloc(o)),A=w.i32_const(t.alloc(o));b.addCode(w.call(i+"_square",Z,_),w.call(i+"_square",P,T),w.call(i+"_square",V,B),w.call(i+"_mul",Z,P,Y),w.call(i+"_mul",Z,V,tt),w.call(i+"_mul",P,V,$),w.call(e,$,X),w.call(i+"_sub",_,X,X),w.call(e,B,F),w.call(i+"_sub",F,Y,F),w.call(i+"_sub",T,tt,M),w.call(i+"_mul",V,F,W),w.call(i+"_mul",P,M,A),w.call(i+"_add",W,A,W),w.call(e,W,W),w.call(i+"_mul",Z,X,A),w.call(i+"_add",A,W,W),w.call(i+"_inverse",W,W),w.call(i+"_mul",W,X,nt),w.call(i+"_mul",W,F,I),w.call(i+"_mul",W,M,y))}function j(){const b=t.addFunction(n+"_sign");b.addParam("x","i32"),b.addLocal("s","i32"),b.setReturnType("i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(2*o));b.addCode(w.setLocal("s",w.call(i+"_sign",V)),w.if(w.getLocal("s"),w.ret(w.getLocal("s"))),w.setLocal("s",w.call(i+"_sign",P)),w.if(w.getLocal("s"),w.ret(w.getLocal("s"))),w.ret(w.call(i+"_sign",Z)))}function R(){const b=t.addFunction(n+"_isOne");b.addParam("x","i32"),b.setReturnType("i32");const w=b.getCodeBuilder(),Z=w.getLocal("x"),P=w.i32_add(w.getLocal("x"),w.i32_const(o)),V=w.i32_add(w.getLocal("x"),w.i32_const(o*2));b.addCode(w.ret(w.i32_and(w.i32_and(w.call(i+"_isOne",Z),w.call(i+"_isZero",P)),w.call(i+"_isZero",V))))}return N(),R(),E(),G(),k(),f(),g(),s(),u(),l(),j(),L(),S(),C(),J(),r(),c(),t.exportFunction(n+"_isZero"),t.exportFunction(n+"_isOne"),t.exportFunction(n+"_zero"),t.exportFunction(n+"_one"),t.exportFunction(n+"_copy"),t.exportFunction(n+"_mul"),t.exportFunction(n+"_square"),t.exportFunction(n+"_add"),t.exportFunction(n+"_sub"),t.exportFunction(n+"_neg"),t.exportFunction(n+"_sign"),t.exportFunction(n+"_fromMontgomery"),t.exportFunction(n+"_toMontgomery"),t.exportFunction(n+"_eq"),t.exportFunction(n+"_inverse"),dm(t,n),um(t,n+"_exp",o*3,n+"_mul",n+"_square",n+"_copy",n+"_one"),t.exportFunction(n+"_exp"),t.exportFunction(n+"_timesScalar"),t.exportFunction(n+"_batchInverse"),t.exportFunction(n+"_isNegative"),n},fm=function(t,e,n,i,o,s,r,u){const l=t.addFunction(e);l.addParam("base","i32"),l.addParam("scalar","i32"),l.addParam("scalarLength","i32"),l.addParam("r","i32"),l.addLocal("old0","i32"),l.addLocal("nbits","i32"),l.addLocal("i","i32"),l.addLocal("last","i32"),l.addLocal("cur","i32"),l.addLocal("carry","i32"),l.addLocal("p","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(n));function g(S){return c.i32_and(c.i32_shr_u(c.i32_load(c.i32_add(c.getLocal("scalar"),c.i32_and(c.i32_shr_u(S,c.i32_const(3)),c.i32_const(4294967292)))),c.i32_and(S,c.i32_const(31))),c.i32_const(1))}function L(S){return[...c.i32_store8(c.getLocal("p"),c.i32_const(S)),...c.setLocal("p",c.i32_add(c.getLocal("p"),c.i32_const(1)))]}l.addCode(c.if(c.i32_eqz(c.getLocal("scalarLength")),[...c.call(u,c.getLocal("r")),...c.ret([])]),c.setLocal("nbits",c.i32_shl(c.getLocal("scalarLength"),c.i32_const(3))),c.setLocal("old0",c.i32_load(c.i32_const(0))),c.setLocal("p",c.getLocal("old0")),c.i32_store(c.i32_const(0),c.i32_and(c.i32_add(c.i32_add(c.getLocal("old0"),c.i32_const(32)),c.getLocal("nbits")),c.i32_const(4294967288))),c.setLocal("i",c.i32_const(1)),c.setLocal("last",g(c.i32_const(0))),c.setLocal("carry",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("nbits"))),c.setLocal("cur",g(c.getLocal("i"))),c.if(c.getLocal("last"),c.if(c.getLocal("cur"),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(1)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(255)]),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(255)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(0)),...L(1)])),c.if(c.getLocal("cur"),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(0)],[...c.setLocal("last",c.i32_const(1)),...c.setLocal("carry",c.i32_const(0)),...L(0)]),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(1)),...c.setLocal("carry",c.i32_const(0)),...L(0)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(0)),...L(0)]))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))),c.if(c.getLocal("last"),c.if(c.getLocal("carry"),[...L(255),...L(0),...L(1)],[...L(1)]),c.if(c.getLocal("carry"),[...L(0),...L(1)])),c.setLocal("p",c.i32_sub(c.getLocal("p"),c.i32_const(1))),c.call(r,c.getLocal("base"),f),c.call(u,c.getLocal("r")),c.block(c.loop(c.call(o,c.getLocal("r"),c.getLocal("r")),c.setLocal("cur",c.i32_load8_u(c.getLocal("p"))),c.if(c.getLocal("cur"),c.if(c.i32_eq(c.getLocal("cur"),c.i32_const(1)),c.call(i,c.getLocal("r"),f,c.getLocal("r")),c.call(s,c.getLocal("r"),f,c.getLocal("r")))),c.br_if(1,c.i32_eq(c.getLocal("old0"),c.getLocal("p"))),c.setLocal("p",c.i32_sub(c.getLocal("p"),c.i32_const(1))),c.br(0))),c.i32_store(c.i32_const(0),c.getLocal("old0")))},hm=function(t,e,n,i,o){const r=t.modules[e].n64*8;function u(){const g=t.addFunction(n+"_getChunk");g.addParam("pScalar","i32"),g.addParam("scalarSize","i32"),g.addParam("startBit","i32"),g.addParam("chunkSize","i32"),g.addLocal("bitsToEnd","i32"),g.addLocal("mask","i32"),g.setReturnType("i32");const L=g.getCodeBuilder();g.addCode(L.setLocal("bitsToEnd",L.i32_sub(L.i32_mul(L.getLocal("scalarSize"),L.i32_const(8)),L.getLocal("startBit"))),L.if(L.i32_gt_s(L.getLocal("chunkSize"),L.getLocal("bitsToEnd")),L.setLocal("mask",L.i32_sub(L.i32_shl(L.i32_const(1),L.getLocal("bitsToEnd")),L.i32_const(1))),L.setLocal("mask",L.i32_sub(L.i32_shl(L.i32_const(1),L.getLocal("chunkSize")),L.i32_const(1)))),L.i32_and(L.i32_shr_u(L.i32_load(L.i32_add(L.getLocal("pScalar"),L.i32_shr_u(L.getLocal("startBit"),L.i32_const(3))),0,0),L.i32_and(L.getLocal("startBit"),L.i32_const(7))),L.getLocal("mask")))}function l(){const g=t.addFunction(n+"_chunk");g.addParam("pBases","i32"),g.addParam("pScalars","i32"),g.addParam("scalarSize","i32"),g.addParam("n","i32"),g.addParam("startBit","i32"),g.addParam("chunkSize","i32"),g.addParam("pr","i32"),g.addLocal("nChunks","i32"),g.addLocal("itScalar","i32"),g.addLocal("endScalar","i32"),g.addLocal("itBase","i32"),g.addLocal("i","i32"),g.addLocal("j","i32"),g.addLocal("nTable","i32"),g.addLocal("pTable","i32"),g.addLocal("idx","i32"),g.addLocal("pIdxTable","i32");const L=g.getCodeBuilder();g.addCode(L.if(L.i32_eqz(L.getLocal("n")),[...L.call(e+"_zero",L.getLocal("pr")),...L.ret([])]),L.setLocal("nTable",L.i32_shl(L.i32_const(1),L.getLocal("chunkSize"))),L.setLocal("pTable",L.i32_load(L.i32_const(0))),L.i32_store(L.i32_const(0),L.i32_add(L.getLocal("pTable"),L.i32_mul(L.getLocal("nTable"),L.i32_const(r)))),L.setLocal("j",L.i32_const(0)),L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("j"),L.getLocal("nTable"))),L.call(e+"_zero",L.i32_add(L.getLocal("pTable"),L.i32_mul(L.getLocal("j"),L.i32_const(r)))),L.setLocal("j",L.i32_add(L.getLocal("j"),L.i32_const(1))),L.br(0))),L.setLocal("itBase",L.getLocal("pBases")),L.setLocal("itScalar",L.getLocal("pScalars")),L.setLocal("endScalar",L.i32_add(L.getLocal("pScalars"),L.i32_mul(L.getLocal("n"),L.getLocal("scalarSize")))),L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("itScalar"),L.getLocal("endScalar"))),L.setLocal("idx",L.call(n+"_getChunk",L.getLocal("itScalar"),L.getLocal("scalarSize"),L.getLocal("startBit"),L.getLocal("chunkSize"))),L.if(L.getLocal("idx"),[...L.setLocal("pIdxTable",L.i32_add(L.getLocal("pTable"),L.i32_mul(L.i32_sub(L.getLocal("idx"),L.i32_const(1)),L.i32_const(r)))),...L.call(i,L.getLocal("pIdxTable"),L.getLocal("itBase"),L.getLocal("pIdxTable"))]),L.setLocal("itScalar",L.i32_add(L.getLocal("itScalar"),L.getLocal("scalarSize"))),L.setLocal("itBase",L.i32_add(L.getLocal("itBase"),L.i32_const(o))),L.br(0))),L.call(n+"_reduceTable",L.getLocal("pTable"),L.getLocal("chunkSize")),L.call(e+"_copy",L.getLocal("pTable"),L.getLocal("pr")),L.i32_store(L.i32_const(0),L.getLocal("pTable")))}function c(){const g=t.addFunction(n);g.addParam("pBases","i32"),g.addParam("pScalars","i32"),g.addParam("scalarSize","i32"),g.addParam("n","i32"),g.addParam("pr","i32"),g.addLocal("chunkSize","i32"),g.addLocal("nChunks","i32"),g.addLocal("itScalar","i32"),g.addLocal("endScalar","i32"),g.addLocal("itBase","i32"),g.addLocal("itBit","i32"),g.addLocal("i","i32"),g.addLocal("j","i32"),g.addLocal("nTable","i32"),g.addLocal("pTable","i32"),g.addLocal("idx","i32"),g.addLocal("pIdxTable","i32");const L=g.getCodeBuilder(),S=L.i32_const(t.alloc(r)),k=t.alloc([17,17,17,17,17,17,17,17,17,17,16,16,15,14,13,13,12,11,10,9,8,7,7,6,5,4,3,2,1,1,1,1]);g.addCode(L.call(e+"_zero",L.getLocal("pr")),L.if(L.i32_eqz(L.getLocal("n")),L.ret([])),L.setLocal("chunkSize",L.i32_load8_u(L.i32_clz(L.getLocal("n")),k)),L.setLocal("nChunks",L.i32_add(L.i32_div_u(L.i32_sub(L.i32_shl(L.getLocal("scalarSize"),L.i32_const(3)),L.i32_const(1)),L.getLocal("chunkSize")),L.i32_const(1))),L.setLocal("itBit",L.i32_mul(L.i32_sub(L.getLocal("nChunks"),L.i32_const(1)),L.getLocal("chunkSize"))),L.block(L.loop(L.br_if(1,L.i32_lt_s(L.getLocal("itBit"),L.i32_const(0))),L.if(L.i32_eqz(L.call(e+"_isZero",L.getLocal("pr"))),[...L.setLocal("j",L.i32_const(0)),...L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("j"),L.getLocal("chunkSize"))),L.call(e+"_double",L.getLocal("pr"),L.getLocal("pr")),L.setLocal("j",L.i32_add(L.getLocal("j"),L.i32_const(1))),L.br(0)))]),L.call(n+"_chunk",L.getLocal("pBases"),L.getLocal("pScalars"),L.getLocal("scalarSize"),L.getLocal("n"),L.getLocal("itBit"),L.getLocal("chunkSize"),S),L.call(e+"_add",L.getLocal("pr"),S,L.getLocal("pr")),L.setLocal("itBit",L.i32_sub(L.getLocal("itBit"),L.getLocal("chunkSize"))),L.br(0))))}function f(){const g=t.addFunction(n+"_reduceTable");g.addParam("pTable","i32"),g.addParam("p","i32"),g.addLocal("half","i32"),g.addLocal("it1","i32"),g.addLocal("it2","i32"),g.addLocal("pAcc","i32");const L=g.getCodeBuilder();g.addCode(L.if(L.i32_eq(L.getLocal("p"),L.i32_const(1)),L.ret([])),L.setLocal("half",L.i32_shl(L.i32_const(1),L.i32_sub(L.getLocal("p"),L.i32_const(1)))),L.setLocal("it1",L.getLocal("pTable")),L.setLocal("it2",L.i32_add(L.getLocal("pTable"),L.i32_mul(L.getLocal("half"),L.i32_const(r)))),L.setLocal("pAcc",L.i32_sub(L.getLocal("it2"),L.i32_const(r))),L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("it1"),L.getLocal("pAcc"))),L.call(e+"_add",L.getLocal("it1"),L.getLocal("it2"),L.getLocal("it1")),L.call(e+"_add",L.getLocal("pAcc"),L.getLocal("it2"),L.getLocal("pAcc")),L.setLocal("it1",L.i32_add(L.getLocal("it1"),L.i32_const(r))),L.setLocal("it2",L.i32_add(L.getLocal("it2"),L.i32_const(r))),L.br(0))),L.call(n+"_reduceTable",L.getLocal("pTable"),L.i32_sub(L.getLocal("p"),L.i32_const(1))),L.setLocal("p",L.i32_sub(L.getLocal("p"),L.i32_const(1))),L.block(L.loop(L.br_if(1,L.i32_eqz(L.getLocal("p"))),L.call(e+"_double",L.getLocal("pAcc"),L.getLocal("pAcc")),L.setLocal("p",L.i32_sub(L.getLocal("p"),L.i32_const(1))),L.br(0))),L.call(e+"_add",L.getLocal("pTable"),L.getLocal("pAcc"),L.getLocal("pTable")))}u(),f(),l(),c(),t.exportFunction(n),t.exportFunction(n+"_chunk")};const Qd=fm,Yo=Fh,Kd=hm;var Oh=function(t,e,n,i){const o=t.modules[n].n64,s=o*8;if(t.modules[e])return e;t.modules[e]={n64:o*3};function r(){const A=t.addFunction(e+"_isZero");A.addParam("p1","i32"),A.setReturnType("i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_isZero",h.i32_add(h.getLocal("p1"),h.i32_const(s*2))))}function u(){const A=t.addFunction(e+"_isZeroAffine");A.addParam("p1","i32"),A.setReturnType("i32");const h=A.getCodeBuilder();A.addCode(h.i32_and(h.call(n+"_isZero",h.getLocal("p1")),h.call(n+"_isZero",h.i32_add(h.getLocal("p1"),h.i32_const(s)))))}function l(){const A=t.addFunction(e+"_copy");A.addParam("ps","i32"),A.addParam("pd","i32");const h=A.getCodeBuilder();for(let Q=0;Q<o*3;Q++)A.addCode(h.i64_store(h.getLocal("pd"),Q*8,h.i64_load(h.getLocal("ps"),Q*8)))}function c(){const A=t.addFunction(e+"_copyAffine");A.addParam("ps","i32"),A.addParam("pd","i32");const h=A.getCodeBuilder();for(let Q=0;Q<o*2;Q++)A.addCode(h.i64_store(h.getLocal("pd"),Q*8,h.i64_load(h.getLocal("ps"),Q*8)))}function f(){const A=t.addFunction(e+"_zero");A.addParam("pr","i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_zero",h.getLocal("pr"))),A.addCode(h.call(n+"_one",h.i32_add(h.getLocal("pr"),h.i32_const(s)))),A.addCode(h.call(n+"_zero",h.i32_add(h.getLocal("pr"),h.i32_const(s*2))))}function g(){const A=t.addFunction(e+"_zeroAffine");A.addParam("pr","i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_zero",h.getLocal("pr"))),A.addCode(h.call(n+"_zero",h.i32_add(h.getLocal("pr"),h.i32_const(s))))}function L(){const A=t.addFunction(e+"_eq");A.addParam("p1","i32"),A.addParam("p2","i32"),A.setReturnType("i32"),A.addLocal("z1","i32"),A.addLocal("z2","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s));A.addCode(h.setLocal("z1",h.i32_add(h.getLocal("p1"),h.i32_const(s*2))));const d=h.getLocal("z1"),m=h.getLocal("p2"),v=h.i32_add(h.getLocal("p2"),h.i32_const(s));A.addCode(h.setLocal("z2",h.i32_add(h.getLocal("p2"),h.i32_const(s*2))));const et=h.getLocal("z2"),ct=h.i32_const(t.alloc(s)),dt=h.i32_const(t.alloc(s)),ft=h.i32_const(t.alloc(s)),Ft=h.i32_const(t.alloc(s)),rt=h.i32_const(t.alloc(s)),z=h.i32_const(t.alloc(s)),wt=h.i32_const(t.alloc(s)),yt=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),h.ret(h.call(e+"_isZero",h.getLocal("p2")))),h.if(h.call(e+"_isZero",h.getLocal("p2")),h.ret(h.i32_const(0))),h.if(h.call(n+"_isOne",d),h.ret(h.call(e+"_eqMixed",h.getLocal("p2"),h.getLocal("p1")))),h.if(h.call(n+"_isOne",et),h.ret(h.call(e+"_eqMixed",h.getLocal("p1"),h.getLocal("p2")))),h.call(n+"_square",d,ct),h.call(n+"_square",et,dt),h.call(n+"_mul",Q,dt,ft),h.call(n+"_mul",m,ct,Ft),h.call(n+"_mul",d,ct,rt),h.call(n+"_mul",et,dt,z),h.call(n+"_mul",p,z,wt),h.call(n+"_mul",v,rt,yt),h.if(h.call(n+"_eq",ft,Ft),h.if(h.call(n+"_eq",wt,yt),h.ret(h.i32_const(1)))),h.ret(h.i32_const(0)))}function S(){const A=t.addFunction(e+"_eqMixed");A.addParam("p1","i32"),A.addParam("p2","i32"),A.setReturnType("i32"),A.addLocal("z1","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s));A.addCode(h.setLocal("z1",h.i32_add(h.getLocal("p1"),h.i32_const(s*2))));const d=h.getLocal("z1"),m=h.getLocal("p2"),v=h.i32_add(h.getLocal("p2"),h.i32_const(s)),et=h.i32_const(t.alloc(s)),ct=h.i32_const(t.alloc(s)),dt=h.i32_const(t.alloc(s)),ft=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),h.ret(h.call(e+"_isZeroAffine",h.getLocal("p2")))),h.if(h.call(e+"_isZeroAffine",h.getLocal("p2")),h.ret(h.i32_const(0))),h.if(h.call(n+"_isOne",d),h.ret(h.call(e+"_eqAffine",h.getLocal("p1"),h.getLocal("p2")))),h.call(n+"_square",d,et),h.call(n+"_mul",m,et,ct),h.call(n+"_mul",d,et,dt),h.call(n+"_mul",v,dt,ft),h.if(h.call(n+"_eq",Q,ct),h.if(h.call(n+"_eq",p,ft),h.ret(h.i32_const(1)))),h.ret(h.i32_const(0)))}function k(){const A=t.addFunction(e+"_double");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.i32_add(h.getLocal("p1"),h.i32_const(s*2)),m=h.getLocal("pr"),v=h.i32_add(h.getLocal("pr"),h.i32_const(s)),et=h.i32_add(h.getLocal("pr"),h.i32_const(s*2)),ct=h.i32_const(t.alloc(s)),dt=h.i32_const(t.alloc(s)),ft=h.i32_const(t.alloc(s)),Ft=h.i32_const(t.alloc(s)),rt=h.i32_const(t.alloc(s)),z=h.i32_const(t.alloc(s)),wt=h.i32_const(t.alloc(s)),yt=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),[...h.call(e+"_copy",h.getLocal("p1"),h.getLocal("pr")),...h.ret([])]),h.if(h.call(n+"_isOne",d),[...h.ret(h.call(e+"_doubleAffine",h.getLocal("p1"),h.getLocal("pr"))),...h.ret([])]),h.call(n+"_square",Q,ct),h.call(n+"_square",p,dt),h.call(n+"_square",dt,ft),h.call(n+"_add",Q,dt,Ft),h.call(n+"_square",Ft,Ft),h.call(n+"_sub",Ft,ct,Ft),h.call(n+"_sub",Ft,ft,Ft),h.call(n+"_add",Ft,Ft,Ft),h.call(n+"_add",ct,ct,rt),h.call(n+"_add",rt,ct,rt),h.call(n+"_square",rt,z),h.call(n+"_mul",p,d,wt),h.call(n+"_add",Ft,Ft,m),h.call(n+"_sub",z,m,m),h.call(n+"_add",ft,ft,yt),h.call(n+"_add",yt,yt,yt),h.call(n+"_add",yt,yt,yt),h.call(n+"_sub",Ft,m,v),h.call(n+"_mul",v,rt,v),h.call(n+"_sub",v,yt,v),h.call(n+"_add",wt,wt,et))}function E(){const A=t.addFunction(e+"_doubleAffine");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.getLocal("pr"),m=h.i32_add(h.getLocal("pr"),h.i32_const(s)),v=h.i32_add(h.getLocal("pr"),h.i32_const(s*2)),et=h.i32_const(t.alloc(s)),ct=h.i32_const(t.alloc(s)),dt=h.i32_const(t.alloc(s)),ft=h.i32_const(t.alloc(s)),Ft=h.i32_const(t.alloc(s)),rt=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZeroAffine",h.getLocal("p1")),[...h.call(e+"_toJacobian",h.getLocal("p1"),h.getLocal("pr")),...h.ret([])]),h.call(n+"_square",Q,et),h.call(n+"_square",p,ct),h.call(n+"_square",ct,dt),h.call(n+"_add",Q,ct,ft),h.call(n+"_square",ft,ft),h.call(n+"_sub",ft,et,ft),h.call(n+"_sub",ft,dt,ft),h.call(n+"_add",ft,ft,ft),h.call(n+"_add",et,et,Ft),h.call(n+"_add",Ft,et,Ft),h.call(n+"_add",p,p,v),h.call(n+"_square",Ft,d),h.call(n+"_sub",d,ft,d),h.call(n+"_sub",d,ft,d),h.call(n+"_add",dt,dt,rt),h.call(n+"_add",rt,rt,rt),h.call(n+"_add",rt,rt,rt),h.call(n+"_sub",ft,d,m),h.call(n+"_mul",m,Ft,m),h.call(n+"_sub",m,rt,m))}function G(){const A=t.addFunction(e+"_eqAffine");A.addParam("p1","i32"),A.addParam("p2","i32"),A.setReturnType("i32"),A.addLocal("z1","i32");const h=A.getCodeBuilder();A.addCode(h.ret(h.i32_and(h.call(n+"_eq",h.getLocal("p1"),h.getLocal("p2")),h.call(n+"_eq",h.i32_add(h.getLocal("p1"),h.i32_const(s)),h.i32_add(h.getLocal("p2"),h.i32_const(s))))))}function C(){const A=t.addFunction(e+"_toMontgomery");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_toMontgomery",h.getLocal("p1"),h.getLocal("pr")));for(let Q=1;Q<3;Q++)A.addCode(h.call(n+"_toMontgomery",h.i32_add(h.getLocal("p1"),h.i32_const(Q*s)),h.i32_add(h.getLocal("pr"),h.i32_const(Q*s))))}function N(){const A=t.addFunction(e+"_toMontgomeryAffine");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_toMontgomery",h.getLocal("p1"),h.getLocal("pr")));for(let Q=1;Q<2;Q++)A.addCode(h.call(n+"_toMontgomery",h.i32_add(h.getLocal("p1"),h.i32_const(Q*s)),h.i32_add(h.getLocal("pr"),h.i32_const(Q*s))))}function J(){const A=t.addFunction(e+"_fromMontgomery");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_fromMontgomery",h.getLocal("p1"),h.getLocal("pr")));for(let Q=1;Q<3;Q++)A.addCode(h.call(n+"_fromMontgomery",h.i32_add(h.getLocal("p1"),h.i32_const(Q*s)),h.i32_add(h.getLocal("pr"),h.i32_const(Q*s))))}function j(){const A=t.addFunction(e+"_fromMontgomeryAffine");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder();A.addCode(h.call(n+"_fromMontgomery",h.getLocal("p1"),h.getLocal("pr")));for(let Q=1;Q<2;Q++)A.addCode(h.call(n+"_fromMontgomery",h.i32_add(h.getLocal("p1"),h.i32_const(Q*s)),h.i32_add(h.getLocal("pr"),h.i32_const(Q*s))))}function R(){const A=t.addFunction(e+"_add");A.addParam("p1","i32"),A.addParam("p2","i32"),A.addParam("pr","i32"),A.addLocal("z1","i32"),A.addLocal("z2","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s));A.addCode(h.setLocal("z1",h.i32_add(h.getLocal("p1"),h.i32_const(s*2))));const d=h.getLocal("z1"),m=h.getLocal("p2"),v=h.i32_add(h.getLocal("p2"),h.i32_const(s));A.addCode(h.setLocal("z2",h.i32_add(h.getLocal("p2"),h.i32_const(s*2))));const et=h.getLocal("z2"),ct=h.getLocal("pr"),dt=h.i32_add(h.getLocal("pr"),h.i32_const(s)),ft=h.i32_add(h.getLocal("pr"),h.i32_const(s*2)),Ft=h.i32_const(t.alloc(s)),rt=h.i32_const(t.alloc(s)),z=h.i32_const(t.alloc(s)),wt=h.i32_const(t.alloc(s)),yt=h.i32_const(t.alloc(s)),It=h.i32_const(t.alloc(s)),Ut=h.i32_const(t.alloc(s)),Dt=h.i32_const(t.alloc(s)),Mt=h.i32_const(t.alloc(s)),Qt=h.i32_const(t.alloc(s)),it=h.i32_const(t.alloc(s)),K=h.i32_const(t.alloc(s)),U=h.i32_const(t.alloc(s)),D=h.i32_const(t.alloc(s)),ot=h.i32_const(t.alloc(s)),st=h.i32_const(t.alloc(s)),lt=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),[...h.call(e+"_copy",h.getLocal("p2"),h.getLocal("pr")),...h.ret([])]),h.if(h.call(e+"_isZero",h.getLocal("p2")),[...h.call(e+"_copy",h.getLocal("p1"),h.getLocal("pr")),...h.ret([])]),h.if(h.call(n+"_isOne",d),[...h.call(e+"_addMixed",m,Q,ct),...h.ret([])]),h.if(h.call(n+"_isOne",et),[...h.call(e+"_addMixed",Q,m,ct),...h.ret([])]),h.call(n+"_square",d,Ft),h.call(n+"_square",et,rt),h.call(n+"_mul",Q,rt,z),h.call(n+"_mul",m,Ft,wt),h.call(n+"_mul",d,Ft,yt),h.call(n+"_mul",et,rt,It),h.call(n+"_mul",p,It,Ut),h.call(n+"_mul",v,yt,Dt),h.if(h.call(n+"_eq",z,wt),h.if(h.call(n+"_eq",Ut,Dt),[...h.call(e+"_double",h.getLocal("p1"),h.getLocal("pr")),...h.ret([])])),h.call(n+"_sub",wt,z,Mt),h.call(n+"_sub",Dt,Ut,Qt),h.call(n+"_add",Mt,Mt,it),h.call(n+"_square",it,it),h.call(n+"_mul",Mt,it,K),h.call(n+"_add",Qt,Qt,U),h.call(n+"_mul",z,it,ot),h.call(n+"_square",U,D),h.call(n+"_add",ot,ot,st),h.call(n+"_sub",D,K,ct),h.call(n+"_sub",ct,st,ct),h.call(n+"_mul",Ut,K,lt),h.call(n+"_add",lt,lt,lt),h.call(n+"_sub",ot,ct,dt),h.call(n+"_mul",dt,U,dt),h.call(n+"_sub",dt,lt,dt),h.call(n+"_add",d,et,ft),h.call(n+"_square",ft,ft),h.call(n+"_sub",ft,Ft,ft),h.call(n+"_sub",ft,rt,ft),h.call(n+"_mul",ft,Mt,ft))}function b(){const A=t.addFunction(e+"_addMixed");A.addParam("p1","i32"),A.addParam("p2","i32"),A.addParam("pr","i32"),A.addLocal("z1","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s));A.addCode(h.setLocal("z1",h.i32_add(h.getLocal("p1"),h.i32_const(s*2))));const d=h.getLocal("z1"),m=h.getLocal("p2"),v=h.i32_add(h.getLocal("p2"),h.i32_const(s)),et=h.getLocal("pr"),ct=h.i32_add(h.getLocal("pr"),h.i32_const(s)),dt=h.i32_add(h.getLocal("pr"),h.i32_const(s*2)),ft=h.i32_const(t.alloc(s)),Ft=h.i32_const(t.alloc(s)),rt=h.i32_const(t.alloc(s)),z=h.i32_const(t.alloc(s)),wt=h.i32_const(t.alloc(s)),yt=h.i32_const(t.alloc(s)),It=h.i32_const(t.alloc(s)),Ut=h.i32_const(t.alloc(s)),Dt=h.i32_const(t.alloc(s)),Mt=h.i32_const(t.alloc(s)),Qt=h.i32_const(t.alloc(s)),it=h.i32_const(t.alloc(s)),K=h.i32_const(t.alloc(s)),U=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),[...h.call(e+"_copyAffine",h.getLocal("p2"),h.getLocal("pr")),...h.call(n+"_one",h.i32_add(h.getLocal("pr"),h.i32_const(s*2))),...h.ret([])]),h.if(h.call(e+"_isZeroAffine",h.getLocal("p2")),[...h.call(e+"_copy",h.getLocal("p1"),h.getLocal("pr")),...h.ret([])]),h.if(h.call(n+"_isOne",d),[...h.call(e+"_addAffine",Q,m,et),...h.ret([])]),h.call(n+"_square",d,ft),h.call(n+"_mul",m,ft,Ft),h.call(n+"_mul",d,ft,rt),h.call(n+"_mul",v,rt,z),h.if(h.call(n+"_eq",Q,Ft),h.if(h.call(n+"_eq",p,z),[...h.call(e+"_doubleAffine",h.getLocal("p2"),h.getLocal("pr")),...h.ret([])])),h.call(n+"_sub",Ft,Q,wt),h.call(n+"_sub",z,p,It),h.call(n+"_square",wt,yt),h.call(n+"_add",yt,yt,Ut),h.call(n+"_add",Ut,Ut,Ut),h.call(n+"_mul",wt,Ut,Dt),h.call(n+"_add",It,It,Mt),h.call(n+"_mul",Q,Ut,it),h.call(n+"_square",Mt,Qt),h.call(n+"_add",it,it,K),h.call(n+"_sub",Qt,Dt,et),h.call(n+"_sub",et,K,et),h.call(n+"_mul",p,Dt,U),h.call(n+"_add",U,U,U),h.call(n+"_sub",it,et,ct),h.call(n+"_mul",ct,Mt,ct),h.call(n+"_sub",ct,U,ct),h.call(n+"_add",d,wt,dt),h.call(n+"_square",dt,dt),h.call(n+"_sub",dt,ft,dt),h.call(n+"_sub",dt,yt,dt))}function w(){const A=t.addFunction(e+"_addAffine");A.addParam("p1","i32"),A.addParam("p2","i32"),A.addParam("pr","i32"),A.addLocal("z1","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s));A.addCode(h.setLocal("z1",h.i32_add(h.getLocal("p1"),h.i32_const(s*2))));const d=h.getLocal("p2"),m=h.i32_add(h.getLocal("p2"),h.i32_const(s)),v=h.getLocal("pr"),et=h.i32_add(h.getLocal("pr"),h.i32_const(s)),ct=h.i32_add(h.getLocal("pr"),h.i32_const(s*2)),dt=h.i32_const(t.alloc(s)),ft=h.i32_const(t.alloc(s)),Ft=h.i32_const(t.alloc(s)),rt=h.i32_const(t.alloc(s)),z=h.i32_const(t.alloc(s)),wt=h.i32_const(t.alloc(s)),yt=h.i32_const(t.alloc(s)),It=h.i32_const(t.alloc(s)),Ut=h.i32_const(t.alloc(s)),Dt=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZeroAffine",h.getLocal("p1")),[...h.call(e+"_copyAffine",h.getLocal("p2"),h.getLocal("pr")),...h.call(n+"_one",h.i32_add(h.getLocal("pr"),h.i32_const(s*2))),...h.ret([])]),h.if(h.call(e+"_isZeroAffine",h.getLocal("p2")),[...h.call(e+"_copyAffine",h.getLocal("p1"),h.getLocal("pr")),...h.call(n+"_one",h.i32_add(h.getLocal("pr"),h.i32_const(s*2))),...h.ret([])]),h.if(h.call(n+"_eq",Q,d),h.if(h.call(n+"_eq",p,m),[...h.call(e+"_doubleAffine",h.getLocal("p2"),h.getLocal("pr")),...h.ret([])])),h.call(n+"_sub",d,Q,dt),h.call(n+"_sub",m,p,Ft),h.call(n+"_square",dt,ft),h.call(n+"_add",ft,ft,rt),h.call(n+"_add",rt,rt,rt),h.call(n+"_mul",dt,rt,z),h.call(n+"_add",Ft,Ft,wt),h.call(n+"_mul",Q,rt,It),h.call(n+"_square",wt,yt),h.call(n+"_add",It,It,Ut),h.call(n+"_sub",yt,z,v),h.call(n+"_sub",v,Ut,v),h.call(n+"_mul",p,z,Dt),h.call(n+"_add",Dt,Dt,Dt),h.call(n+"_sub",It,v,et),h.call(n+"_mul",et,wt,et),h.call(n+"_sub",et,Dt,et),h.call(n+"_add",dt,dt,ct))}function Z(){const A=t.addFunction(e+"_neg");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.i32_add(h.getLocal("p1"),h.i32_const(s*2)),m=h.getLocal("pr"),v=h.i32_add(h.getLocal("pr"),h.i32_const(s)),et=h.i32_add(h.getLocal("pr"),h.i32_const(s*2));A.addCode(h.call(n+"_copy",Q,m),h.call(n+"_neg",p,v),h.call(n+"_copy",d,et))}function P(){const A=t.addFunction(e+"_negAffine");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.getLocal("pr"),m=h.i32_add(h.getLocal("pr"),h.i32_const(s));A.addCode(h.call(n+"_copy",Q,d),h.call(n+"_neg",p,m))}function V(){const A=t.addFunction(e+"_sub");A.addParam("p1","i32"),A.addParam("p2","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.i32_const(t.alloc(s*3));A.addCode(h.call(e+"_neg",h.getLocal("p2"),Q),h.call(e+"_add",h.getLocal("p1"),Q,h.getLocal("pr")))}function nt(){const A=t.addFunction(e+"_subMixed");A.addParam("p1","i32"),A.addParam("p2","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.i32_const(t.alloc(s*3));A.addCode(h.call(e+"_negAffine",h.getLocal("p2"),Q),h.call(e+"_addMixed",h.getLocal("p1"),Q,h.getLocal("pr")))}function I(){const A=t.addFunction(e+"_subAffine");A.addParam("p1","i32"),A.addParam("p2","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.i32_const(t.alloc(s*3));A.addCode(h.call(e+"_negAffine",h.getLocal("p2"),Q),h.call(e+"_addAffine",h.getLocal("p1"),Q,h.getLocal("pr")))}function y(){const A=t.addFunction(e+"_normalize");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.i32_add(h.getLocal("p1"),h.i32_const(s*2)),m=h.getLocal("pr"),v=h.i32_add(h.getLocal("pr"),h.i32_const(s)),et=h.i32_add(h.getLocal("pr"),h.i32_const(s*2)),ct=h.i32_const(t.alloc(s)),dt=h.i32_const(t.alloc(s)),ft=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),h.call(e+"_zero",h.getLocal("pr")),[...h.call(n+"_inverse",d,ct),...h.call(n+"_square",ct,dt),...h.call(n+"_mul",ct,dt,ft),...h.call(n+"_mul",Q,dt,m),...h.call(n+"_mul",p,ft,v),...h.call(n+"_one",et)]))}function _(){const A=t.addFunction(e+"_toAffine");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.i32_add(h.getLocal("p1"),h.i32_const(s*2)),m=h.getLocal("pr"),v=h.i32_add(h.getLocal("pr"),h.i32_const(s)),et=h.i32_const(t.alloc(s)),ct=h.i32_const(t.alloc(s)),dt=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZero",h.getLocal("p1")),[...h.call(n+"_zero",m),...h.call(n+"_zero",v)],[...h.call(n+"_inverse",d,et),...h.call(n+"_square",et,ct),...h.call(n+"_mul",et,ct,dt),...h.call(n+"_mul",Q,ct,m),...h.call(n+"_mul",p,dt,v)]))}function T(){const A=t.addFunction(e+"_toJacobian");A.addParam("p1","i32"),A.addParam("pr","i32");const h=A.getCodeBuilder(),Q=h.getLocal("p1"),p=h.i32_add(h.getLocal("p1"),h.i32_const(s)),d=h.getLocal("pr"),m=h.i32_add(h.getLocal("pr"),h.i32_const(s)),v=h.i32_add(h.getLocal("pr"),h.i32_const(s*2));A.addCode(h.if(h.call(e+"_isZeroAffine",h.getLocal("p1")),h.call(e+"_zero",h.getLocal("pr")),[...h.call(n+"_one",v),...h.call(n+"_copy",p,m),...h.call(n+"_copy",Q,d)]))}function B(){const A=t.addFunction(e+"_batchToAffine");A.addParam("pIn","i32"),A.addParam("n","i32"),A.addParam("pOut","i32"),A.addLocal("pAux","i32"),A.addLocal("itIn","i32"),A.addLocal("itAux","i32"),A.addLocal("itOut","i32"),A.addLocal("i","i32");const h=A.getCodeBuilder(),Q=h.i32_const(t.alloc(s));A.addCode(h.setLocal("pAux",h.i32_load(h.i32_const(0))),h.i32_store(h.i32_const(0),h.i32_add(h.getLocal("pAux"),h.i32_mul(h.getLocal("n"),h.i32_const(s)))),h.call(n+"_batchInverse",h.i32_add(h.getLocal("pIn"),h.i32_const(s*2)),h.i32_const(s*3),h.getLocal("n"),h.getLocal("pAux"),h.i32_const(s)),h.setLocal("itIn",h.getLocal("pIn")),h.setLocal("itAux",h.getLocal("pAux")),h.setLocal("itOut",h.getLocal("pOut")),h.setLocal("i",h.i32_const(0)),h.block(h.loop(h.br_if(1,h.i32_eq(h.getLocal("i"),h.getLocal("n"))),h.if(h.call(n+"_isZero",h.getLocal("itAux")),[...h.call(n+"_zero",h.getLocal("itOut")),...h.call(n+"_zero",h.i32_add(h.getLocal("itOut"),h.i32_const(s)))],[...h.call(n+"_mul",h.getLocal("itAux"),h.i32_add(h.getLocal("itIn"),h.i32_const(s)),Q),...h.call(n+"_square",h.getLocal("itAux"),h.getLocal("itAux")),...h.call(n+"_mul",h.getLocal("itAux"),h.getLocal("itIn"),h.getLocal("itOut")),...h.call(n+"_mul",h.getLocal("itAux"),Q,h.i32_add(h.getLocal("itOut"),h.i32_const(s)))]),h.setLocal("itIn",h.i32_add(h.getLocal("itIn"),h.i32_const(s*3))),h.setLocal("itOut",h.i32_add(h.getLocal("itOut"),h.i32_const(s*2))),h.setLocal("itAux",h.i32_add(h.getLocal("itAux"),h.i32_const(s))),h.setLocal("i",h.i32_add(h.getLocal("i"),h.i32_const(1))),h.br(0))),h.i32_store(h.i32_const(0),h.getLocal("pAux")))}function Y(){const A=t.addFunction(e+"__reverseBytes");A.addParam("pIn","i32"),A.addParam("n","i32"),A.addParam("pOut","i32"),A.addLocal("itOut","i32"),A.addLocal("itIn","i32");const h=A.getCodeBuilder();A.addCode(h.setLocal("itOut",h.i32_sub(h.i32_add(h.getLocal("pOut"),h.getLocal("n")),h.i32_const(1))),h.setLocal("itIn",h.getLocal("pIn")),h.block(h.loop(h.br_if(1,h.i32_lt_s(h.getLocal("itOut"),h.getLocal("pOut"))),h.i32_store8(h.getLocal("itOut"),h.i32_load8_u(h.getLocal("itIn"))),h.setLocal("itOut",h.i32_sub(h.getLocal("itOut"),h.i32_const(1))),h.setLocal("itIn",h.i32_add(h.getLocal("itIn"),h.i32_const(1))),h.br(0))))}function tt(){const A=t.addFunction(e+"_LEMtoC");A.addParam("pIn","i32"),A.addParam("pOut","i32");const h=A.getCodeBuilder(),Q=h.i32_const(t.alloc(s));A.addCode(h.if(h.call(e+"_isZeroAffine",h.getLocal("pIn")),[...h.call(n+"_zero",h.getLocal("pOut")),...h.i32_store8(h.getLocal("pOut"),h.i32_const(64)),...h.ret([])]),h.call(n+"_fromMontgomery",h.getLocal("pIn"),Q),h.call(e+"__reverseBytes",Q,h.i32_const(s),h.getLocal("pOut")),h.if(h.i32_eq(h.call(n+"_sign",h.i32_add(h.getLocal("pIn"),h.i32_const(s))),h.i32_const(-1)),h.i32_store8(h.getLocal("pOut"),h.i32_or(h.i32_load8_u(h.getLocal("pOut")),h.i32_const(128)))))}function $(){const A=t.addFunction(e+"_LEMtoU");A.addParam("pIn","i32"),A.addParam("pOut","i32");const h=A.getCodeBuilder(),Q=t.alloc(s*2),p=h.i32_const(Q),d=h.i32_const(Q),m=h.i32_const(Q+s);A.addCode(h.if(h.call(e+"_isZeroAffine",h.getLocal("pIn")),[...h.call(e+"_zeroAffine",h.getLocal("pOut")),...h.ret([])]),h.call(e+"_fromMontgomeryAffine",h.getLocal("pIn"),p),h.call(e+"__reverseBytes",d,h.i32_const(s),h.getLocal("pOut")),h.call(e+"__reverseBytes",m,h.i32_const(s),h.i32_add(h.getLocal("pOut"),h.i32_const(s))))}function X(){const A=t.addFunction(e+"_UtoLEM");A.addParam("pIn","i32"),A.addParam("pOut","i32");const h=A.getCodeBuilder(),Q=t.alloc(s*2),p=h.i32_const(Q),d=h.i32_const(Q),m=h.i32_const(Q+s);A.addCode(h.if(h.i32_and(h.i32_load8_u(h.getLocal("pIn")),h.i32_const(64)),[...h.call(e+"_zeroAffine",h.getLocal("pOut")),...h.ret([])]),h.call(e+"__reverseBytes",h.getLocal("pIn"),h.i32_const(s),d),h.call(e+"__reverseBytes",h.i32_add(h.getLocal("pIn"),h.i32_const(s)),h.i32_const(s),m),h.call(e+"_toMontgomeryAffine",p,h.getLocal("pOut")))}function F(){const A=t.addFunction(e+"_CtoLEM");A.addParam("pIn","i32"),A.addParam("pOut","i32"),A.addLocal("firstByte","i32"),A.addLocal("greatest","i32");const h=A.getCodeBuilder(),Q=t.alloc(s*2),p=h.i32_const(Q),d=h.i32_const(Q+s);A.addCode(h.setLocal("firstByte",h.i32_load8_u(h.getLocal("pIn"))),h.if(h.i32_and(h.getLocal("firstByte"),h.i32_const(64)),[...h.call(e+"_zeroAffine",h.getLocal("pOut")),...h.ret([])]),h.setLocal("greatest",h.i32_and(h.getLocal("firstByte"),h.i32_const(128))),h.call(n+"_copy",h.getLocal("pIn"),d),h.i32_store8(d,h.i32_and(h.getLocal("firstByte"),h.i32_const(63))),h.call(e+"__reverseBytes",d,h.i32_const(s),p),h.call(n+"_toMontgomery",p,h.getLocal("pOut")),h.call(n+"_square",h.getLocal("pOut"),d),h.call(n+"_mul",h.getLocal("pOut"),d,d),h.call(n+"_add",d,h.i32_const(i),d),h.call(n+"_sqrt",d,d),h.call(n+"_neg",d,p),h.if(h.i32_eq(h.call(n+"_sign",d),h.i32_const(-1)),h.if(h.getLocal("greatest"),h.call(n+"_copy",d,h.i32_add(h.getLocal("pOut"),h.i32_const(s))),h.call(n+"_neg",d,h.i32_add(h.getLocal("pOut"),h.i32_const(s)))),h.if(h.getLocal("greatest"),h.call(n+"_neg",d,h.i32_add(h.getLocal("pOut"),h.i32_const(s))),h.call(n+"_copy",d,h.i32_add(h.getLocal("pOut"),h.i32_const(s))))))}function M(){const A=t.addFunction(e+"_inCurveAffine");A.addParam("pIn","i32"),A.setReturnType("i32");const h=A.getCodeBuilder(),Q=h.getLocal("pIn"),p=h.i32_add(h.getLocal("pIn"),h.i32_const(s)),d=h.i32_const(t.alloc(s)),m=h.i32_const(t.alloc(s));A.addCode(h.call(n+"_square",p,d),h.call(n+"_square",Q,m),h.call(n+"_mul",Q,m,m),h.call(n+"_add",m,h.i32_const(i),m),h.ret(h.call(n+"_eq",d,m)))}function W(){const A=t.addFunction(e+"_inCurve");A.addParam("pIn","i32"),A.setReturnType("i32");const h=A.getCodeBuilder(),Q=h.i32_const(t.alloc(s*2));A.addCode(h.call(e+"_toAffine",h.getLocal("pIn"),Q),h.ret(h.call(e+"_inCurveAffine",Q)))}return u(),r(),g(),f(),c(),l(),T(),G(),S(),L(),E(),k(),w(),b(),R(),P(),Z(),I(),nt(),V(),j(),J(),N(),C(),_(),M(),W(),B(),y(),Y(),$(),tt(),X(),F(),Yo(t,e+"_batchLEMtoU",e+"_LEMtoU",s*2,s*2),Yo(t,e+"_batchLEMtoC",e+"_LEMtoC",s*2,s),Yo(t,e+"_batchUtoLEM",e+"_UtoLEM",s*2,s*2),Yo(t,e+"_batchCtoLEM",e+"_CtoLEM",s,s*2,!0),Yo(t,e+"_batchToJacobian",e+"_toJacobian",s*2,s*3,!0),Kd(t,e,e+"_multiexp",e+"_add",s*3),Kd(t,e,e+"_multiexpAffine",e+"_addMixed",s*2),Qd(t,e+"_timesScalar",s*3,e+"_add",e+"_double",e+"_sub",e+"_copy",e+"_zero"),Qd(t,e+"_timesScalarAffine",s*2,e+"_addMixed",e+"_double",e+"_subMixed",e+"_copyAffine",e+"_zero"),t.exportFunction(e+"_isZero"),t.exportFunction(e+"_isZeroAffine"),t.exportFunction(e+"_eq"),t.exportFunction(e+"_eqMixed"),t.exportFunction(e+"_eqAffine"),t.exportFunction(e+"_copy"),t.exportFunction(e+"_copyAffine"),t.exportFunction(e+"_zero"),t.exportFunction(e+"_zeroAffine"),t.exportFunction(e+"_double"),t.exportFunction(e+"_doubleAffine"),t.exportFunction(e+"_add"),t.exportFunction(e+"_addMixed"),t.exportFunction(e+"_addAffine"),t.exportFunction(e+"_neg"),t.exportFunction(e+"_negAffine"),t.exportFunction(e+"_sub"),t.exportFunction(e+"_subMixed"),t.exportFunction(e+"_subAffine"),t.exportFunction(e+"_fromMontgomery"),t.exportFunction(e+"_fromMontgomeryAffine"),t.exportFunction(e+"_toMontgomery"),t.exportFunction(e+"_toMontgomeryAffine"),t.exportFunction(e+"_timesScalar"),t.exportFunction(e+"_timesScalarAffine"),t.exportFunction(e+"_normalize"),t.exportFunction(e+"_LEMtoU"),t.exportFunction(e+"_LEMtoC"),t.exportFunction(e+"_UtoLEM"),t.exportFunction(e+"_CtoLEM"),t.exportFunction(e+"_batchLEMtoU"),t.exportFunction(e+"_batchLEMtoC"),t.exportFunction(e+"_batchUtoLEM"),t.exportFunction(e+"_batchCtoLEM"),t.exportFunction(e+"_toAffine"),t.exportFunction(e+"_toJacobian"),t.exportFunction(e+"_batchToAffine"),t.exportFunction(e+"_batchToJacobian"),t.exportFunction(e+"_inCurve"),t.exportFunction(e+"_inCurveAffine"),e};const{isOdd:gm,modInv:Nd,modPow:jo}=gn,os=Ei;var Dh=function(t,e,n,i,o){const r=t.modules[i].n64*8,l=t.modules[n].n64*8,c=t.modules[i].q;let f=c-1n,g=0;for(;!gm(f);)g++,f=f>>1n;let L=2n;for(;jo(L,c>>1n,c)===1n;)L=L+1n;const S=new Array(g+1);S[g]=jo(L,f,c);let k=g-1;for(;k>=0;)S[k]=jo(S[k+1],2n,c),k--;const E=[],G=(1n<<BigInt(r*8))%c;for(let Q=0;Q<S.length;Q++){const p=S[Q]*G%c;E.push(...os.bigInt2BytesLE(p,r))}const C=t.alloc(E),N=new Array(g+1);N[0]=1n;for(let Q=1;Q<=g;Q++)N[Q]=N[Q-1]*2n;const J=[];for(let Q=0;Q<=g;Q++){const p=Nd(N[Q],c)*G%c;J.push(...os.bigInt2BytesLE(p,r))}const j=t.alloc(J),R=jo(L,2n,c),b=[],w=[];for(let Q=0;Q<=g;Q++){const p=jo(R,2n**BigInt(Q),c),d=Nd(c+1n-p,c);b.push(...os.bigInt2BytesLE(p*G%c,r)),w.push(...os.bigInt2BytesLE(d*G%c,r))}const Z=t.alloc(b),P=t.alloc(w);function V(Q){let p=0;for(let d=0;d<8;d++)Q&1<<d&&(p=p|128>>d);return p}const nt=Array(256);for(let Q=0;Q<256;Q++)nt[Q]=V(Q);const I=t.alloc(nt);function y(){const Q=t.addFunction(e+"__log2");Q.addParam("n","i32"),Q.setReturnType("i32"),Q.addLocal("bits","i32"),Q.addLocal("aux","i32");const p=Q.getCodeBuilder();Q.addCode(p.setLocal("aux",p.i32_shr_u(p.getLocal("n"),p.i32_const(1)))),Q.addCode(p.setLocal("bits",p.i32_const(0))),Q.addCode(p.block(p.loop(p.br_if(1,p.i32_eqz(p.getLocal("aux"))),p.setLocal("aux",p.i32_shr_u(p.getLocal("aux"),p.i32_const(1))),p.setLocal("bits",p.i32_add(p.getLocal("bits"),p.i32_const(1))),p.br(0)))),Q.addCode(p.if(p.i32_ne(p.getLocal("n"),p.i32_shl(p.i32_const(1),p.getLocal("bits"))),p.unreachable())),Q.addCode(p.if(p.i32_gt_u(p.getLocal("bits"),p.i32_const(g)),p.unreachable())),Q.addCode(p.getLocal("bits"))}function _(){const Q=t.addFunction(e+"_fft");Q.addParam("px","i32"),Q.addParam("n","i32"),Q.addLocal("bits","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r));Q.addCode(p.setLocal("bits",p.call(e+"__log2",p.getLocal("n"))),p.call(i+"_one",d),p.call(e+"_rawfft",p.getLocal("px"),p.getLocal("bits"),p.i32_const(0),d))}function T(){const Q=t.addFunction(e+"_ifft");Q.addParam("px","i32"),Q.addParam("n","i32"),Q.addLocal("bits","i32"),Q.addLocal("pInv2","i32");const p=Q.getCodeBuilder();Q.addCode(p.setLocal("bits",p.call(e+"__log2",p.getLocal("n"))),p.setLocal("pInv2",p.i32_add(p.i32_const(j),p.i32_mul(p.getLocal("bits"),p.i32_const(r)))),p.call(e+"_rawfft",p.getLocal("px"),p.getLocal("bits"),p.i32_const(1),p.getLocal("pInv2")))}function B(){const Q=t.addFunction(e+"_rawfft");Q.addParam("px","i32"),Q.addParam("bits","i32"),Q.addParam("reverse","i32"),Q.addParam("mulFactor","i32"),Q.addLocal("s","i32"),Q.addLocal("k","i32"),Q.addLocal("j","i32"),Q.addLocal("m","i32"),Q.addLocal("mdiv2","i32"),Q.addLocal("n","i32"),Q.addLocal("pwm","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r)),m=p.i32_const(t.alloc(l)),v=p.i32_const(t.alloc(l));Q.addCode(p.call(e+"__reversePermutation",p.getLocal("px"),p.getLocal("bits")),p.setLocal("n",p.i32_shl(p.i32_const(1),p.getLocal("bits"))),p.setLocal("s",p.i32_const(1)),p.block(p.loop(p.br_if(1,p.i32_gt_u(p.getLocal("s"),p.getLocal("bits"))),p.setLocal("m",p.i32_shl(p.i32_const(1),p.getLocal("s"))),p.setLocal("pwm",p.i32_add(p.i32_const(C),p.i32_mul(p.getLocal("s"),p.i32_const(r)))),p.setLocal("k",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_ge_u(p.getLocal("k"),p.getLocal("n"))),p.call(i+"_one",d),p.setLocal("mdiv2",p.i32_shr_u(p.getLocal("m"),p.i32_const(1))),p.setLocal("j",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_ge_u(p.getLocal("j"),p.getLocal("mdiv2"))),p.setLocal("idx1",p.i32_add(p.getLocal("px"),p.i32_mul(p.i32_add(p.getLocal("k"),p.getLocal("j")),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("idx1"),p.i32_mul(p.getLocal("mdiv2"),p.i32_const(l)))),p.call(o,p.getLocal("idx2"),d,m),p.call(n+"_copy",p.getLocal("idx1"),v),p.call(n+"_add",v,m,p.getLocal("idx1")),p.call(n+"_sub",v,m,p.getLocal("idx2")),p.call(i+"_mul",d,p.getLocal("pwm"),d),p.setLocal("j",p.i32_add(p.getLocal("j"),p.i32_const(1))),p.br(0))),p.setLocal("k",p.i32_add(p.getLocal("k"),p.getLocal("m"))),p.br(0))),p.setLocal("s",p.i32_add(p.getLocal("s"),p.i32_const(1))),p.br(0))),p.call(e+"__fftFinal",p.getLocal("px"),p.getLocal("bits"),p.getLocal("reverse"),p.getLocal("mulFactor")))}function Y(){const Q=t.addFunction(e+"__fftFinal");Q.addParam("px","i32"),Q.addParam("bits","i32"),Q.addParam("reverse","i32"),Q.addParam("mulFactor","i32"),Q.addLocal("n","i32"),Q.addLocal("ndiv2","i32"),Q.addLocal("pInv2","i32"),Q.addLocal("i","i32"),Q.addLocal("mask","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(l));Q.addCode(p.if(p.i32_and(p.i32_eqz(p.getLocal("reverse")),p.call(i+"_isOne",p.getLocal("mulFactor"))),p.ret([])),p.setLocal("n",p.i32_shl(p.i32_const(1),p.getLocal("bits"))),p.setLocal("mask",p.i32_sub(p.getLocal("n"),p.i32_const(1))),p.setLocal("i",p.i32_const(1)),p.setLocal("ndiv2",p.i32_shr_u(p.getLocal("n"),p.i32_const(1))),p.block(p.loop(p.br_if(1,p.i32_ge_u(p.getLocal("i"),p.getLocal("ndiv2"))),p.setLocal("idx1",p.i32_add(p.getLocal("px"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("px"),p.i32_mul(p.i32_sub(p.getLocal("n"),p.getLocal("i")),p.i32_const(l)))),p.if(p.getLocal("reverse"),p.if(p.call(i+"_isOne",p.getLocal("mulFactor")),[...p.call(n+"_copy",p.getLocal("idx1"),d),...p.call(n+"_copy",p.getLocal("idx2"),p.getLocal("idx1")),...p.call(n+"_copy",d,p.getLocal("idx2"))],[...p.call(n+"_copy",p.getLocal("idx1"),d),...p.call(o,p.getLocal("idx2"),p.getLocal("mulFactor"),p.getLocal("idx1")),...p.call(o,d,p.getLocal("mulFactor"),p.getLocal("idx2"))]),p.if(p.call(i+"_isOne",p.getLocal("mulFactor")),[],[...p.call(o,p.getLocal("idx1"),p.getLocal("mulFactor"),p.getLocal("idx1")),...p.call(o,p.getLocal("idx2"),p.getLocal("mulFactor"),p.getLocal("idx2"))])),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))),p.if(p.call(i+"_isOne",p.getLocal("mulFactor")),[],[...p.call(o,p.getLocal("px"),p.getLocal("mulFactor"),p.getLocal("px")),...p.setLocal("idx2",p.i32_add(p.getLocal("px"),p.i32_mul(p.getLocal("ndiv2"),p.i32_const(l)))),...p.call(o,p.getLocal("idx2"),p.getLocal("mulFactor"),p.getLocal("idx2"))]))}function tt(){const Q=t.addFunction(e+"__reversePermutation");Q.addParam("px","i32"),Q.addParam("bits","i32"),Q.addLocal("n","i32"),Q.addLocal("i","i32"),Q.addLocal("ri","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(l));Q.addCode(p.setLocal("n",p.i32_shl(p.i32_const(1),p.getLocal("bits"))),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("i"),p.getLocal("n"))),p.setLocal("idx1",p.i32_add(p.getLocal("px"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("ri",p.call(e+"__rev",p.getLocal("i"),p.getLocal("bits"))),p.setLocal("idx2",p.i32_add(p.getLocal("px"),p.i32_mul(p.getLocal("ri"),p.i32_const(l)))),p.if(p.i32_lt_u(p.getLocal("i"),p.getLocal("ri")),[...p.call(n+"_copy",p.getLocal("idx1"),d),...p.call(n+"_copy",p.getLocal("idx2"),p.getLocal("idx1")),...p.call(n+"_copy",d,p.getLocal("idx2"))]),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}function $(){const Q=t.addFunction(e+"__rev");Q.addParam("x","i32"),Q.addParam("bits","i32"),Q.setReturnType("i32");const p=Q.getCodeBuilder();Q.addCode(p.i32_rotl(p.i32_add(p.i32_add(p.i32_shl(p.i32_load8_u(p.i32_and(p.getLocal("x"),p.i32_const(255)),I,0),p.i32_const(24)),p.i32_shl(p.i32_load8_u(p.i32_and(p.i32_shr_u(p.getLocal("x"),p.i32_const(8)),p.i32_const(255)),I,0),p.i32_const(16))),p.i32_add(p.i32_shl(p.i32_load8_u(p.i32_and(p.i32_shr_u(p.getLocal("x"),p.i32_const(16)),p.i32_const(255)),I,0),p.i32_const(8)),p.i32_load8_u(p.i32_and(p.i32_shr_u(p.getLocal("x"),p.i32_const(24)),p.i32_const(255)),I,0))),p.getLocal("bits")))}function X(){const Q=t.addFunction(e+"_fftJoin");Q.addParam("pBuff1","i32"),Q.addParam("pBuff2","i32"),Q.addParam("n","i32"),Q.addParam("first","i32"),Q.addParam("inc","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32"),Q.addLocal("i","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r)),m=p.i32_const(t.alloc(l)),v=p.i32_const(t.alloc(l));Q.addCode(p.call(i+"_copy",p.getLocal("first"),d),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("i"),p.getLocal("n"))),p.setLocal("idx1",p.i32_add(p.getLocal("pBuff1"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("pBuff2"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.call(o,p.getLocal("idx2"),d,m),p.call(n+"_copy",p.getLocal("idx1"),v),p.call(n+"_add",v,m,p.getLocal("idx1")),p.call(n+"_sub",v,m,p.getLocal("idx2")),p.call(i+"_mul",d,p.getLocal("inc"),d),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}function F(){const Q=t.addFunction(e+"_fftJoinExt");Q.addParam("pBuff1","i32"),Q.addParam("pBuff2","i32"),Q.addParam("n","i32"),Q.addParam("first","i32"),Q.addParam("inc","i32"),Q.addParam("totalBits","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32"),Q.addLocal("i","i32"),Q.addLocal("pShiftToM","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r)),m=p.i32_const(t.alloc(l));Q.addCode(p.setLocal("pShiftToM",p.i32_add(p.i32_const(Z),p.i32_mul(p.getLocal("totalBits"),p.i32_const(r)))),p.call(i+"_copy",p.getLocal("first"),d),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("i"),p.getLocal("n"))),p.setLocal("idx1",p.i32_add(p.getLocal("pBuff1"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("pBuff2"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.call(n+"_add",p.getLocal("idx1"),p.getLocal("idx2"),m),p.call(o,p.getLocal("idx2"),p.getLocal("pShiftToM"),p.getLocal("idx2")),p.call(n+"_add",p.getLocal("idx1"),p.getLocal("idx2"),p.getLocal("idx2")),p.call(o,p.getLocal("idx2"),d,p.getLocal("idx2")),p.call(n+"_copy",m,p.getLocal("idx1")),p.call(i+"_mul",d,p.getLocal("inc"),d),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}function M(){const Q=t.addFunction(e+"_fftJoinExtInv");Q.addParam("pBuff1","i32"),Q.addParam("pBuff2","i32"),Q.addParam("n","i32"),Q.addParam("first","i32"),Q.addParam("inc","i32"),Q.addParam("totalBits","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32"),Q.addLocal("i","i32"),Q.addLocal("pShiftToM","i32"),Q.addLocal("pSConst","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r)),m=p.i32_const(t.alloc(l));Q.addCode(p.setLocal("pShiftToM",p.i32_add(p.i32_const(Z),p.i32_mul(p.getLocal("totalBits"),p.i32_const(r)))),p.setLocal("pSConst",p.i32_add(p.i32_const(P),p.i32_mul(p.getLocal("totalBits"),p.i32_const(r)))),p.call(i+"_copy",p.getLocal("first"),d),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("i"),p.getLocal("n"))),p.setLocal("idx1",p.i32_add(p.getLocal("pBuff1"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("pBuff2"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.call(o,p.getLocal("idx2"),d,m),p.call(n+"_sub",p.getLocal("idx1"),m,p.getLocal("idx2")),p.call(o,p.getLocal("idx2"),p.getLocal("pSConst"),p.getLocal("idx2")),p.call(o,p.getLocal("idx1"),p.getLocal("pShiftToM"),p.getLocal("idx1")),p.call(n+"_sub",m,p.getLocal("idx1"),p.getLocal("idx1")),p.call(o,p.getLocal("idx1"),p.getLocal("pSConst"),p.getLocal("idx1")),p.call(i+"_mul",d,p.getLocal("inc"),d),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}function W(){const Q=t.addFunction(e+"_prepareLagrangeEvaluation");Q.addParam("pBuff1","i32"),Q.addParam("pBuff2","i32"),Q.addParam("n","i32"),Q.addParam("first","i32"),Q.addParam("inc","i32"),Q.addParam("totalBits","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32"),Q.addLocal("i","i32"),Q.addLocal("pShiftToM","i32"),Q.addLocal("pSConst","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r)),m=p.i32_const(t.alloc(l));Q.addCode(p.setLocal("pShiftToM",p.i32_add(p.i32_const(Z),p.i32_mul(p.getLocal("totalBits"),p.i32_const(r)))),p.setLocal("pSConst",p.i32_add(p.i32_const(P),p.i32_mul(p.getLocal("totalBits"),p.i32_const(r)))),p.call(i+"_copy",p.getLocal("first"),d),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("i"),p.getLocal("n"))),p.setLocal("idx1",p.i32_add(p.getLocal("pBuff1"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("pBuff2"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.call(o,p.getLocal("idx1"),p.getLocal("pShiftToM"),m),p.call(n+"_sub",p.getLocal("idx2"),m,m),p.call(n+"_sub",p.getLocal("idx1"),p.getLocal("idx2"),p.getLocal("idx2")),p.call(o,m,p.getLocal("pSConst"),p.getLocal("idx1")),p.call(o,p.getLocal("idx2"),d,p.getLocal("idx2")),p.call(i+"_mul",d,p.getLocal("inc"),d),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}function A(){const Q=t.addFunction(e+"_fftMix");Q.addParam("pBuff","i32"),Q.addParam("n","i32"),Q.addParam("exp","i32"),Q.addLocal("nGroups","i32"),Q.addLocal("nPerGroup","i32"),Q.addLocal("nPerGroupDiv2","i32"),Q.addLocal("pairOffset","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32"),Q.addLocal("i","i32"),Q.addLocal("j","i32"),Q.addLocal("pwm","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(r)),m=p.i32_const(t.alloc(l)),v=p.i32_const(t.alloc(l));Q.addCode(p.setLocal("nPerGroup",p.i32_shl(p.i32_const(1),p.getLocal("exp"))),p.setLocal("nPerGroupDiv2",p.i32_shr_u(p.getLocal("nPerGroup"),p.i32_const(1))),p.setLocal("nGroups",p.i32_shr_u(p.getLocal("n"),p.getLocal("exp"))),p.setLocal("pairOffset",p.i32_mul(p.getLocal("nPerGroupDiv2"),p.i32_const(l))),p.setLocal("pwm",p.i32_add(p.i32_const(C),p.i32_mul(p.getLocal("exp"),p.i32_const(r)))),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("i"),p.getLocal("nGroups"))),p.call(i+"_one",d),p.setLocal("j",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_eq(p.getLocal("j"),p.getLocal("nPerGroupDiv2"))),p.setLocal("idx1",p.i32_add(p.getLocal("pBuff"),p.i32_mul(p.i32_add(p.i32_mul(p.getLocal("i"),p.getLocal("nPerGroup")),p.getLocal("j")),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("idx1"),p.getLocal("pairOffset"))),p.call(o,p.getLocal("idx2"),d,m),p.call(n+"_copy",p.getLocal("idx1"),v),p.call(n+"_add",v,m,p.getLocal("idx1")),p.call(n+"_sub",v,m,p.getLocal("idx2")),p.call(i+"_mul",d,p.getLocal("pwm"),d),p.setLocal("j",p.i32_add(p.getLocal("j"),p.i32_const(1))),p.br(0))),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}function h(){const Q=t.addFunction(e+"_fftFinal");Q.addParam("pBuff","i32"),Q.addParam("n","i32"),Q.addParam("factor","i32"),Q.addLocal("idx1","i32"),Q.addLocal("idx2","i32"),Q.addLocal("i","i32"),Q.addLocal("ndiv2","i32");const p=Q.getCodeBuilder(),d=p.i32_const(t.alloc(l));Q.addCode(p.setLocal("ndiv2",p.i32_shr_u(p.getLocal("n"),p.i32_const(1))),p.if(p.i32_and(p.getLocal("n"),p.i32_const(1)),p.call(o,p.i32_add(p.getLocal("pBuff"),p.i32_mul(p.getLocal("ndiv2"),p.i32_const(l))),p.getLocal("factor"),p.i32_add(p.getLocal("pBuff"),p.i32_mul(p.getLocal("ndiv2"),p.i32_const(l))))),p.setLocal("i",p.i32_const(0)),p.block(p.loop(p.br_if(1,p.i32_ge_u(p.getLocal("i"),p.getLocal("ndiv2"))),p.setLocal("idx1",p.i32_add(p.getLocal("pBuff"),p.i32_mul(p.getLocal("i"),p.i32_const(l)))),p.setLocal("idx2",p.i32_add(p.getLocal("pBuff"),p.i32_mul(p.i32_sub(p.i32_sub(p.getLocal("n"),p.i32_const(1)),p.getLocal("i")),p.i32_const(l)))),p.call(o,p.getLocal("idx2"),p.getLocal("factor"),d),p.call(o,p.getLocal("idx1"),p.getLocal("factor"),p.getLocal("idx2")),p.call(n+"_copy",d,p.getLocal("idx1")),p.setLocal("i",p.i32_add(p.getLocal("i"),p.i32_const(1))),p.br(0))))}$(),tt(),Y(),B(),y(),_(),T(),X(),F(),M(),A(),h(),W(),t.exportFunction(e+"_fft"),t.exportFunction(e+"_ifft"),t.exportFunction(e+"_rawfft"),t.exportFunction(e+"_fftJoin"),t.exportFunction(e+"_fftJoinExt"),t.exportFunction(e+"_fftJoinExtInv"),t.exportFunction(e+"_fftMix"),t.exportFunction(e+"_fftFinal"),t.exportFunction(e+"_prepareLagrangeEvaluation")},qh=function(t,e,n){const o=t.modules[n].n64*8;function s(){const u=t.addFunction(e+"_zero");u.addParam("px","i32"),u.addParam("n","i32"),u.addLocal("lastp","i32"),u.addLocal("p","i32");const l=u.getCodeBuilder();u.addCode(l.setLocal("p",l.getLocal("px")),l.setLocal("lastp",l.i32_add(l.getLocal("px"),l.i32_mul(l.getLocal("n"),l.i32_const(o)))),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("p"),l.getLocal("lastp"))),l.call(n+"_zero",l.getLocal("p")),l.setLocal("p",l.i32_add(l.getLocal("p"),l.i32_const(o))),l.br(0))))}function r(){const u=t.addFunction(e+"_constructLC");u.addParam("ppolynomials","i32"),u.addParam("psignals","i32"),u.addParam("nSignals","i32"),u.addParam("pres","i32"),u.addLocal("i","i32"),u.addLocal("j","i32"),u.addLocal("pp","i32"),u.addLocal("ps","i32"),u.addLocal("pd","i32"),u.addLocal("ncoefs","i32");const l=u.getCodeBuilder(),c=l.i32_const(t.alloc(o));u.addCode(l.setLocal("i",l.i32_const(0)),l.setLocal("pp",l.getLocal("ppolynomials")),l.setLocal("ps",l.getLocal("psignals")),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("nSignals"))),l.setLocal("ncoefs",l.i32_load(l.getLocal("pp"))),l.setLocal("pp",l.i32_add(l.getLocal("pp"),l.i32_const(4))),l.setLocal("j",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("j"),l.getLocal("ncoefs"))),l.setLocal("pd",l.i32_add(l.getLocal("pres"),l.i32_mul(l.i32_load(l.getLocal("pp")),l.i32_const(o)))),l.setLocal("pp",l.i32_add(l.getLocal("pp"),l.i32_const(4))),l.call(n+"_mul",l.getLocal("ps"),l.getLocal("pp"),c),l.call(n+"_add",c,l.getLocal("pd"),l.getLocal("pd")),l.setLocal("pp",l.i32_add(l.getLocal("pp"),l.i32_const(o))),l.setLocal("j",l.i32_add(l.getLocal("j"),l.i32_const(1))),l.br(0))),l.setLocal("ps",l.i32_add(l.getLocal("ps"),l.i32_const(o))),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}return s(),r(),t.exportFunction(e+"_zero"),t.exportFunction(e+"_constructLC"),e},Th=function(t,e,n){const o=t.modules[n].n64*8;function s(){const l=t.addFunction(e+"_buildABC");l.addParam("pCoefs","i32"),l.addParam("nCoefs","i32"),l.addParam("pWitness","i32"),l.addParam("pA","i32"),l.addParam("pB","i32"),l.addParam("pC","i32"),l.addParam("offsetOut","i32"),l.addParam("nOut","i32"),l.addParam("offsetWitness","i32"),l.addParam("nWitness","i32"),l.addLocal("it","i32"),l.addLocal("ita","i32"),l.addLocal("itb","i32"),l.addLocal("last","i32"),l.addLocal("m","i32"),l.addLocal("c","i32"),l.addLocal("s","i32"),l.addLocal("pOut","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(o));l.addCode(c.setLocal("ita",c.getLocal("pA")),c.setLocal("itb",c.getLocal("pB")),c.setLocal("last",c.i32_add(c.getLocal("pA"),c.i32_mul(c.getLocal("nOut"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_zero",c.getLocal("ita")),c.call(n+"_zero",c.getLocal("itb")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.br(0))),c.setLocal("it",c.getLocal("pCoefs")),c.setLocal("last",c.i32_add(c.getLocal("pCoefs"),c.i32_mul(c.getLocal("nCoefs"),c.i32_const(o+12)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("it"),c.getLocal("last"))),c.setLocal("s",c.i32_load(c.getLocal("it"),8)),c.if(c.i32_or(c.i32_lt_u(c.getLocal("s"),c.getLocal("offsetWitness")),c.i32_ge_u(c.getLocal("s"),c.i32_add(c.getLocal("offsetWitness"),c.getLocal("nWitness")))),[...c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),...c.br(1)]),c.setLocal("m",c.i32_load(c.getLocal("it"))),c.if(c.i32_eq(c.getLocal("m"),c.i32_const(0)),c.setLocal("pOut",c.getLocal("pA")),c.if(c.i32_eq(c.getLocal("m"),c.i32_const(1)),c.setLocal("pOut",c.getLocal("pB")),[...c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),...c.br(1)])),c.setLocal("c",c.i32_load(c.getLocal("it"),4)),c.if(c.i32_or(c.i32_lt_u(c.getLocal("c"),c.getLocal("offsetOut")),c.i32_ge_u(c.getLocal("c"),c.i32_add(c.getLocal("offsetOut"),c.getLocal("nOut")))),[...c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),...c.br(1)]),c.setLocal("pOut",c.i32_add(c.getLocal("pOut"),c.i32_mul(c.i32_sub(c.getLocal("c"),c.getLocal("offsetOut")),c.i32_const(o)))),c.call(n+"_mul",c.i32_add(c.getLocal("pWitness"),c.i32_mul(c.i32_sub(c.getLocal("s"),c.getLocal("offsetWitness")),c.i32_const(o))),c.i32_add(c.getLocal("it"),c.i32_const(12)),f),c.call(n+"_add",c.getLocal("pOut"),f,c.getLocal("pOut")),c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),c.br(0))),c.setLocal("ita",c.getLocal("pA")),c.setLocal("itb",c.getLocal("pB")),c.setLocal("it",c.getLocal("pC")),c.setLocal("last",c.i32_add(c.getLocal("pA"),c.i32_mul(c.getLocal("nOut"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_mul",c.getLocal("ita"),c.getLocal("itb"),c.getLocal("it")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o))),c.br(0))))}function r(){const l=t.addFunction(e+"_joinABC");l.addParam("pA","i32"),l.addParam("pB","i32"),l.addParam("pC","i32"),l.addParam("n","i32"),l.addParam("pP","i32"),l.addLocal("ita","i32"),l.addLocal("itb","i32"),l.addLocal("itc","i32"),l.addLocal("itp","i32"),l.addLocal("last","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(o));l.addCode(c.setLocal("ita",c.getLocal("pA")),c.setLocal("itb",c.getLocal("pB")),c.setLocal("itc",c.getLocal("pC")),c.setLocal("itp",c.getLocal("pP")),c.setLocal("last",c.i32_add(c.getLocal("pA"),c.i32_mul(c.getLocal("n"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_mul",c.getLocal("ita"),c.getLocal("itb"),f),c.call(n+"_sub",f,c.getLocal("itc"),c.getLocal("itp")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.setLocal("itc",c.i32_add(c.getLocal("itc"),c.i32_const(o))),c.setLocal("itp",c.i32_add(c.getLocal("itp"),c.i32_const(o))),c.br(0))))}function u(){const l=t.addFunction(e+"_batchAdd");l.addParam("pa","i32"),l.addParam("pb","i32"),l.addParam("n","i32"),l.addParam("pr","i32"),l.addLocal("ita","i32"),l.addLocal("itb","i32"),l.addLocal("itr","i32"),l.addLocal("last","i32");const c=l.getCodeBuilder();l.addCode(c.setLocal("ita",c.getLocal("pa")),c.setLocal("itb",c.getLocal("pb")),c.setLocal("itr",c.getLocal("pr")),c.setLocal("last",c.i32_add(c.getLocal("pa"),c.i32_mul(c.getLocal("n"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_add",c.getLocal("ita"),c.getLocal("itb"),c.getLocal("itr")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.setLocal("itr",c.i32_add(c.getLocal("itr"),c.i32_const(o))),c.br(0))))}return s(),r(),u(),t.exportFunction(e+"_buildABC"),t.exportFunction(e+"_joinABC"),t.exportFunction(e+"_batchAdd"),e},Rh=function(t,e,n,i,o,s,r,u){const l=t.addFunction(e);l.addParam("pIn","i32"),l.addParam("n","i32"),l.addParam("pFirst","i32"),l.addParam("pInc","i32"),l.addParam("pOut","i32"),l.addLocal("pOldFree","i32"),l.addLocal("i","i32"),l.addLocal("pFrom","i32"),l.addLocal("pTo","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(r));l.addCode(c.setLocal("pFrom",c.getLocal("pIn")),c.setLocal("pTo",c.getLocal("pOut"))),l.addCode(c.call(i+"_copy",c.getLocal("pFirst"),f)),l.addCode(c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(u,c.getLocal("pFrom"),f,c.getLocal("pTo")),c.setLocal("pFrom",c.i32_add(c.getLocal("pFrom"),c.i32_const(o))),c.setLocal("pTo",c.i32_add(c.getLocal("pTo"),c.i32_const(s))),c.call(i+"_mul",f,c.getLocal("pInc"),f),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))),t.exportFunction(e)};const he=Ei,pm=jl,Lm=Uh,zd=Gh,wm=Ph,Jd=Oh,Or=Dh,mm=qh,bm=Th,Vo=Rh,{bitLength:ym,modInv:Am,isOdd:Yd,isNegative:Im}=gn;var Em=function(t,e){const n=e||"bn128";if(t.modules[n])return n;const i=21888242871839275222246405745257275088696311157297823662689037894645226208583n,o=21888242871839275222246405745257275088548364400416034343698204186575808495617n,s=Math.floor((ym(i-1n)-1)/64)+1,r=s*8,u=r,l=r,c=l*2,f=l*12,g=t.alloc(he.bigInt2BytesLE(o,u)),L=pm(t,i,"f1m");Lm(t,o,"fr","frm");const S=t.alloc(he.bigInt2BytesLE(J(3n),l)),k=Jd(t,"g1m","f1m",S);Or(t,"frm","frm","frm","frm_mul"),mm(t,"pol","frm"),bm(t,"qap","frm");const E=zd(t,"f1m_neg","f2m","f1m"),G=t.alloc([...he.bigInt2BytesLE(J(19485874751759354771024239261021720505790618469301721065564631296452457478373n),l),...he.bigInt2BytesLE(J(266929791119991161246907387137283842545076965332900288569378510910307636690n),l)]),C=Jd(t,"g2m","f2m",G);function N(at,x){const q=t.addFunction(at);q.addParam("pG","i32"),q.addParam("pFr","i32"),q.addParam("pr","i32");const gt=q.getCodeBuilder(),mt=gt.i32_const(t.alloc(r));q.addCode(gt.call("frm_fromMontgomery",gt.getLocal("pFr"),mt),gt.call(x,gt.getLocal("pG"),mt,gt.i32_const(r),gt.getLocal("pr"))),t.exportFunction(at)}N("g1m_timesFr","g1m_timesScalar"),Or(t,"g1m","g1m","frm","g1m_timesFr"),N("g2m_timesFr","g2m_timesScalar"),Or(t,"g2m","g2m","frm","g2m_timesFr"),N("g1m_timesFrAffine","g1m_timesScalarAffine"),N("g2m_timesFrAffine","g2m_timesScalarAffine"),Vo(t,"frm_batchApplyKey","fmr","frm",r,r,r,"frm_mul"),Vo(t,"g1m_batchApplyKey","g1m","frm",r*3,r*3,r,"g1m_timesFr"),Vo(t,"g1m_batchApplyKeyMixed","g1m","frm",r*2,r*3,r,"g1m_timesFrAffine"),Vo(t,"g2m_batchApplyKey","g2m","frm",r*2*3,r*3*2,r,"g2m_timesFr"),Vo(t,"g2m_batchApplyKeyMixed","g2m","frm",r*2*2,r*3*2,r,"g2m_timesFrAffine");function J(at){return BigInt(at)*(1n<<BigInt(l*8))%i}const j=[1n,2n,1n],R=t.alloc([...he.bigInt2BytesLE(J(j[0]),l),...he.bigInt2BytesLE(J(j[1]),l),...he.bigInt2BytesLE(J(j[2]),l)]),b=[0n,1n,0n],w=t.alloc([...he.bigInt2BytesLE(J(b[0]),l),...he.bigInt2BytesLE(J(b[1]),l),...he.bigInt2BytesLE(J(b[2]),l)]),Z=[[10857046999023057135944570762232829481370756359578518086990519993285655852781n,11559732032986387107991004021392285783925812861821192530917403151452391805634n],[8495653923123431417604973247489272438418190587263600148770280649306958101930n,4082367875863433681332203403145435568316851327593401208105741076214120093531n],[1n,0n]],P=t.alloc([...he.bigInt2BytesLE(J(Z[0][0]),l),...he.bigInt2BytesLE(J(Z[0][1]),l),...he.bigInt2BytesLE(J(Z[1][0]),l),...he.bigInt2BytesLE(J(Z[1][1]),l),...he.bigInt2BytesLE(J(Z[2][0]),l),...he.bigInt2BytesLE(J(Z[2][1]),l)]),V=[[0n,0n],[1n,0n],[0n,0n]],nt=t.alloc([...he.bigInt2BytesLE(J(V[0][0]),l),...he.bigInt2BytesLE(J(V[0][1]),l),...he.bigInt2BytesLE(J(V[1][0]),l),...he.bigInt2BytesLE(J(V[1][1]),l),...he.bigInt2BytesLE(J(V[2][0]),l),...he.bigInt2BytesLE(J(V[2][1]),l)]),I=t.alloc([...he.bigInt2BytesLE(J(1),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l),...he.bigInt2BytesLE(J(0),l)]),y=t.alloc([...he.bigInt2BytesLE(J(9),l),...he.bigInt2BytesLE(J(1),l)]),_=t.alloc([...he.bigInt2BytesLE(J(Am(2n,i)),l),...he.bigInt2BytesLE(0n,l)]),T=y,B=t.alloc([...he.bigInt2BytesLE(J(19485874751759354771024239261021720505790618469301721065564631296452457478373n),l),...he.bigInt2BytesLE(J(266929791119991161246907387137283842545076965332900288569378510910307636690n),l)]);function Y(){const at=t.addFunction(n+"_mulNR6");at.addParam("x","i32"),at.addParam("pr","i32");const x=at.getCodeBuilder();at.addCode(x.call(E+"_mul",x.i32_const(y),x.getLocal("x"),x.getLocal("pr")))}Y();const tt=wm(t,n+"_mulNR6","f6m","f2m");function $(){const at=t.addFunction(n+"_mulNR12");at.addParam("x","i32"),at.addParam("pr","i32");const x=at.getCodeBuilder();at.addCode(x.call(E+"_mul",x.i32_const(y),x.i32_add(x.getLocal("x"),x.i32_const(r*4)),x.getLocal("pr")),x.call(E+"_copy",x.getLocal("x"),x.i32_add(x.getLocal("pr"),x.i32_const(r*2))),x.call(E+"_copy",x.i32_add(x.getLocal("x"),x.i32_const(r*2)),x.i32_add(x.getLocal("pr"),x.i32_const(r*4))))}$();const X=zd(t,n+"_mulNR12","ftm",tt),M=ct(29793968203157093288n),W=t.alloc(M),A=3*c,h=M.length-1,p=M.reduce((at,x)=>at+(x!=0?1:0),0)+h+1,d=3*2*r,m=3*r*2+p*A;t.modules[n]={n64:s,pG1gen:R,pG1zero:w,pG1b:S,pG2gen:P,pG2zero:nt,pG2b:G,pq:t.modules.f1m.pq,pr:g,pOneT:I,prePSize:d,preQSize:m,r:o.toString(),q:i.toString()};const v=4965661367192848881n;function et(at){let x=at;const q=[];for(;x>0n;){if(Yd(x)){const gt=2-Number(x%4n);q.push(gt),x=x-BigInt(gt)}else q.push(0);x=x>>1n}return q}function ct(at){let x=at;const q=[];for(;x>0n;)Yd(x)?q.push(1):q.push(0),x=x>>1n;return q}function dt(){const at=t.addFunction(n+"_prepareG1");at.addParam("pP","i32"),at.addParam("ppreP","i32");const x=at.getCodeBuilder();at.addCode(x.call(k+"_normalize",x.getLocal("pP"),x.getLocal("ppreP")))}function ft(){const at=t.addFunction(n+"_prepAddStep");at.addParam("pQ","i32"),at.addParam("pR","i32"),at.addParam("pCoef","i32");const x=at.getCodeBuilder(),q=x.getLocal("pQ"),gt=x.i32_add(x.getLocal("pQ"),x.i32_const(c)),mt=x.getLocal("pR"),ut=x.i32_add(x.getLocal("pR"),x.i32_const(c)),Ct=x.i32_add(x.getLocal("pR"),x.i32_const(2*c)),vt=x.getLocal("pCoef"),kt=x.i32_add(x.getLocal("pCoef"),x.i32_const(c)),Ot=x.i32_add(x.getLocal("pCoef"),x.i32_const(2*c)),Rt=kt,ht=x.i32_const(t.alloc(c)),O=x.i32_const(t.alloc(c)),H=x.i32_const(t.alloc(c)),pt=x.i32_const(t.alloc(c)),Lt=x.i32_const(t.alloc(c)),bt=x.i32_const(t.alloc(c)),Bt=x.i32_const(t.alloc(c));at.addCode(x.call(E+"_mul",q,Ct,Rt),x.call(E+"_sub",mt,Rt,Rt),x.call(E+"_mul",gt,Ct,ht),x.call(E+"_sub",ut,ht,ht),x.call(E+"_square",Rt,O),x.call(E+"_square",ht,H),x.call(E+"_mul",Rt,O,pt),x.call(E+"_mul",mt,O,Lt),x.call(E+"_add",Lt,Lt,Bt),x.call(E+"_mul",Ct,H,bt),x.call(E+"_add",pt,bt,bt),x.call(E+"_sub",bt,Bt,bt),x.call(E+"_mul",Rt,bt,mt),x.call(E+"_mul",pt,ut,ut),x.call(E+"_sub",Lt,bt,Bt),x.call(E+"_mul",ht,Bt,Bt),x.call(E+"_sub",Bt,ut,ut),x.call(E+"_mul",Ct,pt,Ct),x.call(E+"_mul",Rt,gt,Bt),x.call(E+"_mul",ht,q,vt),x.call(E+"_sub",vt,Bt,vt),x.call(E+"_mul",vt,x.i32_const(T),vt),x.call(E+"_neg",ht,Ot))}function Ft(){const at=t.addFunction(n+"_prepDblStep");at.addParam("pR","i32"),at.addParam("pCoef","i32");const x=at.getCodeBuilder(),q=x.getLocal("pR"),gt=x.i32_add(x.getLocal("pR"),x.i32_const(c)),mt=x.i32_add(x.getLocal("pR"),x.i32_const(2*c)),ut=x.getLocal("pCoef"),Ct=x.i32_add(x.getLocal("pCoef"),x.i32_const(c)),vt=x.i32_add(x.getLocal("pCoef"),x.i32_const(2*c)),kt=x.i32_const(t.alloc(c)),Ot=x.i32_const(t.alloc(c)),Rt=x.i32_const(t.alloc(c)),ht=x.i32_const(t.alloc(c)),O=x.i32_const(t.alloc(c)),H=x.i32_const(t.alloc(c)),pt=x.i32_const(t.alloc(c)),Lt=x.i32_const(t.alloc(c)),bt=x.i32_const(t.alloc(c)),Bt=x.i32_const(t.alloc(c)),At=x.i32_const(t.alloc(c)),xt=x.i32_const(t.alloc(c));at.addCode(x.call(E+"_mul",gt,x.i32_const(_),kt),x.call(E+"_mul",q,kt,kt),x.call(E+"_square",gt,Ot),x.call(E+"_square",mt,Rt),x.call(E+"_add",Rt,Rt,ht),x.call(E+"_add",ht,Rt,ht),x.call(E+"_mul",x.i32_const(B),ht,O),x.call(E+"_add",O,O,H),x.call(E+"_add",O,H,H),x.call(E+"_add",Ot,H,pt),x.call(E+"_mul",pt,x.i32_const(_),pt),x.call(E+"_add",Ot,Rt,xt),x.call(E+"_add",gt,mt,Lt),x.call(E+"_square",Lt,Lt),x.call(E+"_sub",Lt,xt,Lt),x.call(E+"_sub",O,Ot,bt),x.call(E+"_square",q,Bt),x.call(E+"_square",O,At),x.call(E+"_sub",Ot,H,xt),x.call(E+"_mul",kt,xt,q),x.call(E+"_add",At,At,xt),x.call(E+"_add",At,xt,xt),x.call(E+"_square",pt,gt),x.call(E+"_sub",gt,xt,gt),x.call(E+"_mul",Ot,Lt,mt),x.call(E+"_mul",x.i32_const(T),bt,ut),x.call(E+"_neg",Lt,Ct),x.call(E+"_add",Bt,Bt,vt),x.call(E+"_add",Bt,vt,vt))}function rt(){const at=t.addFunction(n+"_mulByQ");at.addParam("p1","i32"),at.addParam("pr","i32");const x=at.getCodeBuilder(),q=x.getLocal("p1"),gt=x.i32_add(x.getLocal("p1"),x.i32_const(c)),mt=x.i32_add(x.getLocal("p1"),x.i32_const(c*2)),ut=x.getLocal("pr"),Ct=x.i32_add(x.getLocal("pr"),x.i32_const(c)),vt=x.i32_add(x.getLocal("pr"),x.i32_const(c*2)),kt=x.i32_const(t.alloc([...he.bigInt2BytesLE(J("21575463638280843010398324269430826099269044274347216827212613867836435027261"),l),...he.bigInt2BytesLE(J("10307601595873709700152284273816112264069230130616436755625194854815875713954"),l)])),Ot=x.i32_const(t.alloc([...he.bigInt2BytesLE(J("2821565182194536844548159561693502659359617185244120367078079554186484126554"),l),...he.bigInt2BytesLE(J("3505843767911556378687030309984248845540243509899259641013678093033130930403"),l)]));at.addCode(x.call(E+"_conjugate",q,ut),x.call(E+"_mul",kt,ut,ut),x.call(E+"_conjugate",gt,Ct),x.call(E+"_mul",Ot,Ct,Ct),x.call(E+"_conjugate",mt,vt))}function z(){rt();const at=t.addFunction(n+"_prepareG2");at.addParam("pQ","i32"),at.addParam("ppreQ","i32"),at.addLocal("pCoef","i32"),at.addLocal("i","i32");const x=at.getCodeBuilder(),q=x.getLocal("pQ"),gt=t.alloc(c*3),mt=x.i32_const(gt),ut=x.i32_const(gt),Ct=x.i32_const(gt+c),vt=x.i32_const(gt+2*c),kt=x.i32_add(x.getLocal("ppreQ"),x.i32_const(0)),Ot=x.i32_add(x.getLocal("ppreQ"),x.i32_const(c)),Rt=t.alloc(c*3),ht=x.i32_const(Rt),O=t.alloc(c*3),H=x.i32_const(O),pt=x.i32_const(O+c);at.addCode(x.call(C+"_normalize",q,kt),x.call(E+"_copy",kt,ut),x.call(E+"_copy",Ot,Ct),x.call(E+"_one",vt)),at.addCode(x.setLocal("pCoef",x.i32_add(x.getLocal("ppreQ"),x.i32_const(c*3))),x.setLocal("i",x.i32_const(M.length-2)),x.block(x.loop(x.call(n+"_prepDblStep",mt,x.getLocal("pCoef")),x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A))),x.if(x.i32_load8_s(x.getLocal("i"),W),[...x.call(n+"_prepAddStep",kt,mt,x.getLocal("pCoef")),...x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A)))]),x.br_if(1,x.i32_eqz(x.getLocal("i"))),x.setLocal("i",x.i32_sub(x.getLocal("i"),x.i32_const(1))),x.br(0)))),at.addCode(x.call(n+"_mulByQ",kt,ht),x.call(n+"_mulByQ",ht,H)),at.addCode(x.call(E+"_neg",pt,pt),x.call(n+"_prepAddStep",ht,mt,x.getLocal("pCoef")),x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A))),x.call(n+"_prepAddStep",H,mt,x.getLocal("pCoef")),x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A))))}function wt(){const at=t.addFunction(n+"__mulBy024Old");at.addParam("pEll0","i32"),at.addParam("pEllVW","i32"),at.addParam("pEllVV","i32"),at.addParam("pR","i32");const x=at.getCodeBuilder(),q=x.getLocal("pEll0"),gt=x.getLocal("pEllVV"),mt=x.getLocal("pEllVW"),ut=x.getLocal("pR"),Ct=t.alloc(f),vt=x.i32_const(Ct),kt=x.i32_const(Ct),Ot=x.i32_const(Ct+c),Rt=x.i32_const(Ct+c*2),ht=x.i32_const(Ct+c*3),O=x.i32_const(Ct+c*4),H=x.i32_const(Ct+c*5);at.addCode(x.call(E+"_copy",q,kt),x.call(E+"_zero",Ot),x.call(E+"_copy",gt,Rt),x.call(E+"_zero",ht),x.call(E+"_copy",mt,O),x.call(E+"_zero",H),x.call(X+"_mul",vt,ut,ut))}function yt(){const at=t.addFunction(n+"__mulBy024");at.addParam("pEll0","i32"),at.addParam("pEllVW","i32"),at.addParam("pEllVV","i32"),at.addParam("pR","i32");const x=at.getCodeBuilder(),q=x.getLocal("pEll0"),gt=x.getLocal("pEllVV"),mt=x.getLocal("pEllVW"),ut=x.getLocal("pR"),Ct=x.i32_add(x.getLocal("pR"),x.i32_const(2*r)),vt=x.i32_add(x.getLocal("pR"),x.i32_const(4*r)),kt=x.i32_add(x.getLocal("pR"),x.i32_const(6*r)),Ot=x.i32_add(x.getLocal("pR"),x.i32_const(8*r)),Rt=x.i32_add(x.getLocal("pR"),x.i32_const(10*r)),ht=x.i32_const(t.alloc(c)),O=x.i32_const(t.alloc(c)),H=x.i32_const(t.alloc(c)),pt=x.i32_const(t.alloc(c)),Lt=x.i32_const(t.alloc(c)),bt=x.i32_const(t.alloc(c)),Bt=x.i32_const(t.alloc(c)),At=x.i32_const(t.alloc(c)),xt=x.i32_const(t.alloc(c)),_t=x.i32_const(t.alloc(c)),St=x.i32_const(t.alloc(c));at.addCode(x.call(E+"_mul",ut,q,Bt),x.call(E+"_mul",vt,gt,At),x.call(E+"_mul",Ot,mt,xt),x.call(E+"_add",ut,Ot,H),x.call(E+"_add",ut,vt,O),x.call(E+"_add",Ct,kt,pt),x.call(E+"_add",pt,Rt,pt),x.call(E+"_mul",Ct,gt,_t),x.call(E+"_add",_t,xt,Lt),x.call(E+"_mul",x.i32_const(y),Lt,bt),x.call(E+"_add",bt,Bt,ut),x.call(E+"_mul",Rt,mt,Lt),x.call(E+"_add",_t,Lt,_t),x.call(E+"_add",Lt,At,Lt),x.call(E+"_mul",x.i32_const(y),Lt,bt),x.call(E+"_mul",Ct,q,Lt),x.call(E+"_add",_t,Lt,_t),x.call(E+"_add",bt,Lt,Ct),x.call(E+"_add",q,gt,ht),x.call(E+"_mul",O,ht,Lt),x.call(E+"_add",Bt,At,St),x.call(E+"_sub",Lt,St,Lt),x.call(E+"_mul",kt,mt,bt),x.call(E+"_add",_t,bt,_t),x.call(E+"_add",vt,Ot,ht),x.call(E+"_add",Lt,bt,vt),x.call(E+"_add",gt,mt,O),x.call(E+"_mul",O,ht,Lt),x.call(E+"_add",At,xt,St),x.call(E+"_sub",Lt,St,Lt),x.call(E+"_mul",x.i32_const(y),Lt,bt),x.call(E+"_mul",kt,q,Lt),x.call(E+"_add",_t,Lt,_t),x.call(E+"_add",bt,Lt,kt),x.call(E+"_mul",Rt,gt,Lt),x.call(E+"_add",_t,Lt,_t),x.call(E+"_mul",x.i32_const(y),Lt,bt),x.call(E+"_add",q,mt,ht),x.call(E+"_mul",H,ht,Lt),x.call(E+"_add",Bt,xt,St),x.call(E+"_sub",Lt,St,Lt),x.call(E+"_add",bt,Lt,Ot),x.call(E+"_add",q,gt,ht),x.call(E+"_add",ht,mt,ht),x.call(E+"_mul",pt,ht,Lt),x.call(E+"_sub",Lt,_t,Rt))}function It(){const at=t.addFunction(n+"_millerLoop");at.addParam("ppreP","i32"),at.addParam("ppreQ","i32"),at.addParam("r","i32"),at.addLocal("pCoef","i32"),at.addLocal("i","i32");const x=at.getCodeBuilder(),q=x.getLocal("ppreP"),gt=x.i32_add(x.getLocal("ppreP"),x.i32_const(l)),mt=x.getLocal("pCoef"),ut=x.i32_add(x.getLocal("pCoef"),x.i32_const(c)),Ct=x.i32_add(x.getLocal("pCoef"),x.i32_const(2*c)),vt=t.alloc(c),kt=x.i32_const(vt),Ot=t.alloc(c),Rt=x.i32_const(Ot),ht=x.getLocal("r");at.addCode(x.call(X+"_one",ht),x.setLocal("pCoef",x.i32_add(x.getLocal("ppreQ"),x.i32_const(c*3))),x.setLocal("i",x.i32_const(M.length-2)),x.block(x.loop(x.call(X+"_square",ht,ht),x.call(E+"_mul1",ut,gt,kt),x.call(E+"_mul1",Ct,q,Rt),x.call(n+"__mulBy024",mt,kt,Rt,ht),x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A))),x.if(x.i32_load8_s(x.getLocal("i"),W),[...x.call(E+"_mul1",ut,gt,kt),...x.call(E+"_mul1",Ct,q,Rt),...x.call(n+"__mulBy024",mt,kt,Rt,ht),...x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A)))]),x.br_if(1,x.i32_eqz(x.getLocal("i"))),x.setLocal("i",x.i32_sub(x.getLocal("i"),x.i32_const(1))),x.br(0)))),at.addCode(x.call(E+"_mul1",ut,gt,kt),x.call(E+"_mul1",Ct,q,Rt),x.call(n+"__mulBy024",mt,kt,Rt,ht),x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A))),x.call(E+"_mul1",ut,gt,kt),x.call(E+"_mul1",Ct,q,Rt),x.call(n+"__mulBy024",mt,kt,Rt,ht),x.setLocal("pCoef",x.i32_add(x.getLocal("pCoef"),x.i32_const(A))))}function Ut(at){const x=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[8376118865763821496583973867626364092589906065868298776909617916018768340080n,16469823323077808223889137241176536799009286646108169935659301613961712198316n],[21888242871839275220042445260109153167277707414472061641714758635765020556617n,0n],[11697423496358154304825782922584725312912383441159505038794027105778954184319n,303847389135065887422783454877609941456349188919719272345083954437860409601n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[3321304630594332808241809054958361220322477375291206261884409189760185844239n,5722266937896532885780051958958348231143373700109372999374820235121374419868n],[21888242871839275222246405745257275088696311157297823662689037894645226208582n,0n],[13512124006075453725662431877630910996106405091429524885779419978626457868503n,5418419548761466998357268504080738289687024511189653727029736280683514010267n],[2203960485148121921418603742825762020974279258880205651966n,0n],[10190819375481120917420622822672549775783927716138318623895010788866272024264n,21584395482704209334823622290379665147239961968378104390343953940207365798982n],[2203960485148121921418603742825762020974279258880205651967n,0n],[18566938241244942414004596690298913868373833782006617400804628704885040364344n,16165975933942742336466353786298926857552937457188450663314217659523851788715n]]],q=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[21575463638280843010398324269430826099269044274347216827212613867836435027261n,10307601595873709700152284273816112264069230130616436755625194854815875713954n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[3772000881919853776433695186713858239009073593817195771773381919316419345261n,2236595495967245188281701248203181795121068902605861227855261137820944008926n],[2203960485148121921418603742825762020974279258880205651966n,0n],[18429021223477853657660792034369865839114504446431234726392080002137598044644n,9344045779998320333812420223237981029506012124075525679208581902008406485703n]],[[1n,0n],[2581911344467009335267311115468803099551665605076196740867805258568234346338n,19937756971775647987995932169929341994314640652964949448313374472400716661030n],[2203960485148121921418603742825762020974279258880205651966n,0n],[5324479202449903542726783395506214481928257762400643279780343368557297135718n,16208900380737693084919495127334387981393726419856888799917914180988844123039n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[13981852324922362344252311234282257507216387789820983642040889267519694726527n,7629828391165209371577384193250820201684255241773809077146787135900891633097n]]],gt=t.addFunction(n+"__frobeniusMap"+at);gt.addParam("x","i32"),gt.addParam("r","i32");const mt=gt.getCodeBuilder();for(let Ct=0;Ct<6;Ct++){const vt=Ct==0?mt.getLocal("x"):mt.i32_add(mt.getLocal("x"),mt.i32_const(Ct*c)),kt=vt,Ot=mt.i32_add(mt.getLocal("x"),mt.i32_const(Ct*c+l)),Rt=Ct==0?mt.getLocal("r"):mt.i32_add(mt.getLocal("r"),mt.i32_const(Ct*c)),ht=Rt,O=mt.i32_add(mt.getLocal("r"),mt.i32_const(Ct*c+l)),H=ut(x[Math.floor(Ct/3)][at%12],q[Ct%3][at%6]),pt=t.alloc([...he.bigInt2BytesLE(J(H[0]),32),...he.bigInt2BytesLE(J(H[1]),32)]);at%2==1?gt.addCode(mt.call(L+"_copy",kt,ht),mt.call(L+"_neg",Ot,O),mt.call(E+"_mul",Rt,mt.i32_const(pt),Rt)):gt.addCode(mt.call(E+"_mul",vt,mt.i32_const(pt),Rt))}function ut(Ct,vt){const kt=BigInt(Ct[0]),Ot=BigInt(Ct[1]),Rt=BigInt(vt[0]),ht=BigInt(vt[1]),O=[(kt*Rt-Ot*ht)%i,(kt*ht+Ot*Rt)%i];return Im(O[0])&&(O[0]=O[0]+i),O}}function Dt(){const at=t.addFunction(n+"__finalExponentiationFirstChunk");at.addParam("x","i32"),at.addParam("r","i32");const x=at.getCodeBuilder(),q=x.getLocal("x"),gt=q,mt=x.i32_add(q,x.i32_const(r*6)),ut=x.getLocal("r"),Ct=t.alloc(f),vt=x.i32_const(Ct),kt=vt,Ot=x.i32_const(Ct+r*6),Rt=x.i32_const(t.alloc(f)),ht=x.i32_const(t.alloc(f)),O=x.i32_const(t.alloc(f));at.addCode(x.call(tt+"_copy",gt,kt),x.call(tt+"_neg",mt,Ot),x.call(X+"_inverse",q,Rt),x.call(X+"_mul",vt,Rt,ht),x.call(n+"__frobeniusMap2",ht,O),x.call(X+"_mul",ht,O,ut))}function Mt(){const at=t.addFunction(n+"__cyclotomicSquare");at.addParam("x","i32"),at.addParam("r","i32");const x=at.getCodeBuilder(),q=x.getLocal("x"),gt=x.i32_add(x.getLocal("x"),x.i32_const(c)),mt=x.i32_add(x.getLocal("x"),x.i32_const(2*c)),ut=x.i32_add(x.getLocal("x"),x.i32_const(3*c)),Ct=x.i32_add(x.getLocal("x"),x.i32_const(4*c)),vt=x.i32_add(x.getLocal("x"),x.i32_const(5*c)),kt=x.getLocal("r"),Ot=x.i32_add(x.getLocal("r"),x.i32_const(c)),Rt=x.i32_add(x.getLocal("r"),x.i32_const(2*c)),ht=x.i32_add(x.getLocal("r"),x.i32_const(3*c)),O=x.i32_add(x.getLocal("r"),x.i32_const(4*c)),H=x.i32_add(x.getLocal("r"),x.i32_const(5*c)),pt=x.i32_const(t.alloc(c)),Lt=x.i32_const(t.alloc(c)),bt=x.i32_const(t.alloc(c)),Bt=x.i32_const(t.alloc(c)),At=x.i32_const(t.alloc(c)),xt=x.i32_const(t.alloc(c)),_t=x.i32_const(t.alloc(c)),St=x.i32_const(t.alloc(c));at.addCode(x.call(E+"_mul",q,Ct,_t),x.call(E+"_mul",Ct,x.i32_const(y),pt),x.call(E+"_add",q,pt,pt),x.call(E+"_add",q,Ct,St),x.call(E+"_mul",St,pt,pt),x.call(E+"_mul",x.i32_const(y),_t,St),x.call(E+"_add",_t,St,St),x.call(E+"_sub",pt,St,pt),x.call(E+"_add",_t,_t,Lt),x.call(E+"_mul",ut,mt,_t),x.call(E+"_mul",mt,x.i32_const(y),bt),x.call(E+"_add",ut,bt,bt),x.call(E+"_add",ut,mt,St),x.call(E+"_mul",St,bt,bt),x.call(E+"_mul",x.i32_const(y),_t,St),x.call(E+"_add",_t,St,St),x.call(E+"_sub",bt,St,bt),x.call(E+"_add",_t,_t,Bt),x.call(E+"_mul",gt,vt,_t),x.call(E+"_mul",vt,x.i32_const(y),At),x.call(E+"_add",gt,At,At),x.call(E+"_add",gt,vt,St),x.call(E+"_mul",St,At,At),x.call(E+"_mul",x.i32_const(y),_t,St),x.call(E+"_add",_t,St,St),x.call(E+"_sub",At,St,At),x.call(E+"_add",_t,_t,xt),x.call(E+"_sub",pt,q,kt),x.call(E+"_add",kt,kt,kt),x.call(E+"_add",pt,kt,kt),x.call(E+"_add",Lt,Ct,O),x.call(E+"_add",O,O,O),x.call(E+"_add",Lt,O,O),x.call(E+"_mul",xt,x.i32_const(T),St),x.call(E+"_add",St,ut,ht),x.call(E+"_add",ht,ht,ht),x.call(E+"_add",St,ht,ht),x.call(E+"_sub",At,mt,Rt),x.call(E+"_add",Rt,Rt,Rt),x.call(E+"_add",At,Rt,Rt),x.call(E+"_sub",bt,gt,Ot),x.call(E+"_add",Ot,Ot,Ot),x.call(E+"_add",bt,Ot,Ot),x.call(E+"_add",Bt,vt,H),x.call(E+"_add",H,H,H),x.call(E+"_add",Bt,H,H))}function Qt(at,x){const q=et(at).map(Ot=>Ot==-1?255:Ot),gt=t.alloc(q),mt=t.addFunction(n+"__cyclotomicExp_"+x);mt.addParam("x","i32"),mt.addParam("r","i32"),mt.addLocal("bit","i32"),mt.addLocal("i","i32");const ut=mt.getCodeBuilder(),Ct=ut.getLocal("x"),vt=ut.getLocal("r"),kt=ut.i32_const(t.alloc(f));mt.addCode(ut.call(X+"_conjugate",Ct,kt),ut.call(X+"_one",vt),ut.if(ut.teeLocal("bit",ut.i32_load8_s(ut.i32_const(q.length-1),gt)),ut.if(ut.i32_eq(ut.getLocal("bit"),ut.i32_const(1)),ut.call(X+"_mul",vt,Ct,vt),ut.call(X+"_mul",vt,kt,vt))),ut.setLocal("i",ut.i32_const(q.length-2)),ut.block(ut.loop(ut.call(n+"__cyclotomicSquare",vt,vt),ut.if(ut.teeLocal("bit",ut.i32_load8_s(ut.getLocal("i"),gt)),ut.if(ut.i32_eq(ut.getLocal("bit"),ut.i32_const(1)),ut.call(X+"_mul",vt,Ct,vt),ut.call(X+"_mul",vt,kt,vt))),ut.br_if(1,ut.i32_eqz(ut.getLocal("i"))),ut.setLocal("i",ut.i32_sub(ut.getLocal("i"),ut.i32_const(1))),ut.br(0))))}function it(){Mt(),Qt(v,"w0");const at=t.addFunction(n+"__finalExponentiationLastChunk");at.addParam("x","i32"),at.addParam("r","i32");const x=at.getCodeBuilder(),q=x.getLocal("x"),gt=x.getLocal("r"),mt=x.i32_const(t.alloc(f)),ut=x.i32_const(t.alloc(f)),Ct=x.i32_const(t.alloc(f)),vt=x.i32_const(t.alloc(f)),kt=x.i32_const(t.alloc(f)),Ot=x.i32_const(t.alloc(f)),Rt=x.i32_const(t.alloc(f)),ht=x.i32_const(t.alloc(f)),O=x.i32_const(t.alloc(f)),H=x.i32_const(t.alloc(f)),pt=x.i32_const(t.alloc(f)),Lt=x.i32_const(t.alloc(f)),bt=x.i32_const(t.alloc(f)),Bt=x.i32_const(t.alloc(f)),At=x.i32_const(t.alloc(f)),xt=x.i32_const(t.alloc(f)),_t=x.i32_const(t.alloc(f)),St=x.i32_const(t.alloc(f)),Gt=x.i32_const(t.alloc(f)),Tt=x.i32_const(t.alloc(f)),zt=x.i32_const(t.alloc(f));at.addCode(x.call(n+"__cyclotomicExp_w0",q,mt),x.call(X+"_conjugate",mt,mt),x.call(n+"__cyclotomicSquare",mt,ut),x.call(n+"__cyclotomicSquare",ut,Ct),x.call(X+"_mul",Ct,ut,vt),x.call(n+"__cyclotomicExp_w0",vt,kt),x.call(X+"_conjugate",kt,kt),x.call(n+"__cyclotomicSquare",kt,Ot),x.call(n+"__cyclotomicExp_w0",Ot,Rt),x.call(X+"_conjugate",Rt,Rt),x.call(X+"_conjugate",vt,ht),x.call(X+"_conjugate",Rt,O),x.call(X+"_mul",O,kt,H),x.call(X+"_mul",H,ht,pt),x.call(X+"_mul",pt,ut,Lt),x.call(X+"_mul",pt,kt,bt),x.call(X+"_mul",bt,q,Bt),x.call(n+"__frobeniusMap1",Lt,At),x.call(X+"_mul",At,Bt,xt),x.call(n+"__frobeniusMap2",pt,_t),x.call(X+"_mul",_t,xt,St),x.call(X+"_conjugate",q,Gt),x.call(X+"_mul",Gt,Lt,Tt),x.call(n+"__frobeniusMap3",Tt,zt),x.call(X+"_mul",zt,St,gt))}function K(){Dt(),it();const at=t.addFunction(n+"_finalExponentiation");at.addParam("x","i32"),at.addParam("r","i32");const x=at.getCodeBuilder(),q=x.getLocal("x"),gt=x.getLocal("r"),mt=x.i32_const(t.alloc(f));at.addCode(x.call(n+"__finalExponentiationFirstChunk",q,mt),x.call(n+"__finalExponentiationLastChunk",mt,gt))}function U(){const at=t.addFunction(n+"_finalExponentiationOld");at.addParam("x","i32"),at.addParam("r","i32");const q=t.alloc(he.bigInt2BytesLE(552484233613224096312617126783173147097382103762957654188882734314196910839907541213974502761540629817009608548654680343627701153829446747810907373256841551006201639677726139946029199968412598804882391702273019083653272047566316584365559776493027495458238373902875937659943504873220554161550525926302303331747463515644711876653177129578303191095900909191624817826566688241804408081892785725967931714097716709526092261278071952560171111444072049229123565057483750161460024353346284167282452756217662335528813519139808291170539072125381230815729071544861602750936964829313608137325426383735122175229541155376346436093930287402089517426973178917569713384748081827255472576937471496195752727188261435633271238710131736096299798168852925540549342330775279877006784354801422249722573783561685179618816480037695005515426162362431072245638324744480n,352)),gt=at.getCodeBuilder();at.addCode(gt.call(X+"_exp",gt.getLocal("x"),gt.i32_const(q),gt.i32_const(352),gt.getLocal("r")))}const D=t.alloc(d),ot=t.alloc(m);function st(at){const x=t.addFunction(n+"_pairingEq"+at);for(let ut=0;ut<at;ut++)x.addParam("p_"+ut,"i32"),x.addParam("q_"+ut,"i32");x.addParam("c","i32"),x.setReturnType("i32");const q=x.getCodeBuilder(),gt=q.i32_const(t.alloc(f)),mt=q.i32_const(t.alloc(f));x.addCode(q.call(X+"_one",gt));for(let ut=0;ut<at;ut++)x.addCode(q.call(n+"_prepareG1",q.getLocal("p_"+ut),q.i32_const(D))),x.addCode(q.call(n+"_prepareG2",q.getLocal("q_"+ut),q.i32_const(ot))),x.addCode(q.call(n+"_millerLoop",q.i32_const(D),q.i32_const(ot),mt)),x.addCode(q.call(X+"_mul",gt,mt,gt));x.addCode(q.call(n+"_finalExponentiation",gt,gt)),x.addCode(q.call(X+"_eq",gt,q.getLocal("c")))}function lt(){const at=t.addFunction(n+"_pairing");at.addParam("p","i32"),at.addParam("q","i32"),at.addParam("r","i32");const x=at.getCodeBuilder(),q=x.i32_const(t.alloc(f));at.addCode(x.call(n+"_prepareG1",x.getLocal("p"),x.i32_const(D))),at.addCode(x.call(n+"_prepareG2",x.getLocal("q"),x.i32_const(ot))),at.addCode(x.call(n+"_millerLoop",x.i32_const(D),x.i32_const(ot),q)),at.addCode(x.call(n+"_finalExponentiation",q,x.getLocal("r")))}ft(),Ft(),dt(),z(),yt(),wt(),It();for(let at=0;at<10;at++)Ut(at),t.exportFunction(n+"__frobeniusMap"+at);U(),K();for(let at=1;at<=5;at++)st(at),t.exportFunction(n+"_pairingEq"+at);lt(),t.exportFunction(n+"_pairing"),t.exportFunction(n+"_prepareG1"),t.exportFunction(n+"_prepareG2"),t.exportFunction(n+"_millerLoop"),t.exportFunction(n+"_finalExponentiation"),t.exportFunction(n+"_finalExponentiationOld"),t.exportFunction(n+"__mulBy024"),t.exportFunction(n+"__mulBy024Old"),t.exportFunction(n+"__cyclotomicSquare"),t.exportFunction(n+"__cyclotomicExp_w0")};const de=Ei,Cm=jl,Bm=Uh,jd=Gh,vm=Ph,Vd=Oh,Dr=Dh,Fm=qh,Sm=Th,Wo=Rh,{bitLength:Wd,isOdd:Zd,isNegative:_m}=gn;var xm=function(t,e){const n=e||"bls12381";if(t.modules[n])return n;const i=0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn,o=0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001n,s=Math.floor((Wd(i-1n)-1)/64)+1,r=s*8,u=r,l=u*2,c=u*12,f=Math.floor((Wd(o-1n)-1)/64)+1,g=f*8,L=g,S=t.alloc(de.bigInt2BytesLE(o,L)),k=Cm(t,i,"f1m","intq");Bm(t,o,"fr","frm","intr");const E=t.alloc(de.bigInt2BytesLE(R(4n),u)),G=Vd(t,"g1m","f1m",E);Dr(t,"frm","frm","frm","frm_mul"),Fm(t,"pol","frm"),Sm(t,"qap","frm");const C=jd(t,"f1m_neg","f2m","f1m"),N=t.alloc([...de.bigInt2BytesLE(R(4n),u),...de.bigInt2BytesLE(R(4n),u)]),J=Vd(t,"g2m","f2m",N);function j(x,q){const gt=t.addFunction(x);gt.addParam("pG","i32"),gt.addParam("pFr","i32"),gt.addParam("pr","i32");const mt=gt.getCodeBuilder(),ut=mt.i32_const(t.alloc(g));gt.addCode(mt.call("frm_fromMontgomery",mt.getLocal("pFr"),ut),mt.call(q,mt.getLocal("pG"),ut,mt.i32_const(g),mt.getLocal("pr"))),t.exportFunction(x)}j("g1m_timesFr","g1m_timesScalar"),Dr(t,"g1m","g1m","frm","g1m_timesFr"),j("g2m_timesFr","g2m_timesScalar"),Dr(t,"g2m","g2m","frm","g2m_timesFr"),j("g1m_timesFrAffine","g1m_timesScalarAffine"),j("g2m_timesFrAffine","g2m_timesScalarAffine"),Wo(t,"frm_batchApplyKey","fmr","frm",g,g,g,"frm_mul"),Wo(t,"g1m_batchApplyKey","g1m","frm",r*3,r*3,g,"g1m_timesFr"),Wo(t,"g1m_batchApplyKeyMixed","g1m","frm",r*2,r*3,g,"g1m_timesFrAffine"),Wo(t,"g2m_batchApplyKey","g2m","frm",r*2*3,r*3*2,g,"g2m_timesFr"),Wo(t,"g2m_batchApplyKeyMixed","g2m","frm",r*2*2,r*3*2,g,"g2m_timesFrAffine");function R(x){return BigInt(x)*(1n<<BigInt(u*8))%i}const b=[3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507n,1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569n,1n],w=t.alloc([...de.bigInt2BytesLE(R(b[0]),u),...de.bigInt2BytesLE(R(b[1]),u),...de.bigInt2BytesLE(R(b[2]),u)]),Z=[0n,1n,0n],P=t.alloc([...de.bigInt2BytesLE(R(Z[0]),u),...de.bigInt2BytesLE(R(Z[1]),u),...de.bigInt2BytesLE(R(Z[2]),u)]),V=[[352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160n,3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758n],[1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905n,927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582n],[1n,0n]],nt=t.alloc([...de.bigInt2BytesLE(R(V[0][0]),u),...de.bigInt2BytesLE(R(V[0][1]),u),...de.bigInt2BytesLE(R(V[1][0]),u),...de.bigInt2BytesLE(R(V[1][1]),u),...de.bigInt2BytesLE(R(V[2][0]),u),...de.bigInt2BytesLE(R(V[2][1]),u)]),I=[[0n,0n],[1n,0n],[0n,0n]],y=t.alloc([...de.bigInt2BytesLE(R(I[0][0]),u),...de.bigInt2BytesLE(R(I[0][1]),u),...de.bigInt2BytesLE(R(I[1][0]),u),...de.bigInt2BytesLE(R(I[1][1]),u),...de.bigInt2BytesLE(R(I[2][0]),u),...de.bigInt2BytesLE(R(I[2][1]),u)]),_=t.alloc([...de.bigInt2BytesLE(R(1n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u),...de.bigInt2BytesLE(R(0n),u)]),T=t.alloc([...de.bigInt2BytesLE(R(1n),u),...de.bigInt2BytesLE(R(1n),u)]);function B(){const x=t.addFunction(C+"_mulNR");x.addParam("x","i32"),x.addParam("pr","i32");const q=x.getCodeBuilder(),gt=q.i32_const(t.alloc(u)),mt=q.getLocal("x"),ut=q.i32_add(q.getLocal("x"),q.i32_const(u)),Ct=q.getLocal("pr"),vt=q.i32_add(q.getLocal("pr"),q.i32_const(u));x.addCode(q.call(k+"_copy",mt,gt),q.call(k+"_sub",mt,ut,Ct),q.call(k+"_add",gt,ut,vt))}B();const Y=vm(t,C+"_mulNR","f6m","f2m");function tt(){const x=t.addFunction(Y+"_mulNR");x.addParam("x","i32"),x.addParam("pr","i32");const q=x.getCodeBuilder(),gt=q.i32_const(t.alloc(u*2));x.addCode(q.call(C+"_copy",q.getLocal("x"),gt),q.call(C+"_mulNR",q.i32_add(q.getLocal("x"),q.i32_const(r*4)),q.getLocal("pr")),q.call(C+"_copy",q.i32_add(q.getLocal("x"),q.i32_const(r*2)),q.i32_add(q.getLocal("pr"),q.i32_const(r*4))),q.call(C+"_copy",gt,q.i32_add(q.getLocal("pr"),q.i32_const(r*2))))}tt();const $=jd(t,Y+"_mulNR","ftm",Y),F=ct(0xd201000000010000n),M=t.alloc(F),W=3*l,A=F.length-1,Q=F.reduce((x,q)=>x+(q!=0?1:0),0)+A+1,p=3*2*r,d=3*r*2+Q*W,m=!0,v=15132376222941642752n;t.modules[n]={n64q:s,n64r:f,n8q:r,n8r:g,pG1gen:w,pG1zero:P,pG1b:E,pG2gen:nt,pG2zero:y,pG2b:N,pq:t.modules.f1m.pq,pr:S,pOneT:_,r:o,q:i,prePSize:p,preQSize:d};function et(x){let q=x;const gt=[];for(;q>0n;){if(Zd(q)){const mt=2-Number(q%4n);gt.push(mt),q=q-BigInt(mt)}else gt.push(0);q=q>>1n}return gt}function ct(x){let q=x;const gt=[];for(;q>0n;)Zd(q)?gt.push(1):gt.push(0),q=q>>1n;return gt}function dt(){const x=t.addFunction(n+"_prepareG1");x.addParam("pP","i32"),x.addParam("ppreP","i32");const q=x.getCodeBuilder();x.addCode(q.call(G+"_normalize",q.getLocal("pP"),q.getLocal("ppreP")))}function ft(){const x=t.addFunction(n+"_prepDblStep");x.addParam("R","i32"),x.addParam("r","i32");const q=x.getCodeBuilder(),gt=q.getLocal("R"),mt=q.i32_add(q.getLocal("R"),q.i32_const(2*r)),ut=q.i32_add(q.getLocal("R"),q.i32_const(4*r)),Ct=q.getLocal("r"),vt=q.i32_add(q.getLocal("r"),q.i32_const(2*r)),kt=q.i32_add(q.getLocal("r"),q.i32_const(4*r)),Ot=q.i32_const(t.alloc(l)),Rt=q.i32_const(t.alloc(l)),ht=q.i32_const(t.alloc(l)),O=q.i32_const(t.alloc(l)),H=q.i32_const(t.alloc(l));x.addCode(q.call(C+"_square",gt,Ct),q.call(C+"_square",mt,Rt),q.call(C+"_square",Rt,ht),q.call(C+"_add",Rt,gt,vt),q.call(C+"_square",vt,vt),q.call(C+"_sub",vt,Ct,vt),q.call(C+"_sub",vt,ht,vt),q.call(C+"_add",vt,vt,vt),q.call(C+"_add",Ct,Ct,O),q.call(C+"_add",O,Ct,O),q.call(C+"_add",gt,O,kt),q.call(C+"_square",O,H),q.call(C+"_square",ut,Ot),q.call(C+"_sub",H,vt,gt),q.call(C+"_sub",gt,vt,gt),q.call(C+"_add",ut,mt,ut),q.call(C+"_square",ut,ut),q.call(C+"_sub",ut,Rt,ut),q.call(C+"_sub",ut,Ot,ut),q.call(C+"_sub",vt,gt,mt),q.call(C+"_mul",mt,O,mt),q.call(C+"_add",ht,ht,ht),q.call(C+"_add",ht,ht,ht),q.call(C+"_add",ht,ht,ht),q.call(C+"_sub",mt,ht,mt),q.call(C+"_mul",O,Ot,vt),q.call(C+"_add",vt,vt,vt),q.call(C+"_neg",vt,vt),q.call(C+"_square",kt,kt),q.call(C+"_sub",kt,Ct,kt),q.call(C+"_sub",kt,H,kt),q.call(C+"_add",Rt,Rt,Rt),q.call(C+"_add",Rt,Rt,Rt),q.call(C+"_sub",kt,Rt,kt),q.call(C+"_mul",ut,Ot,Ct),q.call(C+"_add",Ct,Ct,Ct))}function Ft(){const x=t.addFunction(n+"_prepAddStep");x.addParam("R","i32"),x.addParam("Q","i32"),x.addParam("r","i32");const q=x.getCodeBuilder(),gt=q.getLocal("R"),mt=q.i32_add(q.getLocal("R"),q.i32_const(2*r)),ut=q.i32_add(q.getLocal("R"),q.i32_const(4*r)),Ct=q.getLocal("Q"),vt=q.i32_add(q.getLocal("Q"),q.i32_const(2*r)),kt=q.getLocal("r"),Ot=q.i32_add(q.getLocal("r"),q.i32_const(2*r)),Rt=q.i32_add(q.getLocal("r"),q.i32_const(4*r)),ht=q.i32_const(t.alloc(l)),O=q.i32_const(t.alloc(l)),H=q.i32_const(t.alloc(l)),pt=q.i32_const(t.alloc(l)),Lt=q.i32_const(t.alloc(l)),bt=q.i32_const(t.alloc(l)),Bt=q.i32_const(t.alloc(l)),At=q.i32_const(t.alloc(l)),xt=q.i32_const(t.alloc(l)),_t=q.i32_const(t.alloc(l)),St=q.i32_const(t.alloc(l));x.addCode(q.call(C+"_square",ut,ht),q.call(C+"_square",vt,O),q.call(C+"_mul",ht,Ct,pt),q.call(C+"_add",vt,ut,Ot),q.call(C+"_square",Ot,Ot),q.call(C+"_sub",Ot,O,Ot),q.call(C+"_sub",Ot,ht,Ot),q.call(C+"_mul",Ot,ht,Ot),q.call(C+"_sub",pt,gt,Lt),q.call(C+"_square",Lt,bt),q.call(C+"_add",bt,bt,Bt),q.call(C+"_add",Bt,Bt,Bt),q.call(C+"_mul",Bt,Lt,At),q.call(C+"_sub",Ot,mt,xt),q.call(C+"_sub",xt,mt,xt),q.call(C+"_mul",xt,Ct,Rt),q.call(C+"_mul",Bt,gt,_t),q.call(C+"_square",xt,gt),q.call(C+"_sub",gt,At,gt),q.call(C+"_sub",gt,_t,gt),q.call(C+"_sub",gt,_t,gt),q.call(C+"_add",ut,Lt,ut),q.call(C+"_square",ut,ut),q.call(C+"_sub",ut,ht,ut),q.call(C+"_sub",ut,bt,ut),q.call(C+"_add",vt,ut,kt),q.call(C+"_sub",_t,gt,St),q.call(C+"_mul",St,xt,St),q.call(C+"_mul",mt,At,pt),q.call(C+"_add",pt,pt,pt),q.call(C+"_sub",St,pt,mt),q.call(C+"_square",kt,kt),q.call(C+"_sub",kt,O,kt),q.call(C+"_square",ut,H),q.call(C+"_sub",kt,H,kt),q.call(C+"_add",Rt,Rt,Rt),q.call(C+"_sub",Rt,kt,Rt),q.call(C+"_add",ut,ut,kt),q.call(C+"_neg",xt,xt),q.call(C+"_add",xt,xt,Ot))}function rt(){const x=t.addFunction(n+"_prepareG2");x.addParam("pQ","i32"),x.addParam("ppreQ","i32"),x.addLocal("pCoef","i32"),x.addLocal("i","i32");const q=x.getCodeBuilder(),gt=q.getLocal("pQ"),mt=t.alloc(l*3),ut=q.i32_const(mt),Ct=q.getLocal("ppreQ");x.addCode(q.call(J+"_normalize",gt,Ct),q.if(q.call(J+"_isZero",Ct),q.ret([])),q.call(J+"_copy",Ct,ut),q.setLocal("pCoef",q.i32_add(q.getLocal("ppreQ"),q.i32_const(l*3)))),x.addCode(q.setLocal("i",q.i32_const(F.length-2)),q.block(q.loop(q.call(n+"_prepDblStep",ut,q.getLocal("pCoef")),q.setLocal("pCoef",q.i32_add(q.getLocal("pCoef"),q.i32_const(W))),q.if(q.i32_load8_s(q.getLocal("i"),M),[...q.call(n+"_prepAddStep",ut,Ct,q.getLocal("pCoef")),...q.setLocal("pCoef",q.i32_add(q.getLocal("pCoef"),q.i32_const(W)))]),q.br_if(1,q.i32_eqz(q.getLocal("i"))),q.setLocal("i",q.i32_sub(q.getLocal("i"),q.i32_const(1))),q.br(0))))}function z(){const x=t.addFunction(Y+"_mul1");x.addParam("pA","i32"),x.addParam("pC1","i32"),x.addParam("pR","i32");const q=x.getCodeBuilder(),gt=q.getLocal("pA"),mt=q.i32_add(q.getLocal("pA"),q.i32_const(u*2)),ut=q.i32_add(q.getLocal("pA"),q.i32_const(u*4)),Ct=q.getLocal("pC1"),vt=q.getLocal("pR"),kt=q.i32_add(q.getLocal("pR"),q.i32_const(u*2)),Ot=q.i32_add(q.getLocal("pR"),q.i32_const(u*4)),Rt=q.i32_const(t.alloc(u*2)),ht=q.i32_const(t.alloc(u*2));x.addCode(q.call(C+"_add",gt,mt,Rt),q.call(C+"_add",mt,ut,ht),q.call(C+"_mul",mt,Ct,Ot),q.call(C+"_mul",ht,Ct,vt),q.call(C+"_sub",vt,Ot,vt),q.call(C+"_mulNR",vt,vt),q.call(C+"_mul",Rt,Ct,kt),q.call(C+"_sub",kt,Ot,kt))}z();function wt(){const x=t.addFunction(Y+"_mul01");x.addParam("pA","i32"),x.addParam("pC0","i32"),x.addParam("pC1","i32"),x.addParam("pR","i32");const q=x.getCodeBuilder(),gt=q.getLocal("pA"),mt=q.i32_add(q.getLocal("pA"),q.i32_const(u*2)),ut=q.i32_add(q.getLocal("pA"),q.i32_const(u*4)),Ct=q.getLocal("pC0"),vt=q.getLocal("pC1"),kt=q.getLocal("pR"),Ot=q.i32_add(q.getLocal("pR"),q.i32_const(u*2)),Rt=q.i32_add(q.getLocal("pR"),q.i32_const(u*4)),ht=q.i32_const(t.alloc(u*2)),O=q.i32_const(t.alloc(u*2)),H=q.i32_const(t.alloc(u*2)),pt=q.i32_const(t.alloc(u*2));x.addCode(q.call(C+"_mul",gt,Ct,ht),q.call(C+"_mul",mt,vt,O),q.call(C+"_add",gt,mt,H),q.call(C+"_add",gt,ut,pt),q.call(C+"_add",mt,ut,kt),q.call(C+"_mul",kt,vt,kt),q.call(C+"_sub",kt,O,kt),q.call(C+"_mulNR",kt,kt),q.call(C+"_add",kt,ht,kt),q.call(C+"_add",Ct,vt,Ot),q.call(C+"_mul",Ot,H,Ot),q.call(C+"_sub",Ot,ht,Ot),q.call(C+"_sub",Ot,O,Ot),q.call(C+"_mul",pt,Ct,Rt),q.call(C+"_sub",Rt,ht,Rt),q.call(C+"_add",Rt,O,Rt))}wt();function yt(){const x=t.addFunction($+"_mul014");x.addParam("pA","i32"),x.addParam("pC0","i32"),x.addParam("pC1","i32"),x.addParam("pC4","i32"),x.addParam("pR","i32");const q=x.getCodeBuilder(),gt=q.getLocal("pA"),mt=q.i32_add(q.getLocal("pA"),q.i32_const(u*6)),ut=q.getLocal("pC0"),Ct=q.getLocal("pC1"),vt=q.getLocal("pC4"),kt=q.i32_const(t.alloc(u*6)),Ot=q.i32_const(t.alloc(u*6)),Rt=q.i32_const(t.alloc(u*2)),ht=q.getLocal("pR"),O=q.i32_add(q.getLocal("pR"),q.i32_const(u*6));x.addCode(q.call(Y+"_mul01",gt,ut,Ct,kt),q.call(Y+"_mul1",mt,vt,Ot),q.call(C+"_add",Ct,vt,Rt),q.call(Y+"_add",mt,gt,O),q.call(Y+"_mul01",O,ut,Rt,O),q.call(Y+"_sub",O,kt,O),q.call(Y+"_sub",O,Ot,O),q.call(Y+"_copy",Ot,ht),q.call(Y+"_mulNR",ht,ht),q.call(Y+"_add",ht,kt,ht))}yt();function It(){const x=t.addFunction(n+"_ell");x.addParam("pP","i32"),x.addParam("pCoefs","i32"),x.addParam("pF","i32");const q=x.getCodeBuilder(),gt=q.getLocal("pP"),mt=q.i32_add(q.getLocal("pP"),q.i32_const(r)),ut=q.getLocal("pF"),Ct=q.getLocal("pCoefs"),vt=q.i32_add(q.getLocal("pCoefs"),q.i32_const(u)),kt=q.i32_add(q.getLocal("pCoefs"),q.i32_const(u*2)),Ot=q.i32_add(q.getLocal("pCoefs"),q.i32_const(u*3)),Rt=q.i32_add(q.getLocal("pCoefs"),q.i32_const(u*4)),ht=t.alloc(u*2),O=q.i32_const(ht),H=q.i32_const(ht),pt=q.i32_const(ht+u),Lt=t.alloc(u*2),bt=q.i32_const(Lt),Bt=q.i32_const(Lt),At=q.i32_const(Lt+u);x.addCode(q.call(k+"_mul",Ct,mt,H),q.call(k+"_mul",vt,mt,pt),q.call(k+"_mul",kt,gt,Bt),q.call(k+"_mul",Ot,gt,At),q.call($+"_mul014",ut,Rt,bt,O,ut))}It();function Ut(){const x=t.addFunction(n+"_millerLoop");x.addParam("ppreP","i32"),x.addParam("ppreQ","i32"),x.addParam("r","i32"),x.addLocal("pCoef","i32"),x.addLocal("i","i32");const q=x.getCodeBuilder(),gt=q.getLocal("ppreP"),mt=q.getLocal("pCoef"),ut=q.getLocal("r");x.addCode(q.call($+"_one",ut),q.if(q.call(G+"_isZero",gt),q.ret([])),q.if(q.call(G+"_isZero",q.getLocal("ppreQ")),q.ret([])),q.setLocal("pCoef",q.i32_add(q.getLocal("ppreQ"),q.i32_const(l*3))),q.setLocal("i",q.i32_const(F.length-2)),q.block(q.loop(q.call(n+"_ell",gt,mt,ut),q.setLocal("pCoef",q.i32_add(q.getLocal("pCoef"),q.i32_const(W))),q.if(q.i32_load8_s(q.getLocal("i"),M),[...q.call(n+"_ell",gt,mt,ut),...q.setLocal("pCoef",q.i32_add(q.getLocal("pCoef"),q.i32_const(W)))]),q.call($+"_square",ut,ut),q.br_if(1,q.i32_eq(q.getLocal("i"),q.i32_const(1))),q.setLocal("i",q.i32_sub(q.getLocal("i"),q.i32_const(1))),q.br(0))),q.call(n+"_ell",gt,mt,ut)),x.addCode(q.call($+"_conjugate",ut,ut))}function Dt(x){const q=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n,151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,0n],[2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n,877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n],[4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,0n],[151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n,3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n,2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,0n],[877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n,3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n]]],gt=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[0n,4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[0n,1n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[0n,793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n]],[[1n,0n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,0n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,0n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,0n]]],mt=t.addFunction($+"_frobeniusMap"+x);mt.addParam("x","i32"),mt.addParam("r","i32");const ut=mt.getCodeBuilder();for(let vt=0;vt<6;vt++){const kt=vt==0?ut.getLocal("x"):ut.i32_add(ut.getLocal("x"),ut.i32_const(vt*l)),Ot=kt,Rt=ut.i32_add(ut.getLocal("x"),ut.i32_const(vt*l+u)),ht=vt==0?ut.getLocal("r"):ut.i32_add(ut.getLocal("r"),ut.i32_const(vt*l)),O=ht,H=ut.i32_add(ut.getLocal("r"),ut.i32_const(vt*l+u)),pt=Ct(q[Math.floor(vt/3)][x%12],gt[vt%3][x%6]),Lt=t.alloc([...de.bigInt2BytesLE(R(pt[0]),r),...de.bigInt2BytesLE(R(pt[1]),r)]);x%2==1?mt.addCode(ut.call(k+"_copy",Ot,O),ut.call(k+"_neg",Rt,H),ut.call(C+"_mul",ht,ut.i32_const(Lt),ht)):mt.addCode(ut.call(C+"_mul",kt,ut.i32_const(Lt),ht))}function Ct(vt,kt){const Ot=vt[0],Rt=vt[1],ht=kt[0],O=kt[1],H=[(Ot*ht-Rt*O)%i,(Ot*O+Rt*ht)%i];return _m(H[0])&&(H[0]=H[0]+i),H}}function Mt(){const x=t.addFunction(n+"__cyclotomicSquare");x.addParam("x","i32"),x.addParam("r","i32");const q=x.getCodeBuilder(),gt=q.getLocal("x"),mt=q.i32_add(q.getLocal("x"),q.i32_const(l)),ut=q.i32_add(q.getLocal("x"),q.i32_const(2*l)),Ct=q.i32_add(q.getLocal("x"),q.i32_const(3*l)),vt=q.i32_add(q.getLocal("x"),q.i32_const(4*l)),kt=q.i32_add(q.getLocal("x"),q.i32_const(5*l)),Ot=q.getLocal("r"),Rt=q.i32_add(q.getLocal("r"),q.i32_const(l)),ht=q.i32_add(q.getLocal("r"),q.i32_const(2*l)),O=q.i32_add(q.getLocal("r"),q.i32_const(3*l)),H=q.i32_add(q.getLocal("r"),q.i32_const(4*l)),pt=q.i32_add(q.getLocal("r"),q.i32_const(5*l)),Lt=q.i32_const(t.alloc(l)),bt=q.i32_const(t.alloc(l)),Bt=q.i32_const(t.alloc(l)),At=q.i32_const(t.alloc(l)),xt=q.i32_const(t.alloc(l)),_t=q.i32_const(t.alloc(l)),St=q.i32_const(t.alloc(l)),Gt=q.i32_const(t.alloc(l));x.addCode(q.call(C+"_mul",gt,vt,St),q.call(C+"_mulNR",vt,Lt),q.call(C+"_add",gt,Lt,Lt),q.call(C+"_add",gt,vt,Gt),q.call(C+"_mul",Gt,Lt,Lt),q.call(C+"_mulNR",St,Gt),q.call(C+"_add",St,Gt,Gt),q.call(C+"_sub",Lt,Gt,Lt),q.call(C+"_add",St,St,bt),q.call(C+"_mul",Ct,ut,St),q.call(C+"_mulNR",ut,Bt),q.call(C+"_add",Ct,Bt,Bt),q.call(C+"_add",Ct,ut,Gt),q.call(C+"_mul",Gt,Bt,Bt),q.call(C+"_mulNR",St,Gt),q.call(C+"_add",St,Gt,Gt),q.call(C+"_sub",Bt,Gt,Bt),q.call(C+"_add",St,St,At),q.call(C+"_mul",mt,kt,St),q.call(C+"_mulNR",kt,xt),q.call(C+"_add",mt,xt,xt),q.call(C+"_add",mt,kt,Gt),q.call(C+"_mul",Gt,xt,xt),q.call(C+"_mulNR",St,Gt),q.call(C+"_add",St,Gt,Gt),q.call(C+"_sub",xt,Gt,xt),q.call(C+"_add",St,St,_t),q.call(C+"_sub",Lt,gt,Ot),q.call(C+"_add",Ot,Ot,Ot),q.call(C+"_add",Lt,Ot,Ot),q.call(C+"_add",bt,vt,H),q.call(C+"_add",H,H,H),q.call(C+"_add",bt,H,H),q.call(C+"_mul",_t,q.i32_const(T),Gt),q.call(C+"_add",Gt,Ct,O),q.call(C+"_add",O,O,O),q.call(C+"_add",Gt,O,O),q.call(C+"_sub",xt,ut,ht),q.call(C+"_add",ht,ht,ht),q.call(C+"_add",xt,ht,ht),q.call(C+"_sub",Bt,mt,Rt),q.call(C+"_add",Rt,Rt,Rt),q.call(C+"_add",Bt,Rt,Rt),q.call(C+"_add",At,kt,pt),q.call(C+"_add",pt,pt,pt),q.call(C+"_add",At,pt,pt))}function Qt(x,q,gt){const mt=et(x).map(ht=>ht==-1?255:ht),ut=t.alloc(mt),Ct=t.addFunction(n+"__cyclotomicExp_"+gt);Ct.addParam("x","i32"),Ct.addParam("r","i32"),Ct.addLocal("bit","i32"),Ct.addLocal("i","i32");const vt=Ct.getCodeBuilder(),kt=vt.getLocal("x"),Ot=vt.getLocal("r"),Rt=vt.i32_const(t.alloc(c));Ct.addCode(vt.call($+"_conjugate",kt,Rt),vt.call($+"_one",Ot),vt.if(vt.teeLocal("bit",vt.i32_load8_s(vt.i32_const(mt.length-1),ut)),vt.if(vt.i32_eq(vt.getLocal("bit"),vt.i32_const(1)),vt.call($+"_mul",Ot,kt,Ot),vt.call($+"_mul",Ot,Rt,Ot))),vt.setLocal("i",vt.i32_const(mt.length-2)),vt.block(vt.loop(vt.call(n+"__cyclotomicSquare",Ot,Ot),vt.if(vt.teeLocal("bit",vt.i32_load8_s(vt.getLocal("i"),ut)),vt.if(vt.i32_eq(vt.getLocal("bit"),vt.i32_const(1)),vt.call($+"_mul",Ot,kt,Ot),vt.call($+"_mul",Ot,Rt,Ot))),vt.br_if(1,vt.i32_eqz(vt.getLocal("i"))),vt.setLocal("i",vt.i32_sub(vt.getLocal("i"),vt.i32_const(1))),vt.br(0)))),Ct.addCode(vt.call($+"_conjugate",Ot,Ot))}function it(){Mt(),Qt(v,m,"w0");const x=t.addFunction(n+"_finalExponentiation");x.addParam("x","i32"),x.addParam("r","i32");const q=x.getCodeBuilder(),gt=q.getLocal("x"),mt=q.getLocal("r"),ut=q.i32_const(t.alloc(c)),Ct=q.i32_const(t.alloc(c)),vt=q.i32_const(t.alloc(c)),kt=q.i32_const(t.alloc(c)),Ot=q.i32_const(t.alloc(c)),Rt=q.i32_const(t.alloc(c)),ht=q.i32_const(t.alloc(c));x.addCode(q.call($+"_frobeniusMap6",gt,ut),q.call($+"_inverse",gt,Ct),q.call($+"_mul",ut,Ct,vt),q.call($+"_copy",vt,Ct),q.call($+"_frobeniusMap2",vt,vt),q.call($+"_mul",vt,Ct,vt),q.call(n+"__cyclotomicSquare",vt,Ct),q.call($+"_conjugate",Ct,Ct),q.call(n+"__cyclotomicExp_w0",vt,kt),q.call(n+"__cyclotomicSquare",kt,Ot),q.call($+"_mul",Ct,kt,Rt),q.call(n+"__cyclotomicExp_w0",Rt,Ct),q.call(n+"__cyclotomicExp_w0",Ct,ut),q.call(n+"__cyclotomicExp_w0",ut,ht),q.call($+"_mul",ht,Ot,ht),q.call(n+"__cyclotomicExp_w0",ht,Ot),q.call($+"_conjugate",Rt,Rt),q.call($+"_mul",Ot,Rt,Ot),q.call($+"_mul",Ot,vt,Ot),q.call($+"_conjugate",vt,Rt),q.call($+"_mul",Ct,vt,Ct),q.call($+"_frobeniusMap3",Ct,Ct),q.call($+"_mul",ht,Rt,ht),q.call($+"_frobeniusMap1",ht,ht),q.call($+"_mul",kt,ut,kt),q.call($+"_frobeniusMap2",kt,kt),q.call($+"_mul",kt,Ct,kt),q.call($+"_mul",kt,ht,kt),q.call($+"_mul",kt,Ot,mt))}function K(){const x=t.addFunction(n+"_finalExponentiationOld");x.addParam("x","i32"),x.addParam("r","i32");const gt=t.alloc(de.bigInt2BytesLE(322277361516934140462891564586510139908379969514828494218366688025288661041104682794998680497580008899973249814104447692778988208376779573819485263026159588510513834876303014016798809919343532899164848730280942609956670917565618115867287399623286813270357901731510188149934363360381614501334086825442271920079363289954510565375378443704372994881406797882676971082200626541916413184642520269678897559532260949334760604962086348898118982248842634379637598665468817769075878555493752214492790122785850202957575200176084204422751485957336465472324810982833638490904279282696134323072515220044451592646885410572234451732790590013479358343841220074174848221722017083597872017638514103174122784843925578370430843522959600095676285723737049438346544753168912974976791528535276317256904336520179281145394686565050419250614107803233314658825463117900250701199181529205942363159325765991819433914303908860460720581408201373164047773794825411011922305820065611121544561808414055302212057471395719432072209245600258134364584636810093520285711072578721435517884103526483832733289802426157301542744476740008494780363354305116978805620671467071400711358839553375340724899735460480144599782014906586543813292157922220645089192130209334926661588737007768565838519456601560804957985667880395221049249803753582637708560n,544)),mt=x.getCodeBuilder();x.addCode(mt.call($+"_exp",mt.getLocal("x"),mt.i32_const(gt),mt.i32_const(544),mt.getLocal("r")))}const U=t.alloc(p),D=t.alloc(d);function ot(x){const q=t.addFunction(n+"_pairingEq"+x);for(let Ct=0;Ct<x;Ct++)q.addParam("p_"+Ct,"i32"),q.addParam("q_"+Ct,"i32");q.addParam("c","i32"),q.setReturnType("i32");const gt=q.getCodeBuilder(),mt=gt.i32_const(t.alloc(c)),ut=gt.i32_const(t.alloc(c));q.addCode(gt.call($+"_one",mt));for(let Ct=0;Ct<x;Ct++)q.addCode(gt.call(n+"_prepareG1",gt.getLocal("p_"+Ct),gt.i32_const(U))),q.addCode(gt.call(n+"_prepareG2",gt.getLocal("q_"+Ct),gt.i32_const(D))),q.addCode(gt.if(gt.i32_eqz(gt.call(G+"_inGroupAffine",gt.i32_const(U))),gt.ret(gt.i32_const(0))),gt.if(gt.i32_eqz(gt.call(J+"_inGroupAffine",gt.i32_const(D))),gt.ret(gt.i32_const(0)))),q.addCode(gt.call(n+"_millerLoop",gt.i32_const(U),gt.i32_const(D),ut)),q.addCode(gt.call($+"_mul",mt,ut,mt));q.addCode(gt.call(n+"_finalExponentiation",mt,mt)),q.addCode(gt.call($+"_eq",mt,gt.getLocal("c")))}function st(){const x=t.addFunction(n+"_pairing");x.addParam("p","i32"),x.addParam("q","i32"),x.addParam("r","i32");const q=x.getCodeBuilder(),gt=q.i32_const(t.alloc(c));x.addCode(q.call(n+"_prepareG1",q.getLocal("p"),q.i32_const(U))),x.addCode(q.call(n+"_prepareG2",q.getLocal("q"),q.i32_const(D))),x.addCode(q.call(n+"_millerLoop",q.i32_const(U),q.i32_const(D),gt)),x.addCode(q.call(n+"_finalExponentiation",gt,q.getLocal("r")))}function lt(){const x=t.addFunction(J+"_inGroupAffine");x.addParam("p","i32"),x.setReturnType("i32");const q=x.getCodeBuilder(),gt=[2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279894n,2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279893n],mt=4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,ut=[2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n],Ct=q.i32_const(t.alloc([...de.bigInt2BytesLE(R(gt[0]),r),...de.bigInt2BytesLE(R(gt[1]),r)])),vt=q.i32_const(t.alloc(de.bigInt2BytesLE(R(mt),r))),kt=q.i32_const(t.alloc([...de.bigInt2BytesLE(R(ut[0]),r),...de.bigInt2BytesLE(R(ut[1]),r)])),Ot=q.i32_const(t.alloc(de.bigInt2BytesLE(v,8))),Rt=q.getLocal("p"),ht=q.i32_add(q.getLocal("p"),q.i32_const(l)),O=q.i32_const(t.alloc(u)),H=q.i32_const(t.alloc(l)),pt=q.i32_const(t.alloc(l)),Lt=t.alloc(l*2),bt=q.i32_const(Lt),Bt=q.i32_const(Lt),At=q.i32_const(Lt),xt=q.i32_const(Lt+u),_t=q.i32_const(Lt+l),St=q.i32_const(Lt+l),Gt=q.i32_const(Lt+l+u),Tt=t.alloc(l*3),zt=q.i32_const(Tt),Xt=q.i32_const(Tt),Kt=q.i32_const(Tt),Yt=q.i32_const(Tt+u),re=q.i32_const(Tt+l),ie=q.i32_const(Tt+l),Vt=q.i32_const(Tt+l+u),ae=q.i32_const(Tt+l*2);x.addCode(q.if(q.call(J+"_isZeroAffine",q.getLocal("p")),q.ret(q.i32_const(1))),q.if(q.i32_eqz(q.call(J+"_inCurveAffine",q.getLocal("p"))),q.ret(q.i32_const(0))),q.call(C+"_mul",Rt,Ct,H),q.call(C+"_mul",ht,Ct,pt),q.call(C+"_mul1",H,vt,Bt),q.call(C+"_neg",pt,_t),q.call(C+"_neg",H,Xt),q.call(C+"_mul",pt,kt,re),q.call(k+"_sub",At,xt,O),q.call(k+"_add",At,xt,xt),q.call(k+"_copy",O,At),q.call(k+"_sub",St,Gt,O),q.call(k+"_add",St,Gt,Gt),q.call(k+"_copy",O,St),q.call(k+"_add",Kt,Yt,O),q.call(k+"_sub",Kt,Yt,Yt),q.call(k+"_copy",O,Kt),q.call(k+"_sub",Vt,ie,O),q.call(k+"_add",ie,Vt,Vt),q.call(k+"_copy",O,ie),q.call(C+"_one",ae),q.call(J+"_timesScalar",zt,Ot,q.i32_const(8),zt),q.call(J+"_addMixed",zt,bt,zt),q.ret(q.call(J+"_eqMixed",zt,q.getLocal("p"))));const te=t.addFunction(J+"_inGroup");te.addParam("pIn","i32"),te.setReturnType("i32");const Le=te.getCodeBuilder(),ke=Le.i32_const(t.alloc(l*2));te.addCode(Le.call(J+"_toAffine",Le.getLocal("pIn"),ke),Le.ret(Le.call(J+"_inGroupAffine",ke)))}function at(){const x=t.addFunction(G+"_inGroupAffine");x.addParam("p","i32"),x.setReturnType("i32");const q=x.getCodeBuilder(),gt=4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,mt=793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,ut=(v*v-1n)/3n,Ct=q.i32_const(t.alloc(de.bigInt2BytesLE(R(gt),r))),vt=q.i32_const(t.alloc(de.bigInt2BytesLE(R(mt),r))),kt=q.i32_const(t.alloc(de.bigInt2BytesLE(ut,16))),Ot=q.getLocal("p"),Rt=q.i32_add(q.getLocal("p"),q.i32_const(u)),ht=t.alloc(u*3),O=q.i32_const(ht),H=q.i32_const(ht),pt=q.i32_const(ht+u),Lt=t.alloc(u*2),bt=q.i32_const(Lt),Bt=q.i32_const(Lt),At=q.i32_const(Lt+u);x.addCode(q.if(q.call(G+"_isZeroAffine",q.getLocal("p")),q.ret(q.i32_const(1))),q.if(q.i32_eqz(q.call(G+"_inCurveAffine",q.getLocal("p"))),q.ret(q.i32_const(0))),q.call(k+"_mul",Ot,Ct,H),q.call(k+"_copy",Rt,pt),q.call(k+"_mul",Ot,vt,Bt),q.call(k+"_copy",Rt,At),q.call(G+"_doubleAffine",O,O),q.call(G+"_subMixed",O,q.getLocal("p"),O),q.call(G+"_subMixed",O,bt,O),q.call(G+"_timesScalar",O,kt,q.i32_const(16),O),q.ret(q.call(G+"_eqMixed",O,bt)));const xt=t.addFunction(G+"_inGroup");xt.addParam("pIn","i32"),xt.setReturnType("i32");const _t=xt.getCodeBuilder(),St=_t.i32_const(t.alloc(u*2));xt.addCode(_t.call(G+"_toAffine",_t.getLocal("pIn"),St),_t.ret(_t.call(G+"_inGroupAffine",St)))}for(let x=0;x<10;x++)Dt(x),t.exportFunction($+"_frobeniusMap"+x);at(),lt(),Ft(),ft(),dt(),rt(),Ut(),K(),it();for(let x=1;x<=5;x++)ot(x),t.exportFunction(n+"_pairingEq"+x);st(),t.exportFunction(n+"_pairing"),t.exportFunction(n+"_prepareG1"),t.exportFunction(n+"_prepareG2"),t.exportFunction(n+"_millerLoop"),t.exportFunction(n+"_finalExponentiation"),t.exportFunction(n+"_finalExponentiationOld"),t.exportFunction(n+"__cyclotomicSquare"),t.exportFunction(n+"__cyclotomicExp_w0"),t.exportFunction(Y+"_mul1"),t.exportFunction(Y+"_mul01"),t.exportFunction($+"_mul014"),t.exportFunction(G+"_inGroupAffine"),t.exportFunction(G+"_inGroup"),t.exportFunction(J+"_inGroupAffine"),t.exportFunction(J+"_inGroup")},Mm=Em,km=xm;function Jc(a){if(typeof a=="bigint"||a.eq!==void 0)return a.toString(10);if(a instanceof Uint8Array)return wa(a,0);if(Array.isArray(a))return a.map(Jc);if(typeof a=="object"){const t={};return Object.keys(a).forEach(n=>{t[n]=Jc(a[n])}),t}else return a}function Yc(a){if(typeof a=="string"&&/^[0-9]+$/.test(a))return BigInt(a);if(typeof a=="string"&&/^0x[0-9a-fA-F]+$/.test(a))return BigInt(a);if(Array.isArray(a))return a.map(Yc);if(typeof a=="object"){if(a===null)return null;const t={};return Object.keys(a).forEach(n=>{t[n]=Yc(a[n])}),t}else return a}function Um(a){let t=BigInt(0),e=a.length,n=0;const i=new DataView(a.buffer,a.byteOffset,a.byteLength);for(;e>0;)e>=4?(e-=4,t+=BigInt(i.getUint32(e))<<BigInt(n*8),n+=4):e>=2?(e-=2,t+=BigInt(i.getUint16(e))<<BigInt(n*8),n+=2):(e-=1,t+=BigInt(i.getUint8(e))<<BigInt(n*8),n+=1);return t}function Gm(a,t){let e=a;const n=new Uint8Array(t),i=new DataView(n.buffer);let o=t;for(;o>0;)o-4>=0?(o-=4,i.setUint32(o,Number(e&BigInt(4294967295))),e=e>>BigInt(32)):o-2>=0?(o-=2,i.setUint16(o,Number(e&BigInt(65535))),e=e>>BigInt(16)):(o-=1,i.setUint8(o,Number(e&BigInt(255))),e=e>>BigInt(8));if(e)throw new Error("Number does not fit in this length");return n}function Pm(a){let t=BigInt(0),e=0;const n=new DataView(a.buffer,a.byteOffset,a.byteLength);for(;e<a.length;)e+4<=a.length?(t+=BigInt(n.getUint32(e,!0))<<BigInt(e*8),e+=4):e+2<=a.length?(t+=BigInt(n.getUint16(e,!0))<<BigInt(e*8),e+=2):(t+=BigInt(n.getUint8(e,!0))<<BigInt(e*8),e+=1);return t}function Hh(a,t){let e=a;typeof t>"u"&&(t=Math.floor((Ba(a)-1)/8)+1,t==0&&(t=1));const n=new Uint8Array(t),i=new DataView(n.buffer);let o=0;for(;o<t;)o+4<=t?(i.setUint32(o,Number(e&BigInt(4294967295)),!0),o+=4,e=e>>BigInt(32)):o+2<=t?(i.setUint16(o,Number(e&BigInt(65535)),!0),o+=2,e=e>>BigInt(16)):(i.setUint8(o,Number(e&BigInt(255)),!0),o+=1,e=e>>BigInt(8));if(e)throw new Error("Number does not fit in this length");return n}function jc(a,t){if(typeof t=="bigint"||t.eq!==void 0)return t.toString(10);if(t instanceof Uint8Array)return a.toString(a.e(t));if(Array.isArray(t))return t.map(jc.bind(this,a));if(typeof t=="object"){const e={};return Object.keys(t).forEach(i=>{e[i]=jc(a,t[i])}),e}else return t}function Vc(a,t){if(typeof t=="string"&&/^[0-9]+$/.test(t))return a.e(t);if(typeof t=="string"&&/^0x[0-9a-fA-F]+$/.test(t))return a.e(t);if(Array.isArray(t))return t.map(Vc.bind(this,a));if(typeof t=="object"){if(t===null)return null;const e={};return Object.keys(t).forEach(i=>{e[i]=Vc(a,t[i])}),e}else return t}const ia=[];for(let a=0;a<256;a++)ia[a]=Om(a,8);function Om(a,t){let e=0,n=a;for(let i=0;i<t;i++)e<<=1,e=e|n&1,n>>=1;return e}function Qh(a,t){return(ia[a>>>24]|ia[a>>>16&255]<<8|ia[a>>>8&255]<<16|ia[a&255]<<24)>>>32-t}function mn(a){return((a&4294901760)!==0?(a&=4294901760,16):0)|((a&4278255360)!==0?(a&=4278255360,8):0)|((a&4042322160)!==0?(a&=4042322160,4):0)|((a&3435973836)!==0?(a&=3435973836,2):0)|(a&2863311530)!==0}function Kh(a,t){const e=a.byteLength/t,n=mn(e);if(e!=1<<n)throw new Error("Invalid number of pointers");for(let i=0;i<e;i++){const o=Qh(i,n);if(i>o){const s=a.slice(i*t,(i+1)*t);a.set(a.slice(o*t,(o+1)*t),i*t),a.set(s,o*t)}}}function Vl(a,t){const e=new Uint8Array(t*a.length);for(let n=0;n<a.length;n++)e.set(a[n],n*t);return e}function Bs(a,t){const e=a.byteLength/t,n=new Array(e);for(let i=0;i<e;i++)n[i]=a.slice(i*t,i*t+t);return n}var Dm=Object.freeze({__proto__:null,array2buffer:Vl,beBuff2int:Um,beInt2Buff:Gm,bitReverse:Qh,buffReverseBits:Kh,buffer2array:Bs,leBuff2int:Pm,leInt2Buff:Hh,log2:mn,stringifyBigInts:Jc,stringifyFElements:jc,unstringifyBigInts:Yc,unstringifyFElements:Vc});const Ze=1<<30;let Ht=class Wc{constructor(t){this.buffers=[],this.byteLength=t;for(let e=0;e<t;e+=Ze){const n=Math.min(t-e,Ze);this.buffers.push(new Uint8Array(n))}}slice(t,e){e===void 0&&(e=this.byteLength),t===void 0&&(t=0);const n=e-t,i=Math.floor(t/Ze),o=Math.floor((t+n-1)/Ze);if(i==o||n==0)return this.buffers[i].slice(t%Ze,t%Ze+n);let s,r=i,u=t%Ze,l=n;for(;l>0;){const c=u+l>Ze?Ze-u:l,f=new Uint8Array(this.buffers[r].buffer,this.buffers[r].byteOffset+u,c);if(c==n)return f.slice();s||(n<=Ze?s=new Uint8Array(n):s=new Wc(n)),s.set(f,n-l),l=l-c,r++,u=0}return s}set(t,e){e===void 0&&(e=0);const n=t.byteLength;if(n==0)return;const i=Math.floor(e/Ze),o=Math.floor((e+n-1)/Ze);if(i==o)return t instanceof Wc&&t.buffers.length==1?this.buffers[i].set(t.buffers[0],e%Ze):this.buffers[i].set(t,e%Ze);let s=i,r=e%Ze,u=n;for(;u>0;){const l=r+u>Ze?Ze-r:u,c=t.slice(n-u,n-u+l);new Uint8Array(this.buffers[s].buffer,this.buffers[s].byteOffset+r,l).set(c),u=u-l,s++,r=0}}};function pi(a,t,e,n){return async function(o){const s=Math.floor(o.byteLength/e);if(s*e!==o.byteLength)throw new Error("Invalid buffer size");const r=Math.floor(s/a.concurrency),u=[];for(let g=0;g<a.concurrency;g++){let L;if(g<a.concurrency-1?L=r:L=s-g*r,L==0)continue;const k=[{cmd:"ALLOCSET",var:0,buff:o.slice(g*r*e,g*r*e+L*e)},{cmd:"ALLOC",var:1,len:n*L},{cmd:"CALL",fnName:t,params:[{var:0},{val:L},{var:1}]},{cmd:"GET",out:0,var:1,len:n*L}];u.push(a.queueAction(k))}const l=await Promise.all(u);let c;o instanceof Ht?c=new Ht(s*n):c=new Uint8Array(s*n);let f=0;for(let g=0;g<l.length;g++)c.set(l[g][0],f),f+=l[g][0].byteLength;return c}}let Xd=class{constructor(t,e,n,i){if(this.tm=t,this.prefix=e,this.p=i,this.n8=n,this.type="F1",this.m=1,this.half=oo(i,ki),this.bitLength=Ba(i),this.mask=ai(Es(ki,this.bitLength),ki),this.pOp1=t.alloc(n),this.pOp2=t.alloc(n),this.pOp3=t.alloc(n),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=this.tm.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.n64=Math.floor(n/8),this.n32=Math.floor(n/4),this.n64*8!=this.n8)throw new Error("n8 must be a multiple of 8");this.half=oo(this.p,ki),this.nqr=this.two;let o=this.exp(this.nqr,this.half);for(;!this.eq(o,this.negone);)this.nqr=this.add(this.nqr,this.one),o=this.exp(this.nqr,this.half);this.shift=this.mul(this.nqr,this.nqr),this.shiftInv=this.inv(this.shift),this.s=0;let s=ai(this.p,ki);for(;!ql(s);)this.s=this.s+1,s=oo(s,ki);this.w=[],this.w[this.s]=this.exp(this.nqr,s);for(let r=this.s-1;r>=0;r--)this.w[r]=this.square(this.w[r+1]);if(!this.eq(this.w[0],this.one))throw new Error("Error calculating roots of unity");this.batchToMontgomery=pi(t,e+"_batchToMontgomery",this.n8,this.n8),this.batchFromMontgomery=pi(t,e+"_batchFromMontgomery",this.n8,this.n8)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){return this.op2("_add",t,e)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,e){return e instanceof Uint8Array||(e=ho(Re(e))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}isNegative(t){return this.op1Bool("_isNegative",t)}e(t,e){if(t instanceof Uint8Array)return t;let n=Re(t,e);Lh(n)?(n=yh(n),zc(n,this.p)&&(n=Qn(n,this.p)),n=ai(this.p,n)):zc(n,this.p)&&(n=Qn(n,this.p));const i=Hh(n,this.n8);return this.toMontgomery(i)}toString(t,e){const n=this.fromMontgomery(t),i=wa(n,0);return Hl(i,e)}fromRng(t){let e;const n=new Uint8Array(this.n8);do{e=Bh;for(let i=0;i<this.n64;i++)e=Tl(e,Es(t.nextU64(),64*i));e=Rl(e,this.mask)}while(Ih(e,this.p));return La(n,0,e,this.n8),n}random(){return this.fromRng(Ql())}toObject(t){const e=this.fromMontgomery(t);return wa(e,0)}fromObject(t){const e=new Uint8Array(this.n8);return La(e,0,t,this.n8),this.toMontgomery(e)}toRprLE(t,e,n){t.set(this.fromMontgomery(n),e)}toRprBE(t,e,n){const i=this.fromMontgomery(n);for(let o=0;o<this.n8/2;o++){const s=i[o];i[o]=i[this.n8-1-o],i[this.n8-1-o]=s}t.set(i,e)}fromRprLE(t,e){e=e||0;const n=t.slice(e,e+this.n8);return this.toMontgomery(n)}async batchInverse(t){let e=!1;const n=this.n8,i=this.n8;Array.isArray(t)?(t=Vl(t,n),e=!0):t=t.slice(0,t.byteLength);const o=Math.floor(t.byteLength/n);if(o*n!==t.byteLength)throw new Error("Invalid buffer size");const s=Math.floor(o/this.tm.concurrency),r=[];for(let f=0;f<this.tm.concurrency;f++){let g;if(f<this.tm.concurrency-1?g=s:g=o-f*s,g==0)continue;const S=[{cmd:"ALLOCSET",var:0,buff:t.slice(f*s*n,f*s*n+g*n)},{cmd:"ALLOC",var:1,len:i*g},{cmd:"CALL",fnName:this.prefix+"_batchInverse",params:[{var:0},{val:n},{val:g},{var:1},{val:i}]},{cmd:"GET",out:0,var:1,len:i*g}];r.push(this.tm.queueAction(S))}const u=await Promise.all(r);let l;t instanceof Ht?l=new Ht(o*i):l=new Uint8Array(o*i);let c=0;for(let f=0;f<u.length;f++)l.set(u[f][0],c),c+=u[f][0].byteLength;return e?Bs(l,i):l}},$d=class{constructor(t,e,n){this.tm=t,this.prefix=e,this.F=n,this.type="F2",this.m=n.m*2,this.n8=this.F.n8*2,this.n32=this.F.n32*2,this.n64=this.F.n64*2,this.pOp1=t.alloc(n.n8*2),this.pOp2=t.alloc(n.n8*2),this.pOp3=t.alloc(n.n8*2),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){return this.op2("_add",t,e)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}mul1(t,e){return this.op2("_mul1",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,e){return e instanceof Uint8Array||(e=ho(Re(e))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}e(t,e){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&t.length==2){const n=this.F.e(t[0],e),i=this.F.e(t[1],e),o=new Uint8Array(this.F.n8*2);return o.set(n),o.set(i,this.F.n8*2),o}else throw new Error("invalid F2")}toString(t,e){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8),e);return`[${n}, ${i}]`}fromRng(t){const e=this.F.fromRng(t),n=this.F.fromRng(t),i=new Uint8Array(this.F.n8*2);return i.set(e),i.set(n,this.F.n8),i}random(){return this.fromRng(Ql())}toObject(t){const e=this.F.toObject(t.slice(0,this.F.n8)),n=this.F.toObject(t.slice(this.F.n8,this.F.n8*2));return[e,n]}fromObject(t){const e=new Uint8Array(this.F.n8*2),n=this.F.fromObject(t[0]),i=this.F.fromObject(t[1]);return e.set(n),e.set(i,this.F.n8),e}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8)}},qm=class{constructor(t,e,n){this.tm=t,this.prefix=e,this.F=n,this.type="F3",this.m=n.m*3,this.n8=this.F.n8*3,this.n32=this.F.n32*3,this.n64=this.F.n64*3,this.pOp1=t.alloc(n.n8*3),this.pOp2=t.alloc(n.n8*3),this.pOp3=t.alloc(n.n8*3),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}add(t,e){return this.op2("_add",t,e)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,e){return e instanceof Uint8Array||(e=ho(Re(e))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.getBuff(this.pOp3,this.n8)}e(t,e){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&t.length==3){const n=this.F.e(t[0],e),i=this.F.e(t[1],e),o=this.F.e(t[2],e),s=new Uint8Array(this.F.n8*3);return s.set(n),s.set(i,this.F.n8),s.set(o,this.F.n8*2),s}else throw new Error("invalid F3")}toString(t,e){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8,this.F.n8*2),e),o=this.F.toString(t.slice(this.F.n8*2),e);return`[${n}, ${i}, ${o}]`}fromRng(t){const e=this.F.fromRng(t),n=this.F.fromRng(t),i=this.F.fromRng(t),o=new Uint8Array(this.F.n8*3);return o.set(e),o.set(n,this.F.n8),o.set(i,this.F.n8*2),o}random(){return this.fromRng(Ql())}toObject(t){const e=this.F.toObject(t.slice(0,this.F.n8)),n=this.F.toObject(t.slice(this.F.n8,this.F.n8*2)),i=this.F.toObject(t.slice(this.F.n8*2,this.F.n8*3));return[e,n,i]}fromObject(t){const e=new Uint8Array(this.F.n8*3),n=this.F.fromObject(t[0]),i=this.F.fromObject(t[1]),o=this.F.fromObject(t[2]);return e.set(n),e.set(i,this.F.n8),e.set(o,this.F.n8*2),e}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8,this.F.n8*2)}c3(t){return t.slice(this.F.n8*2)}},tf=class{constructor(t,e,n,i,o,s){this.tm=t,this.prefix=e,this.F=n,this.pOp1=t.alloc(n.n8*3),this.pOp2=t.alloc(n.n8*3),this.pOp3=t.alloc(n.n8*3),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,n.n8*3),this.tm.instance.exports[e+"_zeroAffine"](this.pOp1),this.zeroAffine=this.tm.getBuff(this.pOp1,n.n8*2),this.one=this.tm.getBuff(i,n.n8*3),this.g=this.one,this.oneAffine=this.tm.getBuff(i,n.n8*2),this.gAffine=this.oneAffine,this.b=this.tm.getBuff(o,n.n8),s&&(this.cofactor=ho(s)),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.batchLEMtoC=pi(t,e+"_batchLEMtoC",n.n8*2,n.n8),this.batchLEMtoU=pi(t,e+"_batchLEMtoU",n.n8*2,n.n8*2),this.batchCtoLEM=pi(t,e+"_batchCtoLEM",n.n8,n.n8*2),this.batchUtoLEM=pi(t,e+"_batchUtoLEM",n.n8*2,n.n8*2),this.batchToJacobian=pi(t,e+"_batchToJacobian",n.n8*2,n.n8*3),this.batchToAffine=pi(t,e+"_batchToAffine",n.n8*3,n.n8*2)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}op2bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}op1Affine(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*2)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){if(t.byteLength==this.F.n8*3){if(e.byteLength==this.F.n8*3)return this.op2("_add",t,e);if(e.byteLength==this.F.n8*2)return this.op2("_addMixed",t,e);throw new Error("invalid point size")}else if(t.byteLength==this.F.n8*2){if(e.byteLength==this.F.n8*3)return this.op2("_addMixed",e,t);if(e.byteLength==this.F.n8*2)return this.op2("_addAffine",t,e);throw new Error("invalid point size")}else throw new Error("invalid point size")}sub(t,e){if(t.byteLength==this.F.n8*3){if(e.byteLength==this.F.n8*3)return this.op2("_sub",t,e);if(e.byteLength==this.F.n8*2)return this.op2("_subMixed",t,e);throw new Error("invalid point size")}else if(t.byteLength==this.F.n8*2){if(e.byteLength==this.F.n8*3)return this.op2("_subMixed",e,t);if(e.byteLength==this.F.n8*2)return this.op2("_subAffine",t,e);throw new Error("invalid point size")}else throw new Error("invalid point size")}neg(t){if(t.byteLength==this.F.n8*3)return this.op1("_neg",t);if(t.byteLength==this.F.n8*2)return this.op1Affine("_negAffine",t);throw new Error("invalid point size")}double(t){if(t.byteLength==this.F.n8*3)return this.op1("_double",t);if(t.byteLength==this.F.n8*2)return this.op1("_doubleAffine",t);throw new Error("invalid point size")}isZero(t){if(t.byteLength==this.F.n8*3)return this.op1Bool("_isZero",t);if(t.byteLength==this.F.n8*2)return this.op1Bool("_isZeroAffine",t);throw new Error("invalid point size")}timesScalar(t,e){e instanceof Uint8Array||(e=ho(Re(e)));let n;if(t.byteLength==this.F.n8*3)n=this.prefix+"_timesScalar";else if(t.byteLength==this.F.n8*2)n=this.prefix+"_timesScalarAffine";else throw new Error("invalid point size");return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[n](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}timesFr(t,e){let n;if(t.byteLength==this.F.n8*3)n=this.prefix+"_timesFr";else if(t.byteLength==this.F.n8*2)n=this.prefix+"_timesFrAffine";else throw new Error("invalid point size");return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[n](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}eq(t,e){if(t.byteLength==this.F.n8*3){if(e.byteLength==this.F.n8*3)return this.op2bool("_eq",t,e);if(e.byteLength==this.F.n8*2)return this.op2bool("_eqMixed",t,e);throw new Error("invalid point size")}else if(t.byteLength==this.F.n8*2){if(e.byteLength==this.F.n8*3)return this.op2bool("_eqMixed",e,t);if(e.byteLength==this.F.n8*2)return this.op2bool("_eqAffine",t,e);throw new Error("invalid point size")}else throw new Error("invalid point size")}toAffine(t){if(t.byteLength==this.F.n8*3)return this.op1Affine("_toAffine",t);if(t.byteLength==this.F.n8*2)return t;throw new Error("invalid point size")}toJacobian(t){if(t.byteLength==this.F.n8*3)return t;if(t.byteLength==this.F.n8*2)return this.op1("_toJacobian",t);throw new Error("invalid point size")}toRprUncompressed(t,e,n){if(this.tm.setBuff(this.pOp1,n),n.byteLength==this.F.n8*3)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(n.byteLength!=this.F.n8*2)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoU"](this.pOp1,this.pOp1);const i=this.tm.getBuff(this.pOp1,this.F.n8*2);t.set(i,e)}fromRprUncompressed(t,e){const n=t.slice(e,e+this.F.n8*2);return this.tm.setBuff(this.pOp1,n),this.tm.instance.exports[this.prefix+"_UtoLEM"](this.pOp1,this.pOp1),this.tm.getBuff(this.pOp1,this.F.n8*2)}toRprCompressed(t,e,n){if(this.tm.setBuff(this.pOp1,n),n.byteLength==this.F.n8*3)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(n.byteLength!=this.F.n8*2)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoC"](this.pOp1,this.pOp1);const i=this.tm.getBuff(this.pOp1,this.F.n8);t.set(i,e)}fromRprCompressed(t,e){const n=t.slice(e,e+this.F.n8);return this.tm.setBuff(this.pOp1,n),this.tm.instance.exports[this.prefix+"_CtoLEM"](this.pOp1,this.pOp2),this.tm.getBuff(this.pOp2,this.F.n8*2)}toUncompressed(t){const e=new Uint8Array(this.F.n8*2);return this.toRprUncompressed(e,0,t),e}toRprLEM(t,e,n){if(n.byteLength==this.F.n8*2){t.set(n,e);return}else if(n.byteLength==this.F.n8*3){this.tm.setBuff(this.pOp1,n),this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);const i=this.tm.getBuff(this.pOp1,this.F.n8*2);t.set(i,e)}else throw new Error("invalid point size")}fromRprLEM(t,e){return e=e||0,t.slice(e,e+this.F.n8*2)}toString(t,e){if(t.byteLength==this.F.n8*3){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8,this.F.n8*2),e),o=this.F.toString(t.slice(this.F.n8*2),e);return`[ ${n}, ${i}, ${o} ]`}else if(t.byteLength==this.F.n8*2){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8),e);return`[ ${n}, ${i} ]`}else throw new Error("invalid point size")}isValid(t){if(this.isZero(t))return!0;const e=this.F,n=this.toAffine(t),i=n.slice(0,this.F.n8),o=n.slice(this.F.n8,this.F.n8*2),s=e.add(e.mul(e.square(i),i),this.b),r=e.square(o);return e.eq(s,r)}fromRng(t){const e=this.F;let n=[],i,o;do n[0]=e.fromRng(t),i=t.nextBool(),o=e.add(e.mul(e.square(n[0]),n[0]),this.b);while(!e.isSquare(o));n[1]=e.sqrt(o);const s=e.isNegative(n[1]);i^s&&(n[1]=e.neg(n[1]));let r=new Uint8Array(this.F.n8*2);return r.set(n[0]),r.set(n[1],this.F.n8),this.cofactor&&(r=this.timesScalar(r,this.cofactor)),r}toObject(t){if(this.isZero(t))return[this.F.toObject(this.F.zero),this.F.toObject(this.F.one),this.F.toObject(this.F.zero)];const e=this.F.toObject(t.slice(0,this.F.n8)),n=this.F.toObject(t.slice(this.F.n8,this.F.n8*2));let i;return t.byteLength==this.F.n8*3?i=this.F.toObject(t.slice(this.F.n8*2,this.F.n8*3)):i=this.F.toObject(this.F.one),[e,n,i]}fromObject(t){const e=this.F.fromObject(t[0]),n=this.F.fromObject(t[1]);let i;if(t.length==3?i=this.F.fromObject(t[2]):i=this.F.one,this.F.isZero(i,this.F.one))return this.zeroAffine;if(this.F.eq(i,this.F.one)){const o=new Uint8Array(this.F.n8*2);return o.set(e),o.set(n,this.F.n8),o}else{const o=new Uint8Array(this.F.n8*3);return o.set(e),o.set(n,this.F.n8),o.set(i,this.F.n8*2),o}}e(t){return t instanceof Uint8Array?t:this.fromObject(t)}x(t){return this.toAffine(t).slice(0,this.F.n8)}y(t){return this.toAffine(t).slice(this.F.n8)}};function Tm(a){let e,n;async function i(c){const f=new Uint8Array(c.code),g=await WebAssembly.compile(f);n=new WebAssembly.Memory({initial:c.init,maximum:32767}),e=await WebAssembly.instantiate(g,{env:{memory:n}})}function o(c){const f=new Uint32Array(n.buffer,0,1);for(;f[0]&3;)f[0]++;const g=f[0];if(f[0]+=c,f[0]+c>n.buffer.byteLength){const L=n.buffer.byteLength/65536;let S=Math.floor((f[0]+c)/65536)+1;S>32767&&(S=32767),n.grow(S-L)}return g}function s(c){const f=o(c.byteLength);return u(f,c),f}function r(c,f){const g=new Uint8Array(n.buffer);return new Uint8Array(g.buffer,g.byteOffset+c,f)}function u(c,f){new Uint8Array(n.buffer).set(new Uint8Array(f),c)}function l(c){if(c[0].cmd=="INIT")return i(c[0]);const f={vars:[],out:[]},L=new Uint32Array(n.buffer,0,1)[0];for(let k=0;k<c.length;k++)switch(c[k].cmd){case"ALLOCSET":f.vars[c[k].var]=s(c[k].buff);break;case"ALLOC":f.vars[c[k].var]=o(c[k].len);break;case"SET":u(f.vars[c[k].var],c[k].buff);break;case"CALL":{const E=[];for(let G=0;G<c[k].params.length;G++){const C=c[k].params[G];typeof C.var<"u"?E.push(f.vars[C.var]+(C.offset||0)):typeof C.val<"u"&&E.push(C.val)}e.exports[c[k].fnName](...E);break}case"GET":f.out[c[k].out]=r(f.vars[c[k].var],c[k].len).slice();break;default:throw new Error("Invalid cmd")}const S=new Uint32Array(n.buffer,0,1);return S[0]=L,f.out}return l}const qr=25;let ef=class{constructor(){this.promise=new Promise((t,e)=>{this.reject=e,this.resolve=t})}};function Rm(a){return new Promise(t=>setTimeout(t,a))}let Zc;const nf=`(function thread(self) {
    const MAXMEM = 32767;
    let instance;
    let memory;

    if (self) {
        self.onmessage = function(e) {
            let data;
            if (e.data) {
                data = e.data;
            } else {
                data = e;
            }

            if (data[0].cmd == "INIT") {
                init(data[0]).then(function() {
                    self.postMessage(data.result);
                });
            } else if (data[0].cmd == "TERMINATE") {
                self.close();
            } else {
                const res = runTask(data);
                self.postMessage(res);
            }
        };
    }

    async function init(data) {
        const code = new Uint8Array(data.code);
        const wasmModule = await WebAssembly.compile(code);
        memory = new WebAssembly.Memory({initial:data.init, maximum: MAXMEM});

        instance = await WebAssembly.instantiate(wasmModule, {
            env: {
                "memory": memory
            }
        });
    }



    function alloc(length) {
        const u32 = new Uint32Array(memory.buffer, 0, 1);
        while (u32[0] & 3) u32[0]++;  // Return always aligned pointers
        const res = u32[0];
        u32[0] += length;
        if (u32[0] + length > memory.buffer.byteLength) {
            const currentPages = memory.buffer.byteLength / 0x10000;
            let requiredPages = Math.floor((u32[0] + length) / 0x10000)+1;
            if (requiredPages>MAXMEM) requiredPages=MAXMEM;
            memory.grow(requiredPages-currentPages);
        }
        return res;
    }

    function allocBuffer(buffer) {
        const p = alloc(buffer.byteLength);
        setBuffer(p, buffer);
        return p;
    }

    function getBuffer(pointer, length) {
        const u8 = new Uint8Array(memory.buffer);
        return new Uint8Array(u8.buffer, u8.byteOffset + pointer, length);
    }

    function setBuffer(pointer, buffer) {
        const u8 = new Uint8Array(memory.buffer);
        u8.set(new Uint8Array(buffer), pointer);
    }

    function runTask(task) {
        if (task[0].cmd == "INIT") {
            return init(task[0]);
        }
        const ctx = {
            vars: [],
            out: []
        };
        const u32a = new Uint32Array(memory.buffer, 0, 1);
        const oldAlloc = u32a[0];
        for (let i=0; i<task.length; i++) {
            switch (task[i].cmd) {
            case "ALLOCSET":
                ctx.vars[task[i].var] = allocBuffer(task[i].buff);
                break;
            case "ALLOC":
                ctx.vars[task[i].var] = alloc(task[i].len);
                break;
            case "SET":
                setBuffer(ctx.vars[task[i].var], task[i].buff);
                break;
            case "CALL": {
                const params = [];
                for (let j=0; j<task[i].params.length; j++) {
                    const p = task[i].params[j];
                    if (typeof p.var !== "undefined") {
                        params.push(ctx.vars[p.var] + (p.offset || 0));
                    } else if (typeof p.val != "undefined") {
                        params.push(p.val);
                    }
                }
                instance.exports[task[i].fnName](...params);
                break;
            }
            case "GET":
                ctx.out[task[i].out] = getBuffer(ctx.vars[task[i].var], task[i].len).slice();
                break;
            default:
                throw new Error("Invalid cmd");
            }
        }
        const u32b = new Uint32Array(memory.buffer, 0, 1);
        u32b[0] = oldAlloc;
        return ctx.out;
    }


    return runTask;
})(self)`;if(globalThis!=null&&globalThis.Blob){const a=new TextEncoder().encode(nf),t=new Blob([a],{type:"application/javascript"});Zc=URL.createObjectURL(t)}else Zc="data:application/javascript;base64,"+globalThis.btoa(nf);async function Hm(a,t){const e=new Qm;e.memory=new WebAssembly.Memory({initial:qr}),e.u8=new Uint8Array(e.memory.buffer),e.u32=new Uint32Array(e.memory.buffer);const n=await WebAssembly.compile(a.code);if(e.instance=await WebAssembly.instantiate(n,{env:{memory:e.memory}}),globalThis!=null&&globalThis.Worker||(t=!0),e.singleThread=t,e.initalPFree=e.u32[0],e.pq=a.pq,e.pr=a.pr,e.pG1gen=a.pG1gen,e.pG1zero=a.pG1zero,e.pG2gen=a.pG2gen,e.pG2zero=a.pG2zero,e.pOneT=a.pOneT,t)e.code=a.code,e.taskManager=Tm(),await e.taskManager([{cmd:"INIT",init:qr,code:e.code.slice()}]),e.concurrency=1;else{e.workers=[],e.pendingDeferreds=[],e.working=[];let o=2;typeof navigator=="object"&&navigator.hardwareConcurrency&&(o=navigator.hardwareConcurrency),o==0&&(o=2),o>64&&(o=64),e.concurrency=o;for(let r=0;r<o;r++)e.workers[r]=new Worker(Zc),e.workers[r].addEventListener("message",i(r)),e.working[r]=!1;const s=[];for(let r=0;r<e.workers.length;r++){const u=a.code.slice();s.push(e.postAction(r,[{cmd:"INIT",init:qr,code:u}],[u.buffer]))}await Promise.all(s)}return e;function i(o){return function(s){let r;s&&s.data?r=s.data:r=s,e.working[o]=!1,e.pendingDeferreds[o].resolve(r),e.processWorks()}}}let Qm=class{constructor(){this.actionQueue=[],this.oldPFree=0}startSyncOp(){if(this.oldPFree!=0)throw new Error("Sync operation in progress");this.oldPFree=this.u32[0]}endSyncOp(){if(this.oldPFree==0)throw new Error("No sync operation in progress");this.u32[0]=this.oldPFree,this.oldPFree=0}postAction(t,e,n,i){if(this.working[t])throw new Error("Posting a job t a working worker");return this.working[t]=!0,this.pendingDeferreds[t]=i||new ef,this.workers[t].postMessage(e,n),this.pendingDeferreds[t].promise}processWorks(){for(let t=0;t<this.workers.length&&this.actionQueue.length>0;t++)if(this.working[t]==!1){const e=this.actionQueue.shift();this.postAction(t,e.data,e.transfers,e.deferred)}}queueAction(t,e){const n=new ef;if(this.singleThread){const i=this.taskManager(t);n.resolve(i)}else this.actionQueue.push({data:t,transfers:e,deferred:n}),this.processWorks();return n.promise}resetMemory(){this.u32[0]=this.initalPFree}allocBuff(t){const e=this.alloc(t.byteLength);return this.setBuff(e,t),e}getBuff(t,e){return this.u8.slice(t,t+e)}setBuff(t,e){this.u8.set(new Uint8Array(e),t)}alloc(t){for(;this.u32[0]&3;)this.u32[0]++;const e=this.u32[0];return this.u32[0]+=t,e}async terminate(){for(let t=0;t<this.workers.length;t++)this.workers[t].postMessage([{cmd:"TERMINATE"}]);await Rm(200)}};function Tr(a,t){const e=a[t],n=a.Fr,i=a.tm;a[t].batchApplyKey=async function(o,s,r,u,l){u=u||"affine",l=l||"affine";let c,f,g,L,S;if(t=="G1")u=="jacobian"?(g=e.F.n8*3,c="g1m_batchApplyKey"):(g=e.F.n8*2,c="g1m_batchApplyKeyMixed"),L=e.F.n8*3,l=="jacobian"?S=e.F.n8*3:(f="g1m_batchToAffine",S=e.F.n8*2);else if(t=="G2")u=="jacobian"?(g=e.F.n8*3,c="g2m_batchApplyKey"):(g=e.F.n8*2,c="g2m_batchApplyKeyMixed"),L=e.F.n8*3,l=="jacobian"?S=e.F.n8*3:(f="g2m_batchToAffine",S=e.F.n8*2);else if(t=="Fr")c="frm_batchApplyKey",g=e.n8,L=e.n8,S=e.n8;else throw new Error("Invalid group: "+t);const k=Math.floor(o.byteLength/g),E=Math.floor(k/i.concurrency),G=[];r=n.e(r);let C=n.e(s);for(let R=0;R<i.concurrency;R++){let b;if(R<i.concurrency-1?b=E:b=k-R*E,b==0)continue;const w=[];w.push({cmd:"ALLOCSET",var:0,buff:o.slice(R*E*g,R*E*g+b*g)}),w.push({cmd:"ALLOCSET",var:1,buff:C}),w.push({cmd:"ALLOCSET",var:2,buff:r}),w.push({cmd:"ALLOC",var:3,len:b*Math.max(L,S)}),w.push({cmd:"CALL",fnName:c,params:[{var:0},{val:b},{var:1},{var:2},{var:3}]}),f&&w.push({cmd:"CALL",fnName:f,params:[{var:3},{val:b},{var:3}]}),w.push({cmd:"GET",out:0,var:3,len:b*S}),G.push(i.queueAction(w)),C=n.mul(C,n.exp(r,b))}const N=await Promise.all(G);let J;o instanceof Ht?J=new Ht(k*S):J=new Uint8Array(k*S);let j=0;for(let R=0;R<N.length;R++)J.set(N[R][0],j),j+=N[R][0].byteLength;return J}}function Km(a){const t=a.tm;a.pairing=function(n,i){t.startSyncOp();const o=t.allocBuff(a.G1.toJacobian(n)),s=t.allocBuff(a.G2.toJacobian(i)),r=t.alloc(a.Gt.n8);t.instance.exports[a.name+"_pairing"](o,s,r);const u=t.getBuff(r,a.Gt.n8);return t.endSyncOp(),u},a.pairingEq=async function(){let n,i;arguments.length%2==1?(n=arguments[arguments.length-1],i=(arguments.length-1)/2):(n=a.Gt.one,i=arguments.length/2);const o=[];for(let c=0;c<i;c++){const f=[],g=a.G1.toJacobian(arguments[c*2]);f.push({cmd:"ALLOCSET",var:0,buff:g}),f.push({cmd:"ALLOC",var:1,len:a.prePSize});const L=a.G2.toJacobian(arguments[c*2+1]);f.push({cmd:"ALLOCSET",var:2,buff:L}),f.push({cmd:"ALLOC",var:3,len:a.preQSize}),f.push({cmd:"ALLOC",var:4,len:a.Gt.n8}),f.push({cmd:"CALL",fnName:a.name+"_prepareG1",params:[{var:0},{var:1}]}),f.push({cmd:"CALL",fnName:a.name+"_prepareG2",params:[{var:2},{var:3}]}),f.push({cmd:"CALL",fnName:a.name+"_millerLoop",params:[{var:1},{var:3},{var:4}]}),f.push({cmd:"GET",out:0,var:4,len:a.Gt.n8}),o.push(t.queueAction(f))}const s=await Promise.all(o);t.startSyncOp();const r=t.alloc(a.Gt.n8);t.instance.exports.ftm_one(r);for(let c=0;c<s.length;c++){const f=t.allocBuff(s[c][0]);t.instance.exports.ftm_mul(r,f,r)}t.instance.exports[a.name+"_finalExponentiation"](r,r);const u=t.allocBuff(n),l=!!t.instance.exports.ftm_eq(r,u);return t.endSyncOp(),l},a.prepareG1=function(e){this.tm.startSyncOp();const n=this.tm.allocBuff(e),i=this.tm.alloc(this.prePSize);this.tm.instance.exports[this.name+"_prepareG1"](n,i);const o=this.tm.getBuff(i,this.prePSize);return this.tm.endSyncOp(),o},a.prepareG2=function(e){this.tm.startSyncOp();const n=this.tm.allocBuff(e),i=this.tm.alloc(this.preQSize);this.tm.instance.exports[this.name+"_prepareG2"](n,i);const o=this.tm.getBuff(i,this.preQSize);return this.tm.endSyncOp(),o},a.millerLoop=function(e,n){this.tm.startSyncOp();const i=this.tm.allocBuff(e),o=this.tm.allocBuff(n),s=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_millerLoop"](i,o,s);const r=this.tm.getBuff(s,this.Gt.n8);return this.tm.endSyncOp(),r},a.finalExponentiation=function(e){this.tm.startSyncOp();const n=this.tm.allocBuff(e),i=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_finalExponentiation"](n,i);const o=this.tm.getBuff(i,this.Gt.n8);return this.tm.endSyncOp(),o}}const of=[1,1,1,1,2,3,4,5,6,7,7,8,9,10,11,12,13,13,14,15,16,16,17,17,17,17,17,17,17,17,17,17];function af(a,t){const e=a[t],n=e.tm;async function i(s,r,u,l,c){if(!(s instanceof Uint8Array))throw l&&l.error(`${c} _multiExpChunk buffBases is not Uint8Array`),new Error(`${c} _multiExpChunk buffBases is not Uint8Array`);if(!(r instanceof Uint8Array))throw l&&l.error(`${c} _multiExpChunk buffScalars is not Uint8Array`),new Error(`${c} _multiExpChunk buffScalars is not Uint8Array`);u=u||"affine";let f,g;if(t=="G1")u=="affine"?(g="g1m_multiexpAffine_chunk",f=e.F.n8*2):(g="g1m_multiexp_chunk",f=e.F.n8*3);else if(t=="G2")u=="affine"?(g="g2m_multiexpAffine_chunk",f=e.F.n8*2):(g="g2m_multiexp_chunk",f=e.F.n8*3);else throw new Error("Invalid group");const L=Math.floor(s.byteLength/f);if(L==0)return e.zero;const S=Math.floor(r.byteLength/L);if(S*L!=r.byteLength)throw new Error("Scalar size does not match");const k=of[mn(L)],E=Math.floor((S*8-1)/k)+1,G=[];for(let J=0;J<E;J++){const j=[{cmd:"ALLOCSET",var:0,buff:s},{cmd:"ALLOCSET",var:1,buff:r},{cmd:"ALLOC",var:2,len:e.F.n8*3},{cmd:"CALL",fnName:g,params:[{var:0},{var:1},{val:S},{val:L},{val:J*k},{val:Math.min(S*8-J*k,k)},{var:2}]},{cmd:"GET",out:0,var:2,len:e.F.n8*3}];G.push(e.tm.queueAction(j))}const C=await Promise.all(G);let N=e.zero;for(let J=C.length-1;J>=0;J--){if(!e.isZero(N))for(let j=0;j<k;j++)N=e.double(N);N=e.add(N,C[J][0])}return N}async function o(s,r,u,l,c){let L;if(t=="G1")u=="affine"?L=e.F.n8*2:L=e.F.n8*3;else if(t=="G2")u=="affine"?L=e.F.n8*2:L=e.F.n8*3;else throw new Error("Invalid group");const S=Math.floor(s.byteLength/L);if(S==0)return e.zero;const k=Math.floor(r.byteLength/S);if(k*S!=r.byteLength)throw new Error("Scalar size does not match");const E=of[mn(S)],G=Math.floor((k*8-1)/E)+1;let C;C=Math.floor(S/(n.concurrency/G)),C>4194304&&(C=4194304),C<1024&&(C=1024);const N=[];for(let R=0;R<S;R+=C){l&&l.debug(`Multiexp start: ${c}: ${R}/${S}`);const b=Math.min(S-R,C),w=s.slice(R*L,(R+b)*L),Z=r.slice(R*k,(R+b)*k);N.push(i(w,Z,u,l,c).then(P=>(l&&l.debug(`Multiexp end: ${c}: ${R}/${S}`),P)))}const J=await Promise.all(N);let j=e.zero;for(let R=J.length-1;R>=0;R--)j=e.add(j,J[R]);return j}e.multiExp=async function(r,u,l,c){return await o(r,u,"jacobian",l,c)},e.multiExpAffine=async function(r,u,l,c){return await o(r,u,"affine",l,c)}}function Rr(a,t){const e=a[t],n=a.Fr,i=e.tm;async function o(l,c,f,g,L,S){f=f||"affine",g=g||"affine";const k=14;let E,G,C,N,J,j,R,b;t=="G1"?(f=="affine"?(E=e.F.n8*2,N="g1m_batchToJacobian"):E=e.F.n8*3,G=e.F.n8*3,c&&(b="g1m_fftFinal"),R="g1m_fftJoin",j="g1m_fftMix",g=="affine"?(C=e.F.n8*2,J="g1m_batchToAffine"):C=e.F.n8*3):t=="G2"?(f=="affine"?(E=e.F.n8*2,N="g2m_batchToJacobian"):E=e.F.n8*3,G=e.F.n8*3,c&&(b="g2m_fftFinal"),R="g2m_fftJoin",j="g2m_fftMix",g=="affine"?(C=e.F.n8*2,J="g2m_batchToAffine"):C=e.F.n8*3):t=="Fr"&&(E=e.n8,G=e.n8,C=e.n8,c&&(b="frm_fftFinal"),j="frm_fftMix",R="frm_fftJoin");let w=!1;Array.isArray(l)?(l=Vl(l,E),w=!0):l=l.slice(0,l.byteLength);const Z=l.byteLength/E,P=mn(Z);if(1<<P!=Z)throw new Error("fft must be multiple of 2");if(P==n.s+1){let Y;return c?Y=await r(l,f,g,L,S):Y=await s(l,f,g,L,S),w?Bs(Y,C):Y}let V;c&&(V=n.inv(n.e(Z)));let nt;Kh(l,E);let I,y=Math.min(1<<k,Z),_=Z/y;for(;_<i.concurrency&&y>=16;)_*=2,y/=2;const T=mn(y),B=[];for(let Y=0;Y<_;Y++){L&&L.debug(`${S}: fft ${P} mix start: ${Y}/${_}`);const tt=[];tt.push({cmd:"ALLOC",var:0,len:G*y});const $=l.slice(y*Y*E,y*(Y+1)*E);tt.push({cmd:"SET",var:0,buff:$}),N&&tt.push({cmd:"CALL",fnName:N,params:[{var:0},{val:y},{var:0}]});for(let X=1;X<=T;X++)tt.push({cmd:"CALL",fnName:j,params:[{var:0},{val:y},{val:X}]});T==P?(b&&(tt.push({cmd:"ALLOCSET",var:1,buff:V}),tt.push({cmd:"CALL",fnName:b,params:[{var:0},{val:y},{var:1}]})),J&&tt.push({cmd:"CALL",fnName:J,params:[{var:0},{val:y},{var:0}]}),tt.push({cmd:"GET",out:0,var:0,len:y*C})):tt.push({cmd:"GET",out:0,var:0,len:G*y}),B.push(i.queueAction(tt).then(X=>(L&&L.debug(`${S}: fft ${P} mix end: ${Y}/${_}`),X)))}I=await Promise.all(B);for(let Y=0;Y<_;Y++)I[Y]=I[Y][0];for(let Y=T+1;Y<=P;Y++){L&&L.debug(`${S}: fft  ${P}  join: ${Y}/${P}`);const tt=1<<P-Y,$=_/tt,X=[];for(let M=0;M<tt;M++)for(let W=0;W<$/2;W++){const A=n.exp(n.w[Y],W*y),h=n.w[Y],Q=M*$+W,p=M*$+W+$/2,d=[];d.push({cmd:"ALLOCSET",var:0,buff:I[Q]}),d.push({cmd:"ALLOCSET",var:1,buff:I[p]}),d.push({cmd:"ALLOCSET",var:2,buff:A}),d.push({cmd:"ALLOCSET",var:3,buff:h}),d.push({cmd:"CALL",fnName:R,params:[{var:0},{var:1},{val:y},{var:2},{var:3}]}),Y==P?(b&&(d.push({cmd:"ALLOCSET",var:4,buff:V}),d.push({cmd:"CALL",fnName:b,params:[{var:0},{val:y},{var:4}]}),d.push({cmd:"CALL",fnName:b,params:[{var:1},{val:y},{var:4}]})),J&&(d.push({cmd:"CALL",fnName:J,params:[{var:0},{val:y},{var:0}]}),d.push({cmd:"CALL",fnName:J,params:[{var:1},{val:y},{var:1}]})),d.push({cmd:"GET",out:0,var:0,len:y*C}),d.push({cmd:"GET",out:1,var:1,len:y*C})):(d.push({cmd:"GET",out:0,var:0,len:y*G}),d.push({cmd:"GET",out:1,var:1,len:y*G})),X.push(i.queueAction(d).then(m=>(L&&L.debug(`${S}: fft ${P} join  ${Y}/${P}  ${M+1}/${tt} ${W}/${$/2}`),m)))}const F=await Promise.all(X);for(let M=0;M<tt;M++)for(let W=0;W<$/2;W++){const A=M*$+W,h=M*$+W+$/2,Q=F.shift();I[A]=Q[0],I[h]=Q[1]}}if(l instanceof Ht?nt=new Ht(Z*C):nt=new Uint8Array(Z*C),c){nt.set(I[0].slice((y-1)*C));let Y=C;for(let tt=_-1;tt>0;tt--)nt.set(I[tt],Y),Y+=y*C,delete I[tt];nt.set(I[0].slice(0,(y-1)*C),Y),delete I[0]}else for(let Y=0;Y<_;Y++)nt.set(I[Y],y*C*Y),delete I[Y];return w?Bs(nt,C):nt}async function s(l,c,f,g,L){let S,k;S=l.slice(0,l.byteLength/2),k=l.slice(l.byteLength/2,l.byteLength);const E=[];[S,k]=await u(S,k,"fftJoinExt",n.one,n.shift,c,"jacobian",g,L),E.push(o(S,!1,"jacobian",f,g,L)),E.push(o(k,!1,"jacobian",f,g,L));const G=await Promise.all(E);let C;return G[0].byteLength>1<<28?C=new Ht(G[0].byteLength*2):C=new Uint8Array(G[0].byteLength*2),C.set(G[0]),C.set(G[1],G[0].byteLength),C}async function r(l,c,f,g,L){let S,k;S=l.slice(0,l.byteLength/2),k=l.slice(l.byteLength/2,l.byteLength);const E=[];E.push(o(S,!0,c,"jacobian",g,L)),E.push(o(k,!0,c,"jacobian",g,L)),[S,k]=await Promise.all(E);const G=await u(S,k,"fftJoinExtInv",n.one,n.shiftInv,"jacobian",f,g,L);let C;return G[0].byteLength>1<<28?C=new Ht(G[0].byteLength*2):C=new Uint8Array(G[0].byteLength*2),C.set(G[0]),C.set(G[1],G[0].byteLength),C}async function u(l,c,f,g,L,S,k,E,G){let J,j,R,b,w,Z;if(t=="G1")S=="affine"?(w=e.F.n8*2,j="g1m_batchToJacobian"):w=e.F.n8*3,Z=e.F.n8*3,J="g1m_"+f,k=="affine"?(R="g1m_batchToAffine",b=e.F.n8*2):b=e.F.n8*3;else if(t=="G2")S=="affine"?(w=e.F.n8*2,j="g2m_batchToJacobian"):w=e.F.n8*3,J="g2m_"+f,Z=e.F.n8*3,k=="affine"?(R="g2m_batchToAffine",b=e.F.n8*2):b=e.F.n8*3;else if(t=="Fr")w=n.n8,b=n.n8,Z=n.n8,J="frm_"+f;else throw new Error("Invalid group");if(l.byteLength!=c.byteLength)throw new Error("Invalid buffer size");const P=Math.floor(l.byteLength/w);if(P!=1<<mn(P))throw new Error("Invalid number of points");let V=Math.floor(P/i.concurrency);V<16&&(V=16),V>65536&&(V=65536);const nt=[];for(let B=0;B<P;B+=V){E&&E.debug(`${G}: fftJoinExt Start: ${B}/${P}`);const Y=Math.min(P-B,V),tt=n.mul(g,n.exp(L,B)),$=[],X=l.slice(B*w,(B+Y)*w),F=c.slice(B*w,(B+Y)*w);$.push({cmd:"ALLOC",var:0,len:Z*Y}),$.push({cmd:"SET",var:0,buff:X}),$.push({cmd:"ALLOC",var:1,len:Z*Y}),$.push({cmd:"SET",var:1,buff:F}),$.push({cmd:"ALLOCSET",var:2,buff:tt}),$.push({cmd:"ALLOCSET",var:3,buff:L}),j&&($.push({cmd:"CALL",fnName:j,params:[{var:0},{val:Y},{var:0}]}),$.push({cmd:"CALL",fnName:j,params:[{var:1},{val:Y},{var:1}]})),$.push({cmd:"CALL",fnName:J,params:[{var:0},{var:1},{val:Y},{var:2},{var:3},{val:n.s}]}),R&&($.push({cmd:"CALL",fnName:R,params:[{var:0},{val:Y},{var:0}]}),$.push({cmd:"CALL",fnName:R,params:[{var:1},{val:Y},{var:1}]})),$.push({cmd:"GET",out:0,var:0,len:Y*b}),$.push({cmd:"GET",out:1,var:1,len:Y*b}),nt.push(i.queueAction($).then(M=>(E&&E.debug(`${G}: fftJoinExt End: ${B}/${P}`),M)))}const I=await Promise.all(nt);let y,_;P*b>1<<28?(y=new Ht(P*b),_=new Ht(P*b)):(y=new Uint8Array(P*b),_=new Uint8Array(P*b));let T=0;for(let B=0;B<I.length;B++)y.set(I[B][0],T),_.set(I[B][1],T),T+=I[B][0].byteLength;return[y,_]}e.fft=async function(l,c,f,g,L){return await o(l,!1,c,f,g,L)},e.ifft=async function(l,c,f,g,L){return await o(l,!0,c,f,g,L)},e.lagrangeEvaluations=async function(l,c,f,g,L){c=c||"affine",f=f||"affine";let S;if(t=="G1")c=="affine"?S=e.F.n8*2:S=e.F.n8*3;else if(t=="G2")c=="affine"?S=e.F.n8*2:S=e.F.n8*3;else if(t=="Fr")S=n.n8;else throw new Error("Invalid group");const k=l.byteLength/S,E=mn(k);if(2**E*S!=l.byteLength)throw g&&g.error("lagrangeEvaluations iinvalid input size"),new Error("lagrangeEvaluations invalid Input size");if(E<=n.s)return await e.ifft(l,c,f,g,L);if(E>n.s+1)throw g&&g.error("lagrangeEvaluations input too big"),new Error("lagrangeEvaluations input too big");let G=l.slice(0,l.byteLength/2),C=l.slice(l.byteLength/2,l.byteLength);const N=n.exp(n.shift,k/2),J=n.inv(n.sub(n.one,N));[G,C]=await u(G,C,"prepareLagrangeEvaluation",J,n.shiftInv,c,"jacobian",g,L+" prep");const j=[];j.push(o(G,!0,"jacobian",f,g,L+" t0")),j.push(o(C,!0,"jacobian",f,g,L+" t1")),[G,C]=await Promise.all(j);let R;return G.byteLength>1<<28?R=new Ht(G.byteLength*2):R=new Uint8Array(G.byteLength*2),R.set(G),R.set(C,G.byteLength),R},e.fftMix=async function(c){const f=e.F.n8*3;let g,L;if(t=="G1")g="g1m_fftMix",L="g1m_fftJoin";else if(t=="G2")g="g2m_fftMix",L="g2m_fftJoin";else if(t=="Fr")g="frm_fftMix",L="frm_fftJoin";else throw new Error("Invalid group");const S=Math.floor(c.byteLength/f),k=mn(S);let E=1<<mn(i.concurrency);S<=E*2&&(E=1);const G=S/E,C=mn(G),N=[];for(let w=0;w<E;w++){const Z=[],P=c.slice(w*G*f,(w+1)*G*f);Z.push({cmd:"ALLOCSET",var:0,buff:P});for(let V=1;V<=C;V++)Z.push({cmd:"CALL",fnName:g,params:[{var:0},{val:G},{val:V}]});Z.push({cmd:"GET",out:0,var:0,len:G*f}),N.push(i.queueAction(Z))}const J=await Promise.all(N),j=[];for(let w=0;w<J.length;w++)j[w]=J[w][0];for(let w=C+1;w<=k;w++){const Z=1<<k-w,P=E/Z,V=[];for(let I=0;I<Z;I++)for(let y=0;y<P/2;y++){const _=n.exp(n.w[w],y*G),T=n.w[w],B=I*P+y,Y=I*P+y+P/2,tt=[];tt.push({cmd:"ALLOCSET",var:0,buff:j[B]}),tt.push({cmd:"ALLOCSET",var:1,buff:j[Y]}),tt.push({cmd:"ALLOCSET",var:2,buff:_}),tt.push({cmd:"ALLOCSET",var:3,buff:T}),tt.push({cmd:"CALL",fnName:L,params:[{var:0},{var:1},{val:G},{var:2},{var:3}]}),tt.push({cmd:"GET",out:0,var:0,len:G*f}),tt.push({cmd:"GET",out:1,var:1,len:G*f}),V.push(i.queueAction(tt))}const nt=await Promise.all(V);for(let I=0;I<Z;I++)for(let y=0;y<P/2;y++){const _=I*P+y,T=I*P+y+P/2,B=nt.shift();j[_]=B[0],j[T]=B[1]}}let R;c instanceof Ht?R=new Ht(S*f):R=new Uint8Array(S*f);let b=0;for(let w=0;w<E;w++)R.set(j[w],b),b+=j[w].byteLength;return R},e.fftJoin=async function(c,f,g,L){const S=e.F.n8*3;let k;if(t=="G1")k="g1m_fftJoin";else if(t=="G2")k="g2m_fftJoin";else if(t=="Fr")k="frm_fftJoin";else throw new Error("Invalid group");if(c.byteLength!=f.byteLength)throw new Error("Invalid buffer size");const E=Math.floor(c.byteLength/S);if(E!=1<<mn(E))throw new Error("Invalid number of points");let G=1<<mn(i.concurrency);E<=G*2&&(G=1);const C=E/G,N=[];for(let w=0;w<G;w++){const Z=[],P=n.mul(g,n.exp(L,w*C)),V=c.slice(w*C*S,(w+1)*C*S),nt=f.slice(w*C*S,(w+1)*C*S);Z.push({cmd:"ALLOCSET",var:0,buff:V}),Z.push({cmd:"ALLOCSET",var:1,buff:nt}),Z.push({cmd:"ALLOCSET",var:2,buff:P}),Z.push({cmd:"ALLOCSET",var:3,buff:L}),Z.push({cmd:"CALL",fnName:k,params:[{var:0},{var:1},{val:C},{var:2},{var:3}]}),Z.push({cmd:"GET",out:0,var:0,len:C*S}),Z.push({cmd:"GET",out:1,var:1,len:C*S}),N.push(i.queueAction(Z))}const J=await Promise.all(N);let j,R;c instanceof Ht?(j=new Ht(E*S),R=new Ht(E*S)):(j=new Uint8Array(E*S),R=new Uint8Array(E*S));let b=0;for(let w=0;w<J.length;w++)j.set(J[w][0],b),R.set(J[w][1],b),b+=J[w][0].byteLength;return[j,R]},e.fftFinal=async function(c,f){const g=e.F.n8*3,L=e.F.n8*2;let S,k;if(t=="G1")S="g1m_fftFinal",k="g1m_batchToAffine";else if(t=="G2")S="g2m_fftFinal",k="g2m_batchToAffine";else throw new Error("Invalid group");const E=Math.floor(c.byteLength/g);if(E!=1<<mn(E))throw new Error("Invalid number of points");const G=Math.floor(E/i.concurrency),C=[];for(let R=0;R<i.concurrency;R++){let b;if(R<i.concurrency-1?b=G:b=E-R*G,b==0)continue;const w=[],Z=c.slice(R*G*g,(R*G+b)*g);w.push({cmd:"ALLOCSET",var:0,buff:Z}),w.push({cmd:"ALLOCSET",var:1,buff:f}),w.push({cmd:"CALL",fnName:S,params:[{var:0},{val:b},{var:1}]}),w.push({cmd:"CALL",fnName:k,params:[{var:0},{val:b},{var:0}]}),w.push({cmd:"GET",out:0,var:0,len:b*L}),C.push(i.queueAction(w))}const N=await Promise.all(C);let J;c instanceof Ht?J=new Ht(E*L):J=new Uint8Array(E*L);let j=0;for(let R=N.length-1;R>=0;R--)J.set(N[R][0],j),j+=N[R][0].byteLength;return J}}async function Nh(a){const t=await Hm(a.wasm,a.singleThread),e={};return e.q=Re(a.wasm.q.toString()),e.r=Re(a.wasm.r.toString()),e.name=a.name,e.tm=t,e.prePSize=a.wasm.prePSize,e.preQSize=a.wasm.preQSize,e.Fr=new Xd(t,"frm",a.n8r,a.r),e.F1=new Xd(t,"f1m",a.n8q,a.q),e.F2=new $d(t,"f2m",e.F1),e.G1=new tf(t,"g1m",e.F1,a.wasm.pG1gen,a.wasm.pG1b,a.cofactorG1),e.G2=new tf(t,"g2m",e.F2,a.wasm.pG2gen,a.wasm.pG2b,a.cofactorG2),e.F6=new qm(t,"f6m",e.F2),e.F12=new $d(t,"ftm",e.F6),e.Gt=e.F12,Tr(e,"G1"),Tr(e,"G2"),Tr(e,"Fr"),af(e,"G1"),af(e,"G2"),Rr(e,"G1"),Rr(e,"G2"),Rr(e,"Fr"),Km(e),e.array2buffer=function(n,i){const o=new Uint8Array(i*n.length);for(let s=0;s<n.length;s++)o.set(n[s],s*i);return o},e.buffer2array=function(n,i){const o=n.byteLength/i,s=new Array(o);for(let r=0;r<o;r++)s[r]=n.slice(r*i,r*i+i);return s},e}function bo(a){return BigInt(a)}function zh(a){return a<0n}function Nm(a){return a===0n}function zm(a){return zh(a)?a.toString(2).length-1:a.toString(2).length}function Hr(a){const t=[],e=bo(a);return t.push(Number(e&0xFFn)),t.push(Number(e>>8n&0xFFn)),t.push(Number(e>>16n&0xFFn)),t.push(Number(e>>24n&0xFFn)),t}function Jm(a){for(var t=[],e=0;e<a.length;e++){var n=a.charCodeAt(e);n<128?t.push(n):n<2048?t.push(192|n>>6,128|n&63):n<55296||n>=57344?t.push(224|n>>12,128|n>>6&63,128|n&63):(e++,n=65536+((n&1023)<<10|a.charCodeAt(e)&1023),t.push(240|n>>18,128|n>>12&63,128|n>>6&63,128|n&63))}return t}function Zo(a){const t=Jm(a);return[...fe(t.length),...t]}function Jh(a){const t=[];let e=bo(a);if(zh(e))throw new Error("Number cannot be negative");for(;!Nm(e);)t.push(Number(e&0x7Fn)),e=e>>7n;t.length==0&&t.push(0);for(let n=0;n<t.length-1;n++)t[n]=t[n]|128;return t}function Yh(a){let t,e;const n=zm(a);a<0?(e=!0,t=(1n<<BigInt(n))+a):(e=!1,t=bo(a));const i=7-n%7,o=(1n<<BigInt(i))-1n<<BigInt(n),s=(1<<7-i)-1|128,r=Jh(t+o);return e||(r[r.length-1]=r[r.length-1]&s),r}function Xc(a){let t=bo(a);if(t>0xFFFFFFFFn)throw new Error("Number too big");if(t>0x7FFFFFFFn&&(t=t-0x100000000n),t<-2147483648n)throw new Error("Number too small");return Yh(t)}function Ym(a){let t=bo(a);if(t>0xFFFFFFFFFFFFFFFFn)throw new Error("Number too big");if(t>0x7FFFFFFFFFFFFFFFn&&(t=t-0x10000000000000000n),t<-9223372036854775808n)throw new Error("Number too small");return Yh(t)}function fe(a){let t=bo(a);if(t>0xFFFFFFFFn)throw new Error("Number too big");return Jh(t)}function sf(a){return Array.from(a,function(t){return("0"+(t&255).toString(16)).slice(-2)}).join("")}class jm{constructor(t){this.func=t,this.functionName=t.functionName,this.module=t.module}setLocal(t,e){const n=this.func.localIdxByName[t];if(n===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[...e,33,...fe(n)]}teeLocal(t,e){const n=this.func.localIdxByName[t];if(n===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[...e,34,...fe(n)]}getLocal(t){const e=this.func.localIdxByName[t];if(e===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[32,...fe(e)]}i64_load8_s(t,e,n){const i=e||0,o=n===void 0?0:n;return[...t,48,o,...fe(i)]}i64_load8_u(t,e,n){const i=e||0,o=n===void 0?0:n;return[...t,49,o,...fe(i)]}i64_load16_s(t,e,n){const i=e||0,o=n===void 0?1:n;return[...t,50,o,...fe(i)]}i64_load16_u(t,e,n){const i=e||0,o=n===void 0?1:n;return[...t,51,o,...fe(i)]}i64_load32_s(t,e,n){const i=e||0,o=n===void 0?2:n;return[...t,52,o,...fe(i)]}i64_load32_u(t,e,n){const i=e||0,o=n===void 0?2:n;return[...t,53,o,...fe(i)]}i64_load(t,e,n){const i=e||0,o=n===void 0?3:n;return[...t,41,o,...fe(i)]}i64_store(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=3,r=e):Array.isArray(n)?(o=e,s=3,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,55,s,...fe(o)]}i64_store32(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=2,r=e):Array.isArray(n)?(o=e,s=2,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,62,s,...fe(o)]}i64_store16(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=1,r=e):Array.isArray(n)?(o=e,s=1,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,61,s,...fe(o)]}i64_store8(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=0,r=e):Array.isArray(n)?(o=e,s=0,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,60,s,...fe(o)]}i32_load8_s(t,e,n){const i=e||0,o=n===void 0?0:n;return[...t,44,o,...fe(i)]}i32_load8_u(t,e,n){const i=e||0,o=n===void 0?0:n;return[...t,45,o,...fe(i)]}i32_load16_s(t,e,n){const i=e||0,o=n===void 0?1:n;return[...t,46,o,...fe(i)]}i32_load16_u(t,e,n){const i=e||0,o=n===void 0?1:n;return[...t,47,o,...fe(i)]}i32_load(t,e,n){const i=e||0,o=n===void 0?2:n;return[...t,40,o,...fe(i)]}i32_store(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=2,r=e):Array.isArray(n)?(o=e,s=2,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,54,s,...fe(o)]}i32_store16(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=1,r=e):Array.isArray(n)?(o=e,s=1,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,59,s,...fe(o)]}i32_store8(t,e,n,i){let o,s,r;return Array.isArray(e)?(o=0,s=0,r=e):Array.isArray(n)?(o=e,s=0,r=n):Array.isArray(i)&&(o=e,s=n,r=i),[...t,...r,58,s,...fe(o)]}call(t,...e){const n=this.module.functionIdxByName[t];if(n===void 0)throw new Error(`Function not defined: Function: ${t}`);return[...[].concat(...e),16,...fe(n)]}call_indirect(t,...e){return[...[].concat(...e),...t,17,0,0]}if(t,e,n){return n?[...t,4,64,...e,5,...n,11]:[...t,4,64,...e,11]}block(t){return[2,64,...t,11]}loop(...t){return[3,64,...[].concat(...t),11]}br_if(t,e){return[...e,13,...fe(t)]}br(t){return[12,...fe(t)]}ret(t){return[...t,15]}drop(t){return[...t,26]}i64_const(t){return[66,...Ym(t)]}i32_const(t){return[65,...Xc(t)]}i64_eqz(t){return[...t,80]}i64_eq(t,e){return[...t,...e,81]}i64_ne(t,e){return[...t,...e,82]}i64_lt_s(t,e){return[...t,...e,83]}i64_lt_u(t,e){return[...t,...e,84]}i64_gt_s(t,e){return[...t,...e,85]}i64_gt_u(t,e){return[...t,...e,86]}i64_le_s(t,e){return[...t,...e,87]}i64_le_u(t,e){return[...t,...e,88]}i64_ge_s(t,e){return[...t,...e,89]}i64_ge_u(t,e){return[...t,...e,90]}i64_add(t,e){return[...t,...e,124]}i64_sub(t,e){return[...t,...e,125]}i64_mul(t,e){return[...t,...e,126]}i64_div_s(t,e){return[...t,...e,127]}i64_div_u(t,e){return[...t,...e,128]}i64_rem_s(t,e){return[...t,...e,129]}i64_rem_u(t,e){return[...t,...e,130]}i64_and(t,e){return[...t,...e,131]}i64_or(t,e){return[...t,...e,132]}i64_xor(t,e){return[...t,...e,133]}i64_shl(t,e){return[...t,...e,134]}i64_shr_s(t,e){return[...t,...e,135]}i64_shr_u(t,e){return[...t,...e,136]}i64_extend_i32_s(t){return[...t,172]}i64_extend_i32_u(t){return[...t,173]}i64_clz(t){return[...t,121]}i64_ctz(t){return[...t,122]}i32_eqz(t){return[...t,69]}i32_eq(t,e){return[...t,...e,70]}i32_ne(t,e){return[...t,...e,71]}i32_lt_s(t,e){return[...t,...e,72]}i32_lt_u(t,e){return[...t,...e,73]}i32_gt_s(t,e){return[...t,...e,74]}i32_gt_u(t,e){return[...t,...e,75]}i32_le_s(t,e){return[...t,...e,76]}i32_le_u(t,e){return[...t,...e,77]}i32_ge_s(t,e){return[...t,...e,78]}i32_ge_u(t,e){return[...t,...e,79]}i32_add(t,e){return[...t,...e,106]}i32_sub(t,e){return[...t,...e,107]}i32_mul(t,e){return[...t,...e,108]}i32_div_s(t,e){return[...t,...e,109]}i32_div_u(t,e){return[...t,...e,110]}i32_rem_s(t,e){return[...t,...e,111]}i32_rem_u(t,e){return[...t,...e,112]}i32_and(t,e){return[...t,...e,113]}i32_or(t,e){return[...t,...e,114]}i32_xor(t,e){return[...t,...e,115]}i32_shl(t,e){return[...t,...e,116]}i32_shr_s(t,e){return[...t,...e,117]}i32_shr_u(t,e){return[...t,...e,118]}i32_rotl(t,e){return[...t,...e,119]}i32_rotr(t,e){return[...t,...e,120]}i32_wrap_i64(t){return[...t,167]}i32_clz(t){return[...t,103]}i32_ctz(t){return[...t,104]}unreachable(){return[0]}current_memory(){return[63,0]}comment(){return[]}}const Qr={i32:127,i64:126,f32:125,f64:124,anyfunc:112,func:96,emptyblock:64};class rf{constructor(t,e,n,i,o){if(n=="import")this.fnType="import",this.moduleName=i,this.fieldName=o;else if(n=="internal")this.fnType="internal";else throw new Error("Invalid function fnType: "+n);this.module=t,this.fnName=e,this.params=[],this.locals=[],this.localIdxByName={},this.code=[],this.returnType=null,this.nextLocal=0}addParam(t,e){if(this.localIdxByName[t])throw new Error(`param already exists. Function: ${this.fnName}, Param: ${t} `);const n=this.nextLocal++;this.localIdxByName[t]=n,this.params.push({type:e})}addLocal(t,e,n){const i=n||1;if(this.localIdxByName[t])throw new Error(`local already exists. Function: ${this.fnName}, Param: ${t} `);const o=this.nextLocal++;this.localIdxByName[t]=o,this.locals.push({type:e,length:i})}setReturnType(t){if(this.returnType)throw new Error(`returnType already defined. Function: ${this.fnName}`);this.returnType=t}getSignature(){const t=[...fe(this.params.length),...this.params.map(n=>Qr[n.type])],e=this.returnType?[1,Qr[this.returnType]]:[0];return[96,...t,...e]}getBody(){const t=this.locals.map(n=>[...fe(n.length),Qr[n.type]]),e=[...fe(this.locals.length),...[].concat(...t),...this.code,11];return[...fe(e.length),...e]}addCode(...t){this.code.push(...[].concat(...t))}getCodeBuilder(){return new jm(this)}}class jh{constructor(){this.functions=[],this.functionIdxByName={},this.nImportFunctions=0,this.nInternalFunctions=0,this.memory={pagesSize:1,moduleName:"env",fieldName:"memory"},this.free=8,this.datas=[],this.modules={},this.exports=[],this.functionsTable=[]}build(){return this._setSignatures(),new Uint8Array([...Hr(1836278016),...Hr(1),...this._buildType(),...this._buildImport(),...this._buildFunctionDeclarations(),...this._buildFunctionsTable(),...this._buildExports(),...this._buildElements(),...this._buildCode(),...this._buildData()])}addFunction(t){if(typeof this.functionIdxByName[t]<"u")throw new Error(`Function already defined: ${t}`);const e=this.functions.length;return this.functionIdxByName[t]=e,this.functions.push(new rf(this,t,"internal")),this.nInternalFunctions++,this.functions[e]}addIimportFunction(t,e,n){if(typeof this.functionIdxByName[t]<"u")throw new Error(`Function already defined: ${t}`);if(this.functions.length>0&&this.functions[this.functions.length-1].type=="internal")throw new Error(`Import functions must be declared before internal: ${t}`);let i=n||t;const o=this.functions.length;return this.functionIdxByName[t]=o,this.functions.push(new rf(this,t,"import",e,i)),this.nImportFunctions++,this.functions[o]}setMemory(t,e,n){this.memory={pagesSize:t,moduleName:e||"env",fieldName:n||"memory"}}exportFunction(t,e){const n=e||t;if(typeof this.functionIdxByName[t]>"u")throw new Error(`Function not defined: ${t}`);const i=this.functionIdxByName[t];n!=t&&(this.functionIdxByName[n]=i),this.exports.push({exportName:n,idx:i})}addFunctionToTable(t){const e=this.functionIdxByName[t];this.functionsTable.push(e)}addData(t,e){this.datas.push({offset:t,bytes:e})}alloc(t,e){let n,i;(Array.isArray(t)||ArrayBuffer.isView(t))&&typeof e>"u"?(n=t.length,i=t):(n=t,i=e),n=(n-1>>3)+1<<3;const o=this.free;return this.free+=n,i&&this.addData(o,i),o}allocString(t){const n=new globalThis.TextEncoder().encode(t);return this.alloc([...n,0])}_setSignatures(){this.signatures=[];const t={};if(this.functionsTable.length>0){const e=this.functions[this.functionsTable[0]].getSignature(),n="s_"+sf(e);t[n]=0,this.signatures.push(e)}for(let e=0;e<this.functions.length;e++){const n=this.functions[e].getSignature(),i="s_"+sf(n);typeof t[i]>"u"&&(t[i]=this.signatures.length,this.signatures.push(n)),this.functions[e].signatureIdx=t[i]}}_buildSection(t,e){return[t,...fe(e.length),...e]}_buildType(){return this._buildSection(1,[...fe(this.signatures.length),...[].concat(...this.signatures)])}_buildImport(){const t=[];t.push([...Zo(this.memory.moduleName),...Zo(this.memory.fieldName),2,0,...fe(this.memory.pagesSize)]);for(let e=0;e<this.nImportFunctions;e++)t.push([...Zo(this.functions[e].moduleName),...Zo(this.functions[e].fieldName),0,...fe(this.functions[e].signatureIdx)]);return this._buildSection(2,fe(t.length).concat(...t))}_buildFunctionDeclarations(){const t=[];for(let e=this.nImportFunctions;e<this.nImportFunctions+this.nInternalFunctions;e++)t.push(...fe(this.functions[e].signatureIdx));return this._buildSection(3,[...fe(t.length),...t])}_buildFunctionsTable(){return this.functionsTable.length==0?[]:this._buildSection(4,[...fe(1),112,0,...fe(this.functionsTable.length)])}_buildElements(){if(this.functionsTable.length==0)return[];const t=[];for(let e=0;e<this.functionsTable.length;e++)t.push(...fe(this.functionsTable[e]));return this._buildSection(9,[...fe(1),...fe(0),65,...Xc(0),11,...fe(this.functionsTable.length),...t])}_buildExports(){const t=[];for(let e=0;e<this.exports.length;e++)t.push([...Zo(this.exports[e].exportName),0,...fe(this.exports[e].idx)]);return this._buildSection(7,fe(t.length).concat(...t))}_buildCode(){const t=[];for(let e=this.nImportFunctions;e<this.nImportFunctions+this.nInternalFunctions;e++)t.push(this.functions[e].getBody());return this._buildSection(10,fe(t.length).concat(...t))}_buildData(){const t=[];t.push([0,65,0,11,4,...Hr(this.free)]);for(let e=0;e<this.datas.length;e++)t.push([0,65,...Xc(this.datas[e].offset),11,...fe(this.datas[e].bytes.length),...this.datas[e].bytes]);return this._buildSection(11,fe(t.length).concat(...t))}}globalThis.curve_bn128=null;async function Ys(a,t){if(!a&&globalThis.curve_bn128)return globalThis.curve_bn128;const e=new jh;e.setMemory(25),Mm(e);const n={};n.code=e.build(),n.pq=e.modules.f1m.pq,n.pr=e.modules.frm.pq,n.pG1gen=e.modules.bn128.pG1gen,n.pG1zero=e.modules.bn128.pG1zero,n.pG1b=e.modules.bn128.pG1b,n.pG2gen=e.modules.bn128.pG2gen,n.pG2zero=e.modules.bn128.pG2zero,n.pG2b=e.modules.bn128.pG2b,n.pOneT=e.modules.bn128.pOneT,n.prePSize=e.modules.bn128.prePSize,n.preQSize=e.modules.bn128.preQSize,n.n8q=32,n.n8r=32,n.q=e.modules.bn128.q,n.r=e.modules.bn128.r;const i={name:"bn128",wasm:n,q:Re("21888242871839275222246405745257275088696311157297823662689037894645226208583"),r:Re("21888242871839275222246405745257275088548364400416034343698204186575808495617"),n8q:32,n8r:32,cofactorG2:Re("30644e72e131a029b85045b68181585e06ceecda572a2489345f2299c0f9fa8d",16),singleThread:!!a},o=await Nh(i);return o.terminate=async function(){i.singleThread||(globalThis.curve_bn128=null,await this.tm.terminate())},a||(globalThis.curve_bn128=o),o}globalThis.curve_bls12381=null;async function js(a,t){if(!a&&globalThis.curve_bls12381)return globalThis.curve_bls12381;const e=new jh;e.setMemory(25),km(e);const n={};n.code=e.build(),n.pq=e.modules.f1m.pq,n.pr=e.modules.frm.pq,n.pG1gen=e.modules.bls12381.pG1gen,n.pG1zero=e.modules.bls12381.pG1zero,n.pG1b=e.modules.bls12381.pG1b,n.pG2gen=e.modules.bls12381.pG2gen,n.pG2zero=e.modules.bls12381.pG2zero,n.pG2b=e.modules.bls12381.pG2b,n.pOneT=e.modules.bls12381.pOneT,n.prePSize=e.modules.bls12381.prePSize,n.preQSize=e.modules.bls12381.preQSize,n.n8q=48,n.n8r=32,n.q=e.modules.bls12381.q,n.r=e.modules.bls12381.r;const i={name:"bls12381",wasm:n,q:Re("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),r:Re("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),n8q:48,n8r:32,cofactorG1:Re("0x396c8c005555e1568c00aaab0000aaab",16),cofactorG2:Re("0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5",16),singleThread:!!a},o=await Nh(i);return o.terminate=async function(){i.singleThread||(globalThis.curve_bls12381=null,await this.tm.terminate())},a||(globalThis.curve_bls12381=o),o}const Vm=Re("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),Wm=Re("21888242871839275222246405745257275088548364400416034343698204186575808495617");Re("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16);Re("21888242871839275222246405745257275088696311157297823662689037894645226208583");async function Zm(a,t,e){let n;if($n(a,Wm))n=await Ys(t);else if($n(a,Vm))n=await js(t);else throw new Error(`Curve not supported: ${Hl(a)}`);return n}const oe=kw,nn=Dm;var Vh={};async function Wh(a,t,e,n){if(e=e||4096*64,typeof t!="number"&&["w+","wx+","r","ax+","a+"].indexOf(t)<0)throw new Error("Invalid open option");const i=await Vh.promises.open(a,t),o=await i.stat();return new Xm(i,o,e,n,a)}class Xm{constructor(t,e,n,i,o){for(this.fileName=o,this.fd=t,this.pos=0,this.pageSize=i||256;this.pageSize<e.blksize;)this.pageSize*=2;this.totalSize=e.size,this.totalPages=Math.floor((e.size-1)/this.pageSize)+1,this.maxPagesLoaded=Math.floor(n/this.pageSize)+1,this.pages={},this.pendingLoads=[],this.writing=!1,this.reading=!1,this.avBuffs=[],this.history={}}_loadPage(t){const e=this,n=new Promise((i,o)=>{e.pendingLoads.push({page:t,resolve:i,reject:o})});return e.__statusPage("After Load request: ",t),n}__statusPage(t,e){const n=[],i=this;if(!i.logHistory)return;n.push("=="+t+" "+e);let o="";for(let s=0;s<i.pendingLoads.length;s++)i.pendingLoads[s].page==e&&(o=o+" "+s);if(o&&n.push("Pending loads:"+o),typeof i.pages[e]<"u"){const s=i.pages[e];n.push("Loaded"),n.push("pendingOps: "+s.pendingOps),s.loading&&n.push("loading: "+s.loading),s.writing&&n.push("writing"),s.dirty&&n.push("dirty")}n.push("=="),i.history[e]||(i.history[e]=[]),i.history[e].push(n)}__printHistory(t){const e=this;e.history[t]||console.log("Empty History ",t),console.log("History "+t);for(let n=0;n<e.history[t].length;n++)for(let i=0;i<e.history[t][n].length;i++)console.log("-> "+e.history[t][n][i])}_triggerLoad(){const t=this;if(t.reading||t.pendingLoads.length==0)return;const e=Object.keys(t.pages),n=[];for(let r=0;r<e.length;r++){const u=t.pages[parseInt(e[r])];u.dirty==!1&&u.pendingOps==0&&!u.writing&&!u.loading&&n.push(parseInt(e[r]))}let i=t.maxPagesLoaded-e.length;const o=[];for(;t.pendingLoads.length>0&&(typeof t.pages[t.pendingLoads[0].page]<"u"||i>0||n.length>0);){const r=t.pendingLoads.shift();if(typeof t.pages[r.page]<"u"){t.pages[r.page].pendingOps++;const u=n.indexOf(r.page);u>=0&&n.splice(u,1),t.pages[r.page].loading?t.pages[r.page].loading.push(r):r.resolve(),t.__statusPage("After Load (cached): ",r.page)}else{if(i)i--;else{const u=n.shift();t.__statusPage("Before Unload: ",u),t.avBuffs.unshift(t.pages[u]),delete t.pages[u],t.__statusPage("After Unload: ",u)}r.page>=t.totalPages?(t.pages[r.page]=s(),r.resolve(),t.__statusPage("After Load (new): ",r.page)):(t.reading=!0,t.pages[r.page]=s(),t.pages[r.page].loading=[r],o.push(t.fd.read(t.pages[r.page].buff,0,t.pageSize,r.page*t.pageSize).then(u=>{t.pages[r.page].size=u.bytesRead;const l=t.pages[r.page].loading;delete t.pages[r.page].loading;for(let c=0;c<l.length;c++)l[c].resolve();return t.__statusPage("After Load (loaded): ",r.page),u},u=>{r.reject(u)})),t.__statusPage("After Load (loading): ",r.page))}}Promise.all(o).then(()=>{t.reading=!1,t.pendingLoads.length>0&&setImmediate(t._triggerLoad.bind(t)),t._tryClose()});function s(){if(t.avBuffs.length>0){const r=t.avBuffs.shift();return r.dirty=!1,r.pendingOps=1,r.size=0,r}else return{dirty:!1,buff:new Uint8Array(t.pageSize),pendingOps:1,size:0}}}_triggerWrite(){const t=this;if(t.writing)return;const e=Object.keys(t.pages),n=[];for(let i=0;i<e.length;i++){const o=t.pages[parseInt(e[i])];o.dirty&&(o.dirty=!1,o.writing=!0,t.writing=!0,n.push(t.fd.write(o.buff,0,o.size,parseInt(e[i])*t.pageSize).then(()=>{o.writing=!1},s=>{console.log("ERROR Writing: "+s),t.error=s,t._tryClose()})))}t.writing&&Promise.all(n).then(()=>{t.writing=!1,setImmediate(t._triggerWrite.bind(t)),t._tryClose(),t.pendingLoads.length>0&&setImmediate(t._triggerLoad.bind(t))})}_getDirtyPage(){for(let t in this.pages)if(this.pages[t].dirty)return t;return-1}async write(t,e){if(t.byteLength==0)return;const n=this;if(typeof e>"u"&&(e=n.pos),n.pos=e+t.byteLength,n.totalSize<e+t.byteLength&&(n.totalSize=e+t.byteLength),n.pendingClose)throw new Error("Writing a closing file");const i=Math.floor(e/n.pageSize),o=Math.floor((e+t.byteLength-1)/n.pageSize),s=[];for(let c=i;c<=o;c++)s.push(n._loadPage(c));n._triggerLoad();let r=i,u=e%n.pageSize,l=t.byteLength;for(;l>0;){await s[r-i];const c=u+l>n.pageSize?n.pageSize-u:l,f=t.slice(t.byteLength-l,t.byteLength-l+c);new Uint8Array(n.pages[r].buff.buffer,u,c).set(f),n.pages[r].dirty=!0,n.pages[r].pendingOps--,n.pages[r].size=Math.max(u+c,n.pages[r].size),r>=n.totalPages&&(n.totalPages=r+1),l=l-c,r++,u=0,n.writing||setImmediate(n._triggerWrite.bind(n))}}async read(t,e){const n=this;let i=new Uint8Array(t);return await n.readToBuffer(i,0,t,e),i}async readToBuffer(t,e,n,i){if(n==0)return;const o=this;if(n>o.pageSize*o.maxPagesLoaded*.8){const g=Math.floor(n*1.1);this.maxPagesLoaded=Math.floor(g/o.pageSize)+1}if(typeof i>"u"&&(i=o.pos),o.pos=i+n,o.pendingClose)throw new Error("Reading a closing file");const s=Math.floor(i/o.pageSize),r=Math.floor((i+n-1)/o.pageSize),u=[];for(let g=s;g<=r;g++)u.push(o._loadPage(g));o._triggerLoad();let l=s,c=i%o.pageSize,f=i+n>o.totalSize?n-(i+n-o.totalSize):n;for(;f>0;){await u[l-s],o.__statusPage("After Await (read): ",l);const g=c+f>o.pageSize?o.pageSize-c:f,L=new Uint8Array(o.pages[l].buff.buffer,o.pages[l].buff.byteOffset+c,g);t.set(L,e+n-f),o.pages[l].pendingOps--,o.__statusPage("After Op done: ",l),f=f-g,l++,c=0,o.pendingLoads.length>0&&setImmediate(o._triggerLoad.bind(o))}this.pos=i+n}_tryClose(){const t=this;!t.pendingClose||(t.error&&t.pendingCloseReject(t.error),t._getDirtyPage()>=0||t.writing||t.reading||t.pendingLoads.length>0)||t.pendingClose()}close(){const t=this;if(t.pendingClose)throw new Error("Closing the file twice");return new Promise((e,n)=>{t.pendingClose=e,t.pendingCloseReject=n,t._tryClose()}).then(()=>{t.fd.close()},e=>{throw t.fd.close(),e})}async discard(){await this.close(),await Vh.promises.unlink(this.fileName)}async writeULE32(t,e){const n=this,i=new Uint8Array(4);new DataView(i.buffer).setUint32(0,t,!0),await n.write(i,e)}async writeUBE32(t,e){const n=this,i=new Uint8Array(4);new DataView(i.buffer).setUint32(0,t,!1),await n.write(i,e)}async writeULE64(t,e){const n=this,i=new Uint8Array(8),o=new DataView(i.buffer);o.setUint32(0,t&4294967295,!0),o.setUint32(4,Math.floor(t/4294967296),!0),await n.write(i,e)}async readULE32(t){const n=await this.read(4,t);return new Uint32Array(n.buffer)[0]}async readUBE32(t){const n=await this.read(4,t);return new DataView(n.buffer).getUint32(0,!1)}async readULE64(t){const n=await this.read(8,t),i=new Uint32Array(n.buffer);return i[1]*4294967296+i[0]}async readString(t){const e=this;if(e.pendingClose)throw new Error("Reading a closing file");let n=typeof t>"u"?e.pos:t,i=Math.floor(n/e.pageSize),o=!1,s="";for(;!o;){let r=e._loadPage(i);e._triggerLoad(),await r,e.__statusPage("After Await (read): ",i);let u=n%e.pageSize;const l=new Uint8Array(e.pages[i].buff.buffer,e.pages[i].buff.byteOffset+u,e.pageSize-u);let c=l.findIndex(f=>f===0);o=c!==-1,o?(s+=new TextDecoder().decode(l.slice(0,c)),e.pos=i*this.pageSize+u+c+1):(s+=new TextDecoder().decode(l),e.pos=i*this.pageSize+u+l.length),e.pages[i].pendingOps--,e.__statusPage("After Op done: ",i),n=e.pos,i++,e.pendingLoads.length>0&&setImmediate(e._triggerLoad.bind(e))}return s}}function $m(a){const t=a.initialSize||1048576,e=new Xh;return e.o=a,e.o.data=new Uint8Array(t),e.allocSize=t,e.totalSize=0,e.readOnly=!1,e.pos=0,e}function tb(a){const t=new Xh;return t.o=a,t.allocSize=a.data.byteLength,t.totalSize=a.data.byteLength,t.readOnly=!0,t.pos=0,t}const $c=new Uint8Array(4),cf=new DataView($c.buffer),Zh=new Uint8Array(8),lf=new DataView(Zh.buffer);class Xh{constructor(){this.pageSize=16384}_resizeIfNeeded(t){if(t>this.allocSize){const e=Math.max(this.allocSize+1048576,Math.floor(this.allocSize*1.1),t),n=new Uint8Array(e);n.set(this.o.data),this.o.data=n,this.allocSize=e}}async write(t,e){if(typeof e>"u"&&(e=this.pos),this.readOnly)throw new Error("Writing a read only file");this._resizeIfNeeded(e+t.byteLength),this.o.data.set(t.slice(),e),e+t.byteLength>this.totalSize&&(this.totalSize=e+t.byteLength),this.pos=e+t.byteLength}async readToBuffer(t,e,n,i){if(typeof i>"u"&&(i=this.pos),this.readOnly&&i+n>this.totalSize)throw new Error("Reading out of bounds");this._resizeIfNeeded(i+n);const s=new Uint8Array(this.o.data.buffer,this.o.data.byteOffset+i,n);t.set(s,e),this.pos=i+n}async read(t,e){const n=this,i=new Uint8Array(t);return await n.readToBuffer(i,0,t,e),i}close(){this.o.data.byteLength!=this.totalSize&&(this.o.data=this.o.data.slice(0,this.totalSize))}async discard(){}async writeULE32(t,e){const n=this;cf.setUint32(0,t,!0),await n.write($c,e)}async writeUBE32(t,e){const n=this;cf.setUint32(0,t,!1),await n.write($c,e)}async writeULE64(t,e){const n=this;lf.setUint32(0,t&4294967295,!0),lf.setUint32(4,Math.floor(t/4294967296),!0),await n.write(Zh,e)}async readULE32(t){const n=await this.read(4,t);return new Uint32Array(n.buffer)[0]}async readUBE32(t){const n=await this.read(4,t);return new DataView(n.buffer).getUint32(0,!1)}async readULE64(t){const n=await this.read(8,t),i=new Uint32Array(n.buffer);return i[1]*4294967296+i[0]}async readString(t){const e=this;let n=typeof t>"u"?e.pos:t;if(n>this.totalSize){if(this.readOnly)throw new Error("Reading out of bounds");this._resizeIfNeeded(t)}const i=new Uint8Array(e.o.data.buffer,n,this.totalSize-n);let o=i.findIndex(u=>u===0),s=o!==-1,r="";return s?(r=new TextDecoder().decode(i.slice(0,o)),e.pos=n+o+1):e.pos=n,r}}const ze=1<<22;function eb(a){const t=a.initialSize||0,e=new t0;e.o=a;const n=t?Math.floor((t-1)/ze)+1:0;e.o.data=[];for(let i=0;i<n-1;i++)e.o.data.push(new Uint8Array(ze));return n&&e.o.data.push(new Uint8Array(t-ze*(n-1))),e.totalSize=0,e.readOnly=!1,e.pos=0,e}function nb(a){const t=new t0;return t.o=a,t.totalSize=(a.data.length-1)*ze+a.data[a.data.length-1].byteLength,t.readOnly=!0,t.pos=0,t}const tl=new Uint8Array(4),uf=new DataView(tl.buffer),$h=new Uint8Array(8),df=new DataView($h.buffer);class t0{constructor(){this.pageSize=16384}_resizeIfNeeded(t){if(t<=this.totalSize)return;if(this.readOnly)throw new Error("Reading out of file bounds");const e=Math.floor((t-1)/ze)+1;for(let n=Math.max(this.o.data.length-1,0);n<e;n++){const i=n<e-1?ze:t-(e-1)*ze,o=new Uint8Array(i);n==this.o.data.length-1&&o.set(this.o.data[n]),this.o.data[n]=o}this.totalSize=t}async write(t,e){const n=this;if(typeof e>"u"&&(e=n.pos),this.readOnly)throw new Error("Writing a read only file");this._resizeIfNeeded(e+t.byteLength);let o=Math.floor(e/ze),s=e%ze,r=t.byteLength;for(;r>0;){const u=s+r>ze?ze-s:r,l=t.slice(t.byteLength-r,t.byteLength-r+u);new Uint8Array(n.o.data[o].buffer,s,u).set(l),r=r-u,o++,s=0}this.pos=e+t.byteLength}async readToBuffer(t,e,n,i){const o=this;if(typeof i>"u"&&(i=o.pos),this.readOnly&&i+n>this.totalSize)throw new Error("Reading out of bounds");this._resizeIfNeeded(i+n);let r=Math.floor(i/ze),u=i%ze,l=n;for(;l>0;){const c=u+l>ze?ze-u:l,f=new Uint8Array(o.o.data[r].buffer,u,c);t.set(f,e+n-l),l=l-c,r++,u=0}this.pos=i+n}async read(t,e){const n=this,i=new Uint8Array(t);return await n.readToBuffer(i,0,t,e),i}close(){}async discard(){}async writeULE32(t,e){const n=this;uf.setUint32(0,t,!0),await n.write(tl,e)}async writeUBE32(t,e){const n=this;uf.setUint32(0,t,!1),await n.write(tl,e)}async writeULE64(t,e){const n=this;df.setUint32(0,t&4294967295,!0),df.setUint32(4,Math.floor(t/4294967296),!0),await n.write($h,e)}async readULE32(t){const n=await this.read(4,t);return new Uint32Array(n.buffer)[0]}async readUBE32(t){const n=await this.read(4,t);return new DataView(n.buffer).getUint32(0,!1)}async readULE64(t){const n=await this.read(8,t),i=new Uint32Array(n.buffer);return i[1]*4294967296+i[0]}async readString(t){const e=this,n=2048;let i=typeof t>"u"?e.pos:t;if(i>this.totalSize){if(this.readOnly)throw new Error("Reading out of bounds");this._resizeIfNeeded(t)}let o=!1,s="";for(;!o;){let r=Math.floor(i/ze),u=i%ze;if(e.o.data[r]===void 0)throw new Error("ERROR");let l=Math.min(n,e.o.data[r].length-u);const c=new Uint8Array(e.o.data[r].buffer,u,l);let f=c.findIndex(g=>g===0);o=f!==-1,o?(s+=new TextDecoder().decode(c.slice(0,f)),e.pos=r*ze+u+f+1):(s+=new TextDecoder().decode(c),e.pos=r*ze+u+c.length),i=e.pos}return s}}const ib=1024,ob=512,ab=2,sb=0,rb=65536,cb=8192;async function yo(a,t,e){if(typeof a=="string"&&(a={type:"file",fileName:a,cacheSize:t||rb,pageSize:e||cb}),a.type=="file")return await Wh(a.fileName,ib|ob|ab,a.cacheSize,a.pageSize);if(a.type=="mem")return $m(a);if(a.type=="bigMem")return eb(a);throw new Error("Invalid FastFile type: "+a.type)}async function Ci(a,t,e){if(a instanceof Uint8Array&&(a={type:"mem",data:a}),typeof a=="string"&&(a={type:"mem",data:await fetch(a).then(function(i){return i.arrayBuffer()}).then(function(i){return new Uint8Array(i)})}),a.type=="file")return await Wh(a.fileName,sb,a.cacheSize,a.pageSize);if(a.type=="mem")return await tb(a);if(a.type=="bigMem")return await nb(a);throw new Error("Invalid FastFile type: "+a.type)}async function Ie(a,t,e,n,i){const o=await Ci(a),s=await o.read(4);let r="";for(let f=0;f<4;f++)r+=String.fromCharCode(s[f]);if(r!=t)throw new Error(a+": Invalid File format");if(await o.readULE32()>e)throw new Error("Version not supported");const l=await o.readULE32();let c=[];for(let f=0;f<l;f++){let g=await o.readULE32(),L=await o.readULE64();typeof c[g]>"u"&&(c[g]=[]),c[g].push({p:o.pos,size:L}),o.pos+=L}return{fd:o,sections:c}}async function pn(a,t,e,n,i,o){const s=await yo(a,i,o),r=new Uint8Array(4);for(let u=0;u<4;u++)r[u]=t.charCodeAt(u);return await s.write(r,0),await s.writeULE32(e),await s.writeULE32(n),s}async function ge(a,t){if(typeof a.writingSection<"u")throw new Error("Already writing a section");await a.writeULE32(t),a.writingSection={pSectionSize:a.pos},await a.writeULE64(0)}async function pe(a){if(typeof a.writingSection>"u")throw new Error("Not writing a section");const t=a.pos-a.writingSection.pSectionSize-8,e=a.pos;a.pos=a.writingSection.pSectionSize,await a.writeULE64(t),a.pos=e,delete a.writingSection}async function Ee(a,t,e){if(typeof a.readingSection<"u")throw new Error("Already reading a section");if(!t[e])throw new Error(a.fileName+": Missing section "+e);if(t[e].length>1)throw new Error(a.fileName+": Section Duplicated "+e);a.pos=t[e][0].p,a.readingSection=t[e][0]}async function Ce(a,t){if(typeof a.readingSection>"u")throw new Error("Not reading a section");if(!t&&a.pos-a.readingSection.p!=a.readingSection.size)throw new Error("Invalid section size reading");delete a.readingSection}async function Dn(a,t,e,n){const i=new Uint8Array(e);oe.toRprLE(i,0,t,e),await a.write(i,n)}async function zn(a,t,e){const n=await a.read(t,e);return oe.fromRprLE(n,0,t)}async function be(a,t,e,n,i){typeof i>"u"&&(i=t[n][0].size);const o=a.pageSize;await Ee(a,t,n),await ge(e,n);for(let s=0;s<i;s+=o){const r=Math.min(i-s,o),u=await a.read(r);await e.write(u)}await pe(e),await Ce(a,i!=t[n][0].size)}async function ye(a,t,e,n,i){if(n=typeof n>"u"?0:n,i=typeof i>"u"?t[e][0].size-n:i,n+i>t[e][0].size)throw new Error("Reading out of the range of the section");let o;return i<1<<30?o=new Uint8Array(i):o=new Ht(i),await a.readToBuffer(o,0,i,t[e][0].p+n),o}async function Xo(a,t,e,n,i){const o=a.pageSize*16;if(await Ee(a,t,i),await Ee(e,n,i),t[i][0].size!=n[i][0].size)return!1;const s=t[i][0].size;for(let r=0;r<s;r+=o){const u=Math.min(s-r,o),l=await a.read(u),c=await e.read(u);for(let f=0;f<u;f++)if(l[f]!=c[f])return!1}return await Ce(a),await Ce(e),!0}const lb=oe.e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),ub=oe.e("21888242871839275222246405745257275088548364400416034343698204186575808495617"),db=oe.e("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),fb=oe.e("21888242871839275222246405745257275088696311157297823662689037894645226208583");async function e0(a,t){let e,n=t&&t.singleThread;if(oe.eq(a,ub))e=await Ys(n);else if(oe.eq(a,lb))e=await js(n);else throw new Error(`Curve not supported: ${oe.toString(a)}`);return e}async function Ln(a,t){let e,n=t&&t.singleThread;if(oe.eq(a,fb))e=await Ys(n);else if(oe.eq(a,db))e=await js(n);else throw new Error(`Curve not supported: ${oe.toString(a)}`);return e}async function Ji(a,t){let e,n=t&&t.singleThread;const i=o(a);if(["BN128","BN254","ALTBN128"].indexOf(i)>=0)e=await Ys(n);else if(["BLS12381"].indexOf(i)>=0)e=await js(n);else throw new Error(`Curve not supported: ${a}`);return e;function o(s){return s.toUpperCase().match(/[A-Za-z0-9]+/g).join("")}}var hb=Object.freeze({__proto__:null,getCurveFromR:e0,getCurveFromQ:Ln,getCurveFromName:Ji}),gb=typeof globalThis<"u"?globalThis:typeof window<"u"||typeof window<"u"?window:typeof self<"u"?self:{},ue={exports:{}},pb=i0;class n0 extends Error{}n0.prototype.name="AssertionError";function i0(a,t){if(!a){var e=new n0(t);throw Error.captureStackTrace&&Error.captureStackTrace(e,i0),e}}var el={exports:{}};function o0(a){return a.length}function Lb(a){const t=a.byteLength;let e="";for(let n=0;n<t;n++)e+=String.fromCharCode(a[n]);return e}function wb(a,t,e=0,n=o0(t)){const i=Math.min(n,a.byteLength-e);for(let o=0;o<i;o++)a[e+o]=t.charCodeAt(o);return i}var mb={byteLength:o0,toString:Lb,write:wb};const eo="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Pi=new Uint8Array(256);for(let a=0;a<eo.length;a++)Pi[eo.charCodeAt(a)]=a;Pi[45]=62;Pi[95]=63;function a0(a){let t=a.length;return a.charCodeAt(t-1)===61&&t--,t>1&&a.charCodeAt(t-1)===61&&t--,t*3>>>2}function bb(a){const t=a.byteLength;let e="";for(let n=0;n<t;n+=3)e+=eo[a[n]>>2]+eo[(a[n]&3)<<4|a[n+1]>>4]+eo[(a[n+1]&15)<<2|a[n+2]>>6]+eo[a[n+2]&63];return t%3===2?e=e.substring(0,e.length-1)+"=":t%3===1&&(e=e.substring(0,e.length-2)+"=="),e}function yb(a,t,e=0,n=a0(t)){const i=Math.min(n,a.byteLength-e);for(let o=0,s=0;s<i;o+=4){const r=Pi[t.charCodeAt(o)],u=Pi[t.charCodeAt(o+1)],l=Pi[t.charCodeAt(o+2)],c=Pi[t.charCodeAt(o+3)];a[s++]=r<<2|u>>4,a[s++]=(u&15)<<4|l>>2,a[s++]=(l&3)<<6|c&63}return i}var Ab={byteLength:a0,toString:bb,write:yb};function s0(a){return a.length>>>1}function Ib(a){const t=a.byteLength;a=new DataView(a.buffer,a.byteOffset,t);let e="",n=0;for(let i=t-t%4;n<i;n+=4)e+=a.getUint32(n).toString(16).padStart(8,"0");for(;n<t;n++)e+=a.getUint8(n).toString(16).padStart(2,"0");return e}function Eb(a,t,e=0,n=s0(t)){const i=Math.min(n,a.byteLength-e);for(let o=0;o<i;o++){const s=ff(t.charCodeAt(o*2)),r=ff(t.charCodeAt(o*2+1));if(s===void 0||r===void 0)return a.subarray(0,o);a[e+o]=s<<4|r}return i}var Cb={byteLength:s0,toString:Ib,write:Eb};function ff(a){if(a>=48&&a<=57)return a-48;if(a>=65&&a<=70)return a-65+10;if(a>=97&&a<=102)return a-97+10}function nl(a){let t=0;for(let e=0,n=a.length;e<n;e++){const i=a.charCodeAt(e);if(i>=55296&&i<=56319&&e+1<n){const o=a.charCodeAt(e+1);if(o>=56320&&o<=57343){t+=4,e++;continue}}i<=127?t+=1:i<=2047?t+=2:t+=3}return t}let il;if(typeof TextDecoder<"u"){const a=new TextDecoder;il=function(e){return a.decode(e)}}else il=function(t){const e=t.byteLength;let n="",i=0;for(;i<e;){let o=t[i];if(o<=127){n+=String.fromCharCode(o),i++;continue}let s=0,r=0;if(o<=223?(s=1,r=o&31):o<=239?(s=2,r=o&15):o<=244&&(s=3,r=o&7),e-i-s>0){let u=0;for(;u<s;)o=t[i+u+1],r=r<<6|o&63,u+=1}else r=65533,s=e-i;n+=String.fromCodePoint(r),i+=s+1}return n};let ol;if(typeof TextEncoder<"u"){const a=new TextEncoder;ol=function(e,n,i=0,o=nl(n)){const s=Math.min(o,e.byteLength-i);return a.encodeInto(n,e.subarray(i,i+s)),s}}else ol=function(t,e,n=0,i=nl(e)){const o=Math.min(i,t.byteLength-n);t=t.subarray(n,n+o);let s=0,r=0;for(;s<e.length;){const u=e.codePointAt(s);if(u<=127){t[r++]=u,s++;continue}let l=0,c=0;for(u<=2047?(l=6,c=192):u<=65535?(l=12,c=224):u<=2097151&&(l=18,c=240),t[r++]=c|u>>l,l-=6;l>=0;)t[r++]=128|u>>l&63,l-=6;s+=u>=65536?2:1}return o};var Bb={byteLength:nl,toString:il,write:ol};function r0(a){return a.length*2}function vb(a){const t=a.byteLength;let e="";for(let n=0;n<t-1;n+=2)e+=String.fromCharCode(a[n]+a[n+1]*256);return e}function Fb(a,t,e=0,n=r0(t)){const i=Math.min(n,a.byteLength-e);let o=i;for(let s=0;s<t.length&&!((o-=2)<0);++s){const r=t.charCodeAt(s),u=r>>8,l=r%256;a[e+s*2]=l,a[e+s*2+1]=u}return i}var Sb={byteLength:r0,toString:vb,write:Fb};(function(a,t){const e=mb,n=Ab,i=Cb,o=Bb,s=Sb,r=new Uint8Array(Uint16Array.of(255).buffer)[0]===255;function u(p){switch(p){case"ascii":return e;case"base64":return n;case"hex":return i;case"utf8":case"utf-8":case void 0:return o;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return s;default:throw new Error(`Unknown encoding: ${p}`)}}function l(p){return p instanceof Uint8Array}function c(p){try{return u(p),!0}catch{return!1}}function f(p,d,m){const v=new Uint8Array(p);return d!==void 0&&t.fill(v,d,0,v.byteLength,m),v}function g(p){return new Uint8Array(p)}function L(p){return new Uint8Array(p)}function S(p,d){return u(d).byteLength(p)}function k(p,d){if(p===d)return 0;const m=Math.min(p.byteLength,d.byteLength);p=new DataView(p.buffer,p.byteOffset,p.byteLength),d=new DataView(d.buffer,d.byteOffset,d.byteLength);let v=0;for(let et=m-m%4;v<et;v+=4){const ct=p.getUint32(v,r),dt=d.getUint32(v,r);if(ct!==dt)break}for(;v<m;v++){const et=p.getUint8(v),ct=d.getUint8(v);if(et<ct)return-1;if(et>ct)return 1}return p.byteLength>d.byteLength?1:p.byteLength<d.byteLength?-1:0}function E(p,d){d===void 0&&(d=p.reduce((et,ct)=>et+ct.byteLength,0));const m=new Uint8Array(d);let v=0;for(const et of p){if(v+et.byteLength>m.byteLength){const ct=et.subarray(0,m.byteLength-v);return m.set(ct,v),m}m.set(et,v),v+=et.byteLength}return m}function G(p,d,m=0,v=0,et=p.byteLength){if(et>0&&et<v||et===v||p.byteLength===0||d.byteLength===0)return 0;if(m<0)throw new RangeError("targetStart is out of range");if(v<0||v>=p.byteLength)throw new RangeError("sourceStart is out of range");if(et<0)throw new RangeError("sourceEnd is out of range");m>=d.byteLength&&(m=d.byteLength),et>p.byteLength&&(et=p.byteLength),d.byteLength-m<et-v&&(et=d.length-m+v);const ct=et-v;return p===d?d.copyWithin(m,v,et):d.set(p.subarray(v,et),m),ct}function C(p,d){if(p===d)return!0;if(p.byteLength!==d.byteLength)return!1;const m=p.byteLength;p=new DataView(p.buffer,p.byteOffset,p.byteLength),d=new DataView(d.buffer,d.byteOffset,d.byteLength);let v=0;for(let et=m-m%4;v<et;v+=4)if(p.getUint32(v,r)!==d.getUint32(v,r))return!1;for(;v<m;v++)if(p.getUint8(v)!==d.getUint8(v))return!1;return!0}function N(p,d,m,v,et){if(typeof d=="string"?typeof m=="string"?(et=m,m=0,v=p.byteLength):typeof v=="string"&&(et=v,v=p.byteLength):typeof d=="number"?d=d&255:typeof d=="boolean"&&(d=+d),m<0||p.byteLength<m||p.byteLength<v)throw new RangeError("Out of range index");if(m===void 0&&(m=0),v===void 0&&(v=p.byteLength),v<=m)return p;if(d||(d=0),typeof d=="number")for(let ct=m;ct<v;++ct)p[ct]=d;else{d=l(d)?d:J(d,et);const ct=d.byteLength;for(let dt=0;dt<v-m;++dt)p[dt+m]=d[dt%ct]}return p}function J(p,d,m){return typeof p=="string"?j(p,d):Array.isArray(p)?R(p):ArrayBuffer.isView(p)?b(p):w(p,d,m)}function j(p,d){const m=u(d),v=new Uint8Array(m.byteLength(p));return m.write(v,p,0,v.byteLength),v}function R(p){const d=new Uint8Array(p.length);return d.set(p),d}function b(p){const d=new Uint8Array(p.byteLength);return d.set(p),d}function w(p,d,m){return new Uint8Array(p,d,m)}function Z(p,d,m,v){return V(p,d,m,v)!==-1}function P(p,d,m,v,et){if(p.byteLength===0)return-1;if(typeof m=="string"?(v=m,m=0):m===void 0?m=et?0:p.length-1:m<0&&(m+=p.byteLength),m>=p.byteLength){if(et)return-1;m=p.byteLength-1}else if(m<0)if(et)m=0;else return-1;if(typeof d=="string")d=J(d,v);else if(typeof d=="number")return d=d&255,et?p.indexOf(d,m):p.lastIndexOf(d,m);if(d.byteLength===0)return-1;if(et){let ct=-1;for(let dt=m;dt<p.byteLength;dt++)if(p[dt]===d[ct===-1?0:dt-ct]){if(ct===-1&&(ct=dt),dt-ct+1===d.byteLength)return ct}else ct!==-1&&(dt-=dt-ct),ct=-1}else{m+d.byteLength>p.byteLength&&(m=p.byteLength-d.byteLength);for(let ct=m;ct>=0;ct--){let dt=!0;for(let ft=0;ft<d.byteLength;ft++)if(p[ct+ft]!==d[ft]){dt=!1;break}if(dt)return ct}}return-1}function V(p,d,m,v){return P(p,d,m,v,!0)}function nt(p,d,m,v){return P(p,d,m,v,!1)}function I(p,d,m){const v=p[d];p[d]=p[m],p[m]=v}function y(p){const d=p.byteLength;if(d%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let m=0;m<d;m+=2)I(p,m,m+1);return p}function _(p){const d=p.byteLength;if(d%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let m=0;m<d;m+=4)I(p,m,m+3),I(p,m+1,m+2);return p}function T(p){const d=p.byteLength;if(d%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let m=0;m<d;m+=8)I(p,m,m+7),I(p,m+1,m+6),I(p,m+2,m+5),I(p,m+3,m+4);return p}function B(p){return p}function Y(p,d,m=0,v=p.byteLength){const et=p.byteLength;return m>=et||v<=m?"":(m<0&&(m=0),v>et&&(v=et),(m!==0||v<et)&&(p=p.subarray(m,v)),u(d).toString(p))}function tt(p,d,m,v,et){return m===void 0?et="utf8":v===void 0&&typeof m=="string"?(et=m,m=void 0):et===void 0&&typeof v=="string"&&(et=v,v=void 0),u(et).write(p,d,m,v)}function $(p,d,m){return m===void 0&&(m=0),new DataView(p.buffer,p.byteOffset,p.byteLength).setFloat64(m,d,!0),m+8}function X(p,d,m){return m===void 0&&(m=0),new DataView(p.buffer,p.byteOffset,p.byteLength).setFloat32(m,d,!0),m+4}function F(p,d,m){return m===void 0&&(m=0),new DataView(p.buffer,p.byteOffset,p.byteLength).setUint32(m,d,!0),m+4}function M(p,d,m){return m===void 0&&(m=0),new DataView(p.buffer,p.byteOffset,p.byteLength).setInt32(m,d,!0),m+4}function W(p,d){return d===void 0&&(d=0),new DataView(p.buffer,p.byteOffset,p.byteLength).getFloat64(d,!0)}function A(p,d){return d===void 0&&(d=0),new DataView(p.buffer,p.byteOffset,p.byteLength).getFloat32(d,!0)}function h(p,d){return d===void 0&&(d=0),new DataView(p.buffer,p.byteOffset,p.byteLength).getUint32(d,!0)}function Q(p,d){return d===void 0&&(d=0),new DataView(p.buffer,p.byteOffset,p.byteLength).getInt32(d,!0)}a.exports=t={isBuffer:l,isEncoding:c,alloc:f,allocUnsafe:g,allocUnsafeSlow:L,byteLength:S,compare:k,concat:E,copy:G,equals:C,fill:N,from:J,includes:Z,indexOf:V,lastIndexOf:nt,swap16:y,swap32:_,swap64:T,toBuffer:B,toString:Y,write:tt,writeDoubleLE:$,writeFloatLE:X,writeUInt32LE:F,writeInt32LE:M,readDoubleLE:W,readFloatLE:A,readUInt32LE:h,readInt32LE:Q}})(el,el.exports);var Kr,hf;function _b(){if(hf)return Kr;hf=1;var a=(o,s)=>function(){return s||(0,o[Object.keys(o)[0]])((s={exports:{}}).exports,s),s.exports},t=(()=>{for(var o=new Uint8Array(128),s=0;s<64;s++)o[s<26?s+65:s<52?s+71:s<62?s-4:s*4-205]=s;return r=>{for(var u=r.length,l=new Uint8Array((u-(r[u-1]=="=")-(r[u-2]=="="))*3/4|0),c=0,f=0;c<u;){var g=o[r.charCodeAt(c++)],L=o[r.charCodeAt(c++)],S=o[r.charCodeAt(c++)],k=o[r.charCodeAt(c++)];l[f++]=g<<2|L>>4,l[f++]=L<<4|S>>2,l[f++]=S<<6|k}return l}})(),e=a({"wasm-binary:./blake2b.wat"(o,s){s.exports=t("")}}),n=e(),i=WebAssembly.compile(n);return Kr=async o=>(await WebAssembly.instantiate(await i,o)).exports,Kr}var In=pb,xb=el.exports,si=null,gf=typeof WebAssembly<"u"&&_b()().then(a=>{si=a}),ii=64,us=[];ue.exports=hn;var pf=ue.exports.BYTES_MIN=16,Lf=ue.exports.BYTES_MAX=64;ue.exports.BYTES=32;var wf=ue.exports.KEYBYTES_MIN=16,mf=ue.exports.KEYBYTES_MAX=64;ue.exports.KEYBYTES=32;var bf=ue.exports.SALTBYTES=16,yf=ue.exports.PERSONALBYTES=16;function hn(a,t,e,n,i){if(!(this instanceof hn))return new hn(a,t,e,n,i);if(!si)throw new Error("WASM not loaded. Wait for Blake2b.ready(cb)");a||(a=32),i!==!0&&(In(a>=pf,"digestLength must be at least "+pf+", was given "+a),In(a<=Lf,"digestLength must be at most "+Lf+", was given "+a),t!=null&&(In(t instanceof Uint8Array,"key must be Uint8Array or Buffer"),In(t.length>=wf,"key must be at least "+wf+", was given "+t.length),In(t.length<=mf,"key must be at least "+mf+", was given "+t.length)),e!=null&&(In(e instanceof Uint8Array,"salt must be Uint8Array or Buffer"),In(e.length===bf,"salt must be exactly "+bf+", was given "+e.length)),n!=null&&(In(n instanceof Uint8Array,"personal must be Uint8Array or Buffer"),In(n.length===yf,"personal must be exactly "+yf+", was given "+n.length))),us.length||(us.push(ii),ii+=216),this.digestLength=a,this.finalized=!1,this.pointer=us.pop(),this._memory=new Uint8Array(si.memory.buffer),this._memory.fill(0,0,64),this._memory[0]=this.digestLength,this._memory[1]=t?t.length:0,this._memory[2]=1,this._memory[3]=1,e&&this._memory.set(e,32),n&&this._memory.set(n,48),this.pointer+216>this._memory.length&&this._realloc(this.pointer+216),si.blake2b_init(this.pointer,this.digestLength),t&&(this.update(t),this._memory.fill(0,ii,ii+t.length),this._memory[this.pointer+200]=128)}hn.prototype._realloc=function(a){si.memory.grow(Math.max(0,Math.ceil(Math.abs(a-this._memory.length)/65536))),this._memory=new Uint8Array(si.memory.buffer)};hn.prototype.update=function(a){return In(this.finalized===!1,"Hash instance finalized"),In(a instanceof Uint8Array,"input must be Uint8Array or Buffer"),ii+a.length>this._memory.length&&this._realloc(ii+a.length),this._memory.set(a,ii),si.blake2b_update(this.pointer,ii,ii+a.length),this};hn.prototype.digest=function(a){if(In(this.finalized===!1,"Hash instance finalized"),this.finalized=!0,us.push(this.pointer),si.blake2b_final(this.pointer),!a||a==="binary")return this._memory.slice(this.pointer+128,this.pointer+128+this.digestLength);if(typeof a=="string")return xb.toString(this._memory,a,this.pointer+128,this.pointer+128+this.digestLength);In(a instanceof Uint8Array&&a.length>=this.digestLength,"input must be Uint8Array or Buffer");for(var t=0;t<this.digestLength;t++)a[t]=this._memory[this.pointer+128+t];return a};hn.prototype.final=hn.prototype.digest;hn.WASM=si;hn.SUPPORTED=typeof WebAssembly<"u";hn.ready=function(a){return a||(a=Mb),gf?gf.then(()=>a(),a):a(new Error("WebAssembly not supported"))};hn.prototype.ready=hn.ready;hn.prototype.getPartialHash=function(){return this._memory.slice(this.pointer,this.pointer+216)};hn.prototype.setPartialHash=function(a){this._memory.set(a,this.pointer)};function Mb(){}function Bi(a){return((a&4294901760)!==0?(a&=4294901760,16):0)|((a&4278255360)!==0?(a&=4278255360,8):0)|((a&4042322160)!==0?(a&=4042322160,4):0)|((a&3435973836)!==0?(a&=3435973836,2):0)|(a&2863311530)!==0}function xe(a,t){const e=new DataView(a.buffer,a.byteOffset,a.byteLength);let n="";for(let i=0;i<4;i++){i>0&&(n+=`
`),n+="		";for(let o=0;o<4;o++)o>0&&(n+=" "),n+=e.getUint32(i*16+o*4).toString(16).padStart(8,"0")}return t&&(n=t+`
`+n),n}function Ai(a,t){if(a.byteLength!=t.byteLength)return!1;for(var e=new Int8Array(a),n=new Int8Array(t),i=0;i!=a.byteLength;i++)if(e[i]!=n[i])return!1;return!0}function kb(a){const t=a.getPartialHash(),e=ue.exports(64);return e.setPartialHash(t),e}async function c0(a,t,e,n,i){return a.G1.isZero(t)||a.G1.isZero(e)||a.G2.isZero(n)||a.G2.isZero(i)?!1:await a.pairingEq(t,i,a.G1.neg(e),n)}function Ub(){return window.prompt("Enter a random text. (Entropy): ","")}function ao(a){let t=new Uint8Array(a);return globalThis.crypto.getRandomValues(t),t}async function Gb(a){{const t=await globalThis.crypto.subtle.digest("SHA-256",a.buffer);return new Uint8Array(t)}}function vs(a,t){return new DataView(a.buffer).getUint32(t,!1)}async function Vs(a){for(;!a;)a=await Ub();const t=ue.exports(64);t.update(ao(64));const e=new TextEncoder;t.update(e.encode(a));const n=t.digest(),i=[];for(let s=0;s<8;s++)i[s]=vs(n,s*4);return new Qi(i)}async function Wl(a,t){let e,n;t<32?(e=1<<t>>>0,n=1):(e=4294967296,n=1<<t-32>>>0);let i=a;for(let u=0;u<n;u++)for(let l=0;l<e;l++)i=await Gb(i);const o=new DataView(i.buffer,i.byteOffset,i.byteLength),s=[];for(let u=0;u<8;u++)s[u]=o.getUint32(u*4,!1);return new Qi(s)}function l0(a){return a instanceof Uint8Array?a:(a.slice(0,2)=="0x"&&(a=a.slice(2)),new Uint8Array(a.match(/[\da-f]{2}/gi).map(function(t){return parseInt(t,16)})))}function u0(a){return Array.prototype.map.call(a,function(t){return("0"+(t&255).toString(16)).slice(-2)}).join("")}function Fs(a,t){if(t instanceof Uint8Array)return a.toString(t);if(Array.isArray(t))return t.map(Fs.bind(null,a));if(typeof t=="object"){const e={};return Object.keys(t).forEach(i=>{e[i]=Fs(a,t[i])}),e}else return typeof t=="bigint"||t.eq!==void 0?t.toString(10):t}const Af=1,Pb=1,Ob=2,Sa=10,Db=3,qb=17,al=2,Ss=3,sl=4,rl=5,cl=6,aa=7,sa=8,ra=9,ca=10,la=11,ua=12,da=13,fa=14,ll=15,_s=16,ul=17;async function Zl(a,t){await ge(a,1),await a.writeULE32(1),await pe(a);const e=await Ln(t.q);await ge(a,2);const n=e.q,i=(Math.floor((oe.bitLength(n)-1)/64)+1)*8,o=e.r,s=(Math.floor((oe.bitLength(o)-1)/64)+1)*8;await a.writeULE32(i),await Dn(a,n,i),await a.writeULE32(s),await Dn(a,o,s),await a.writeULE32(t.nVars),await a.writeULE32(t.nPublic),await a.writeULE32(t.domainSize),await so(a,e,t.vk_alpha_1),await so(a,e,t.vk_beta_1),await ds(a,e,t.vk_beta_2),await ds(a,e,t.vk_gamma_2),await so(a,e,t.vk_delta_1),await ds(a,e,t.vk_delta_2),await pe(a)}async function so(a,t,e){const n=new Uint8Array(t.G1.F.n8*2);t.G1.toRprLEM(n,0,e),await a.write(n)}async function ds(a,t,e){const n=new Uint8Array(t.G2.F.n8*2);t.G2.toRprLEM(n,0,e),await a.write(n)}async function Ke(a,t,e){const n=await a.read(t.G1.F.n8*2),i=t.G1.fromRprLEM(n,0);return e?t.G1.toObject(i):i}async function qi(a,t,e){const n=await a.read(t.G2.F.n8*2),i=t.G2.fromRprLEM(n,0);return e?t.G2.toObject(i):i}async function qn(a,t,e,n){await Ee(a,t,1);const i=await a.readULE32();if(await Ce(a),i===Pb)return await Tb(a,t,e,n);if(i===Ob)return await Rb(a,t,e,n);if(i===Sa)return await Hb(a,t,e,n);throw new Error("Protocol not supported: ")}async function Tb(a,t,e,n){const i={};i.protocol="groth16",await Ee(a,t,2);const o=await a.readULE32();i.n8q=o,i.q=await zn(a,o);const s=await a.readULE32();return i.n8r=s,i.r=await zn(a,s),i.curve=await Ln(i.q,n),i.nVars=await a.readULE32(),i.nPublic=await a.readULE32(),i.domainSize=await a.readULE32(),i.power=Bi(i.domainSize),i.vk_alpha_1=await Ke(a,i.curve,e),i.vk_beta_1=await Ke(a,i.curve,e),i.vk_beta_2=await qi(a,i.curve,e),i.vk_gamma_2=await qi(a,i.curve,e),i.vk_delta_1=await Ke(a,i.curve,e),i.vk_delta_2=await qi(a,i.curve,e),await Ce(a),i}async function Rb(a,t,e,n){const i={};i.protocol="plonk",await Ee(a,t,2);const o=await a.readULE32();i.n8q=o,i.q=await zn(a,o);const s=await a.readULE32();return i.n8r=s,i.r=await zn(a,s),i.curve=await Ln(i.q,n),i.nVars=await a.readULE32(),i.nPublic=await a.readULE32(),i.domainSize=await a.readULE32(),i.power=Bi(i.domainSize),i.nAdditions=await a.readULE32(),i.nConstraints=await a.readULE32(),i.k1=await a.read(s),i.k2=await a.read(s),i.Qm=await Ke(a,i.curve,e),i.Ql=await Ke(a,i.curve,e),i.Qr=await Ke(a,i.curve,e),i.Qo=await Ke(a,i.curve,e),i.Qc=await Ke(a,i.curve,e),i.S1=await Ke(a,i.curve,e),i.S2=await Ke(a,i.curve,e),i.S3=await Ke(a,i.curve,e),i.X_2=await qi(a,i.curve,e),await Ce(a),i}async function Hb(a,t,e,n){const i={};i.protocol="fflonk",i.protocolId=Sa,await Ee(a,t,al);const o=await a.readULE32();i.n8q=o,i.q=await zn(a,o),i.curve=await Ln(i.q,n);const s=await a.readULE32();return i.n8r=s,i.r=await zn(a,s),i.nVars=await a.readULE32(),i.nPublic=await a.readULE32(),i.domainSize=await a.readULE32(),i.power=Bi(i.domainSize),i.nAdditions=await a.readULE32(),i.nConstraints=await a.readULE32(),i.k1=await a.read(s),i.k2=await a.read(s),i.w3=await a.read(s),i.w4=await a.read(s),i.w8=await a.read(s),i.wr=await a.read(s),i.X_2=await qi(a,i.curve,e),i.C0=await Ke(a,i.curve,e),await Ce(a),i}async function Qb(a,t){const{fd:e,sections:n}=await Ie(a,"zkey",1),i=await qn(e,n,t),o=new Kl(i.r),s=oe.mod(oe.shl(1,i.n8r*8),i.r),r=o.inv(s),u=o.mul(r,r);let l=await Ln(i.q);await Ee(e,n,3),i.IC=[];for(let g=0;g<=i.nPublic;g++){const L=await Ke(e,l,t);i.IC.push(L)}await Ce(e),await Ee(e,n,4);const c=await e.readULE32();i.ccoefs=[];for(let g=0;g<c;g++){const L=await e.readULE32(),S=await e.readULE32(),k=await e.readULE32(),E=await f();i.ccoefs.push({matrix:L,constraint:S,signal:k,value:E})}await Ce(e),await Ee(e,n,5),i.A=[];for(let g=0;g<i.nVars;g++){const L=await Ke(e,l,t);i.A[g]=L}await Ce(e),await Ee(e,n,6),i.B1=[];for(let g=0;g<i.nVars;g++){const L=await Ke(e,l,t);i.B1[g]=L}await Ce(e),await Ee(e,n,7),i.B2=[];for(let g=0;g<i.nVars;g++){const L=await qi(e,l,t);i.B2[g]=L}await Ce(e),await Ee(e,n,8),i.C=[];for(let g=i.nPublic+1;g<i.nVars;g++){const L=await Ke(e,l,t);i.C[g]=L}await Ce(e),await Ee(e,n,9),i.hExps=[];for(let g=0;g<i.domainSize;g++){const L=await Ke(e,l,t);i.hExps.push(L)}return await Ce(e),await e.close(),i;async function f(){const g=await zn(e,i.n8r);return o.mul(g,u)}}async function Kb(a,t,e){const n={delta:{}};n.deltaAfter=await Ke(a,t,e),n.delta.g1_s=await Ke(a,t,e),n.delta.g1_sx=await Ke(a,t,e),n.delta.g2_spx=await qi(a,t,e),n.transcript=await a.read(64),n.type=await a.readULE32();const i=await a.readULE32(),o=a.pos;let s=0;for(;a.pos-o<i;){const r=await a.read(1);if(r[0]<=s)throw new Error("Parameters in the contribution must be sorted");if(s=r[0],r[0]==1){const u=await a.read(1),l=await a.read(u[0]);n.name=new TextDecoder().decode(l)}else if(r[0]==2){const u=await a.read(1);n.numIterationsExp=u[0]}else if(r[0]==3){const u=await a.read(1);n.beaconHash=await a.read(u[0])}else throw new Error("Parameter not recognized")}if(a.pos!=o+i)throw new Error("Parameters do not match");return n}async function po(a,t,e){await Ee(a,e,10);const n={contributions:[]};n.csHash=await a.read(64);const i=await a.readULE32();for(let o=0;o<i;o++){const s=await Kb(a,t);n.contributions.push(s)}return await Ce(a),n}async function Nb(a,t,e){await so(a,t,e.deltaAfter),await so(a,t,e.delta.g1_s),await so(a,t,e.delta.g1_sx),await ds(a,t,e.delta.g2_spx),await a.write(e.transcript),await a.writeULE32(e.type||0);const n=[];if(e.name){n.push(1);const i=new TextEncoder("utf-8").encode(e.name.substring(0,64));n.push(i.byteLength);for(let o=0;o<i.byteLength;o++)n.push(i[o])}if(e.type==1){n.push(2),n.push(e.numIterationsExp),n.push(3),n.push(e.beaconHash.byteLength);for(let i=0;i<e.beaconHash.byteLength;i++)n.push(e.beaconHash[i])}if(n.length>0){const i=new Uint8Array(n);await a.writeULE32(i.byteLength),await a.write(i)}else await a.writeULE32(0)}async function Xl(a,t,e){await ge(a,10),await a.write(e.csHash),await a.writeULE32(e.contributions.length);for(let n=0;n<e.contributions.length;n++)await Nb(a,t,e.contributions[n]);await pe(a)}function Gn(a,t,e){const n=new Uint8Array(t.G1.F.n8*2);t.G1.toRprUncompressed(n,0,e),a.update(n)}function zb(a,t,e){const n=new Uint8Array(t.G2.F.n8*2);t.G2.toRprUncompressed(n,0,e),a.update(n)}function Ii(a,t,e){Gn(a,t,e.deltaAfter),Gn(a,t,e.delta.g1_s),Gn(a,t,e.delta.g1_sx),zb(a,t,e.delta.g2_spx),a.update(e.transcript)}async function Jb(a,t,e){await ge(a,1);const n=(Math.floor((oe.bitLength(e)-1)/64)+1)*8;await a.writeULE32(n),await Dn(a,e,n),await a.writeULE32(t.length),await pe(a),await ge(a,2);for(let i=0;i<t.length;i++)await Dn(a,t[i],n);await pe(a)}async function Yb(a,t,e){await ge(a,1);const n=(Math.floor((oe.bitLength(e)-1)/64)+1)*8;if(await a.writeULE32(n),await Dn(a,e,n),t.byteLength%n!=0)throw new Error("Invalid witness length");await a.writeULE32(t.byteLength/n),await pe(a),await ge(a,2),await a.write(t),await pe(a)}async function _a(a,t){await Ee(a,t,1);const e=await a.readULE32(),n=await zn(a,e),i=await a.readULE32();return await Ce(a),{n8:e,q:n,nWitness:i}}async function jb(a){const{fd:t,sections:e}=await Ie(a,"wtns",2),{n8:n,nWitness:i}=await _a(t,e);await Ee(t,e,2);const o=[];for(let s=0;s<i;s++){const r=await zn(t,n);o.push(r)}return await Ce(t),await t.close(),o}const{stringifyBigInts:If}=nn;async function d0(a,t,e,n){const{fd:i,sections:o}=await Ie(t,"wtns",2),s=await _a(i,o),{fd:r,sections:u}=await Ie(a,"zkey",2),l=await qn(r,u,void 0,n);if(l.protocol!="groth16")throw new Error("zkey file is not groth16");if(!oe.eq(l.r,s.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(s.nWitness!=l.nVars)throw new Error(`Invalid witness length. Circuit: ${l.nVars}, witness: ${s.nWitness}`);const c=l.curve,f=c.Fr,g=c.G1,L=c.G2,S=Bi(l.domainSize);e&&e.debug("Reading Wtns");const k=await ye(i,o,2);e&&e.debug("Reading Coeffs");const E=await ye(r,u,4);e&&e.debug("Building ABC");const[G,C,N]=await Vb(c,l,k,E,e),J=S==f.s?c.Fr.shift:c.Fr.w[S+1],j=await f.ifft(G,"","",e,"IFFT_A"),R=await f.batchApplyKey(j,f.e(1),J),b=await f.fft(R,"","",e,"FFT_A"),w=await f.ifft(C,"","",e,"IFFT_B"),Z=await f.batchApplyKey(w,f.e(1),J),P=await f.fft(Z,"","",e,"FFT_B"),V=await f.ifft(N,"","",e,"IFFT_C"),nt=await f.batchApplyKey(V,f.e(1),J),I=await f.fft(nt,"","",e,"FFT_C");e&&e.debug("Join ABC");const y=await Wb(c,l,b,P,I,e);let _={};e&&e.debug("Reading A Points");const T=await ye(r,u,5);_.pi_a=await c.G1.multiExpAffine(T,k,e,"multiexp A"),e&&e.debug("Reading B1 Points");const B=await ye(r,u,6);let Y=await c.G1.multiExpAffine(B,k,e,"multiexp B1");e&&e.debug("Reading B2 Points");const tt=await ye(r,u,7);_.pi_b=await c.G2.multiExpAffine(tt,k,e,"multiexp B2"),e&&e.debug("Reading C Points");const $=await ye(r,u,8);_.pi_c=await c.G1.multiExpAffine($,k.slice((l.nPublic+1)*c.Fr.n8),e,"multiexp C"),e&&e.debug("Reading H Points");const X=await ye(r,u,9),F=await c.G1.multiExpAffine(X,y,e,"multiexp H"),M=c.Fr.random(),W=c.Fr.random();_.pi_a=g.add(_.pi_a,l.vk_alpha_1),_.pi_a=g.add(_.pi_a,g.timesFr(l.vk_delta_1,M)),_.pi_b=L.add(_.pi_b,l.vk_beta_2),_.pi_b=L.add(_.pi_b,L.timesFr(l.vk_delta_2,W)),Y=g.add(Y,l.vk_beta_1),Y=g.add(Y,g.timesFr(l.vk_delta_1,W)),_.pi_c=g.add(_.pi_c,F),_.pi_c=g.add(_.pi_c,g.timesFr(_.pi_a,W)),_.pi_c=g.add(_.pi_c,g.timesFr(Y,M)),_.pi_c=g.add(_.pi_c,g.timesFr(l.vk_delta_1,f.neg(f.mul(M,W))));let A=[];for(let h=1;h<=l.nPublic;h++){const Q=k.slice(h*f.n8,h*f.n8+f.n8);A.push(oe.fromRprLE(Q))}return _.pi_a=g.toObject(g.toAffine(_.pi_a)),_.pi_b=L.toObject(L.toAffine(_.pi_b)),_.pi_c=g.toObject(g.toAffine(_.pi_c)),_.protocol="groth16",_.curve=c.name,await r.close(),await i.close(),_=If(_),A=If(A),{proof:_,publicSignals:A}}async function Vb(a,t,e,n,i){const o=a.Fr.n8,s=4*3+t.n8r,r=(n.byteLength-4)/s,u=new Ht(t.domainSize*o),l=new Ht(t.domainSize*o),c=new Ht(t.domainSize*o),f=[u,l];for(let g=0;g<r;g++){i&&g%1e6==0&&i.debug(`QAP AB: ${g}/${r}`);const L=n.slice(4+g*s,4+g*s+s),S=new DataView(L.buffer),k=S.getUint32(0,!0),E=S.getUint32(4,!0),G=S.getUint32(8,!0),C=L.slice(12,12+o);f[k].set(a.Fr.add(f[k].slice(E*o,E*o+o),a.Fr.mul(C,e.slice(G*o,G*o+o))),E*o)}for(let g=0;g<t.domainSize;g++)i&&g%1e6==0&&i.debug(`QAP C: ${g}/${t.domainSize}`),c.set(a.Fr.mul(u.slice(g*o,g*o+o),l.slice(g*o,g*o+o)),g*o);return[u,l,c]}async function Wb(a,t,e,n,i,o){const r=a.Fr.n8,u=Math.floor(e.byteLength/a.Fr.n8),l=[];for(let L=0;L<u;L+=4194304){o&&o.debug(`JoinABC: ${L}/${u}`);const S=Math.min(u-L,4194304),k=[],E=e.slice(L*r,(L+S)*r),G=n.slice(L*r,(L+S)*r),C=i.slice(L*r,(L+S)*r);k.push({cmd:"ALLOCSET",var:0,buff:E}),k.push({cmd:"ALLOCSET",var:1,buff:G}),k.push({cmd:"ALLOCSET",var:2,buff:C}),k.push({cmd:"ALLOC",var:3,len:S*r}),k.push({cmd:"CALL",fnName:"qap_joinABC",params:[{var:0},{var:1},{var:2},{val:S},{var:3}]}),k.push({cmd:"CALL",fnName:"frm_batchFromMontgomery",params:[{var:3},{val:S},{var:3}]}),k.push({cmd:"GET",out:0,var:3,len:S*r}),l.push(a.tm.queueAction(k))}const c=await Promise.all(l);let f;e instanceof Ht?f=new Ht(e.byteLength):f=new Uint8Array(e.byteLength);let g=0;for(let L=0;L<c.length;L++)f.set(c[L][0],g),g+=c[L][0].byteLength;return f}function f0(a){let t=[];return e(t,a),t;function e(n,i){if(Array.isArray(i))for(let o=0;o<i.length;o++)e(n,i[o]);else n.push(i)}}function Zb(a,t){let e=BigInt(a)%t;return e<0&&(e+=t),e}function h0(a){const t=BigInt(2)**BigInt(64);let e=BigInt("0xCBF29CE484222325");for(let o=0;o<a.length;o++)e^=BigInt(a[o].charCodeAt(0)),e*=BigInt(1099511628211),e%=t;let n=e.toString(16),i=16-n.length;return n="0".repeat(i).concat(n),n}function Xb(a,t){const e=[];let n=BigInt(a);const i=BigInt(4294967296);for(;n;)e.unshift(Number(n%i)),n=n/i;if(t){let o=t-e.length;for(;o>0;)e.unshift(0),o--}return e}async function g0(a,t){let e,n,i;t=t||{};let o=1,s=0,r=0,u=!1;if(a instanceof WebAssembly.Instance)e=a,u=!0;else{let g=32767;if(t.memorySize&&(g=parseInt(t.memorySize),g<0))throw new Error("Invalid memory size");let L=!1;for(;!L;)try{i=new WebAssembly.Memory({initial:g}),L=!0}catch(G){if(g<=1)throw G;console.warn("Could not allocate "+g*1024*64+" bytes. This may cause severe instability. Trying with "+g*1024*64/2+" bytes"),g=Math.floor(g/2)}const S=await WebAssembly.compile(a);let k="",E="";e=await WebAssembly.instantiate(S,{env:{memory:i},runtime:{printDebug:function(G){console.log("printDebug:",G)},exceptionHandler:function(G){let C;throw G===1?C="Signal not found. ":G===2?C="Too many signals set. ":G===3?C="Signal already set. ":G===4?C="Assert Failed. ":G===5?C="Not enough memory. ":G===6?C="Input signal array access exceeds the size. ":C="Unknown error. ",console.error("ERROR: ",G,k),new Error(C+k)},printErrorMessage:function(){k+=c()+`
`},writeBufferMessage:function(){const G=c();G===`
`?(console.log(E),E=""):(E!==""&&(E+=" "),E+=G)},showSharedRWMemory:function(){const G=e.exports.getFieldNumLen32(),C=new Uint32Array(G);for(let N=0;N<G;N++)C[G-1-N]=e.exports.readSharedRWMemory(N);if(o>=2&&(s>=1||r>=7)){E!==""&&(E+=" ");const N=oe.fromArray(C,4294967296).toString();E+=N}else console.log(oe.fromArray(C,4294967296))},error:function(G,C,N,J,j,R){let b;throw G===7?b=f(C)+" "+n.getFr(J).toString()+" != "+n.getFr(j).toString()+" "+f(R):G===9?b=f(C)+" "+n.getFr(J).toString()+" "+f(j):G===5&&t.sym?b=f(C)+" "+t.sym.labelIdx2Name[j]:b=f(C)+" "+N+" "+J+" "+j+" "+R,console.log("ERROR: ",G,b),new Error(b)},log:function(G){console.log(n.getFr(G).toString())},logGetSignal:function(G,C){t.logGetSignal&&t.logGetSignal(G,n.getFr(C))},logSetSignal:function(G,C){t.logSetSignal&&t.logSetSignal(G,n.getFr(C))},logStartComponent:function(G){t.logStartComponent&&t.logStartComponent(G)},logFinishComponent:function(G){t.logFinishComponent&&t.logFinishComponent(G)}}})}typeof e.exports.getVersion=="function"&&(o=e.exports.getVersion()),typeof e.exports.getMinorVersion=="function"&&(s=e.exports.getMinorVersion()),typeof e.exports.getPatchVersion=="function"&&(r=e.exports.getPatchVersion());const l=t&&(t.sanityCheck||t.logGetSignal||t.logSetSignal||t.logStartComponent||t.logFinishComponent);if(o===2)n=new ty(e,l);else if(o===1){if(u)throw new Error("Loading code from WebAssembly instance is not supported for circom version 1");n=new $b(i,e,l)}else throw new Error(`Unsupported circom version: ${o}`);return n;function c(){let g="",L=e.exports.getMessageChar();for(;L!==0;)g+=String.fromCharCode(L),L=e.exports.getMessageChar();return g}function f(g){const L=new Uint8Array(i.buffer),S=[];for(let k=0;L[g+k]>0;k++)S.push(L[g+k]);return String.fromCharCode.apply(null,S)}}class $b{constructor(t,e,n){this.memory=t,this.i32=new Uint32Array(t.buffer),this.instance=e,this.n32=(this.instance.exports.getFrLen()>>2)-2;const i=this.instance.exports.getPRawPrime(),o=new Array(this.n32);for(let s=0;s<this.n32;s++)o[this.n32-1-s]=this.i32[(i>>2)+s];this.prime=oe.fromArray(o,4294967296),this.Fr=new Kl(this.prime),this.mask32=oe.fromString("FFFFFFFF",16),this.NVars=this.instance.exports.getNVars(),this.n64=Math.floor((this.Fr.bitLength-1)/64)+1,this.R=this.Fr.e(oe.shiftLeft(1,this.n64*64)),this.RInv=this.Fr.inv(this.R),this.sanityCheck=n}circom_version(){return 1}async _doCalculateWitness(t,e){this.instance.exports.init(this.sanityCheck||e?1:0);const n=this.allocInt(),i=this.allocFr();Object.keys(t).forEach(s=>{const r=h0(s),u=parseInt(r.slice(0,8),16),l=parseInt(r.slice(8,16),16);try{this.instance.exports.getSignalOffset32(n,0,u,l)}catch{throw new Error(`Signal ${s} is not an input of the circuit.`)}const c=this.getInt(n),f=f0(t[s]);for(let g=0;g<f.length;g++)this.setFr(i,f[g]),this.instance.exports.setSignal(0,0,c+g,i)})}async calculateWitness(t,e){const n=this,i=n.i32[0],o=[];await n._doCalculateWitness(t,e);for(let s=0;s<n.NVars;s++){const r=n.instance.exports.getPWitness(s);o.push(n.getFr(r))}return n.i32[0]=i,o}async calculateBinWitness(t,e){const n=this,i=n.i32[0];await n._doCalculateWitness(t,e);const o=n.instance.exports.getWitnessBuffer();n.i32[0]=i;const s=n.memory.buffer.slice(o,o+n.NVars*n.n64*8);return new Uint8Array(s)}allocInt(){const t=this.i32[0];return this.i32[0]=t+8,t}allocFr(){const t=this.i32[0];return this.i32[0]=t+this.n32*4+8,t}getInt(t){return this.i32[t>>2]}setInt(t,e){this.i32[t>>2]=e}getFr(t){const e=this,n=t>>2;if(e.i32[n+1]&2147483648){const o=new Array(e.n32);for(let r=0;r<e.n32;r++)o[e.n32-1-r]=e.i32[n+2+r];const s=e.Fr.e(oe.fromArray(o,4294967296));return e.i32[n+1]&1073741824?i(s):s}else return e.i32[n]&2147483648?e.Fr.e(e.i32[n]-4294967296):e.Fr.e(e.i32[n]);function i(o){return e.Fr.mul(e.RInv,o)}}setFr(t,e){const n=this;e=n.Fr.e(e);const i=n.Fr.neg(n.Fr.e("80000000",16)),o=n.Fr.e("7FFFFFFF",16);if(n.Fr.geq(e,i)&&n.Fr.leq(e,o)){let r;n.Fr.geq(e,n.Fr.zero)?r=oe.toNumber(e):(r=oe.toNumber(n.Fr.sub(e,i)),r=r-2147483648,r=4294967296+r),n.i32[t>>2]=r,n.i32[(t>>2)+1]=0;return}n.i32[t>>2]=0,n.i32[(t>>2)+1]=2147483648;const s=oe.toArray(e,4294967296);for(let r=0;r<n.n32;r++){const u=s.length-1-r;u>=0?n.i32[(t>>2)+2+r]=s[u]:n.i32[(t>>2)+2+r]=0}}}class ty{constructor(t,e){this.instance=t,this.version=this.instance.exports.getVersion(),this.n32=this.instance.exports.getFieldNumLen32(),this.instance.exports.getRawPrime();const n=new Uint32Array(this.n32);for(let i=0;i<this.n32;i++)n[this.n32-1-i]=this.instance.exports.readSharedRWMemory(i);this.prime=oe.fromArray(n,4294967296),this.witnessSize=this.instance.exports.getWitnessSize(),this.sanityCheck=e}circom_version(){return this.instance.exports.getVersion()}async _doCalculateWitness(t,e){this.instance.exports.init(this.sanityCheck||e?1:0);const n=Object.keys(t);let i=0;if(n.forEach(o=>{const s=h0(o),r=parseInt(s.slice(0,8),16),u=parseInt(s.slice(8,16),16),l=f0(t[o]);if(typeof this.instance.exports.getInputSignalSize=="function"){let c=this.instance.exports.getInputSignalSize(r,u);if(c<0)throw new Error(`Signal ${o} not found
`);if(l.length<c)throw new Error(`Not enough values for input signal ${o}
`);if(l.length>c)throw new Error(`Too many values for input signal ${o}
`)}for(let c=0;c<l.length;c++){const f=Xb(Zb(l[c],this.prime),this.n32);for(let g=0;g<this.n32;g++)this.instance.exports.writeSharedRWMemory(g,f[this.n32-1-g]);try{this.instance.exports.setInputSignal(r,u,c),i++}catch(g){throw new Error(g)}}}),i<this.instance.exports.getInputSize())throw new Error(`Not all inputs have been set. Only ${i} out of ${this.instance.exports.getInputSize()}`)}async calculateWitness(t,e){const n=[];await this._doCalculateWitness(t,e);for(let i=0;i<this.witnessSize;i++){this.instance.exports.getWitness(i);const o=new Uint32Array(this.n32);for(let s=0;s<this.n32;s++)o[this.n32-1-s]=this.instance.exports.readSharedRWMemory(s);n.push(oe.fromArray(o,4294967296))}return n}async calculateWTNSBin(t,e){const n=new Uint32Array(this.witnessSize*this.n32+this.n32+11),i=new Uint8Array(n.buffer);await this._doCalculateWitness(t,e),i[0]=119,i[1]=116,i[2]=110,i[3]=115,n[1]=2,n[2]=2,n[3]=1;const o=this.n32*4,r=(8+o).toString(16);n[4]=parseInt(r.slice(0,8),16),n[5]=parseInt(r.slice(8,16),16),n[6]=o,this.instance.exports.getRawPrime();let u=7;for(let f=0;f<this.n32;f++)n[u+f]=this.instance.exports.readSharedRWMemory(f);u+=this.n32,n[u]=this.witnessSize,u++,n[u]=2,u++;const c=(o*this.witnessSize).toString(16);n[u]=parseInt(c.slice(0,8),16),n[u+1]=parseInt(c.slice(8,16),16),u+=2;for(let f=0;f<this.witnessSize;f++){this.instance.exports.getWitness(f);for(let g=0;g<this.n32;g++)n[u+g]=this.instance.exports.readSharedRWMemory(g);u+=this.n32}return i}}const{unstringifyBigInts:ey}=nn;async function Ws(a,t,e,n){const i=ey(a),o=await Ci(t),s=await o.read(o.totalSize);await o.close();const r=await g0(s,n);if(r.circom_version()===1){const u=await r.calculateBinWitness(i),l=await pn(e,"wtns",2,2);await Yb(l,u,r.prime),await l.close()}else{const u=await yo(e),l=await r.calculateWTNSBin(i);await u.write(l),await u.close()}}const{unstringifyBigInts:ny}=nn;async function iy(a,t,e,n,i,o){const s=ny(a),r={type:"mem"};return await Ws(s,t,r,i),await d0(e,r,n,o)}const{unstringifyBigInts:Nr}=nn;async function oy(a,t,e,n){const i=Nr(a),o=Nr(e),s=Nr(t),r=await Ji(i.curve),u=r.G1.fromObject(i.IC[0]),l=new Uint8Array(r.G1.F.n8*2*s.length),c=new Uint8Array(r.Fr.n8*s.length);if(!sy(r,s))return n&&n.error("Public inputs are not valid."),!1;for(let J=0;J<s.length;J++){const j=r.G1.fromObject(i.IC[J+1]);l.set(j,J*r.G1.F.n8*2),oe.toRprLE(c,r.Fr.n8*J,s[J],r.Fr.n8)}let f=await r.G1.multiExpAffine(l,c);f=r.G1.add(f,u);const g=r.G1.fromObject(o.pi_a),L=r.G2.fromObject(o.pi_b),S=r.G1.fromObject(o.pi_c);if(!ay(r,{pi_a:g,pi_b:L,pi_c:S}))return n&&n.error("Proof commitments are not valid."),!1;const k=r.G2.fromObject(i.vk_gamma_2),E=r.G2.fromObject(i.vk_delta_2),G=r.G1.fromObject(i.vk_alpha_1),C=r.G2.fromObject(i.vk_beta_2);return await r.pairingEq(r.G1.neg(g),L,f,k,S,E,G,C)?(n&&n.info("OK!"),!0):(n&&n.error("Invalid proof"),!1)}function ay(a,t){const e=a.G1,n=a.G2;return e.isValid(t.pi_a)&&n.isValid(t.pi_b)&&e.isValid(t.pi_c)}function sy(a,t){for(let e=0;e<t.length;e++)if(!oe.lt(t[e],a.r))return!1;return!0}const{unstringifyBigInts:Ef}=nn;function Zn(a){let t=a.toString(16);for(;t.length<64;)t="0"+t;return t=`"0x${t}"`,t}async function ry(a,t){const e=Ef(a),n=Ef(t);let i="";for(let s=0;s<n.length;s++)i!=""&&(i=i+","),i=i+Zn(n[s]);let o;return o=`[${Zn(e.pi_a[0])}, ${Zn(e.pi_a[1])}],[[${Zn(e.pi_b[0][1])}, ${Zn(e.pi_b[0][0])}],[${Zn(e.pi_b[1][1])}, ${Zn(e.pi_b[1][0])}]],[${Zn(e.pi_c[0])}, ${Zn(e.pi_c[1])}],[${i}]`,o}var cy=Object.freeze({__proto__:null,fullProve:iy,prove:d0,verify:oy,exportSolidityCallData:ry});function xa(a,t){const e=new DataView(t.buffer,t.byteOffset,t.byteLength),n=[];for(let s=0;s<8;s++)n[s]=e.getUint32(s*4);const i=new Qi(n);return a.G2.fromRng(i)}function fs(a,t,e,n,i){const o=ue.exports(64),s=new Uint8Array([t]);o.update(s),o.update(e);const r=a.G1.toUncompressed(n);o.update(r);const u=a.G1.toUncompressed(i);o.update(u);const l=o.digest();return xa(a,l)}function zr(a,t,e,n,i){return a.g1_s=t.G1.toAffine(t.G1.fromRng(i)),a.g1_sx=t.G1.toAffine(t.G1.timesFr(a.g1_s,a.prvKey)),a.g2_sp=t.G2.toAffine(fs(t,e,n,a.g1_s,a.g1_sx)),a.g2_spx=t.G2.toAffine(t.G2.timesFr(a.g2_sp,a.prvKey)),a}function $l(a,t,e){const n={tau:{},alpha:{},beta:{}};return n.tau.prvKey=a.Fr.fromRng(e),n.alpha.prvKey=a.Fr.fromRng(e),n.beta.prvKey=a.Fr.fromRng(e),zr(n.tau,a,0,t,e),zr(n.alpha,a,1,t,e),zr(n.beta,a,2,t,e),n}async function Yi(a,t,e,n){n||(n=e),await a.writeULE32(1);const i=a.pos;await a.writeULE64(0),await a.writeULE32(t.F1.n64*8);const o=new Uint8Array(t.F1.n8);oe.toRprLE(o,0,t.q,t.F1.n8),await a.write(o),await a.writeULE32(e),await a.writeULE32(n);const s=a.pos-i-8,r=a.pos;await a.writeULE64(s,i),a.pos=r}async function kn(a,t){if(!t[1])throw new Error(a.fileName+": File has no  header");if(t[1].length>1)throw new Error(a.fileName+": File has more than one header");a.pos=t[1][0].p;const e=await a.readULE32(),n=await a.read(e),i=oe.fromRprLE(n),o=await Ln(i);if(o.F1.n64*8!=e)throw new Error(a.fileName+": Invalid size");const s=await a.readULE32(),r=await a.readULE32();if(a.pos-t[1][0].p!=t[1][0].size)throw new Error("Invalid PTau header size");return{curve:o,power:s,ceremonyPower:r}}async function ly(a,t,e){const n=await a.read(t.F1.n8*2*6+t.F2.n8*2*3);return p0(n,0,t,e)}function p0(a,t,e,n){const i={tau:{},alpha:{},beta:{}};return i.tau.g1_s=o(),i.tau.g1_sx=o(),i.alpha.g1_s=o(),i.alpha.g1_sx=o(),i.beta.g1_s=o(),i.beta.g1_sx=o(),i.tau.g2_spx=s(),i.alpha.g2_spx=s(),i.beta.g2_spx=s(),i;function o(){let r;return n?r=e.G1.fromRprLEM(a,t):r=e.G1.fromRprUncompressed(a,t),t+=e.G1.F.n8*2,r}function s(){let r;return n?r=e.G2.fromRprLEM(a,t):r=e.G2.fromRprUncompressed(a,t),t+=e.G2.F.n8*2,r}}function Ao(a,t,e,n,i){o(n.tau.g1_s),o(n.tau.g1_sx),o(n.alpha.g1_s),o(n.alpha.g1_sx),o(n.beta.g1_s),o(n.beta.g1_sx),s(n.tau.g2_spx),s(n.alpha.g2_spx),s(n.beta.g2_spx);async function o(r){i?e.G1.toRprLEM(a,t,r):e.G1.toRprUncompressed(a,t,r),t+=e.F1.n8*2}async function s(r){i?e.G2.toRprLEM(a,t,r):e.G2.toRprUncompressed(a,t,r),t+=e.F2.n8*2}return a}async function uy(a,t,e,n){const i=new Uint8Array(t.F1.n8*2*6+t.F2.n8*2*3);Ao(i,0,t,e,n),await a.write(i)}async function dy(a,t){const e={};e.tauG1=await u(),e.tauG2=await l(),e.alphaG1=await u(),e.betaG1=await u(),e.betaG2=await l(),e.key=await ly(a,t,!0),e.partialHash=await a.read(216),e.nextChallenge=await a.read(64),e.type=await a.readULE32();const n=new Uint8Array(t.G1.F.n8*2*6+t.G2.F.n8*2*3);Ao(n,0,t,e.key,!1);const i=ue.exports(64);i.setPartialHash(e.partialHash),i.update(n),e.responseHash=i.digest();const o=await a.readULE32(),s=a.pos;let r=0;for(;a.pos-s<o;){const f=await c(1);if(f[0]<=r)throw new Error("Parameters in the contribution must be sorted");if(r=f[0],f[0]==1){const g=await c(1),L=await c(g[0]);e.name=new TextDecoder().decode(L)}else if(f[0]==2){const g=await c(1);e.numIterationsExp=g[0]}else if(f[0]==3){const g=await c(1);e.beaconHash=await c(g[0])}else throw new Error("Parameter not recognized")}if(a.pos!=s+o)throw new Error("Parameters do not match");return e;async function u(){const f=await a.read(t.G1.F.n8*2);return t.G1.fromRprLEM(f)}async function l(){const f=await a.read(t.G2.F.n8*2);return t.G2.fromRprLEM(f)}async function c(f){const g=await a.read(f);return new Uint8Array(g)}}async function Io(a,t,e){if(!e[7])throw new Error(a.fileName+": File has no  contributions");if(e[7][0].length>1)throw new Error(a.fileName+": File has more than one contributions section");a.pos=e[7][0].p;const n=await a.readULE32(),i=[];for(let o=0;o<n;o++){const s=await dy(a,t);s.id=o+1,i.push(s)}if(a.pos-e[7][0].p!=e[7][0].size)throw new Error("Invalid contribution section size");return i}async function fy(a,t,e){const n=new Uint8Array(t.F1.n8*2),i=new Uint8Array(t.F2.n8*2);await s(e.tauG1),await r(e.tauG2),await s(e.alphaG1),await s(e.betaG1),await r(e.betaG2),await uy(a,t,e.key,!0),await a.write(e.partialHash),await a.write(e.nextChallenge),await a.writeULE32(e.type||0);const o=[];if(e.name){o.push(1);const u=new TextEncoder("utf-8").encode(e.name.substring(0,64));o.push(u.byteLength);for(let l=0;l<u.byteLength;l++)o.push(u[l])}if(e.type==1){o.push(2),o.push(e.numIterationsExp),o.push(3),o.push(e.beaconHash.byteLength);for(let u=0;u<e.beaconHash.byteLength;u++)o.push(e.beaconHash[u])}if(o.length>0){const u=new Uint8Array(o);await a.writeULE32(u.byteLength),await a.write(u)}else await a.writeULE32(0);async function s(u){t.G1.toRprLEM(n,0,u),await a.write(n)}async function r(u){t.G2.toRprLEM(i,0,u),await a.write(i)}}async function tu(a,t,e){await a.writeULE32(7);const n=a.pos;await a.writeULE64(0),await a.writeULE32(e.length);for(let s=0;s<e.length;s++)await fy(a,t,e[s]);const i=a.pos-n-8,o=a.pos;await a.writeULE64(i,n),a.pos=o}function Eo(a,t,e){e&&e.debug("Calculating First Challenge Hash");const n=new ue.exports(64),i=new Uint8Array(a.G1.F.n8*2),o=new Uint8Array(a.G2.F.n8*2);a.G1.toRprUncompressed(i,0,a.G1.g),a.G2.toRprUncompressed(o,0,a.G2.g),n.update(ue.exports(64).digest());let s;return s=2**t*2-1,e&&e.debug("Calculate Initial Hash: tauG1"),r(i,s),s=2**t,e&&e.debug("Calculate Initial Hash: tauG2"),r(o,s),e&&e.debug("Calculate Initial Hash: alphaTauG1"),r(i,s),e&&e.debug("Calculate Initial Hash: betaTauG1"),r(i,s),n.update(o),n.digest();function r(u,l){const f=Math.floor(l/341e3),g=l%341e3,L=new Uint8Array(341e3*u.byteLength);for(let S=0;S<341e3;S++)L.set(u,S*u.byteLength);for(let S=0;S<f;S++)n.update(L),e&&e.debug("Initial hash: "+S*341e3);for(let S=0;S<g;S++)n.update(u)}}async function L0(a,t,e,n){const i=await Wl(e,n);return $l(a,t,i)}async function hy(a,t,e,n){await ue.exports.ready();const i=await pn(e,"ptau",1,7);await Yi(i,a,t,0);const o=a.G1.oneAffine,s=a.G2.oneAffine;await ge(i,2);const r=2**t*2-1;for(let g=0;g<r;g++)await i.write(o),n&&g%1e5==0&&g&&n.log("tauG1: "+g);await pe(i),await ge(i,3);const u=2**t;for(let g=0;g<u;g++)await i.write(s),n&&g%1e5==0&&g&&n.log("tauG2: "+g);await pe(i),await ge(i,4);const l=2**t;for(let g=0;g<l;g++)await i.write(o),n&&g%1e5==0&&g&&n.log("alphaTauG1: "+g);await pe(i),await ge(i,5);const c=2**t;for(let g=0;g<c;g++)await i.write(o),n&&g%1e5==0&&g&&n.log("betaTauG1: "+g);await pe(i),await ge(i,6),await i.write(s),await pe(i),await ge(i,7),await i.writeULE32(0),await pe(i),await i.close();const f=Eo(a,t,n);return n&&n.debug(xe(ue.exports(64).digest(),"Blank Contribution Hash:")),n&&n.info(xe(f,"First Contribution Hash:")),f}async function gy(a,t,e){await ue.exports.ready();const{fd:n,sections:i}=await Ie(a,"ptau",1),{curve:o,power:s}=await kn(n,i),r=await Io(n,o,i);let u,l;r.length==0?(u=ue.exports(64).digest(),l=Eo(o,s)):(u=r[r.length-1].responseHash,l=r[r.length-1].nextChallenge),e&&e.info(xe(u,"Last Response Hash: ")),e&&e.info(xe(l,"New Challenge Hash: "));const c=await yo(t),f=ue.exports(64);await c.write(u),f.update(u),await L(2,"G1",2**s*2-1,"tauG1"),await L(3,"G2",2**s,"tauG2"),await L(4,"G1",2**s,"alphaTauG1"),await L(5,"G1",2**s,"betaTauG1"),await L(6,"G2",1,"betaG2"),await n.close(),await c.close();const g=f.digest();if(!Ai(l,g))throw e&&e.info(xe(g,"Calc Curret Challenge Hash: ")),e&&e.error("PTau file is corrupted. Calculated new challenge hash does not match with the eclared one"),new Error("PTau file is corrupted. Calculated new challenge hash does not match with the eclared one");return l;async function L(S,k,E,G){const C=o[k],N=C.F.n8*2,J=Math.floor((1<<24)/N);await Ee(n,i,S);for(let j=0;j<E;j+=J){e&&e.debug(`Exporting ${G}: ${j}/${E}`);const R=Math.min(E-j,J);let b;b=await n.read(R*N),b=await C.batchLEMtoU(b),await c.write(b),f.update(b)}await Ce(n)}}async function py(a,t,e,n,i,o){await ue.exports.ready();const s=new Uint8Array(64);for(let y=0;y<64;y++)s[y]=255;const{fd:r,sections:u}=await Ie(a,"ptau",1),{curve:l,power:c}=await kn(r,u),f=await Io(r,l,u),g={};n&&(g.name=n);const L=l.F1.n8*2,S=l.F1.n8,k=l.F2.n8*2,E=l.F2.n8,G=await Ci(t);if(G.totalSize!=64+(2**c*2-1)*S+2**c*E+2**c*S+2**c*S+E+L*6+k*3)throw new Error("Size of the contribution is invalid");let C;f.length>0?C=f[f.length-1].nextChallenge:C=Eo(l,c,o);const N=await pn(e,"ptau",1,i?7:2);await Yi(N,l,c);const J=await G.read(64);if(Ai(s,C)&&(C=J,f[f.length-1].nextChallenge=C),!Ai(J,C))throw new Error("Wrong contribution. This contribution is not based on the previous hash");const j=new ue.exports(64);j.update(J);const R=[];let b;b=await P(G,N,"G1",2,2**c*2-1,[1],"tauG1"),g.tauG1=b[0],b=await P(G,N,"G2",3,2**c,[1],"tauG2"),g.tauG2=b[0],b=await P(G,N,"G1",4,2**c,[0],"alphaG1"),g.alphaG1=b[0],b=await P(G,N,"G1",5,2**c,[0],"betaG1"),g.betaG1=b[0],b=await P(G,N,"G2",6,1,[0],"betaG2"),g.betaG2=b[0],g.partialHash=j.getPartialHash();const w=await G.read(l.F1.n8*2*6+l.F2.n8*2*3);g.key=p0(w,0,l,!1),j.update(new Uint8Array(w));const Z=j.digest();if(o&&o.info(xe(Z,"Contribution Response Hash imported: ")),i){const y=new ue.exports(64);y.update(Z),await I(y,N,"G1",2,2**c*2-1,"tauG1",o),await I(y,N,"G2",3,2**c,"tauG2",o),await I(y,N,"G1",4,2**c,"alphaTauG1",o),await I(y,N,"G1",5,2**c,"betaTauG1",o),await I(y,N,"G2",6,1,"betaG2",o),g.nextChallenge=y.digest(),o&&o.info(xe(g.nextChallenge,"Next Challenge Hash: "))}else g.nextChallenge=s;return f.push(g),await tu(N,l,f),await G.close(),await N.close(),await r.close(),g.nextChallenge;async function P(y,_,T,B,Y,tt,$){return i?await V(y,_,T,B,Y,tt,$):await nt(y,_,T,B,Y,tt,$)}async function V(y,_,T,B,Y,tt,$){const X=l[T],F=X.F.n8,M=X.F.n8*2,W=[];await ge(_,B);const A=Math.floor((1<<24)/M);R[B]=_.pos;for(let h=0;h<Y;h+=A){o&&o.debug(`Importing ${$}: ${h}/${Y}`);const Q=Math.min(Y-h,A),p=await y.read(Q*F);j.update(p);const d=await X.batchCtoLEM(p);await _.write(d);for(let m=0;m<tt.length;m++){const v=tt[m];if(v>=h&&v<h+Q){const et=X.fromRprLEM(d,(v-h)*M);W.push(et)}}}return await pe(_),W}async function nt(y,_,T,B,Y,tt,$){const X=l[T],F=X.F.n8,M=[],W=Math.floor((1<<24)/F);for(let A=0;A<Y;A+=W){o&&o.debug(`Importing ${$}: ${A}/${Y}`);const h=Math.min(Y-A,W),Q=await y.read(h*F);j.update(Q);for(let p=0;p<tt.length;p++){const d=tt[p];if(d>=A&&d<A+h){const m=X.fromRprCompressed(Q,(d-A)*F);M.push(m)}}}return M}async function I(y,_,T,B,Y,tt,$){const X=l[T],F=X.F.n8*2,M=Math.floor((1<<24)/F),W=_.pos;_.pos=R[B];for(let A=0;A<Y;A+=M){$&&$.debug(`Hashing ${tt}: ${A}/${Y}`);const h=Math.min(Y-A,M),Q=await _.read(h*F),p=await X.batchLEMtoU(Q);y.update(p)}_.pos=W}}const Fn=c0;async function Cf(a,t,e,n){let i;if(t.type==1){const o=await L0(a,e.nextChallenge,t.beaconHash,t.numIterationsExp);if(!a.G1.eq(t.key.tau.g1_s,o.tau.g1_s))return n&&n.error(`BEACON key (tauG1_s) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G1.eq(t.key.tau.g1_sx,o.tau.g1_sx))return n&&n.error(`BEACON key (tauG1_sx) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G2.eq(t.key.tau.g2_spx,o.tau.g2_spx))return n&&n.error(`BEACON key (tauG2_spx) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G1.eq(t.key.alpha.g1_s,o.alpha.g1_s))return n&&n.error(`BEACON key (alphaG1_s) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G1.eq(t.key.alpha.g1_sx,o.alpha.g1_sx))return n&&n.error(`BEACON key (alphaG1_sx) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G2.eq(t.key.alpha.g2_spx,o.alpha.g2_spx))return n&&n.error(`BEACON key (alphaG2_spx) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G1.eq(t.key.beta.g1_s,o.beta.g1_s))return n&&n.error(`BEACON key (betaG1_s) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G1.eq(t.key.beta.g1_sx,o.beta.g1_sx))return n&&n.error(`BEACON key (betaG1_sx) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1;if(!a.G2.eq(t.key.beta.g2_spx,o.beta.g2_spx))return n&&n.error(`BEACON key (betaG2_spx) is not generated correctly in challenge #${t.id}  ${t.name||""}`),!1}return t.key.tau.g2_sp=a.G2.toAffine(fs(a,0,e.nextChallenge,t.key.tau.g1_s,t.key.tau.g1_sx)),t.key.alpha.g2_sp=a.G2.toAffine(fs(a,1,e.nextChallenge,t.key.alpha.g1_s,t.key.alpha.g1_sx)),t.key.beta.g2_sp=a.G2.toAffine(fs(a,2,e.nextChallenge,t.key.beta.g1_s,t.key.beta.g1_sx)),i=await Fn(a,t.key.tau.g1_s,t.key.tau.g1_sx,t.key.tau.g2_sp,t.key.tau.g2_spx),i!==!0?(n&&n.error("INVALID key (tau) in challenge #"+t.id),!1):(i=await Fn(a,t.key.alpha.g1_s,t.key.alpha.g1_sx,t.key.alpha.g2_sp,t.key.alpha.g2_spx),i!==!0?(n&&n.error("INVALID key (alpha) in challenge #"+t.id),!1):(i=await Fn(a,t.key.beta.g1_s,t.key.beta.g1_sx,t.key.beta.g2_sp,t.key.beta.g2_spx),i!==!0?(n&&n.error("INVALID key (beta) in challenge #"+t.id),!1):(i=await Fn(a,e.tauG1,t.tauG1,t.key.tau.g2_sp,t.key.tau.g2_spx),i!==!0?(n&&n.error("INVALID tau*G1. challenge #"+t.id+" It does not follow the previous contribution"),!1):(i=await Fn(a,t.key.tau.g1_s,t.key.tau.g1_sx,e.tauG2,t.tauG2),i!==!0?(n&&n.error("INVALID tau*G2. challenge #"+t.id+" It does not follow the previous contribution"),!1):(i=await Fn(a,e.alphaG1,t.alphaG1,t.key.alpha.g2_sp,t.key.alpha.g2_spx),i!==!0?(n&&n.error("INVALID alpha*G1. challenge #"+t.id+" It does not follow the previous contribution"),!1):(i=await Fn(a,e.betaG1,t.betaG1,t.key.beta.g2_sp,t.key.beta.g2_spx),i!==!0?(n&&n.error("INVALID beta*G1. challenge #"+t.id+" It does not follow the previous contribution"),!1):(i=await Fn(a,t.key.beta.g1_s,t.key.beta.g1_sx,e.betaG2,t.betaG2),i!==!0?(n&&n.error("INVALID beta*G2. challenge #"+t.id+"It does not follow the previous contribution"),!1):(n&&n.info("Powers Of tau file OK!"),!0))))))))}async function Ly(a,t){let e;await ue.exports.ready();const{fd:n,sections:i}=await Ie(a,"ptau",1),{curve:o,power:s,ceremonyPower:r}=await kn(n,i),u=await Io(n,o,i);t&&t.debug("power: 2**"+s),t&&t.debug("Computing initial contribution hash");const l={tauG1:o.G1.g,tauG2:o.G2.g,alphaG1:o.G1.g,betaG1:o.G1.g,betaG2:o.G2.g,nextChallenge:Eo(o,r,t),responseHash:ue.exports(64).digest()};if(u.length==0)return t&&t.error("This file has no contribution! It cannot be used in production"),!1;let c;u.length>1?c=u[u.length-2]:c=l;const f=u[u.length-1];if(t&&t.debug("Validating contribution #"+u[u.length-1].id),!await Cf(o,f,c,t))return!1;const L=ue.exports(64);L.update(f.responseHash),t&&t.debug("Verifying powers in tau*G1 section");const S=await R(2,"G1","tauG1",2**s*2-1,[0,1],t);if(e=await Fn(o,S.R1,S.R2,o.G2.g,f.tauG2),e!==!0)return t&&t.error("tauG1 section. Powers do not match"),!1;if(!o.G1.eq(o.G1.g,S.singularPoints[0]))return t&&t.error("First element of tau*G1 section must be the generator"),!1;if(!o.G1.eq(f.tauG1,S.singularPoints[1]))return t&&t.error("Second element of tau*G1 section does not match the one in the contribution section"),!1;t&&t.debug("Verifying powers in tau*G2 section");const k=await R(3,"G2","tauG2",2**s,[0,1],t);if(e=await Fn(o,o.G1.g,f.tauG1,k.R1,k.R2),e!==!0)return t&&t.error("tauG2 section. Powers do not match"),!1;if(!o.G2.eq(o.G2.g,k.singularPoints[0]))return t&&t.error("First element of tau*G2 section must be the generator"),!1;if(!o.G2.eq(f.tauG2,k.singularPoints[1]))return t&&t.error("Second element of tau*G2 section does not match the one in the contribution section"),!1;t&&t.debug("Verifying powers in alpha*tau*G1 section");const E=await R(4,"G1","alphatauG1",2**s,[0],t);if(e=await Fn(o,E.R1,E.R2,o.G2.g,f.tauG2),e!==!0)return t&&t.error("alphaTauG1 section. Powers do not match"),!1;if(!o.G1.eq(f.alphaG1,E.singularPoints[0]))return t&&t.error("First element of alpha*tau*G1 section (alpha*G1) does not match the one in the contribution section"),!1;t&&t.debug("Verifying powers in beta*tau*G1 section");const G=await R(5,"G1","betatauG1",2**s,[0],t);if(e=await Fn(o,G.R1,G.R2,o.G2.g,f.tauG2),e!==!0)return t&&t.error("betaTauG1 section. Powers do not match"),!1;if(!o.G1.eq(f.betaG1,G.singularPoints[0]))return t&&t.error("First element of beta*tau*G1 section (beta*G1) does not match the one in the contribution section"),!1;const C=await j(t);if(!o.G2.eq(f.betaG2,C))return t&&t.error("betaG2 element in betaG2 section does not match the one in the contribution section"),!1;const N=L.digest();if(s==r&&!Ai(N,f.nextChallenge))return t&&t.error("Hash of the values does not match the next challenge of the last contributor in the contributions section"),!1;t&&t.info(xe(N,"Next challenge hash: ")),J(f,c);for(let w=u.length-2;w>=0;w--){const Z=u[w],P=w>0?u[w-1]:l;if(!await Cf(o,Z,P,t))return!1;J(Z,P)}if(t&&t.info("-----------------------------------------------------"),!i[12]||!i[13]||!i[14]||!i[15])t&&t.warn(`this file does not contain phase2 precalculated values. Please run: 
   snarkjs "powersoftau preparephase2" to prepare this file to be used in the phase2 ceremony.`);else{let w;if(w=await b("G1",2,12,"tauG1",t),!w||(w=await b("G2",3,13,"tauG2",t),!w)||(w=await b("G1",4,14,"alphaTauG1",t),!w)||(w=await b("G1",5,15,"betaTauG1",t),!w))return!1}return await n.close(),t&&t.info("Powers of Tau Ok!"),!0;function J(w,Z){if(!t)return;t.info("-----------------------------------------------------"),t.info(`Contribution #${w.id}: ${w.name||""}`),t.info(xe(w.nextChallenge,"Next Challenge: "));const P=new Uint8Array(o.G1.F.n8*2*6+o.G2.F.n8*2*3);Ao(P,0,o,w.key,!1);const V=ue.exports(64);V.setPartialHash(w.partialHash),V.update(P);const nt=V.digest();t.info(xe(nt,"Response Hash:")),t.info(xe(Z.nextChallenge,"Response Hash:")),w.type==1&&(t.info(`Beacon generator: ${u0(w.beaconHash)}`),t.info(`Beacon iterations Exp: ${w.numIterationsExp}`))}async function j(w){const Z=o.G2,P=Z.F.n8*2,V=new Uint8Array(P);if(!i[6])throw w.error("File has no BetaG2 section"),new Error("File has no BetaG2 section");if(i[6].length>1)throw w.error("File has no BetaG2 section"),new Error("File has more than one GetaG2 section");n.pos=i[6][0].p;const nt=await n.read(P),I=Z.fromRprLEM(nt);return Z.toRprUncompressed(V,0,I),L.update(V),I}async function R(w,Z,P,V,nt,I){const _=o[Z],T=_.F.n8*2;await Ee(n,i,w);const B=[];let Y=_.zero,tt=_.zero,$=_.zero;for(let X=0;X<V;X+=65536){I&&I.debug(`points relations: ${P}: ${X}/${V} `);const F=Math.min(V-X,65536),M=await n.read(F*T),W=await _.batchLEMtoU(M);L.update(W);const A=ao(4*(F-1));if(X>0){const p=_.fromRprLEM(M,0),d=vs(ao(4),0);Y=_.add(Y,_.timesScalar($,d)),tt=_.add(tt,_.timesScalar(p,d))}const h=await _.multiExpAffine(M.slice(0,(F-1)*T),A),Q=await _.multiExpAffine(M.slice(T),A);Y=_.add(Y,h),tt=_.add(tt,Q),$=_.fromRprLEM(M,(F-1)*T);for(let p=0;p<nt.length;p++){const d=nt[p];if(d>=X&&d<X+F){const m=_.fromRprLEM(M,(d-X)*T);B.push(m)}}}return await Ce(n),{R1:Y,R2:tt,singularPoints:B}}async function b(w,Z,P,V,nt){nt&&nt.debug(`Verifying phase2 calculated values ${V}...`);const I=o[w],y=I.F.n8*2,_=new Array(8);for(let B=0;B<8;B++)_[B]=vs(ao(4),0);for(let B=0;B<=s;B++)if(!await T(B))return!1;if(Z==2&&!await T(s+1))return!1;return!0;async function T(B){nt&&nt.debug(`Power ${B}...`);const Y=o.Fr.n8,tt=2**B;let $=new Uint32Array(tt),X,F=new Qi(_);nt&&nt.debug(`Creating random numbers Powers${B}...`);for(let Q=0;Q<tt;Q++)B==s+1&&Q==tt-1?$[Q]=0:$[Q]=F.nextU32();$=new Uint8Array($.buffer,$.byteOffset,$.byteLength),nt&&nt.debug(`reading points Powers${B}...`),await Ee(n,i,Z),X=new Ht(tt*y),B==s+1?(await n.readToBuffer(X,0,(tt-1)*y),X.set(o.G1.zeroAffine,(tt-1)*y)):await n.readToBuffer(X,0,tt*y),await Ce(n,!0);const M=await I.multiExpAffine(X,$,nt,V+"_"+B);$=new Ht(tt*Y),F=new Qi(_);const W=new Uint8Array(4),A=new DataView(W.buffer);nt&&nt.debug(`Creating random numbers Powers${B}...`);for(let Q=0;Q<tt;Q++)(Q!=tt-1||B!=s+1)&&(A.setUint32(0,F.nextU32(),!0),$.set(W,Q*Y));nt&&nt.debug(`batchToMontgomery ${B}...`),$=await o.Fr.batchToMontgomery($),nt&&nt.debug(`fft ${B}...`),$=await o.Fr.fft($),nt&&nt.debug(`batchFromMontgomery ${B}...`),$=await o.Fr.batchFromMontgomery($),nt&&nt.debug(`reading points Lagrange${B}...`),await Ee(n,i,P),n.pos+=y*(2**B-1),await n.readToBuffer(X,0,tt*y),await Ce(n,!0);const h=await I.multiExpAffine(X,$,nt,V+"_"+B+"_transformed");return I.eq(M,h)?!0:(nt&&nt.error("Phase2 caclutation does not match with powers of tau"),!1)}}}async function xs(a,t,e,n,i,o,s,r,u,l){const f=i[o],g=f.F.n8*2,L=t[n][0].size/g;await Ee(a,t,n),await ge(e,n);let S=s;for(let k=0;k<L;k+=65536){l&&l.debug(`Applying key: ${u}: ${k}/${L}`);const E=Math.min(L-k,65536);let G;G=await a.read(E*g),G=await f.batchApplyKey(G,S,r),await e.write(G),S=i.Fr.mul(S,i.Fr.exp(r,E))}await pe(e),await Ce(a)}async function Gi(a,t,e,n,i,o,s,r,u,l,c){const f=n[i],g=f.F.n8*2,L=Math.floor((1<<20)/g);let S=s;for(let k=0;k<o;k+=L){c&&c.debug(`Applying key ${l}: ${k}/${o}`);const E=Math.min(o-k,L),G=await a.read(E*g),C=await f.batchUtoLEM(G),N=await f.batchApplyKey(C,S,r);let J;u=="COMPRESSED"?J=await f.batchLEMtoC(N):J=await f.batchLEMtoU(N),e&&e.update(J),await t.write(J),S=n.Fr.mul(S,n.Fr.exp(r,E))}}async function wy(a,t,e,n,i){await ue.exports.ready();const o=await Ci(t),s=a.F1.n64*8*2,r=a.F2.n64*8*2,u=(o.totalSize+s-64-r)/(4*s+r);let l=u,c=0;for(;l>1;)l=l/2,c+=1;if(2**c!=u)throw new Error("Invalid file size");i&&i.debug("Power to tau size: "+c);const f=await Vs(n),g=await yo(e),L=ue.exports(64);for(let J=0;J<o.totalSize;J+=o.pageSize){i&&i.debug(`Hashing challenge ${J}/${o.totalSize}`);const j=Math.min(o.totalSize-J,o.pageSize),R=await o.read(j);L.update(R)}const S=await o.read(64,0);i&&i.info(xe(S,"Claimed Previous Response Hash: "));const k=L.digest();i&&i.info(xe(k,"Current Challenge Hash: "));const E=$l(a,k,f);i&&["tau","alpha","beta"].forEach(J=>{i.debug(J+".g1_s: "+a.G1.toString(E[J].g1_s,16)),i.debug(J+".g1_sx: "+a.G1.toString(E[J].g1_sx,16)),i.debug(J+".g2_sp: "+a.G2.toString(E[J].g2_sp,16)),i.debug(J+".g2_spx: "+a.G2.toString(E[J].g2_spx,16)),i.debug("")});const G=ue.exports(64);await g.write(k),G.update(k),await Gi(o,g,G,a,"G1",2**c*2-1,a.Fr.one,E.tau.prvKey,"COMPRESSED","tauG1",i),await Gi(o,g,G,a,"G2",2**c,a.Fr.one,E.tau.prvKey,"COMPRESSED","tauG2",i),await Gi(o,g,G,a,"G1",2**c,E.alpha.prvKey,E.tau.prvKey,"COMPRESSED","alphaTauG1",i),await Gi(o,g,G,a,"G1",2**c,E.beta.prvKey,E.tau.prvKey,"COMPRESSED","betaTauG1",i),await Gi(o,g,G,a,"G2",1,E.beta.prvKey,E.tau.prvKey,"COMPRESSED","betaTauG2",i);const C=new Uint8Array(a.F1.n8*2*6+a.F2.n8*2*3);Ao(C,0,a,E,!1),await g.write(C),G.update(C);const N=G.digest();i&&i.info(xe(N,"Contribution Response Hash: ")),await g.close(),await o.close()}async function my(a,t,e,n,i,o){const s=l0(n);if(s.byteLength==0||s.byteLength*2!=n.length)return o&&o.error("Invalid Beacon Hash. (It must be a valid hexadecimal sequence)"),!1;if(s.length>=256)return o&&o.error("Maximum length of beacon hash is 255 bytes"),!1;if(i=parseInt(i),i<10||i>63)return o&&o.error("Invalid numIterationsExp. (Must be between 10 and 63)"),!1;await ue.exports.ready();const{fd:r,sections:u}=await Ie(a,"ptau",1),{curve:l,power:c,ceremonyPower:f}=await kn(r,u);if(c!=f)return o&&o.error("This file has been reduced. You cannot contribute into a reduced file."),!1;u[12]&&o&&o.warn("Contributing into a file that has phase2 calculated. You will have to prepare phase2 again.");const g=await Io(r,l,u),L={name:e,type:1,numIterationsExp:i,beaconHash:s};let S;g.length>0?S=g[g.length-1].nextChallenge:S=Eo(l,c,o),L.key=await L0(l,S,s,i);const k=new ue.exports(64);k.update(S);const E=await pn(t,"ptau",1,7);await Yi(E,l,c);const G=[];let C;C=await R(2,"G1",2**c*2-1,l.Fr.e(1),L.key.tau.prvKey,"tauG1",o),L.tauG1=C[1],C=await R(3,"G2",2**c,l.Fr.e(1),L.key.tau.prvKey,"tauG2",o),L.tauG2=C[1],C=await R(4,"G1",2**c,L.key.alpha.prvKey,L.key.tau.prvKey,"alphaTauG1",o),L.alphaG1=C[0],C=await R(5,"G1",2**c,L.key.beta.prvKey,L.key.tau.prvKey,"betaTauG1",o),L.betaG1=C[0],C=await R(6,"G2",1,L.key.beta.prvKey,L.key.tau.prvKey,"betaTauG2",o),L.betaG2=C[0],L.partialHash=k.getPartialHash();const N=new Uint8Array(l.F1.n8*2*6+l.F2.n8*2*3);Ao(N,0,l,L.key,!1),k.update(new Uint8Array(N));const J=k.digest();o&&o.info(xe(J,"Contribution Response Hash imported: "));const j=new ue.exports(64);return j.update(J),await b(E,"G1",2,2**c*2-1,"tauG1",o),await b(E,"G2",3,2**c,"tauG2",o),await b(E,"G1",4,2**c,"alphaTauG1",o),await b(E,"G1",5,2**c,"betaTauG1",o),await b(E,"G2",6,1,"betaG2",o),L.nextChallenge=j.digest(),o&&o.info(xe(L.nextChallenge,"Next Challenge Hash: ")),g.push(L),await tu(E,l,g),await r.close(),await E.close(),J;async function R(w,Z,P,V,nt,I,y){const _=[];r.pos=u[w][0].p,await ge(E,w),G[w]=E.pos;const T=l[Z],B=T.F.n8*2,Y=Math.floor((1<<20)/B);let tt=V;for(let $=0;$<P;$+=Y){y&&y.debug(`applying key${I}: ${$}/${P}`);const X=Math.min(P-$,Y),F=await r.read(X*B),M=await T.batchApplyKey(F,tt,nt),W=E.write(M),A=await T.batchLEMtoC(M);if(k.update(A),await W,$==0)for(let h=0;h<Math.min(2,P);h++)_.push(T.fromRprLEM(M,h*B));tt=l.Fr.mul(tt,l.Fr.exp(nt,X))}return await pe(E),_}async function b(w,Z,P,V,nt,I){const y=l[Z],_=y.F.n8*2,T=Math.floor((1<<24)/_),B=w.pos;w.pos=G[P];for(let Y=0;Y<V;Y+=T){I&&I.debug(`Hashing ${nt}: ${Y}/${V}`);const tt=Math.min(V-Y,T),$=await w.read(tt*_),X=await y.batchLEMtoU($);j.update(X)}w.pos=B}}async function by(a,t,e,n,i){await ue.exports.ready();const{fd:o,sections:s}=await Ie(a,"ptau",1),{curve:r,power:u,ceremonyPower:l}=await kn(o,s);if(u!=l)throw i&&i.error("This file has been reduced. You cannot contribute into a reduced file."),new Error("This file has been reduced. You cannot contribute into a reduced file.");s[12]&&i&&i.warn("WARNING: Contributing into a file that has phase2 calculated. You will have to prepare phase2 again.");const c=await Io(o,r,s),f={name:e,type:0};let g;const L=await Vs(n);c.length>0?g=c[c.length-1].nextChallenge:g=Eo(r,u,i),f.key=$l(r,g,L);const S=new ue.exports(64);S.update(g);const k=await pn(t,"ptau",1,7);await Yi(k,r,u);const E=[];let G;G=await j(2,"G1",2**u*2-1,r.Fr.e(1),f.key.tau.prvKey,"tauG1"),f.tauG1=G[1],G=await j(3,"G2",2**u,r.Fr.e(1),f.key.tau.prvKey,"tauG2"),f.tauG2=G[1],G=await j(4,"G1",2**u,f.key.alpha.prvKey,f.key.tau.prvKey,"alphaTauG1"),f.alphaG1=G[0],G=await j(5,"G1",2**u,f.key.beta.prvKey,f.key.tau.prvKey,"betaTauG1"),f.betaG1=G[0],G=await j(6,"G2",1,f.key.beta.prvKey,f.key.tau.prvKey,"betaTauG2"),f.betaG2=G[0],f.partialHash=S.getPartialHash();const C=new Uint8Array(r.F1.n8*2*6+r.F2.n8*2*3);Ao(C,0,r,f.key,!1),S.update(new Uint8Array(C));const N=S.digest();i&&i.info(xe(N,"Contribution Response Hash imported: "));const J=new ue.exports(64);return J.update(N),await R(k,"G1",2,2**u*2-1,"tauG1"),await R(k,"G2",3,2**u,"tauG2"),await R(k,"G1",4,2**u,"alphaTauG1"),await R(k,"G1",5,2**u,"betaTauG1"),await R(k,"G2",6,1,"betaG2"),f.nextChallenge=J.digest(),i&&i.info(xe(f.nextChallenge,"Next Challenge Hash: ")),c.push(f),await tu(k,r,c),await o.close(),await k.close(),N;async function j(b,w,Z,P,V,nt){const I=[];o.pos=s[b][0].p,await ge(k,b),E[b]=k.pos;const y=r[w],_=y.F.n8*2,T=Math.floor((1<<20)/_);let B=P;for(let Y=0;Y<Z;Y+=T){i&&i.debug(`processing: ${nt}: ${Y}/${Z}`);const tt=Math.min(Z-Y,T),$=await o.read(tt*_),X=await y.batchApplyKey($,B,V),F=k.write(X),M=await y.batchLEMtoC(X);if(S.update(M),await F,Y==0)for(let W=0;W<Math.min(2,Z);W++)I.push(y.fromRprLEM(X,W*_));B=r.Fr.mul(B,r.Fr.exp(V,tt))}return await pe(k),I}async function R(b,w,Z,P,V){const nt=r[w],I=nt.F.n8*2,y=Math.floor((1<<24)/I),_=b.pos;b.pos=E[Z];for(let T=0;T<P;T+=y){i&&T&&i.debug(`Hashing ${V}: `+T);const B=Math.min(P-T,y),Y=await b.read(B*I),tt=await nt.batchLEMtoU(Y);J.update(tt)}b.pos=_}}async function yy(a,t,e){const{fd:n,sections:i}=await Ie(a,"ptau",1),{curve:o,power:s}=await kn(n,i),r=await pn(t,"ptau",1,11);await Yi(r,o,s),await be(n,i,r,2),await be(n,i,r,3),await be(n,i,r,4),await be(n,i,r,5),await be(n,i,r,6),await be(n,i,r,7),await u(2,12,"G1","tauG1"),await u(3,13,"G2","tauG2"),await u(4,14,"G1","alphaTauG1"),await u(5,15,"G1","betaTauG1"),await n.close(),await r.close();return;async function u(l,c,f,g){e&&e.debug("Starting section: "+g),await ge(r,c);for(let S=0;S<=s;S++)await L(S);l==2&&await L(s+1),await pe(r);async function L(S){const k=2**S,E=o[f],G=E.F.n8*2;let C;C=new Ht(k*G),await Ee(n,i,l),l==2&&S==s+1?(await n.readToBuffer(C,0,(k-1)*G),C.set(o.G1.zeroAffine,(k-1)*G)):await n.readToBuffer(C,0,k*G),await Ce(n,!0),C=await E.lagrangeEvaluations(C,"affine","affine",e,g),await r.write(C)}}}async function Ay(a,t,e){const{fd:n,sections:i}=await Ie(a,"ptau",1),{curve:o,power:s,ceremonyPower:r}=await kn(n,i),u=o.G1.F.n8*2,l=o.G2.F.n8*2;for(let f=1;f<s;f++)await c(f);return await n.close(),!0;async function c(f){let g=f.toString();for(;g.length<2;)g="0"+g;e&&e.debug("Writing Power: "+g);const L=await pn(t+g+".ptau","ptau",1,11);await Yi(L,o,f,r),await be(n,i,L,2,(2**f*2-1)*u),await be(n,i,L,3,2**f*l),await be(n,i,L,4,2**f*u),await be(n,i,L,5,2**f*u),await be(n,i,L,6,l),await be(n,i,L,7),await be(n,i,L,12,(2**(f+1)*2-1)*u),await be(n,i,L,13,(2**f*2-1)*l),await be(n,i,L,14,(2**f*2-1)*u),await be(n,i,L,15,(2**f*2-1)*u),await L.close()}}async function Iy(a,t,e){const{fd:n,sections:i}=await Ie(a,"ptau",1),{curve:o,power:s}=await kn(n,i),r=await pn(t,"ptau",1,11);await Yi(r,o,s),await be(n,i,r,2),await be(n,i,r,3),await be(n,i,r,4),await be(n,i,r,5),await be(n,i,r,6),await be(n,i,r,7),await u(2,12,"G1","tauG1"),await be(n,i,r,13),await be(n,i,r,14),await be(n,i,r,15),await n.close(),await r.close();return;async function u(l,c,f,g){e&&e.debug("Starting section: "+g),await ge(r,c);const L=i[c][0].size,S=n.pageSize;await Ee(n,i,c);for(let E=0;E<L;E+=S){const G=Math.min(L-E,S),C=await n.read(G);await r.write(C)}await Ce(n),await k(s+1),await pe(r);async function k(E){const G=2**E,C=o[f],N=C.F.n8*2;let J;J=new Ht(G*N),await Ee(n,i,l),E==s+1?(await n.readToBuffer(J,0,(G-1)*N),J.set(o.G1.zeroAffine,(G-1)*N)):await n.readToBuffer(J,0,G*N),await Ce(n,!0),J=await C.lagrangeEvaluations(J,"affine","affine",e,g),await r.write(J)}}}async function Ey(a,t){const{fd:e,sections:n}=await Ie(a,"ptau",1),{curve:i,power:o}=await kn(e,n),s={};return s.q=i.q,s.power=o,s.contributions=await Io(e,i,n),s.tauG1=await r(2,"G1",2**o*2-1,"tauG1"),s.tauG2=await r(3,"G2",2**o,"tauG2"),s.alphaTauG1=await r(4,"G1",2**o,"alphaTauG1"),s.betaTauG1=await r(5,"G1",2**o,"betaTauG1"),s.betaG2=await r(6,"G2",1,"betaG2"),s.lTauG1=await u(12,"G1","lTauG1"),s.lTauG2=await u(13,"G2","lTauG2"),s.lAlphaTauG1=await u(14,"G1","lAlphaTauG2"),s.lBetaTauG1=await u(15,"G1","lBetaTauG2"),await e.close(),Fs(i.Fr,s);async function r(l,c,f,g){const L=i[c],S=L.F.n8*2,k=[];await Ee(e,n,l);for(let E=0;E<f;E++){t&&E&&E%1e4==0&&console.log(`${g}: `+E);const G=await e.read(S);k.push(L.fromRprLEM(G,0))}return await Ce(e),k}async function u(l,c,f){const g=i[c],L=g.F.n8*2,S=[];await Ee(e,n,l);for(let k=0;k<=o;k++){t&&console.log(`${f}: Power: ${k}`),S[k]=[];const E=2**k;for(let G=0;G<E;G++){t&&G&&G%1e4==0&&console.log(`${f}: ${G}/${E}`);const C=await e.read(L);S[k].push(g.fromRprLEM(C,0))}}return await Ce(e,!0),S}}var Cy=Object.freeze({__proto__:null,newAccumulator:hy,exportChallenge:gy,importResponse:py,verify:Ly,challengeContribute:wy,beacon:my,contribute:by,preparePhase2:yy,truncate:Ay,convert:Iy,exportJson:Ey});function By(a,t,e){for(let i=0;i<a.constraints.length;i++)n(a.constraints[i]);function n(i){const o=r=>{let u="";return Object.keys(r).forEach(c=>{let f=t.varIdx2Name[c];f=="one"&&(f="1");let g=a.curve.Fr.toString(r[c]);g=="1"&&(g=""),g=="-1"&&(g="-"),u!=""&&g[0]!="-"&&(g="+"+g),u!=""&&(g=" "+g),u=u+g+f}),u},s=`[ ${o(i[0])} ] * [ ${o(i[1])} ] - [ ${o(i[2])} ] = 0`;e&&e.info(s)}}const Rn=262144,vy={get:function(a,t){return isNaN(t)?a[t]:a.getElement(t)},set:function(a,t,e){return isNaN(t)?(a[t]=e,!0):a.setElement(t,e)}};class Fy{constructor(t){this.length=t||0,this.arr=new Array(Rn);for(let e=0;e<t;e+=Rn)this.arr[e/Rn]=new Array(Math.min(Rn,t-e));return this}push(){for(let t=0;t<arguments.length;t++)this.setElement(this.length,arguments[t])}slice(t,e){const n=new Array(e-t);for(let i=t;i<e;i++)n[i-t]=this.getElement(i);return n}getElement(t){t=parseInt(t);const e=Math.floor(t/Rn),n=t%Rn;return this.arr[e]?this.arr[e][n]:void 0}setElement(t,e){t=parseInt(t);const n=Math.floor(t/Rn);this.arr[n]||(this.arr[n]=new Array(Rn));const i=t%Rn;return this.arr[n][i]=e,t>=this.length&&(this.length=t+1),!0}getKeys(){const t=new w0;for(let e=0;e<this.arr.length;e++)if(this.arr[e])for(let n=0;n<this.arr[e].length;n++)typeof this.arr[e][n]<"u"&&t.push(e*Rn+n);return t}}class w0{constructor(t){const e=new Fy(t);return new Proxy(e,vy)}}var eu=w0;const dl=4,fl=5;async function m0(a,t,e){let n;typeof e=="object"?n=e:typeof e>"u"?n={singleThread:!1}:n={singleThread:e};const i={};if(await Ee(a,t,1),i.n8=await a.readULE32(),i.prime=await zn(a,i.n8),n.F){if(n.F.p!=i.prime)throw new Error("Different Prime");i.F=n.F}else if(n.getFieldFromPrime)i.F=await n.getFieldFromPrime(i.prime,n.singleThread);else if(n.getCurveFromPrime)i.curve=await n.getCurveFromPrime(i.prime,n.singleThread),i.F=i.curve.Fr;else try{i.curve=await Zm(i.prime,n.singleThread),i.F=i.curve.Fr}catch{i.F=new Kl(i.prime)}return i.nVars=await a.readULE32(),i.nOutputs=await a.readULE32(),i.nPubInputs=await a.readULE32(),i.nPrvInputs=await a.readULE32(),i.nLabels=await a.readULE64(),i.nConstraints=await a.readULE32(),i.useCustomGates=typeof t[dl]<"u"&&t[dl]!==null&&typeof t[fl]<"u"&&t[fl]!==null,await Ce(a),i}async function Sy(a,t,e,n,i){let o;typeof n=="object"?o=n:typeof n>"u"?o={}:o={logger:n,loggerCtx:i};const s=await ye(a,t,2);let r=0,u;e.nConstraints>1<<20?u=new eu:u=[];for(let f=0;f<e.nConstraints;f++){o.logger&&f%1e5==0&&o.logger.info(`${o.loggerCtx}: Loading constraints: ${f}/${e.nConstraints}`);const g=l();u.push(g)}return u;function l(){const f=[];return f[0]=c(),f[1]=c(),f[2]=c(),f}function c(){const f={},g=s.slice(r,r+4);r+=4;const S=new DataView(g.buffer).getUint32(0,!0),k=s.slice(r,r+(4+e.n8)*S);r+=(4+e.n8)*S;const E=new DataView(k.buffer);for(let G=0;G<S;G++){const C=E.getUint32(G*(4+e.n8),!0),N=e.F.fromRprLE(k,G*(4+e.n8)+4);f[C]=N}return f}}async function _y(a,t,e,n,i){let o;typeof n=="object"?o=n:typeof n>"u"?o={}:o={logger:n,loggerCtx:i};const s=await ye(a,t,3);let r=0,u;e.nVars>1<<20?u=new eu:u=[];for(let c=0;c<e.nVars;c++){o.logger&&c%1e4==0&&o.logger.info(`${o.loggerCtx}: Loading map: ${c}/${e.nVars}`);const f=l();u.push(f)}return u;function l(){const c=s.slice(r,r+8);r+=8;const f=new DataView(c.buffer),g=f.getUint32(0,!0);return f.getUint32(4,!0)*4294967296+g}}async function Zs(a,t,e){if(typeof e!="object")throw new Error("readR1csFd: options must be an object");e.loadConstraints="loadConstraints"in e?e.loadConstraints:!0,e.loadMap="loadMap"in e?e.loadMap:!1,e.loadCustomGates="loadCustomGates"in e?e.loadCustomGates:!0;const n=await m0(a,t,e);return e.loadConstraints&&(n.constraints=await Sy(a,t,n,e)),e.loadMap&&(n.map=await _y(a,t,n,e)),e.loadCustomGates&&(n.useCustomGates?(n.customGates=await xy(a,t,n),n.customGatesUses=await My(a,t,e)):(n.customGates=[],n.customGatesUses=[])),n}async function b0(a,t,e,n,i,o){let s;typeof t=="object"?s=t:typeof t>"u"?s={loadConstraints:!0,loadMap:!1,loadCustomGates:!0}:s={loadConstraints:t,loadMap:e,singleThread:n,logger:i,loggerCtx:o};const{fd:r,sections:u}=await Ie(a,"r1cs",1),l=await Zs(r,u,s);return await r.close(),l}async function xy(a,t,e){await Ee(a,t,dl);let n=await a.readULE32(),i=[];for(let o=0;o<n;o++){let s={};s.templateName=await a.readString();let r=await a.readULE32();s.parameters=Array(r);let u=await a.read(e.n8*r);for(let l=0;l<r;l++)s.parameters[l]=e.F.fromRprLE(u,l*e.n8,e.n8);i.push(s)}return await Ce(a),i}async function My(a,t,e){const n=await ye(a,t,fl),i=new Uint32Array(n.buffer,n.byteOffset,n.byteLength/4),o=i[0];let s=1,r;o>1<<20?r=new eu:r=[];for(let u=0;u<o;u++){e.logger&&u%1e5==0&&e.logger.info(`${e.loggerCtx}: Loading custom gate uses: ${u}/${o}`);let l={};l.id=i[s++];let c=i[s++];l.signals=[];for(let f=0;f<c;f++){const g=i[s++],L=i[s++];l.signals.push(L*4294967296+g)}r.push(l)}return r}const ky=oe.e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),Uy=oe.e("21888242871839275222246405745257275088548364400416034343698204186575808495617");async function Gy(a,t){const e=await b0(a);return oe.eq(e.prime,Uy)?t&&t.info("Curve: bn-128"):oe.eq(e.prime,ky)?t&&t.info("Curve: bls12-381"):t&&t.info(`Unknown Curve. Prime: ${oe.toString(e.prime)}`),t&&t.info(`# of Wires: ${e.nVars}`),t&&t.info(`# of Constraints: ${e.nConstraints}`),t&&t.info(`# of Private Inputs: ${e.nPrvInputs}`),t&&t.info(`# of Public Inputs: ${e.nPubInputs}`),t&&t.info(`# of Labels: ${e.nLabels}`),t&&t.info(`# of Outputs: ${e.nOutputs}`),e}async function Py(a,t){const e=await b0(a,!0,!0,!0,t),n=e.curve.Fr;return delete e.curve,delete e.F,Fs(n,e)}var Oy=Object.freeze({__proto__:null,print:By,info:Gy,exportJson:Py});async function as(a){const t={labelIdx2Name:["one"],varIdx2Name:["one"],componentIdx2Name:[]},e=await Ci(a),n=await e.read(e.totalSize),o=new TextDecoder("utf-8").decode(n).split(`
`);for(let r=0;r<o.length;r++){const u=o[r].split(",");u.length==4&&(t.varIdx2Name[u[1]]?t.varIdx2Name[u[1]]+="|"+u[3]:t.varIdx2Name[u[1]]=u[3],t.labelIdx2Name[u[0]]=u[3],t.componentIdx2Name[u[2]]||(t.componentIdx2Name[u[2]]=s(u[3])))}return await e.close(),t;function s(r){const u=r.split(".");return u.pop(),u.join(".")}}const{unstringifyBigInts:Dy}=nn;async function qy(a,t,e,n,i,o){const s=Dy(a),r=await Ci(t),u=await r.read(r.totalSize);await r.close();const l={...i,sanityCheck:!0};let c=await as(n);i.set&&(c||(c=await as(n)),l.logSetSignal=function(S,k){o&&o.info("SET "+c.labelIdx2Name[S]+" <-- "+k.toString())}),i.get&&(c||(c=await as(n)),l.logGetSignal=function(S,k){o&&o.info("GET "+c.labelIdx2Name[S]+" --> "+k.toString())}),i.trigger&&(c||(c=await as(n)),l.logStartComponent=function(S){o&&o.info("START: "+c.componentIdx2Name[S])},l.logFinishComponent=function(S){o&&o.info("FINISH: "+c.componentIdx2Name[S])}),l.sym=c;const f=await g0(u,l),g=await f.calculateWitness(s,!0),L=await pn(e,"wtns",2,2);await Jb(L,g,f.prime),await L.close()}async function Ty(a){return await jb(a)}async function Ry(a,t,e){e&&e.info("WITNESS CHECKING STARTED"),e&&e.info("> Reading r1cs file");const{fd:n,sections:i}=await Ie(a,"r1cs",1),o=await Zs(n,i,{loadConstraints:!1,loadCustomGates:!1});e&&e.info("> Reading witness file");const{fd:s,sections:r}=await Ie(t,"wtns",2),u=await _a(s,r);if(!oe.eq(o.prime,u.q))throw new Error("Curve of the witness does not match the curve of the proving key");const l=await ye(s,r,2);await s.close();const f=(await e0(o.prime)).Fr,g=f.n8,L=await ye(n,i,2);e&&(e.info("----------------------------"),e.info("  WITNESS CHECK"),e.info(`  Curve:          ${o.curve.name}`),e.info(`  Vars (wires):   ${o.nVars}`),e.info(`  Outputs:        ${o.nOutputs}`),e.info(`  Public Inputs:  ${o.nPubInputs}`),e.info(`  Private Inputs: ${o.nPrvInputs}`),e.info(`  Labels:         ${o.nLabels}`),e.info(`  Constraints:    ${o.nConstraints}`),e.info(`  Custom Gates:   ${o.useCustomGates}`),e.info("----------------------------")),e&&e.info("> Checking witness correctness");let S=0,k=!0;for(let N=0;N<o.nConstraints;N++){e&&N!==0&&N%5e5===0&&e.info(`··· processing r1cs constraints ${N}/${o.nConstraints}`);const J=G(),j=G(),R=G(),b=E(J),w=E(j),Z=E(R);if(!f.eq(f.sub(f.mul(b,w),Z),f.zero)){e.warn("··· aborting checking process at constraint "+N),k=!1;break}}return n.close(),e&&(k?(e.info("WITNESS IS CORRECT"),e.info("WITNESS CHECKING FINISHED SUCCESSFULLY")):(e.warn("WITNESS IS NOT CORRECT"),e.warn("WITNESS CHECKING FINISHED UNSUCCESSFULLY"))),k;function E(N){let J=f.zero;return Object.keys(N).forEach(R=>{const b=C(R),w=N[R];J=f.add(J,f.mul(b,w))}),J}function G(){const N={},J=L.slice(S,S+4);S+=4;const R=new DataView(J.buffer).getUint32(0,!0),b=L.slice(S,S+(4+o.n8)*R);S+=(4+o.n8)*R;const w=new DataView(b.buffer);for(let Z=0;Z<R;Z++){const P=w.getUint32(Z*(4+o.n8),!0),V=o.F.fromRprLE(b,Z*(4+o.n8)+4);N[P]=V}return N}function C(N){return f.fromRprLE(l.slice(N*g,N*g+g))}}var Hy=Object.freeze({__proto__:null,calculate:Ws,debug:qy,exportJson:Ty,check:Ry});const Hn=262144,Qy={get:function(a,t){return isNaN(t)?a[t]:a.getElement(t)},set:function(a,t,e){return isNaN(t)?(a[t]=e,!0):a.setElement(t,e)}};class Ky{constructor(t){this.length=t||0,this.arr=new Array(Hn);for(let e=0;e<t;e+=Hn)this.arr[e/Hn]=new Array(Math.min(Hn,t-e));return this}push(){for(let t=0;t<arguments.length;t++)this.setElement(this.length,arguments[t])}slice(t,e){const n=new Array(e-t);for(let i=t;i<e;i++)n[i-t]=this.getElement(i);return n}getElement(t){t=parseInt(t);const e=Math.floor(t/Hn),n=t%Hn;return this.arr[e]?this.arr[e][n]:void 0}setElement(t,e){t=parseInt(t);const n=Math.floor(t/Hn);this.arr[n]||(this.arr[n]=new Array(Hn));const i=t%Hn;return this.arr[n][i]=e,t>=this.length&&(this.length=t+1),!0}getKeys(){const t=new y0;for(let e=0;e<this.arr.length;e++)if(this.arr[e])for(let n=0;n<this.arr[e].length;n++)typeof this.arr[e][n]<"u"&&t.push(e*Hn+n);return t}}class y0{constructor(t){const e=new Ky(t);return new Proxy(e,Qy)}}var Cn=y0;async function A0(a,t,e,n){await ue.exports.ready();const u=ue.exports(64),{fd:l,sections:c}=await Ie(t,"ptau",1),{curve:f,power:g}=await kn(l,c),{fd:L,sections:S}=await Ie(a,"r1cs",1),k=await m0(L,S,!1),E=await pn(e,"zkey",1,10,1<<22,1<<24),G=f.G1.F.n8*2,C=f.G2.F.n8*2;if(k.prime!=f.r)return n&&n.error("r1cs curve does not match powers of tau ceremony curve"),-1;const N=Bi(k.nConstraints+k.nPubInputs+k.nOutputs+1-1)+1;if(N>g)return n&&n.error(`circuit too big for this power of tau ceremony. ${k.nConstraints}*2 > 2**${g}`),-1;if(!c[12])return n&&n.error("Powers of tau is not prepared."),-1;const J=k.nOutputs+k.nPubInputs,j=2**N;await ge(E,1),await E.writeULE32(1),await pe(E),await ge(E,2);const R=f.q,b=(Math.floor((oe.bitLength(R)-1)/64)+1)*8,w=f.r,Z=(Math.floor((oe.bitLength(w)-1)/64)+1)*8,P=oe.mod(oe.shl(1,Z*8),w),V=f.Fr.e(oe.mod(oe.mul(P,P),w));await E.writeULE32(b),await Dn(E,R,b),await E.writeULE32(Z),await Dn(E,w,Z),await E.writeULE32(k.nVars),await E.writeULE32(J),await E.writeULE32(j);let nt;nt=await l.read(G,c[4][0].p),await E.write(nt),nt=await f.G1.batchLEMtoU(nt),u.update(nt);let I;I=await l.read(G,c[5][0].p),await E.write(I),I=await f.G1.batchLEMtoU(I),u.update(I);let y;y=await l.read(C,c[6][0].p),await E.write(y),y=await f.G2.batchLEMtoU(y),u.update(y);const _=new Uint8Array(G);f.G1.toRprLEM(_,0,f.G1.g);const T=new Uint8Array(C);f.G2.toRprLEM(T,0,f.G2.g);const B=new Uint8Array(G);f.G1.toRprUncompressed(B,0,f.G1.g);const Y=new Uint8Array(C);f.G2.toRprUncompressed(Y,0,f.G2.g),await E.write(T),await E.write(_),await E.write(T),u.update(Y),u.update(B),u.update(Y),await pe(E),n&&n.info("Reading r1cs");let tt=await ye(L,S,2);const $=new Cn(k.nVars),X=new Cn(k.nVars),F=new Cn(k.nVars),M=new Cn(k.nVars-J-1),W=new Array(J+1);n&&n.info("Reading tauG1");let A=await ye(l,c,12,(j-1)*G,j*G);n&&n.info("Reading tauG2");let h=await ye(l,c,13,(j-1)*C,j*C);n&&n.info("Reading alphatauG1");let Q=await ye(l,c,14,(j-1)*G,j*G);n&&n.info("Reading betatauG1");let p=await ye(l,c,15,(j-1)*G,j*G);await v(),await et(3,"G1",W,"IC"),await m(),await dt(),await et(8,"G1",M,"C"),await et(5,"G1",$,"A"),await et(6,"G1",X,"B1"),await et(7,"G2",F,"B2");const d=u.digest();return await ge(E,10),await E.write(d),await E.writeULE32(0),await pe(E),n&&n.info(xe(d,"Circuit hash: ")),await E.close(),await L.close(),await l.close(),d;async function m(){await ge(E,9);const z=new Ht(j*G);if(N<f.Fr.s){let wt=await ye(l,c,12,(j*2-1)*G,j*2*G);for(let yt=0;yt<j;yt++){n&&yt%1e4==0&&n.debug(`splitting buffer: ${yt}/${j}`);const It=wt.slice((yt*2+1)*G,(yt*2+1)*G+G);z.set(It,yt*G)}}else if(N==f.Fr.s){const wt=c[12][0].p+(2**(N+1)-1)*G;await l.readToBuffer(z,0,j*G,wt+j*G)}else throw n&&n.error("Circuit too big"),new Error("Circuit too big for this curve");await E.write(z),await pe(E)}async function v(){const z=new Uint8Array(12+f.Fr.n8),wt=new DataView(z.buffer),yt=new Uint8Array(f.Fr.n8);f.Fr.toRprLE(yt,0,f.Fr.e(1));let It=0;function Ut(){const D=tt.slice(It,It+4);return It+=4,new DataView(D.buffer).getUint32(0,!0)}const Dt=new Cn;for(let D=0;D<k.nConstraints;D++){n&&D%1e4==0&&n.debug(`processing constraints: ${D}/${k.nConstraints}`);const ot=Ut();for(let at=0;at<ot;at++){const x=Ut(),q=It;It+=f.Fr.n8;const gt=0,mt=G*D,ut=3,Ct=G*D;typeof $[x]>"u"&&($[x]=[]),$[x].push([gt,mt,q]),x<=J?(typeof W[x]>"u"&&(W[x]=[]),W[x].push([ut,Ct,q])):(typeof M[x-J-1]>"u"&&(M[x-J-1]=[]),M[x-J-1].push([ut,Ct,q])),Dt.push([0,D,x,q])}const st=Ut();for(let at=0;at<st;at++){const x=Ut(),q=It;It+=f.Fr.n8;const gt=0,mt=G*D,ut=1,Ct=C*D,vt=2,kt=G*D;typeof X[x]>"u"&&(X[x]=[]),X[x].push([gt,mt,q]),typeof F[x]>"u"&&(F[x]=[]),F[x].push([ut,Ct,q]),x<=J?(typeof W[x]>"u"&&(W[x]=[]),W[x].push([vt,kt,q])):(typeof M[x-J-1]>"u"&&(M[x-J-1]=[]),M[x-J-1].push([vt,kt,q])),Dt.push([1,D,x,q])}const lt=Ut();for(let at=0;at<lt;at++){const x=Ut(),q=It;It+=f.Fr.n8;const gt=0,mt=G*D;x<=J?(typeof W[x]>"u"&&(W[x]=[]),W[x].push([gt,mt,q])):(typeof M[x-J-1]>"u"&&(M[x-J-1]=[]),M[x-J-1].push([gt,mt,q]))}}for(let D=0;D<=J;D++){const st=G*(k.nConstraints+D),lt=3,at=G*(k.nConstraints+D);typeof $[D]>"u"&&($[D]=[]),$[D].push([0,st,-1]),typeof W[D]>"u"&&(W[D]=[]),W[D].push([lt,at,-1]),Dt.push([0,k.nConstraints+D,D,-1])}await ge(E,4);const Mt=new Ht(Dt.length*(12+f.Fr.n8)+4),Qt=new Uint8Array(4);new DataView(Qt.buffer).setUint32(0,Dt.length,!0),Mt.set(Qt);let K=4;for(let D=0;D<Dt.length;D++)n&&D%1e5==0&&n.debug(`writing coeffs: ${D}/${Dt.length}`),U(Dt[D]);await E.write(Mt),await pe(E);function U(D){wt.setUint32(0,D[0],!0),wt.setUint32(4,D[1],!0),wt.setUint32(8,D[2],!0);let ot;D[3]>=0?ot=f.Fr.fromRprLE(tt.slice(D[3],D[3]+f.Fr.n8),0):ot=f.Fr.fromRprLE(yt,0);const st=f.Fr.mul(ot,V);f.Fr.toRprLE(z,12,st),Mt.set(z,K),K+=z.length}}async function et(z,wt,yt,It){const Dt=f[wt];rt(yt.length),await ge(E,z);let Mt=[],Qt=0;for(;Qt<yt.length;){let it=0;for(;Qt<yt.length&&it<f.tm.concurrency;){n&&n.debug(`Writing points start ${It}: ${Qt}/${yt.length}`);let U=1,D=yt[Qt]?yt[Qt].length:0;for(;Qt+U<yt.length&&D+(yt[Qt+U]?yt[Qt+U].length:0)<32768&&U<32768;)D+=yt[Qt+U]?yt[Qt+U].length:0,U++;const ot=yt.slice(Qt,Qt+U),st=Qt;Mt.push(ct(wt,ot,n,It).then(lt=>(n&&n.debug(`Writing points end ${It}: ${st}/${yt.length}`),lt))),Qt+=U,it++}const K=await Promise.all(Mt);for(let U=0;U<K.length;U++){await E.write(K[U][0]);const D=await Dt.batchLEMtoU(K[U][0]);u.update(D)}Mt=[]}await pe(E)}async function ct(z,wt,yt,It){const Ut=f[z],Dt=Ut.F.n8*2,Mt=Ut.F.n8*3,Qt=Ut.F.n8*2;let it,K,U,D;if(z=="G1")it="g1m_timesScalarAffine",K="g1m_multiexpAffine",U="g1m_batchToAffine",D="g1m_zero";else if(z=="G2")it="g2m_timesScalarAffine",K="g2m_multiexpAffine",U="g2m_batchToAffine",D="g2m_zero";else throw new Error("Invalid group");let ot=0;for(let ut=0;ut<wt.length;ut++)ot+=wt[ut]?wt[ut].length:0;let st,lt;ot>32768?(st=new Ht(ot*Dt),lt=new Ht(ot*f.Fr.n8)):(st=new Uint8Array(ot*Dt),lt=new Uint8Array(ot*f.Fr.n8));let at=0,x=0;const q=[A,h,Q,p],gt=new Uint8Array(f.Fr.n8);f.Fr.toRprLE(gt,0,f.Fr.e(1));let mt=0;for(let ut=0;ut<wt.length;ut++)if(wt[ut])for(let Ct=0;Ct<wt[ut].length;Ct++)yt&&Ct&&Ct%1e4==0&&yt.debug(`Configuring big array ${It}: ${Ct}/${wt[ut].length}`),st.set(q[wt[ut][Ct][0]].slice(wt[ut][Ct][1],wt[ut][Ct][1]+Dt),mt*Dt),wt[ut][Ct][2]>=0?lt.set(tt.slice(wt[ut][Ct][2],wt[ut][Ct][2]+f.Fr.n8),mt*f.Fr.n8):lt.set(gt,mt*f.Fr.n8),mt++;if(wt.length>1){const ut=[];ut.push({cmd:"ALLOCSET",var:0,buff:st}),ut.push({cmd:"ALLOCSET",var:1,buff:lt}),ut.push({cmd:"ALLOC",var:2,len:wt.length*Mt}),at=0,x=0;let Ct=0;for(let kt=0;kt<wt.length;kt++){if(!wt[kt]){ut.push({cmd:"CALL",fnName:D,params:[{var:2,offset:Ct}]}),Ct+=Mt;continue}wt[kt].length==1?ut.push({cmd:"CALL",fnName:it,params:[{var:0,offset:at},{var:1,offset:x},{val:f.Fr.n8},{var:2,offset:Ct}]}):ut.push({cmd:"CALL",fnName:K,params:[{var:0,offset:at},{var:1,offset:x},{val:f.Fr.n8},{val:wt[kt].length},{var:2,offset:Ct}]}),at+=Dt*wt[kt].length,x+=f.Fr.n8*wt[kt].length,Ct+=Mt}return ut.push({cmd:"CALL",fnName:U,params:[{var:2},{val:wt.length},{var:2}]}),ut.push({cmd:"GET",out:0,var:2,len:wt.length*Qt}),await f.tm.queueAction(ut)}else{let ut=await Ut.multiExpAffine(st,lt,yt,It);return ut=[Ut.toAffine(ut)],ut}}async function dt(){rt(j-1);for(let wt=0;wt<j-1;wt+=16384){n&&n.debug(`HashingHPoints: ${wt}/${j}`);const yt=Math.min(j-1,16384);await ft(wt,yt)}}async function ft(z,wt){const yt=await l.read(wt*G,c[2][0].p+(z+j)*G),It=await l.read(wt*G,c[2][0].p+z*G),Ut=f.tm.concurrency,Dt=Math.floor(wt/Ut),Mt=[];for(let it=0;it<Ut;it++){let K;if(it<Ut-1?K=Dt:K=wt-it*Dt,K==0)continue;const U=yt.slice(it*Dt*G,(it*Dt+K)*G),D=It.slice(it*Dt*G,(it*Dt+K)*G);Mt.push(Ft(U,D))}const Qt=await Promise.all(Mt);for(let it=0;it<Qt.length;it++)u.update(Qt[it][0])}async function Ft(z,wt){const yt=z.byteLength/G,It=f.G1.F.n8*3,Ut=[];Ut.push({cmd:"ALLOCSET",var:0,buff:z}),Ut.push({cmd:"ALLOCSET",var:1,buff:wt}),Ut.push({cmd:"ALLOC",var:2,len:yt*It});for(let Mt=0;Mt<yt;Mt++)Ut.push({cmd:"CALL",fnName:"g1m_subAffine",params:[{var:0,offset:Mt*G},{var:1,offset:Mt*G},{var:2,offset:Mt*It}]});return Ut.push({cmd:"CALL",fnName:"g1m_batchToAffine",params:[{var:2},{val:yt},{var:2}]}),Ut.push({cmd:"CALL",fnName:"g1m_batchLEMtoU",params:[{var:2},{val:yt},{var:2}]}),Ut.push({cmd:"GET",out:0,var:2,len:yt*G}),await f.tm.queueAction(Ut)}function rt(z){const wt=new Uint8Array(4);new DataView(wt.buffer,wt.byteOffset,wt.byteLength).setUint32(0,z,!1),u.update(wt)}}async function Ny(a,t,e){const{fd:n,sections:i}=await Ie(a,"zkey",2),o=await qn(n,i);if(o.protocol!="groth16")throw new Error("zkey file is not groth16");const s=await Ln(o.q),r=s.G1.F.n8*2,u=s.G2.F.n8*2,l=await po(n,s,i),c=await yo(t);await C(o.vk_alpha_1),await C(o.vk_beta_1),await N(o.vk_beta_2),await N(o.vk_gamma_2),await C(o.vk_delta_1),await N(o.vk_delta_2);let f;f=await ye(n,i,3),f=await s.G1.batchLEMtoU(f),await J("G1",f);const g=await ye(n,i,9);let L;L=await s.G1.fft(g,"affine","jacobian",e),L=await s.G1.batchApplyKey(L,s.Fr.neg(s.Fr.e(2)),s.Fr.w[o.power+1],"jacobian","affine",e),L=L.slice(0,L.byteLength-r),L=await s.G1.batchLEMtoU(L),await J("G1",L);let S;S=await ye(n,i,8),S=await s.G1.batchLEMtoU(S),await J("G1",S);let k;k=await ye(n,i,5),k=await s.G1.batchLEMtoU(k),await J("G1",k);let E;E=await ye(n,i,6),E=await s.G1.batchLEMtoU(E),await J("G1",E);let G;G=await ye(n,i,7),G=await s.G2.batchLEMtoU(G),await J("G2",G),await c.write(l.csHash),await j(l.contributions.length);for(let R=0;R<l.contributions.length;R++){const b=l.contributions[R];await C(b.deltaAfter),await C(b.delta.g1_s),await C(b.delta.g1_sx),await N(b.delta.g2_spx),await c.write(b.transcript)}await n.close(),await c.close();async function C(R){const b=new Uint8Array(r);s.G1.toRprUncompressed(b,0,R),await c.write(b)}async function N(R){const b=new Uint8Array(u);s.G2.toRprUncompressed(b,0,R),await c.write(b)}async function J(R,b){let w;R=="G1"?w=r:w=u;const Z=new Uint8Array(4);new DataView(Z.buffer,Z.byteOffset,Z.byteLength).setUint32(0,b.byteLength/w,!1),await c.write(Z),await c.write(b)}async function j(R){const b=new Uint8Array(4);new DataView(b.buffer,b.byteOffset,b.byteLength).setUint32(0,R,!1),await c.write(b)}}async function zy(a,t,e,n,i){const{fd:o,sections:s}=await Ie(a,"zkey",2),r=await qn(o,s,!1);if(r.protocol!="groth16")throw new Error("zkey file is not groth16");const u=await Ln(r.q),l=u.G1.F.n8*2,c=u.G2.F.n8*2,f=await po(o,u,s),g={},L=await Ci(t);L.pos=l*3+c*3+8+l*r.nVars+4+l*(r.domainSize-1)+4+l*r.nVars+4+l*r.nVars+4+c*r.nVars,g.csHash=await L.read(64);const S=await L.readUBE32();g.contributions=[];for(let _=0;_<S;_++){const T={delta:{}};T.deltaAfter=await nt(L),T.delta.g1_s=await nt(L),T.delta.g1_sx=await nt(L),T.delta.g2_spx=await I(L),T.transcript=await L.read(64),_<f.contributions.length&&(T.type=f.contributions[_].type,T.type==1&&(T.beaconHash=f.contributions[_].beaconHash,T.numIterationsExp=f.contributions[_].numIterationsExp),f.contributions[_].name&&(T.name=f.contributions[_].name)),g.contributions.push(T)}if(!Ai(g.csHash,f.csHash))return i&&i.error("Hash of the original circuit does not match with the MPC one"),!1;if(f.contributions.length>g.contributions.length)return i&&i.error("The impoerted file does not include new contributions"),!1;for(let _=0;_<f.contributions.length;_++)if(!y(f.contributions[_],g.contributions[_]))return i&&i.error(`Previous contribution ${_} does not match`),!1;if(n)for(let _=f.contributions.length;_<g.contributions.length;_++)g.contributions[_].name=n;const k=await pn(e,"zkey",1,10);if(L.pos=0,L.pos+=l,L.pos+=l,L.pos+=c,L.pos+=c,r.vk_delta_1=await nt(L),r.vk_delta_2=await I(L),await Zl(k,r),await L.readUBE32()!=r.nPublic+1)return i&&i.error("Invalid number of points in IC"),await k.discard(),!1;if(L.pos+=l*(r.nPublic+1),await be(o,s,k,3),await be(o,s,k,4),await L.readUBE32()!=r.domainSize-1)return i&&i.error("Invalid number of points in H"),await k.discard(),!1;let C;const N=await L.read(l*(r.domainSize-1)),J=await u.G1.batchUtoLEM(N);C=new Uint8Array(r.domainSize*l),C.set(J),u.G1.toRprLEM(C,l*(r.domainSize-1),u.G1.zeroAffine);const j=u.Fr.neg(u.Fr.inv(u.Fr.e(2))),R=u.Fr.inv(u.Fr.w[r.power+1]);if(C=await u.G1.batchApplyKey(C,j,R,"affine","jacobian",i),C=await u.G1.ifft(C,"jacobian","affine",i),await ge(k,9),await k.write(C),await pe(k),await L.readUBE32()!=r.nVars-r.nPublic-1)return i&&i.error("Invalid number of points in L"),await k.discard(),!1;let w;if(w=await L.read(l*(r.nVars-r.nPublic-1)),w=await u.G1.batchUtoLEM(w),await ge(k,8),await k.write(w),await pe(k),await L.readUBE32()!=r.nVars)return i&&i.error("Invalid number of points in A"),await k.discard(),!1;if(L.pos+=l*r.nVars,await be(o,s,k,5),await L.readUBE32()!=r.nVars)return i&&i.error("Invalid number of points in B1"),await k.discard(),!1;if(L.pos+=l*r.nVars,await be(o,s,k,6),await L.readUBE32()!=r.nVars)return i&&i.error("Invalid number of points in B2"),await k.discard(),!1;return L.pos+=c*r.nVars,await be(o,s,k,7),await Xl(k,u,g),await L.close(),await k.close(),await o.close(),!0;async function nt(_){const T=await _.read(u.G1.F.n8*2);return u.G1.fromRprUncompressed(T,0)}async function I(_){const T=await _.read(u.G2.F.n8*2);return u.G2.fromRprUncompressed(T,0)}function y(_,T){return!(!u.G1.eq(_.deltaAfter,T.deltaAfter)||!u.G1.eq(_.delta.g1_s,T.delta.g1_s)||!u.G1.eq(_.delta.g1_sx,T.delta.g1_sx)||!u.G2.eq(_.delta.g2_spx,T.delta.g2_spx)||!Ai(_.transcript,T.transcript))}}const $o=c0;async function I0(a,t,e,n){let i;await ue.exports.ready();const{fd:o,sections:s}=await Ie(e,"zkey",2),r=await qn(o,s,!1);if(r.protocol!="groth16")throw new Error("zkey file is not groth16");const u=await Ln(r.q),l=u.G1.F.n8*2,c=await po(o,u,s),f=ue.exports(64);f.update(c.csHash);let g=u.G1.g;for(let R=0;R<c.contributions.length;R++){const b=c.contributions[R],w=kb(f);if(Gn(w,u,b.delta.g1_s),Gn(w,u,b.delta.g1_sx),!Ai(w.digest(),b.transcript))return console.log(`INVALID(${R}): Inconsistent transcript `),!1;const Z=xa(u,b.transcript);if(i=await $o(u,b.delta.g1_s,b.delta.g1_sx,Z,b.delta.g2_spx),i!==!0)return console.log(`INVALID(${R}): public key G1 and G2 do not have the same ration `),!1;if(i=await $o(u,g,b.deltaAfter,Z,b.delta.g2_spx),i!==!0)return console.log(`INVALID(${R}): deltaAfter does not fillow the public key `),!1;if(b.type==1){const V=await Wl(b.beaconHash,b.numIterationsExp),nt=u.Fr.fromRng(V),I=u.G1.toAffine(u.G1.fromRng(V)),y=u.G1.toAffine(u.G1.timesFr(I,nt));if(u.G1.eq(I,b.delta.g1_s)!==!0)return console.log(`INVALID(${R}): Key of the beacon does not match. g1_s `),!1;if(u.G1.eq(y,b.delta.g1_sx)!==!0)return console.log(`INVALID(${R}): Key of the beacon does not match. g1_sx `),!1}Ii(f,u,b);const P=ue.exports(64);Ii(P,u,b),b.contributionHash=P.digest(),g=b.deltaAfter}const{fd:L,sections:S}=await Ie(a,"zkey",2),k=await qn(L,S,!1);if(k.protocol!="groth16")throw new Error("zkeyinit file is not groth16");if(!oe.eq(k.q,r.q)||!oe.eq(k.r,r.r)||k.n8q!=r.n8q||k.n8r!=r.n8r)return n&&n.error("INVALID:  Different curves"),!1;if(k.nVars!=r.nVars||k.nPublic!=r.nPublic||k.domainSize!=r.domainSize)return n&&n.error("INVALID:  Different circuit parameters"),!1;if(!u.G1.eq(r.vk_alpha_1,k.vk_alpha_1))return n&&n.error("INVALID:  Invalid alpha1"),!1;if(!u.G1.eq(r.vk_beta_1,k.vk_beta_1))return n&&n.error("INVALID:  Invalid beta1"),!1;if(!u.G2.eq(r.vk_beta_2,k.vk_beta_2))return n&&n.error("INVALID:  Invalid beta2"),!1;if(!u.G2.eq(r.vk_gamma_2,k.vk_gamma_2))return n&&n.error("INVALID:  Invalid gamma2"),!1;if(!u.G1.eq(r.vk_delta_1,g))return n&&n.error("INVALID:  Invalid delta1"),!1;if(i=await $o(u,u.G1.g,g,u.G2.g,r.vk_delta_2),i!==!0)return n&&n.error("INVALID:  Invalid delta2"),!1;const E=await po(L,u,S);if(!Ai(c.csHash,E.csHash))return n&&n.error("INVALID:  Circuit does not match"),!1;if(s[8][0].size!=l*(r.nVars-r.nPublic-1))return n&&n.error("INVALID:  Invalid L section size"),!1;if(s[9][0].size!=l*r.domainSize)return n&&n.error("INVALID:  Invalid H section size"),!1;let G;if(G=await Xo(o,s,L,S,3),!G)return n&&n.error("INVALID:  IC section is not identical"),!1;if(G=await Xo(o,s,L,S,4),!G)return n&&n.error("Coeffs section is not identical"),!1;if(G=await Xo(o,s,L,S,5),!G)return n&&n.error("A section is not identical"),!1;if(G=await Xo(o,s,L,S,6),!G)return n&&n.error("B1 section is not identical"),!1;if(G=await Xo(o,s,L,S,7),!G)return n&&n.error("B2 section is not identical"),!1;if(i=await C("G1",L,S,o,s,8,r.vk_delta_2,k.vk_delta_2,"L section"),i!==!0)return n&&n.error("L section does not match"),!1;if(i=await N(),i!==!0)return n&&n.error("H section does not match"),!1;n&&n.info(xe(c.csHash,"Circuit Hash: ")),await o.close(),await L.close();for(let R=c.contributions.length-1;R>=0;R--){const b=c.contributions[R];n&&n.info("-------------------------"),n&&n.info(xe(b.contributionHash,`contribution #${R+1} ${b.name?b.name:""}:`)),b.type==1&&(n&&n.info(`Beacon generator: ${u0(b.beaconHash)}`),n&&n.info(`Beacon iterations Exp: ${b.numIterationsExp}`))}return n&&n.info("-------------------------"),n&&n.info("ZKey Ok!"),!0;async function C(R,b,w,Z,P,V,nt,I,y){const T=u[R],B=T.F.n8*2;await Ee(b,w,V),await Ee(Z,P,V);let Y=T.zero,tt=T.zero;const $=w[V][0].size/B;for(let X=0;X<$;X+=1048576){n&&n.debug(`Same ratio check ${y}:  ${X}/${$}`);const F=Math.min($-X,1048576),M=await b.read(F*B),W=await Z.read(F*B),A=ao(4*F),h=await T.multiExpAffine(M,A),Q=await T.multiExpAffine(W,A);Y=T.add(Y,h),tt=T.add(tt,Q)}return await Ce(b),await Ce(Z),$==0?!0:(i=await $o(u,Y,tt,nt,I),i===!0)}async function N(){const b=u.G1,w=u.Fr,Z=b.F.n8*2,{fd:P,sections:V}=await Ie(t,"ptau",1);let nt=new Ht(r.domainSize*r.n8r);const I=new Array(8);for(let tt=0;tt<8;tt++)I[tt]=vs(ao(4),0);const y=new Qi(I);for(let tt=0;tt<r.domainSize-1;tt++){const $=w.fromRng(y);w.toRprLE(nt,tt*r.n8r,$)}w.toRprLE(nt,(r.domainSize-1)*r.n8r,w.zero);let _=b.zero;for(let tt=0;tt<r.domainSize;tt+=1048576){n&&n.debug(`H Verification(tau):  ${tt}/${r.domainSize}`);const $=Math.min(r.domainSize-tt,1048576),X=await P.read(Z*$,V[2][0].p+r.domainSize*Z+tt*Z),F=await P.read(Z*$,V[2][0].p+tt*Z),M=await J(X,F),W=nt.slice(tt*r.n8r,(tt+$)*r.n8r),A=await b.multiExpAffine(M,W);_=b.add(_,A)}nt=await w.batchToMontgomery(nt);let T;if(r.power<w.s)T=w.neg(w.e(2));else{const tt=2**w.s,$=w.exp(w.shift,tt);T=w.sub($,w.one)}const B=r.power<w.s?w.w[r.power+1]:w.shift;nt=await w.batchApplyKey(nt,T,B),nt=await w.fft(nt),nt=await w.batchFromMontgomery(nt),await Ee(o,s,9);let Y=b.zero;for(let tt=0;tt<r.domainSize;tt+=1048576){n&&n.debug(`H Verification(lagrange):  ${tt}/${r.domainSize}`);const $=Math.min(r.domainSize-tt,1048576),X=await o.read(Z*$),F=nt.slice(tt*r.n8r,(tt+$)*r.n8r),M=await b.multiExpAffine(X,F);Y=b.add(Y,M)}return await Ce(o),i=await $o(u,_,Y,r.vk_delta_2,k.vk_delta_2),i===!0}async function J(R,b){const w=u.G1.F.n8*2,Z=R.byteLength/w,P=u.tm.concurrency,V=Math.floor(Z/P),nt=[];for(let T=0;T<P;T++){let B;if(T<P-1?B=V:B=Z-T*V,B==0)continue;const Y=R.slice(T*V*l,(T*V+B)*l),tt=b.slice(T*V*l,(T*V+B)*l);nt.push(j(Y,tt))}const I=await Promise.all(nt),y=new Uint8Array(Z*w);let _=0;for(let T=0;T<I.length;T++)y.set(I[T][0],_),_+=I[T][0].byteLength;return y}async function j(R,b){const w=u.G1.F.n8*2,Z=u.G1.F.n8*3,P=R.byteLength/w,V=[];V.push({cmd:"ALLOCSET",var:0,buff:R}),V.push({cmd:"ALLOCSET",var:1,buff:b}),V.push({cmd:"ALLOC",var:2,len:P*Z});for(let I=0;I<P;I++)V.push({cmd:"CALL",fnName:"g1m_subAffine",params:[{var:0,offset:I*w},{var:1,offset:I*w},{var:2,offset:I*Z}]});return V.push({cmd:"CALL",fnName:"g1m_batchToAffine",params:[{var:2},{val:P},{var:2}]}),V.push({cmd:"GET",out:0,var:2,len:P*w}),await u.tm.queueAction(V)}}async function Jy(a,t,e,n){const i={type:"bigMem"};return await A0(a,t,i,n),await I0(i,t,e,n)}async function Yy(a,t,e,n,i){await ue.exports.ready();const{fd:o,sections:s}=await Ie(a,"zkey",2),r=await qn(o,s);if(r.protocol!="groth16")throw new Error("zkey file is not groth16");const u=await Ln(r.q),l=await po(o,u,s),c=await pn(t,"zkey",1,10),f=await Vs(n),g=ue.exports(64);g.update(l.csHash);for(let G=0;G<l.contributions.length;G++)Ii(g,u,l.contributions[G]);const L={};L.delta={},L.delta.prvKey=u.Fr.fromRng(f),L.delta.g1_s=u.G1.toAffine(u.G1.fromRng(f)),L.delta.g1_sx=u.G1.toAffine(u.G1.timesFr(L.delta.g1_s,L.delta.prvKey)),Gn(g,u,L.delta.g1_s),Gn(g,u,L.delta.g1_sx),L.transcript=g.digest(),L.delta.g2_sp=xa(u,L.transcript),L.delta.g2_spx=u.G2.toAffine(u.G2.timesFr(L.delta.g2_sp,L.delta.prvKey)),r.vk_delta_1=u.G1.timesFr(r.vk_delta_1,L.delta.prvKey),r.vk_delta_2=u.G2.timesFr(r.vk_delta_2,L.delta.prvKey),L.deltaAfter=r.vk_delta_1,L.type=0,e&&(L.name=e),l.contributions.push(L),await Zl(c,r),await be(o,s,c,3),await be(o,s,c,4),await be(o,s,c,5),await be(o,s,c,6),await be(o,s,c,7);const S=u.Fr.inv(L.delta.prvKey);await xs(o,s,c,8,u,"G1",S,u.Fr.e(1),"L Section",i),await xs(o,s,c,9,u,"G1",S,u.Fr.e(1),"H Section",i),await Xl(c,u,l),await o.close(),await c.close();const k=ue.exports(64);Ii(k,u,L);const E=k.digest();return i&&i.info(xe(l.csHash,"Circuit Hash: ")),i&&i.info(xe(E,"Contribution Hash: ")),E}async function jy(a,t,e,n,i,o){await ue.exports.ready();const s=l0(n);if(s.byteLength==0||s.byteLength*2!=n.length)return o&&o.error("Invalid Beacon Hash. (It must be a valid hexadecimal sequence)"),!1;if(s.length>=256)return o&&o.error("Maximum length of beacon hash is 255 bytes"),!1;if(i=parseInt(i),i<10||i>63)return o&&o.error("Invalid numIterationsExp. (Must be between 10 and 63)"),!1;const{fd:r,sections:u}=await Ie(a,"zkey",2),l=await qn(r,u);if(l.protocol!="groth16")throw new Error("zkey file is not groth16");const c=await Ln(l.q),f=await po(r,c,u),g=await pn(t,"zkey",1,10),L=await Wl(s,i),S=ue.exports(64);S.update(f.csHash);for(let N=0;N<f.contributions.length;N++)Ii(S,c,f.contributions[N]);const k={};k.delta={},k.delta.prvKey=c.Fr.fromRng(L),k.delta.g1_s=c.G1.toAffine(c.G1.fromRng(L)),k.delta.g1_sx=c.G1.toAffine(c.G1.timesFr(k.delta.g1_s,k.delta.prvKey)),Gn(S,c,k.delta.g1_s),Gn(S,c,k.delta.g1_sx),k.transcript=S.digest(),k.delta.g2_sp=xa(c,k.transcript),k.delta.g2_spx=c.G2.toAffine(c.G2.timesFr(k.delta.g2_sp,k.delta.prvKey)),l.vk_delta_1=c.G1.timesFr(l.vk_delta_1,k.delta.prvKey),l.vk_delta_2=c.G2.timesFr(l.vk_delta_2,k.delta.prvKey),k.deltaAfter=l.vk_delta_1,k.type=1,k.numIterationsExp=i,k.beaconHash=s,e&&(k.name=e),f.contributions.push(k),await Zl(g,l),await be(r,u,g,3),await be(r,u,g,4),await be(r,u,g,5),await be(r,u,g,6),await be(r,u,g,7);const E=c.Fr.inv(k.delta.prvKey);await xs(r,u,g,8,c,"G1",E,c.Fr.e(1),"L Section",o),await xs(r,u,g,9,c,"G1",E,c.Fr.e(1),"H Section",o),await Xl(g,c,f),await r.close(),await g.close();const G=ue.exports(64);Ii(G,c,k);const C=G.digest();return o&&o.info(xe(C,"Contribution Hash: ")),C}async function Vy(a){const t=await Qb(a,!0);return delete t.curve,delete t.F,nn.stringifyBigInts(t)}async function Wy(a,t,e,n,i){await ue.exports.ready();const o=await Vs(n),s=a.Fr.fromRng(o),r=a.Fr.inv(s),u=a.G1.F.n8*2,l=a.G2.F.n8*2,c=await Ci(t),f=await yo(e);await nt(u),await nt(u),await nt(l),await nt(l);const g=await I(),L=a.G1.timesFr(g,s);await _(L);const S=await y(),k=a.G2.timesFr(S,s);await T(k);const E=await c.readUBE32();await f.writeUBE32(E),await nt(E*u);const G=await c.readUBE32();await f.writeUBE32(G),await Gi(c,f,null,a,"G1",G,r,a.Fr.e(1),"UNCOMPRESSED","H",i);const C=await c.readUBE32();await f.writeUBE32(C),await Gi(c,f,null,a,"G1",C,r,a.Fr.e(1),"UNCOMPRESSED","L",i);const N=await c.readUBE32();await f.writeUBE32(N),await nt(N*u);const J=await c.readUBE32();await f.writeUBE32(J),await nt(J*u);const j=await c.readUBE32();await f.writeUBE32(j),await nt(j*l);const R=ue.exports(64),b={};b.csHash=await c.read(64),R.update(b.csHash);const w=await c.readUBE32();b.contributions=[];for(let B=0;B<w;B++){const Y={delta:{}};Y.deltaAfter=await I(),Y.delta.g1_s=await I(),Y.delta.g1_sx=await I(),Y.delta.g2_spx=await y(),Y.transcript=await c.read(64),b.contributions.push(Y),Ii(R,a,Y)}const Z={};Z.delta={},Z.delta.prvKey=s,Z.delta.g1_s=a.G1.toAffine(a.G1.fromRng(o)),Z.delta.g1_sx=a.G1.toAffine(a.G1.timesFr(Z.delta.g1_s,s)),Gn(R,a,Z.delta.g1_s),Gn(R,a,Z.delta.g1_sx),Z.transcript=R.digest(),Z.delta.g2_sp=xa(a,Z.transcript),Z.delta.g2_spx=a.G2.toAffine(a.G2.timesFr(Z.delta.g2_sp,s)),Z.deltaAfter=L,Z.type=0,b.contributions.push(Z),await f.write(b.csHash),await f.writeUBE32(b.contributions.length);for(let B=0;B<b.contributions.length;B++){const Y=b.contributions[B];await _(Y.deltaAfter),await _(Y.delta.g1_s),await _(Y.delta.g1_sx),await T(Y.delta.g2_spx),await f.write(Y.transcript)}const P=ue.exports(64);Ii(P,a,Z);const V=P.digest();return i&&i.info(xe(V,"Contribution Hash: ")),await f.close(),await c.close(),V;async function nt(B){const Y=c.pageSize*2;for(let tt=0;tt<B;tt+=Y){const $=Math.min(B-tt,Y),X=await c.read($);await f.write(X)}}async function I(){const B=await c.read(a.G1.F.n8*2);return a.G1.fromRprUncompressed(B,0)}async function y(){const B=await c.read(a.G2.F.n8*2);return a.G2.fromRprUncompressed(B,0)}async function _(B){const Y=new Uint8Array(u);a.G1.toRprUncompressed(Y,0,B),await f.write(Y)}async function T(B){const Y=new Uint8Array(l);a.G2.toRprUncompressed(Y,0,B),await f.write(Y)}}const{stringifyBigInts:nu}=nn;async function E0(a,t){t&&t.info("EXPORT VERIFICATION KEY STARTED");const{fd:e,sections:n}=await Ie(a,"zkey",2),i=await qn(e,n);t&&t.info("> Detected protocol: "+i.protocol);let o;if(i.protocol==="groth16")o=await Zy(i,e,n);else if(i.protocol==="plonk")o=await Xy(i);else if(i.protocolId&&i.protocolId===Sa)o=await $y(i);else throw new Error("zkey file protocol unrecognized");return await e.close(),t&&t.info("EXPORT VERIFICATION KEY FINISHED"),o}async function Zy(a,t,e){const n=await Ln(a.q),i=n.G1.F.n8*2,o=await n.pairing(a.vk_alpha_1,a.vk_beta_2);let s={protocol:a.protocol,curve:n.name,nPublic:a.nPublic,vk_alpha_1:n.G1.toObject(a.vk_alpha_1),vk_beta_2:n.G2.toObject(a.vk_beta_2),vk_gamma_2:n.G2.toObject(a.vk_gamma_2),vk_delta_2:n.G2.toObject(a.vk_delta_2),vk_alphabeta_12:n.Gt.toObject(o)};await Ee(t,e,3),s.IC=[];for(let r=0;r<=a.nPublic;r++){const u=await t.read(i),l=n.G1.toObject(u);s.IC.push(l)}return await Ce(t),s=nu(s),s}async function Xy(a){const t=await Ln(a.q);let e={protocol:a.protocol,curve:t.name,nPublic:a.nPublic,power:a.power,k1:t.Fr.toObject(a.k1),k2:t.Fr.toObject(a.k2),Qm:t.G1.toObject(a.Qm),Ql:t.G1.toObject(a.Ql),Qr:t.G1.toObject(a.Qr),Qo:t.G1.toObject(a.Qo),Qc:t.G1.toObject(a.Qc),S1:t.G1.toObject(a.S1),S2:t.G1.toObject(a.S2),S3:t.G1.toObject(a.S3),X_2:t.G2.toObject(a.X_2),w:t.Fr.toObject(t.Fr.w[a.power])};return e=nu(e),e}async function $y(a,t){const e=await Ln(a.q);let n={protocol:a.protocol,curve:e.name,nPublic:a.nPublic,power:a.power,k1:e.Fr.toObject(a.k1),k2:e.Fr.toObject(a.k2),w:e.Fr.toObject(e.Fr.w[a.power]),w3:e.Fr.toObject(a.w3),w4:e.Fr.toObject(a.w4),w8:e.Fr.toObject(a.w8),wr:e.Fr.toObject(a.wr),X_2:e.G2.toObject(a.X_2),C0:e.G1.toObject(a.C0)};return nu(n)}var C0={};const{unstringifyBigInts:tA,stringifyBigInts:eA}=nn;async function B0(a,t,e){e&&e.info("FFLONK EXPORT SOLIDITY VERIFIER STARTED");const n=await Ji(a.curve);let i=l(a.w3);a.w3_2=c(n.Fr.square(i));let o=l(a.w4);a.w4_2=c(n.Fr.square(o)),a.w4_3=c(n.Fr.mul(n.Fr.square(o),o));let s=l(a.w8),r=n.Fr.one;for(let f=1;f<8;f++)r=n.Fr.mul(r,s),a["w8_"+f]=c(r);let u=t[a.protocol];return e&&e.info("FFLONK EXPORT SOLIDITY VERIFIER FINISHED"),C0.render(u,a);function l(f){const g=tA(f);return n.Fr.fromObject(g)}function c(f){const g=n.Fr.toObject(f);return eA(g)}}async function nA(a,t,e){const n=await E0(a,e);if(n.protocol==="fflonk")return B0(n,t,e);let i=t[n.protocol];return C0.render(i,n)}var iA=Object.freeze({__proto__:null,newZKey:A0,exportBellman:Ny,importBellman:zy,verifyFromR1cs:Jy,verifyFromInit:I0,contribute:Yy,beacon:jy,exportJson:Vy,bellmanContribute:Wy,exportVerificationKey:E0,exportSolidityVerifier:nA});async function oA(a,t,e,n){globalThis.gc&&globalThis.gc(),await ue.exports.ready();const{fd:i,sections:o}=await Ie(t,"ptau",1),{curve:s,power:r}=await kn(i,o),{fd:u,sections:l}=await Ie(a,"r1cs",1),c=await Zs(u,l,{loadConstraints:!0,loadCustomGates:!0}),f=s.G1.F.n8*2,g=s.G1,L=s.G2.F.n8*2,S=s.Fr,k=s.Fr.n8;n&&n.info("Reading r1cs"),await ye(u,l,2);const E=new Cn,G=new Cn;let C=c.nVars;const N=c.nOutputs+c.nPubInputs;await I(s.Fr,c,n),globalThis.gc&&globalThis.gc();const J=await pn(e,"zkey",1,14,1<<22,1<<24);if(c.prime!=s.r)return n&&n.error("r1cs curve does not match powers of tau ceremony curve"),-1;let j=Bi(E.length-1)+1;j<3&&(j=3);const R=2**j;if(n&&n.info("Plonk constraints: "+E.length),j>r)return n&&n.error(`circuit too big for this power of tau ceremony. ${E.length} > 2**${r}`),-1;if(!o[12])return n&&n.error("Powers of tau is not prepared."),-1;const b=new Ht(R*f),w=o[12][0].p+(2**j-1)*f;await i.readToBuffer(b,0,R*f,w);const[Z,P]=X(),V={};await B(3,"Additions"),globalThis.gc&&globalThis.gc(),await y(4,0,"Amap"),globalThis.gc&&globalThis.gc(),await y(5,1,"Bmap"),globalThis.gc&&globalThis.gc(),await y(6,2,"Cmap"),globalThis.gc&&globalThis.gc(),await _(7,3,"Qm"),globalThis.gc&&globalThis.gc(),await _(8,4,"Ql"),globalThis.gc&&globalThis.gc(),await _(9,5,"Qr"),globalThis.gc&&globalThis.gc(),await _(10,6,"Qo"),globalThis.gc&&globalThis.gc(),await _(11,7,"Qc"),globalThis.gc&&globalThis.gc(),await Y(12,"sigma"),globalThis.gc&&globalThis.gc(),await tt(13,"lagrange polynomials"),globalThis.gc&&globalThis.gc(),await ge(J,14);const nt=new Ht((R+6)*f);await i.readToBuffer(nt,0,(R+6)*f,o[2][0].p),await J.write(nt),await pe(J),globalThis.gc&&globalThis.gc(),await $(),await J.close(),await u.close(),await i.close(),n&&n.info("Setup Finished");return;async function I(F,M,W){function A(et){const ct=Object.keys(et);for(let dt=0;dt<ct.length;dt++)et[ct[dt]]==0n&&delete et[ct[dt]]}function h(et,ct,dt){const ft={};for(let Ft in et)typeof ft[Ft]>"u"?ft[Ft]=F.mul(ct,et[Ft]):ft[Ft]=F.add(ft[Ft],F.mul(ct,et[Ft]));for(let Ft in dt)typeof ft[Ft]>"u"?ft[Ft]=dt[Ft]:ft[Ft]=F.add(ft[Ft],dt[Ft]);return A(ft),ft}function Q(et,ct){const dt={k:F.zero,s:[],coefs:[]},ft=[];for(let Ft in et)Ft==0?dt.k=F.add(dt.k,et[Ft]):et[Ft]!=0n&&ft.push([Number(Ft),et[Ft]]);for(;ft.length>ct;){const Ft=ft.shift(),rt=ft.shift(),z=Ft[0],wt=rt[0],yt=C++,It=F.zero,Ut=F.neg(Ft[1]),Dt=F.neg(rt[1]),Mt=F.one,Qt=F.zero;E.push([z,wt,yt,It,Ut,Dt,Mt,Qt]),G.push([z,wt,Ft[1],rt[1]]),ft.push([yt,F.one])}for(let Ft=0;Ft<ft.length;Ft++)dt.s[Ft]=ft[Ft][0],dt.coefs[Ft]=ft[Ft][1];for(;dt.coefs.length<ct;)dt.s.push(0),dt.coefs.push(F.zero);return dt}function p(et){const ct=Q(et,3),dt=ct.s[0],ft=ct.s[1],Ft=ct.s[2],rt=F.zero,z=ct.coefs[0],wt=ct.coefs[1],yt=ct.coefs[2],It=ct.k;E.push([dt,ft,Ft,rt,z,wt,yt,It])}function d(et,ct,dt){const ft=Q(et,1),Ft=Q(ct,1),rt=Q(dt,1),z=ft.s[0],wt=Ft.s[0],yt=rt.s[0],It=F.mul(ft.coefs[0],Ft.coefs[0]),Ut=F.mul(ft.coefs[0],Ft.k),Dt=F.mul(ft.k,Ft.coefs[0]),Mt=F.neg(rt.coefs[0]),Qt=F.sub(F.mul(ft.k,Ft.k),rt.k);E.push([z,wt,yt,It,Ut,Dt,Mt,Qt])}function m(et){let ct=F.zero,dt=0;const ft=Object.keys(et);for(let Ft=0;Ft<ft.length;Ft++)et[ft[Ft]]==0n?delete et[ft[Ft]]:ft[Ft]==0?ct=F.add(ct,et[ft[Ft]]):dt++;return dt>0?dt.toString():ct!=F.zero?"k":"0"}function v(et,ct,dt){const ft=m(et),Ft=m(ct);if(ft==="0"||Ft==="0")A(dt),p(dt);else if(ft==="k"){const rt=h(ct,et[0],dt);p(rt)}else if(Ft==="k"){const rt=h(et,ct[0],dt);p(rt)}else d(et,ct,dt)}for(let et=1;et<=N;et++){const ct=et,dt=0,ft=0,Ft=F.zero,rt=F.one,z=F.zero,wt=F.zero,yt=F.zero;E.push([ct,dt,ft,Ft,rt,z,wt,yt])}for(let et=0;et<M.constraints.length;et++)W&&et%1e4===0&&W.debug(`processing constraints: ${et}/${M.nConstraints}`),v(...M.constraints[et])}async function y(F,M,W){await ge(J,F);for(let A=0;A<E.length;A++)await J.writeULE32(E[A][M]),n&&A%1e6==0&&n.debug(`writing ${W}: ${A}/${E.length}`);await pe(J)}async function _(F,M,W){let A=new Ht(R*k);for(let h=0;h<E.length;h++)A.set(E[h][M],h*k),n&&h%1e6==0&&n.debug(`writing ${W}: ${h}/${E.length}`);await ge(J,F),await T(A),await pe(J),A=await S.batchFromMontgomery(A),V[W]=await s.G1.multiExpAffine(b,A,n,"multiexp "+W)}async function T(F){const M=await S.ifft(F),W=new Ht(R*k*4);W.set(M,0);const A=await S.fft(W);await J.write(M),await J.write(A)}async function B(F,M){await ge(J,F);const W=new Uint8Array(2*4+2*k),A=new DataView(W.buffer);for(let h=0;h<G.length;h++){const Q=G[h];let p=0;A.setUint32(p,Q[0],!0),p+=4,A.setUint32(p,Q[1],!0),p+=4,W.set(Q[2],p),p+=k,W.set(Q[3],p),p+=k,await J.write(W),n&&h%1e6==0&&n.debug(`writing ${M}: ${h}/${G.length}`)}await pe(J)}async function Y(F,M){const W=new Ht(k*R*3),A=new Cn(C),h=new Cn(C);let Q=S.one;for(let et=0;et<R;et++)et<E.length?(v(E[et][0],et),v(E[et][1],R+et),v(E[et][2],R*2+et)):(v(0,et),v(0,R+et),v(0,R*2+et)),Q=S.mul(Q,S.w[j]),n&&et%1e6==0&&n.debug(`writing ${M} phase1: ${et}/${E.length}`);for(let et=0;et<C;et++)typeof h[et]<"u"?W.set(A[et],h[et]*k):console.log("Variable not used"),n&&et%1e6==0&&n.debug(`writing ${M} phase2: ${et}/${C}`);globalThis.gc&&globalThis.gc(),await ge(J,F);let p=W.slice(0,R*k);await T(p),globalThis.gc&&globalThis.gc();let d=W.slice(R*k,R*k*2);await T(d),globalThis.gc&&globalThis.gc();let m=W.slice(R*k*2,R*k*3);await T(m),globalThis.gc&&globalThis.gc(),await pe(J),p=await S.batchFromMontgomery(p),d=await S.batchFromMontgomery(d),m=await S.batchFromMontgomery(m),V.S1=await s.G1.multiExpAffine(b,p,n,"multiexp S1"),globalThis.gc&&globalThis.gc(),V.S2=await s.G1.multiExpAffine(b,d,n,"multiexp S2"),globalThis.gc&&globalThis.gc(),V.S3=await s.G1.multiExpAffine(b,m,n,"multiexp S3"),globalThis.gc&&globalThis.gc();function v(et,ct){typeof A[et]>"u"?h[et]=ct:W.set(A[et],ct*k);let dt;ct<R?dt=Q:ct<2*R?dt=S.mul(Q,Z):dt=S.mul(Q,P),A[et]=dt}}async function tt(F,M){await ge(J,F);const W=Math.max(N,1);for(let A=0;A<W;A++){let h=new Ht(R*k);h.set(S.one,A*k),await T(h),n&&n.debug(`writing ${M} ${A}/${W}`)}await pe(J)}async function $(){await ge(J,1),await J.writeULE32(2),await pe(J),await ge(J,2);const F=s.q,M=(Math.floor((oe.bitLength(F)-1)/64)+1)*8,W=s.r,A=(Math.floor((oe.bitLength(W)-1)/64)+1)*8;await J.writeULE32(M),await Dn(J,F,M),await J.writeULE32(A),await Dn(J,W,A),await J.writeULE32(C),await J.writeULE32(N),await J.writeULE32(R),await J.writeULE32(G.length),await J.writeULE32(E.length),await J.write(Z),await J.write(P),await J.write(g.toAffine(V.Qm)),await J.write(g.toAffine(V.Ql)),await J.write(g.toAffine(V.Qr)),await J.write(g.toAffine(V.Qo)),await J.write(g.toAffine(V.Qc)),await J.write(g.toAffine(V.S1)),await J.write(g.toAffine(V.S2)),await J.write(g.toAffine(V.S3));let h;h=await i.read(L,o[3][0].p+L),await J.write(h),await pe(J)}function X(){let F=S.two;for(;W(F,[],j);)S.add(F,S.one);let M=S.add(F,S.one);for(;W(M,[F],j);)S.add(M,S.one);return[F,M];function W(A,h,Q){const p=2**Q;let d=S.one;for(let m=0;m<p;m++){if(S.eq(A,d))return!0;for(let v=0;v<h.length;v++)if(S.eq(A,S.mul(h[v],d)))return!0;d=S.mul(d,S.w[Q])}return!1}}}class iu{constructor(t,e){this.curve=t,this.logger=e,this.resetProof()}resetProof(){this.polynomials={},this.evaluations={}}addPolynomial(t,e){t in this.polynomials&&this.logger.warn(`proof: polynomial.${t} already exist in proof`),this.polynomials[t]=e}getPolynomial(t){return t in this.polynomials||this.logger.warn(`proof: polynomial ${t} does not exist in proof`),this.polynomials[t]}addEvaluation(t,e){t in this.evaluations&&this.logger.warn(`proof: evaluations.${t} already exist in proof`),this.evaluations[t]=e}getEvaluation(t){return t in this.evaluations||this.logger.warn(`proof: evaluation ${t} does not exist in proof`),this.evaluations[t]}toObjectProof(t=!0){let e=t?{polynomials:{},evaluations:{}}:{};return Object.keys(this.polynomials).forEach(n=>{const i=this.curve.G1.toObject(this.polynomials[n]);t?e.polynomials[n]=i:e[n]=i}),Object.keys(this.evaluations).forEach(n=>{const i=this.curve.Fr.toObject(this.evaluations[n]);t?e.evaluations[n]=i:e[n]=i}),e}fromObjectProof(t){this.resetProof(),Object.keys(t.polynomials).forEach(e=>{this.polynomials[e]=this.curve.G1.fromObject(t.polynomials[e])}),Object.keys(t.evaluations).forEach(e=>{this.evaluations[e]=this.curve.Fr.fromObject(t.evaluations[e])})}}var v0={exports:{}};/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */(function(a){(function(){var t="input is invalid type",e="finalize already called",n=typeof window=="object",i=n?window:{};i.JS_SHA3_NO_WINDOW&&(n=!1);var o=!n&&typeof self=="object",s=!i.JS_SHA3_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;s?i=gb:o&&(i=self);var r=!i.JS_SHA3_NO_COMMON_JS&&!0&&a.exports,u=!i.JS_SHA3_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",l="0123456789abcdef".split(""),c=[31,7936,2031616,520093696],f=[4,1024,262144,67108864],g=[1,256,65536,16777216],L=[6,1536,393216,100663296],S=[0,8,16,24],k=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],E=[224,256,384,512],G=[128,256],C=["hex","buffer","arrayBuffer","array","digest"],N={128:168,256:136};(i.JS_SHA3_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(A){return Object.prototype.toString.call(A)==="[object Array]"}),u&&(i.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(A){return typeof A=="object"&&A.buffer&&A.buffer.constructor===ArrayBuffer});for(var J=function(A,h,Q){return function(p){return new F(A,h,A).update(p)[Q]()}},j=function(A,h,Q){return function(p,d){return new F(A,h,d).update(p)[Q]()}},R=function(A,h,Q){return function(p,d,m,v){return y["cshake"+A].update(p,d,m,v)[Q]()}},b=function(A,h,Q){return function(p,d,m,v){return y["kmac"+A].update(p,d,m,v)[Q]()}},w=function(A,h,Q,p){for(var d=0;d<C.length;++d){var m=C[d];A[m]=h(Q,p,m)}return A},Z=function(A,h){var Q=J(A,h,"hex");return Q.create=function(){return new F(A,h,A)},Q.update=function(p){return Q.create().update(p)},w(Q,J,A,h)},P=function(A,h){var Q=j(A,h,"hex");return Q.create=function(p){return new F(A,h,p)},Q.update=function(p,d){return Q.create(d).update(p)},w(Q,j,A,h)},V=function(A,h){var Q=N[A],p=R(A,h,"hex");return p.create=function(d,m,v){return!m&&!v?y["shake"+A].create(d):new F(A,h,d).bytepad([m,v],Q)},p.update=function(d,m,v,et){return p.create(m,v,et).update(d)},w(p,R,A,h)},nt=function(A,h){var Q=N[A],p=b(A,h,"hex");return p.create=function(d,m,v){return new M(A,h,m).bytepad(["KMAC",v],Q).bytepad([d],Q)},p.update=function(d,m,v,et){return p.create(d,v,et).update(m)},w(p,b,A,h)},I=[{name:"keccak",padding:g,bits:E,createMethod:Z},{name:"sha3",padding:L,bits:E,createMethod:Z},{name:"shake",padding:c,bits:G,createMethod:P},{name:"cshake",padding:f,bits:G,createMethod:V},{name:"kmac",padding:f,bits:G,createMethod:nt}],y={},_=[],T=0;T<I.length;++T)for(var B=I[T],Y=B.bits,tt=0;tt<Y.length;++tt){var $=B.name+"_"+Y[tt];if(_.push($),y[$]=B.createMethod(Y[tt],B.padding),B.name!=="sha3"){var X=B.name+Y[tt];_.push(X),y[X]=y[$]}}function F(A,h,Q){this.blocks=[],this.s=[],this.padding=h,this.outputBits=Q,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(A<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=Q>>5,this.extraBytes=(Q&31)>>3;for(var p=0;p<50;++p)this.s[p]=0}F.prototype.update=function(A){if(this.finalized)throw new Error(e);var h,Q=typeof A;if(Q!=="string"){if(Q==="object"){if(A===null)throw new Error(t);if(u&&A.constructor===ArrayBuffer)A=new Uint8Array(A);else if(!Array.isArray(A)&&(!u||!ArrayBuffer.isView(A)))throw new Error(t)}else throw new Error(t);h=!0}for(var p=this.blocks,d=this.byteCount,m=A.length,v=this.blockCount,et=0,ct=this.s,dt,ft;et<m;){if(this.reset)for(this.reset=!1,p[0]=this.block,dt=1;dt<v+1;++dt)p[dt]=0;if(h)for(dt=this.start;et<m&&dt<d;++et)p[dt>>2]|=A[et]<<S[dt++&3];else for(dt=this.start;et<m&&dt<d;++et)ft=A.charCodeAt(et),ft<128?p[dt>>2]|=ft<<S[dt++&3]:ft<2048?(p[dt>>2]|=(192|ft>>6)<<S[dt++&3],p[dt>>2]|=(128|ft&63)<<S[dt++&3]):ft<55296||ft>=57344?(p[dt>>2]|=(224|ft>>12)<<S[dt++&3],p[dt>>2]|=(128|ft>>6&63)<<S[dt++&3],p[dt>>2]|=(128|ft&63)<<S[dt++&3]):(ft=65536+((ft&1023)<<10|A.charCodeAt(++et)&1023),p[dt>>2]|=(240|ft>>18)<<S[dt++&3],p[dt>>2]|=(128|ft>>12&63)<<S[dt++&3],p[dt>>2]|=(128|ft>>6&63)<<S[dt++&3],p[dt>>2]|=(128|ft&63)<<S[dt++&3]);if(this.lastByteIndex=dt,dt>=d){for(this.start=dt-d,this.block=p[v],dt=0;dt<v;++dt)ct[dt]^=p[dt];W(ct),this.reset=!0}else this.start=dt}return this},F.prototype.encode=function(A,h){var Q=A&255,p=1,d=[Q];for(A=A>>8,Q=A&255;Q>0;)d.unshift(Q),A=A>>8,Q=A&255,++p;return h?d.push(p):d.unshift(p),this.update(d),d.length},F.prototype.encodeString=function(A){var h,Q=typeof A;if(Q!=="string"){if(Q==="object"){if(A===null)throw new Error(t);if(u&&A.constructor===ArrayBuffer)A=new Uint8Array(A);else if(!Array.isArray(A)&&(!u||!ArrayBuffer.isView(A)))throw new Error(t)}else throw new Error(t);h=!0}var p=0,d=A.length;if(h)p=d;else for(var m=0;m<A.length;++m){var v=A.charCodeAt(m);v<128?p+=1:v<2048?p+=2:v<55296||v>=57344?p+=3:(v=65536+((v&1023)<<10|A.charCodeAt(++m)&1023),p+=4)}return p+=this.encode(p*8),this.update(A),p},F.prototype.bytepad=function(A,h){for(var Q=this.encode(h),p=0;p<A.length;++p)Q+=this.encodeString(A[p]);var d=h-Q%h,m=[];return m.length=d,this.update(m),this},F.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var A=this.blocks,h=this.lastByteIndex,Q=this.blockCount,p=this.s;if(A[h>>2]|=this.padding[h&3],this.lastByteIndex===this.byteCount)for(A[0]=A[Q],h=1;h<Q+1;++h)A[h]=0;for(A[Q-1]|=2147483648,h=0;h<Q;++h)p[h]^=A[h];W(p)}},F.prototype.toString=F.prototype.hex=function(){this.finalize();for(var A=this.blockCount,h=this.s,Q=this.outputBlocks,p=this.extraBytes,d=0,m=0,v="",et;m<Q;){for(d=0;d<A&&m<Q;++d,++m)et=h[d],v+=l[et>>4&15]+l[et&15]+l[et>>12&15]+l[et>>8&15]+l[et>>20&15]+l[et>>16&15]+l[et>>28&15]+l[et>>24&15];m%A===0&&(W(h),d=0)}return p&&(et=h[d],v+=l[et>>4&15]+l[et&15],p>1&&(v+=l[et>>12&15]+l[et>>8&15]),p>2&&(v+=l[et>>20&15]+l[et>>16&15])),v},F.prototype.arrayBuffer=function(){this.finalize();var A=this.blockCount,h=this.s,Q=this.outputBlocks,p=this.extraBytes,d=0,m=0,v=this.outputBits>>3,et;p?et=new ArrayBuffer(Q+1<<2):et=new ArrayBuffer(v);for(var ct=new Uint32Array(et);m<Q;){for(d=0;d<A&&m<Q;++d,++m)ct[m]=h[d];m%A===0&&W(h)}return p&&(ct[d]=h[d],et=et.slice(0,v)),et},F.prototype.buffer=F.prototype.arrayBuffer,F.prototype.digest=F.prototype.array=function(){this.finalize();for(var A=this.blockCount,h=this.s,Q=this.outputBlocks,p=this.extraBytes,d=0,m=0,v=[],et,ct;m<Q;){for(d=0;d<A&&m<Q;++d,++m)et=m<<2,ct=h[d],v[et]=ct&255,v[et+1]=ct>>8&255,v[et+2]=ct>>16&255,v[et+3]=ct>>24&255;m%A===0&&W(h)}return p&&(et=m<<2,ct=h[d],v[et]=ct&255,p>1&&(v[et+1]=ct>>8&255),p>2&&(v[et+2]=ct>>16&255)),v};function M(A,h,Q){F.call(this,A,h,Q)}M.prototype=new F,M.prototype.finalize=function(){return this.encode(this.outputBits,!0),F.prototype.finalize.call(this)};var W=function(A){var h,Q,p,d,m,v,et,ct,dt,ft,Ft,rt,z,wt,yt,It,Ut,Dt,Mt,Qt,it,K,U,D,ot,st,lt,at,x,q,gt,mt,ut,Ct,vt,kt,Ot,Rt,ht,O,H,pt,Lt,bt,Bt,At,xt,_t,St,Gt,Tt,zt,Xt,Kt,Yt,re,ie,Vt,ae,te,Le,ke,We;for(p=0;p<48;p+=2)d=A[0]^A[10]^A[20]^A[30]^A[40],m=A[1]^A[11]^A[21]^A[31]^A[41],v=A[2]^A[12]^A[22]^A[32]^A[42],et=A[3]^A[13]^A[23]^A[33]^A[43],ct=A[4]^A[14]^A[24]^A[34]^A[44],dt=A[5]^A[15]^A[25]^A[35]^A[45],ft=A[6]^A[16]^A[26]^A[36]^A[46],Ft=A[7]^A[17]^A[27]^A[37]^A[47],rt=A[8]^A[18]^A[28]^A[38]^A[48],z=A[9]^A[19]^A[29]^A[39]^A[49],h=rt^(v<<1|et>>>31),Q=z^(et<<1|v>>>31),A[0]^=h,A[1]^=Q,A[10]^=h,A[11]^=Q,A[20]^=h,A[21]^=Q,A[30]^=h,A[31]^=Q,A[40]^=h,A[41]^=Q,h=d^(ct<<1|dt>>>31),Q=m^(dt<<1|ct>>>31),A[2]^=h,A[3]^=Q,A[12]^=h,A[13]^=Q,A[22]^=h,A[23]^=Q,A[32]^=h,A[33]^=Q,A[42]^=h,A[43]^=Q,h=v^(ft<<1|Ft>>>31),Q=et^(Ft<<1|ft>>>31),A[4]^=h,A[5]^=Q,A[14]^=h,A[15]^=Q,A[24]^=h,A[25]^=Q,A[34]^=h,A[35]^=Q,A[44]^=h,A[45]^=Q,h=ct^(rt<<1|z>>>31),Q=dt^(z<<1|rt>>>31),A[6]^=h,A[7]^=Q,A[16]^=h,A[17]^=Q,A[26]^=h,A[27]^=Q,A[36]^=h,A[37]^=Q,A[46]^=h,A[47]^=Q,h=ft^(d<<1|m>>>31),Q=Ft^(m<<1|d>>>31),A[8]^=h,A[9]^=Q,A[18]^=h,A[19]^=Q,A[28]^=h,A[29]^=Q,A[38]^=h,A[39]^=Q,A[48]^=h,A[49]^=Q,wt=A[0],yt=A[1],At=A[11]<<4|A[10]>>>28,xt=A[10]<<4|A[11]>>>28,at=A[20]<<3|A[21]>>>29,x=A[21]<<3|A[20]>>>29,te=A[31]<<9|A[30]>>>23,Le=A[30]<<9|A[31]>>>23,pt=A[40]<<18|A[41]>>>14,Lt=A[41]<<18|A[40]>>>14,Ct=A[2]<<1|A[3]>>>31,vt=A[3]<<1|A[2]>>>31,It=A[13]<<12|A[12]>>>20,Ut=A[12]<<12|A[13]>>>20,_t=A[22]<<10|A[23]>>>22,St=A[23]<<10|A[22]>>>22,q=A[33]<<13|A[32]>>>19,gt=A[32]<<13|A[33]>>>19,ke=A[42]<<2|A[43]>>>30,We=A[43]<<2|A[42]>>>30,Kt=A[5]<<30|A[4]>>>2,Yt=A[4]<<30|A[5]>>>2,kt=A[14]<<6|A[15]>>>26,Ot=A[15]<<6|A[14]>>>26,Dt=A[25]<<11|A[24]>>>21,Mt=A[24]<<11|A[25]>>>21,Gt=A[34]<<15|A[35]>>>17,Tt=A[35]<<15|A[34]>>>17,mt=A[45]<<29|A[44]>>>3,ut=A[44]<<29|A[45]>>>3,D=A[6]<<28|A[7]>>>4,ot=A[7]<<28|A[6]>>>4,re=A[17]<<23|A[16]>>>9,ie=A[16]<<23|A[17]>>>9,Rt=A[26]<<25|A[27]>>>7,ht=A[27]<<25|A[26]>>>7,Qt=A[36]<<21|A[37]>>>11,it=A[37]<<21|A[36]>>>11,zt=A[47]<<24|A[46]>>>8,Xt=A[46]<<24|A[47]>>>8,bt=A[8]<<27|A[9]>>>5,Bt=A[9]<<27|A[8]>>>5,st=A[18]<<20|A[19]>>>12,lt=A[19]<<20|A[18]>>>12,Vt=A[29]<<7|A[28]>>>25,ae=A[28]<<7|A[29]>>>25,O=A[38]<<8|A[39]>>>24,H=A[39]<<8|A[38]>>>24,K=A[48]<<14|A[49]>>>18,U=A[49]<<14|A[48]>>>18,A[0]=wt^~It&Dt,A[1]=yt^~Ut&Mt,A[10]=D^~st&at,A[11]=ot^~lt&x,A[20]=Ct^~kt&Rt,A[21]=vt^~Ot&ht,A[30]=bt^~At&_t,A[31]=Bt^~xt&St,A[40]=Kt^~re&Vt,A[41]=Yt^~ie&ae,A[2]=It^~Dt&Qt,A[3]=Ut^~Mt&it,A[12]=st^~at&q,A[13]=lt^~x&gt,A[22]=kt^~Rt&O,A[23]=Ot^~ht&H,A[32]=At^~_t&Gt,A[33]=xt^~St&Tt,A[42]=re^~Vt&te,A[43]=ie^~ae&Le,A[4]=Dt^~Qt&K,A[5]=Mt^~it&U,A[14]=at^~q&mt,A[15]=x^~gt&ut,A[24]=Rt^~O&pt,A[25]=ht^~H&Lt,A[34]=_t^~Gt&zt,A[35]=St^~Tt&Xt,A[44]=Vt^~te&ke,A[45]=ae^~Le&We,A[6]=Qt^~K&wt,A[7]=it^~U&yt,A[16]=q^~mt&D,A[17]=gt^~ut&ot,A[26]=O^~pt&Ct,A[27]=H^~Lt&vt,A[36]=Gt^~zt&bt,A[37]=Tt^~Xt&Bt,A[46]=te^~ke&Kt,A[47]=Le^~We&Yt,A[8]=K^~wt&It,A[9]=U^~yt&Ut,A[18]=mt^~D&st,A[19]=ut^~ot&lt,A[28]=pt^~Ct&kt,A[29]=Lt^~vt&Ot,A[38]=zt^~bt&At,A[39]=Xt^~Bt&xt,A[48]=ke^~Kt&re,A[49]=We^~Yt&ie,A[0]^=k[p],A[1]^=k[p+1]};if(r)a.exports=y;else for(T=0;T<_.length;++T)i[_[T]]=y[_[T]]})()})(v0);var aA=v0.exports;const{keccak256:sA}=aA,Jr=0,rA=1;class Oi{constructor(t){this.G1=t.G1,this.Fr=t.Fr,this.reset()}reset(){this.data=[]}addPolCommitment(t){this.data.push({type:Jr,data:t})}addScalar(t){this.data.push({type:rA,data:t})}getChallenge(){if(this.data.length===0)throw new Error("Keccak256Transcript: No data to generate a transcript");let t=0,e=0;this.data.forEach(s=>Jr===s.type?t++:e++);let n=new Uint8Array(e*this.Fr.n8+t*this.G1.F.n8*2),i=0;for(let s=0;s<this.data.length;s++)Jr===this.data[s].type?(this.G1.toRprUncompressed(n,i,this.data[s].data),i+=this.G1.F.n8*2):(this.Fr.toRprBE(n,i,this.data[s].data),i+=this.Fr.n8);const o=oe.fromRprBE(new Uint8Array(sA.arrayBuffer(n)));return this.Fr.e(o)}}class Yr{static getZ1(t){return[t.zero,t.add(t.e(-1),t.w[2]),t.e(-2),t.sub(t.e(-1),t.w[2])]}static getZ2(t){return[t.zero,t.add(t.zero,t.mul(t.e(-2),t.w[2])),t.e(4),t.sub(t.zero,t.mul(t.e(-2),t.w[2]))]}static getZ3(t){return[t.zero,t.add(t.e(2),t.mul(t.e(2),t.w[2])),t.e(-8),t.sub(t.e(2),t.mul(t.e(2),t.w[2]))]}static mul2(t,e,n,i,o,s){const r=this.getZ1(s);let u,l;const c=s.mul(t,e),f=s.mul(t,i),g=s.mul(n,e),L=s.mul(n,i);u=c;let S=s.add(f,g),k=L;return l=S,o&&(l=s.add(l,s.mul(r[o],k))),[u,l]}static mul3(t,e,n,i,o,s,r,u){const l=this.getZ1(u),c=this.getZ2(u);let f,g;const L=u.mul(t,e),S=u.mul(t,o),k=u.mul(i,e),E=u.mul(i,o);f=u.mul(L,n);let G=u.mul(k,n);G=u.add(G,u.mul(S,n)),G=u.add(G,u.mul(L,s));let C=u.mul(E,n);if(C=u.add(C,u.mul(S,s)),C=u.add(C,u.mul(k,s)),g=G,r){const N=u.mul(E,s);g=u.add(g,u.mul(l[r],C)),g=u.add(g,u.mul(c[r],N))}return[f,g]}static mul4(t,e,n,i,o,s,r,u,l,c){const f=this.getZ1(c),g=this.getZ2(c),L=this.getZ3(c);let S,k;const E=c.mul(t,e),G=c.mul(t,s),C=c.mul(o,e),N=c.mul(o,s),J=c.mul(n,i),j=c.mul(n,u),R=c.mul(r,i),b=c.mul(r,u);S=c.mul(E,J);let w=c.mul(C,J);w=c.add(w,c.mul(G,J)),w=c.add(w,c.mul(E,R)),w=c.add(w,c.mul(E,j));let Z=c.mul(N,J);Z=c.add(Z,c.mul(C,R)),Z=c.add(Z,c.mul(C,j)),Z=c.add(Z,c.mul(G,R)),Z=c.add(Z,c.mul(G,j)),Z=c.add(Z,c.mul(E,b));let P=c.mul(G,b);P=c.add(P,c.mul(C,b)),P=c.add(P,c.mul(N,j)),P=c.add(P,c.mul(N,R));let V=c.mul(N,b);return k=w,l&&(k=c.add(k,c.mul(f[l],Z)),k=c.add(k,c.mul(g[l],P)),k=c.add(k,c.mul(L[l],V))),[S,k]}}const Bf=3,cA=4,lA=5,uA=6,jr=7,Vr=8,Wr=9,Zr=10,Xr=11,Mi=12,dA=13,vf=14;class ee{constructor(t,e,n){this.coef=t,this.curve=e,this.Fr=e.Fr,this.G1=e.G1,this.logger=n}static async fromEvaluations(t,e,n){let i=await e.Fr.ifft(t);return new ee(i,e,n)}static fromCoefficientsArray(t,e,n){const i=e.Fr;let o=t.length>32768?new Ht(t.length*i.n8):new Uint8Array(t.length*i.n8);for(let s=0;s<t.length;s++)o.set(t[s],s*i.n8);return new ee(o,e,n)}static fromPolynomial(t,e,n){let i=t.length(),o=e.Fr,s=i>32768?new Ht(i*o.n8):new Uint8Array(i*o.n8);return s.set(t.coef.slice(),0),new ee(s,e,n)}isEqual(t){const e=this.degree();if(e!==t.degree())return!1;for(let n=0;n<e+1;n++)if(!this.Fr.eq(this.getCoef(n),t.getCoef(n)))return!1;return!0}blindCoefficients(t){t=t||[];const e=this.length()+t.length>32768?new Ht((this.length()+t.length)*this.Fr.n8):new Uint8Array((this.length()+t.length)*this.Fr.n8);e.set(this.coef,0);for(let n=0;n<t.length;n++)e.set(this.Fr.add(e.slice((this.length()+n)*this.Fr.n8,(this.length()+n+1)*this.Fr.n8),t[n]),(this.length()+n)*this.Fr.n8),e.set(this.Fr.sub(e.slice(n*this.Fr.n8,(n+1)*this.Fr.n8),t[n]),n*this.Fr.n8);this.coef=e}getCoef(t){const e=t*this.Fr.n8;return e+this.Fr.n8>this.coef.byteLength?this.Fr.zero:this.coef.slice(e,e+this.Fr.n8)}setCoef(t,e){if(t>this.length()-1)throw new Error("Coef index is not available");this.coef.set(e,t*this.Fr.n8)}static async to4T(t,e,n,i){n=n||[];let o=await i.ifft(t);const s=e*4>32768?new Ht(e*4*i.n8):new Uint8Array(e*4*i.n8);s.set(o,0);const r=await i.fft(s);if(n.length===0)return[o,r];const u=e+n.length>32768?new Ht((e+n.length)*i.n8):new Uint8Array((e+n.length)*i.n8);u.set(o,0);for(let l=0;l<n.length;l++)u.set(i.add(u.slice((e+l)*i.n8,(e+l+1)*i.n8),n[l]),(e+l)*i.n8),u.set(i.sub(u.slice(l*i.n8,(l+1)*i.n8),n[l]),l*i.n8);return[u,r]}length(){let t=this.coef.byteLength/this.Fr.n8;if(t!==Math.floor(this.coef.byteLength/this.Fr.n8))throw new Error("Polynomial coefficients buffer has incorrect size");return t===0&&this.logger&&this.logger.warn("Polynomial has length zero"),t}degree(){for(let t=this.length()-1;t>0;t--){const e=t*this.Fr.n8;if(!this.Fr.eq(this.Fr.zero,this.coef.slice(e,e+this.Fr.n8)))return t}return 0}evaluate(t){let e=this.Fr.zero;for(let n=this.degree()+1;n>0;n--){let i=n*this.Fr.n8;const o=this.coef.slice(i-this.Fr.n8,i);e=this.Fr.add(o,this.Fr.mul(e,t))}return e}fastEvaluate(t){const e=this.Fr;let n=3,i=this.degree()+1,o=parseInt(i/n),s=i-o*n,r=[],u=[];u[0]=e.one;for(let l=0;l<n;l++){r[l]=e.zero;let c=l===n-1?o+s:o;for(let f=c;f>0;f--)r[l]=e.add(this.getCoef(l*o+f-1),e.mul(r[l],t)),l===0&&(u[0]=e.mul(u[0],t))}for(let l=1;l<n;l++)r[0]=e.add(r[0],e.mul(u[l-1],r[l])),u[l]=e.mul(u[l-1],u[0]);return r[0]}add(t,e){let n=!1;t.length()>this.length()&&(n=!0);const i=this.length(),o=t.length();for(let s=0;s<Math.max(i,o);s++){const r=s*this.Fr.n8,u=s<i?this.coef.slice(r,r+this.Fr.n8):this.Fr.zero;let l=s<o?t.coef.slice(r,r+this.Fr.n8):this.Fr.zero;e!==void 0&&(l=this.Fr.mul(l,e)),n?t.coef.set(this.Fr.add(u,l),r):this.coef.set(this.Fr.add(u,l),r)}n&&(delete this.coef,this.coef=t.coef)}sub(t,e){let n=!1;t.length()>this.length()&&(n=!0);const i=this.length(),o=t.length();for(let s=0;s<Math.max(i,o);s++){const r=s*this.Fr.n8,u=s<i?this.coef.slice(r,r+this.Fr.n8):this.Fr.zero;let l=s<o?t.coef.slice(r,r+this.Fr.n8):this.Fr.zero;e!==void 0&&(l=this.Fr.mul(l,e)),n?t.coef.set(this.Fr.sub(u,l),r):this.coef.set(this.Fr.sub(u,l),r)}n&&(delete this.coef,this.coef=t.coef)}mulScalar(t){for(let e=0;e<this.length();e++){const n=e*this.Fr.n8;this.coef.set(this.Fr.mul(this.coef.slice(n,n+this.Fr.n8),t),n)}}addScalar(t){const e=this.length()===0?this.Fr.zero:this.coef.slice(0,this.Fr.n8);this.coef.set(this.Fr.add(e,t),0)}subScalar(t){const e=this.length()===0?this.Fr.zero:this.coef.slice(0,this.Fr.n8);this.coef.set(this.Fr.sub(e,t),0)}byXSubValue(t){const e=this.Fr,i=!e.eq(e.zero,this.getCoef(this.length()-1))?this.length()+1:this.length(),o=i>32768?new Ht(i*e.n8):new Uint8Array(i*e.n8);let s=new ee(o,this.curve,this.logger);s.coef.set(this.coef.slice(0,(i-1)*e.n8),32),this.mulScalar(e.neg(t)),s.add(this),this.coef=s.coef}byXNSubValue(t,e){const n=this.Fr,o=!(this.length()-t-1>=this.degree())?this.length()+t:this.length(),s=o>32768?new Ht(o*n.n8):new Uint8Array(o*n.n8);let r=new ee(s,this.curve,this.logger);r.coef.set(this.coef.slice(0,(this.degree()+1)*32),t*32),this.mulScalar(e),r.add(this),this.coef=r.coef}divBy(t){const e=this.Fr,n=this.degree(),i=t.degree();let o=new ee(this.coef,this.curve,this.logger);this.coef=this.length()>32768?new Ht(this.length()*e.n8):new Uint8Array(this.length()*e.n8);for(let s=n-i;s>=0;s--){this.setCoef(s,e.div(o.getCoef(s+i),t.getCoef(i)));for(let r=0;r<=i;r++)o.setCoef(s+r,e.sub(o.getCoef(s+r),e.mul(this.getCoef(s),t.getCoef(r))))}return o}divByMonic(t,e){const n=this.Fr;let i=this.degree(),o=this.length()>32768?new Ht(this.length()*n.n8):new Uint8Array(this.length()*n.n8),s=new ee(o,this.curve,this.logger),r=[];for(let l=0;l<t;l++)s.setCoef(i-l-t,this.getCoef(i-l)),r[l]=this.getCoef(i-l);let u=t;for(let l=0;l<u;l++)for(let c=i-2*t-l;c>=0&&!(c<0);c=c-u){let f=l;r[f]=n.add(this.getCoef(c+t),n.mul(r[f],e)),s.setCoef(c,r[f])}this.coef=s.coef}divByVanishing(t,e){if(this.degree()<t)throw new Error("divByVanishing polynomial divisor must be of degree lower than the dividend polynomial");const n=this.Fr;let i=new ee(this.coef,this.curve,this.logger);this.coef=this.length()>32768?new Ht(this.length()*n.n8):new Uint8Array(this.length()*n.n8);for(let o=this.length()-1;o>=t;o--){let s=i.getCoef(o);n.eq(n.zero,s)||(i.setCoef(o,n.zero),i.setCoef(o-t,n.add(i.getCoef(o-t),n.mul(e,s))),this.setCoef(o-t,n.add(this.getCoef(o-t),s)))}return i}divByVanishing2(t,e){if(this.degree()<t)throw new Error("divByVanishing polynomial divisor must be of degree lower than the dividend polynomial");const n=this.Fr;let i=new ee(this.coef,this.curve,this.logger);this.coef=this.length()>32768?new Ht(this.length()*n.n8):new Uint8Array(this.length()*n.n8);let o=3,s=this.length()-t,r=Math.floor(s/o),u=s-(o-1)*r;console.log(s),console.log(r+"  "+u);for(let l=0;l<o;l++){console.log("> Thread "+l);for(let c=l===0?u:r;c>0;c--){let f=c-1;l!==0&&(f+=(l-1)*r+u);let g=f+t,L=i.getCoef(g);n.eq(n.zero,L)||(i.setCoef(g,n.zero),i.setCoef(f,n.add(i.getCoef(f),n.mul(e,L))),this.setCoef(f,n.add(this.getCoef(f),L)),console.log(f+" <-- "+g))}}return this.print(),i}fastDivByVanishing(t){const e=this.Fr;for(let n=0;n<t.length;n++){let i=t[n][0],o=t[n][1];if(this.degree()<i)throw new Error("divByVanishing polynomial divisor must be of degree lower than the dividend polynomial");let s=5,r=this.length()-i,u=Math.floor(r/s/i),l=u*i,c=r-s*l,f=new ee(this.length()>32768?new Ht(this.length()*e.n8):new Uint8Array(this.length()*e.n8),this.curve,this.logger),g=this.coef;this.coef=f.coef,f.coef=g;for(let C=0;C<s;C++){let N=(C+1)*l+c;for(let J=0;J<i;J++)this.setCoef(N+J-i,f.getCoef(N+J));for(let J=0;J<l-i;J++){let j=N-J-1,R=e.add(f.getCoef(j),e.mul(o,this.getCoef(j)));this.setCoef(j-i,R)}}let L=c,S=c;for(let C=0;C<i&&S;C++)this.setCoef(L-C-1,f.getCoef(L+i-C-1)),S--;for(let C=0;C<S;C++){let N=L-C-1,J=e.add(f.getCoef(N),e.mul(o,this.getCoef(N)));this.setCoef(N-i,J)}let k=[],E=e.one;for(let C=0;C<u;C++)E=e.mul(E,o);let G=e.one;for(let C=s;C>0;C--){let N=C-1,J=N*l+c;k[N]=[];for(let j=0;j<i;j++)k[N][j]=this.getCoef(J+j),C!==s&&(k[N][j]=e.add(k[N][j],e.mul(E,k[N+1][j])));G=e.mul(G,E)}for(let C=0;C<s;C++){let N=C*l+c,J=o,j=i-1,R=C===0?c:l;for(let b=0;b<R;b++){let w=N-b-1,Z=e.add(this.getCoef(w),e.mul(J,k[C][j]));this.setCoef(w,Z),j===0?(j=i-1,J=e.mul(J,o)):j--}}}}divByXSubValue(t){const e=this.length()>32768?new Ht(this.length()*this.Fr.n8):new Uint8Array(this.length()*this.Fr.n8);e.set(this.Fr.zero,(this.length()-1)*this.Fr.n8),e.set(this.coef.slice((this.length()-1)*this.Fr.n8,this.length()*this.Fr.n8),(this.length()-2)*this.Fr.n8);for(let n=this.length()-3;n>=0;n--){let i=n*this.Fr.n8;e.set(this.Fr.add(this.coef.slice(i+this.Fr.n8,i+2*this.Fr.n8),this.Fr.mul(t,e.slice(i+this.Fr.n8,i+2*this.Fr.n8))),n*this.Fr.n8)}if(!this.Fr.eq(this.coef.slice(0,this.Fr.n8),this.Fr.mul(this.Fr.neg(t),e.slice(0,this.Fr.n8))))throw new Error("Polynomial does not divide");this.coef=e}divZh(t,e=4){for(let i=0;i<t;i++){const o=i*this.Fr.n8;this.coef.set(this.Fr.neg(this.coef.slice(o,o+this.Fr.n8)),o)}const n=this.coef.byteLength/this.Fr.n8;for(let i=t;i<n;i++){const o=i*this.Fr.n8,s=this.Fr.sub(this.coef.slice((i-t)*this.Fr.n8,(i-t)*this.Fr.n8+this.Fr.n8),this.coef.slice(o,o+this.Fr.n8));if(this.coef.set(s,o),i>t*(e-1)-e&&!this.Fr.isZero(s))throw new Error("Polynomial is not divisible")}return this}divByZerofier(t,e){let n=this.Fr;const i=n.inv(e),o=n.neg(i);let s=n.eq(n.one,o),r=n.eq(n.negone,o);if(!s)for(let u=0;u<t;u++){const l=u*this.Fr.n8;let c;r?c=n.neg(this.coef.slice(l,l+this.Fr.n8)):c=n.mul(o,this.coef.slice(l,l+this.Fr.n8)),this.coef.set(c,l)}s=n.eq(n.one,i),r=n.eq(n.negone,i);for(let u=t;u<this.length();u++){const l=u*this.Fr.n8,c=(u-t)*this.Fr.n8;let f=this.Fr.sub(this.coef.slice(c,c+this.Fr.n8),this.coef.slice(l,l+this.Fr.n8));if(s||(r?f=n.neg(f):f=n.mul(i,f)),this.coef.set(f,l),u>this.length()-t-1&&!this.Fr.isZero(f))throw new Error("Polynomial is not divisible")}return this}byX(){const t=this.length()+1>32768?new Ht(this.coef.byteLength+this.Fr.n8):new Uint8Array(this.coef.byteLength+this.Fr.n8);t.set(this.Fr.zero,0),t.set(this.coef,this.Fr.n8),this.coef=t}static async expX(t,e,n=!1){const i=t.Fr;if(e<1)throw new Error("Compute a new polynomial to a zero or negative number is not allowed");if(e===1)return await ee.fromEvaluations(t.coef,curve,t.logger);const o=n?t.degree():t.length()-1,s=o*e+1>32768?new Ht((o*e+1)*i.n8):new Uint8Array((o*e+1)*i.n8);s.set(t.getCoef(0),0);for(let r=1;r<=o;r++){const u=r*i.n8,l=t.getCoef(r);s.set(l,u*e)}return new ee(s,t.curve,t.logger)}split(t,e,n){if(t<1)throw new Error(`Polynomials can't be split in ${t} parts`);if(t===1)return[this];if(n.length!==0&&n.length<t-1)throw new Error(`Blinding factors length must be ${t-1}`);const i=(e+1)*this.Fr.n8;let o=[];const s=Math.ceil((this.degree()+1)*this.Fr.n8/i);if(s<t)for(let r=s;r<t;r++)o[r]=new ee(new Uint8Array(this.Fr.n8),this.curve,this.logger);t=Math.min(t,s);for(let r=0;r<t;r++){const u=t-1===r,l=u?this.coef.byteLength-(t-1)*i:i+this.Fr.n8;let c=l/this.Fr.n8>32768?new Ht(l):new Uint8Array(l);o[r]=new ee(c,this.curve,this.logger);const f=r*i,g=u?this.coef.byteLength:(r+1)*i;if(o[r].coef.set(this.coef.slice(f,g),0),u||o[r].coef.set(n[r],i),r!==0){const L=this.Fr.sub(o[r].coef.slice(0,this.Fr.n8),n[r-1]);o[r].coef.set(L,0)}u&&o[r].truncate()}return o}truncate(){const t=this.degree();if(t+1<this.coef.byteLength/this.Fr.n8){const e=t+1>32768?new Ht((t+1)*this.Fr.n8):new Uint8Array((t+1)*this.Fr.n8);e.set(this.coef.slice(0,(t+1)*this.Fr.n8),0),this.coef=e}}static lagrangePolynomialInterpolation(t,e,n){const i=n.Fr;let o=s(0);for(let r=1;r<t.length;r++)o.add(s(r));return o;function s(r){let u;for(let f=0;f<t.length;f++)if(f!==r)if(u===void 0){let g=t.length>32768?new Ht(t.length*i.n8):new Uint8Array(t.length*i.n8);u=new ee(g,n),u.setCoef(0,i.neg(t[f])),u.setCoef(1,i.one)}else u.byXSubValue(t[f]);let l=u.evaluate(t[r]);l=i.inv(l);const c=i.mul(e[r],l);return u.mulScalar(c),u}}static zerofierPolynomial(t,e){const n=e.Fr;let i=t.length+1>32768?new Ht((t.length+1)*n.n8):new Uint8Array((t.length+1)*n.n8),o=new ee(i,e);o.setCoef(0,n.neg(t[0])),o.setCoef(1,n.one);for(let s=1;s<t.length;s++)o.byXSubValue(t[s]);return o}print(){const t=this.Fr;let e="";for(let n=this.degree();n>=0;n--){const i=this.getCoef(n);t.eq(t.zero,i)||(t.isNegative(i)?e+=" - ":n!==this.degree()&&(e+=" + "),e+=t.toString(i),n>0&&(e+=n>1?"x^"+n:"x"))}console.log(e)}async multiExponentiation(t,e){const n=this.coef.byteLength/this.Fr.n8,i=t.slice(0,n*this.G1.F.n8*2),o=await this.Fr.batchFromMontgomery(this.coef);let s=await this.G1.multiExpAffine(i,o,this.logger,e);return s=this.G1.toAffine(s),s}}class Be{constructor(t,e,n){this.eval=t,this.curve=e,this.Fr=e.Fr,this.logger=n}static async fromPolynomial(t,e,n,i){const o=new Ht(t.length()*e*n.Fr.n8);o.set(t.coef,0);const s=await n.Fr.fft(o);return new Be(s,n,i)}getEvaluation(t){const e=t*this.Fr.n8;if(e+this.Fr.n8>this.eval.byteLength)throw new Error("Evaluations.getEvaluation() out of bounds");return this.eval.slice(e,e+this.Fr.n8)}length(){let t=this.eval.byteLength/this.Fr.n8;if(t!==Math.floor(this.eval.byteLength/this.Fr.n8))throw new Error("Polynomial evaluations buffer has incorrect size");return t===0&&this.logger.warn("Polynomial has length zero"),t}}const{stringifyBigInts:Ff}=nn;async function F0(a,t,e,n){const{fd:i,sections:o}=await Ie(t,"wtns",2);e&&e.debug("> Reading witness file");const s=await _a(i,o);e&&e.debug("> Reading zkey file");const{fd:r,sections:u}=await Ie(a,"zkey",2),l=await qn(r,u,void 0,n);if(l.protocol!="plonk")throw new Error("zkey file is not plonk");if(!oe.eq(l.r,s.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(s.nWitness!=l.nVars-l.nAdditions)throw new Error(`Invalid witness length. Circuit: ${l.nVars}, witness: ${s.nWitness}, ${l.nAdditions}`);const c=l.curve,f=c.Fr,g=c.Fr.n8,L=l.domainSize*g;e&&(e.debug("----------------------------"),e.debug("  PLONK PROVE SETTINGS"),e.debug(`  Curve:         ${c.name}`),e.debug(`  Circuit power: ${l.power}`),e.debug(`  Domain size:   ${l.domainSize}`),e.debug(`  Vars:          ${l.nVars}`),e.debug(`  Public vars:   ${l.nPublic}`),e.debug(`  Constraints:   ${l.nConstraints}`),e.debug(`  Additions:     ${l.nAdditions}`),e.debug("----------------------------")),e&&e.debug("> Reading witness file data");const S=await ye(i,o,2);S.set(f.zero,0);const k=new Ht(g*l.nAdditions);let E={},G={},C={},N={},J=new iu(c,e);const j=new Oi(c);e&&e.debug(`> Reading Section ${Bf}. Additions`),await Z(),e&&e.debug(`> Reading Section ${Mi}. Sigma1, Sigma2 & Sigma 3`),e&&e.debug("··· Reading Sigma polynomials "),G.Sigma1=new ee(new Ht(L),c,e),G.Sigma2=new ee(new Ht(L),c,e),G.Sigma3=new ee(new Ht(L),c,e),await r.readToBuffer(G.Sigma1.coef,0,L,u[Mi][0].p),await r.readToBuffer(G.Sigma2.coef,0,L,u[Mi][0].p+5*L),await r.readToBuffer(G.Sigma3.coef,0,L,u[Mi][0].p+10*L),e&&e.debug("··· Reading Sigma evaluations"),C.Sigma1=new Be(new Ht(L*4),c,e),C.Sigma2=new Be(new Ht(L*4),c,e),C.Sigma3=new Be(new Ht(L*4),c,e),await r.readToBuffer(C.Sigma1.eval,0,L*4,u[Mi][0].p+L),await r.readToBuffer(C.Sigma2.eval,0,L*4,u[Mi][0].p+6*L),await r.readToBuffer(C.Sigma3.eval,0,L*4,u[Mi][0].p+11*L),e&&e.debug(`> Reading Section ${vf}. Powers of Tau`);const R=await ye(r,u,vf);let b=[];for(let M=1;M<=l.nPublic;M++){const W=S.slice(M*f.n8,M*f.n8+f.n8);b.push(oe.fromRprLE(W))}e&&e.debug(""),e&&e.debug("> ROUND 1"),await nt(),e&&e.debug("> ROUND 2"),await y(),e&&e.debug("> ROUND 3"),await T(),e&&e.debug("> ROUND 4"),await Y(),e&&e.debug("> ROUND 5"),await tt(),await r.close(),await i.close();let w=J.toObjectProof(!1);return w.protocol="plonk",w.curve=c.name,e&&e.debug("PLONK PROVER FINISHED"),{proof:Ff(w),publicSignals:Ff(b)};async function Z(){e&&e.debug("··· Computing additions");const M=await ye(r,u,Bf),W=8+g*2;for(let A=0;A<l.nAdditions;A++){e&&A!==0&&A%1e5===0&&e.debug(`    addition ${A}/${l.nAdditions}`);let h=A*W;const Q=P(M,h);h+=4;const p=P(M,h);h+=4;const d=M.slice(h,h+g);h+=g;const m=M.slice(h,h+g),v=V(Q),et=V(p),ct=f.add(f.mul(d,v),f.mul(m,et));k.set(ct,g*A)}}function P(M,W){const A=M.slice(W,W+4);return new DataView(A.buffer,A.byteOffset,A.byteLength).getUint32(0,!0)}function V(M){return M<l.nVars-l.nAdditions?S.slice(M*g,M*g+g):M<l.nVars?k.slice((M-(l.nVars-l.nAdditions))*g,(M-(l.nVars-l.nAdditions))*g+g):c.Fr.zero}async function nt(){N.b=[];for(let h=1;h<=11;h++)N.b[h]=c.Fr.random();e&&e.debug("> Computing A, B, C wire polynomials"),await I(),e&&e.debug("> Computing A, B, C MSM");let M=await G.A.multiExponentiation(R,"A"),W=await G.B.multiExponentiation(R,"B"),A=await G.C.multiExponentiation(R,"C");return J.addPolynomial("A",M),J.addPolynomial("B",W),J.addPolynomial("C",A),0}async function I(){e&&e.debug("··· Reading data from zkey file"),E.A=new Ht(L),E.B=new Ht(L),E.C=new Ht(L);const M=await ye(r,u,cA),W=await ye(r,u,lA),A=await ye(r,u,uA);for(let h=0;h<l.nConstraints;h++){const Q=h*g,p=h*4,d=P(M,p);E.A.set(V(d),Q);const m=P(W,p);E.B.set(V(m),Q);const v=P(A,p);E.C.set(V(v),Q)}if(E.A=await f.batchToMontgomery(E.A),E.B=await f.batchToMontgomery(E.B),E.C=await f.batchToMontgomery(E.C),e&&e.debug("··· Computing A ifft"),G.A=await ee.fromEvaluations(E.A,c,e),e&&e.debug("··· Computing B ifft"),G.B=await ee.fromEvaluations(E.B,c,e),e&&e.debug("··· Computing C ifft"),G.C=await ee.fromEvaluations(E.C,c,e),e&&e.debug("··· Computing A fft"),C.A=await Be.fromPolynomial(G.A,4,c,e),e&&e.debug("··· Computing B fft"),C.B=await Be.fromPolynomial(G.B,4,c,e),e&&e.debug("··· Computing C fft"),C.C=await Be.fromPolynomial(G.C,4,c,e),G.A.blindCoefficients([N.b[2],N.b[1]]),G.B.blindCoefficients([N.b[4],N.b[3]]),G.C.blindCoefficients([N.b[6],N.b[5]]),G.A.degree()>=l.domainSize+2)throw new Error("A Polynomial is not well calculated");if(G.B.degree()>=l.domainSize+2)throw new Error("B Polynomial is not well calculated");if(G.C.degree()>=l.domainSize+2)throw new Error("C Polynomial is not well calculated")}async function y(){e&&e.debug("> Computing challenges beta and gamma"),j.reset(),j.addPolCommitment(l.Qm),j.addPolCommitment(l.Ql),j.addPolCommitment(l.Qr),j.addPolCommitment(l.Qo),j.addPolCommitment(l.Qc),j.addPolCommitment(l.S1),j.addPolCommitment(l.S2),j.addPolCommitment(l.S3);for(let W=0;W<l.nPublic;W++)j.addScalar(E.A.slice(W*g,W*g+g));j.addPolCommitment(J.getPolynomial("A")),j.addPolCommitment(J.getPolynomial("B")),j.addPolCommitment(J.getPolynomial("C")),N.beta=j.getChallenge(),e&&e.debug("··· challenges.beta: "+f.toString(N.beta,16)),j.reset(),j.addScalar(N.beta),N.gamma=j.getChallenge(),e&&e.debug("··· challenges.gamma: "+f.toString(N.gamma,16)),e&&e.debug("> Computing Z polynomial"),await _(),e&&e.debug("> Computing Z MSM");let M=await G.Z.multiExponentiation(R,"Z");J.addPolynomial("Z",M)}async function _(){e&&e.debug("··· Computing Z evaluations");let M=new Ht(L),W=new Ht(L);M.set(f.one,0),W.set(f.one,0);let A=f.one;for(let h=0;h<l.domainSize;h++){const Q=h*g,p=E.A.slice(Q,Q+g),d=E.B.slice(Q,Q+g),m=E.C.slice(Q,Q+g),v=f.mul(N.beta,A);let et=f.add(p,v);et=f.add(et,N.gamma);let ct=f.add(d,f.mul(l.k1,v));ct=f.add(ct,N.gamma);let dt=f.add(m,f.mul(l.k2,v));dt=f.add(dt,N.gamma);let ft=f.mul(et,f.mul(ct,dt)),Ft=f.add(p,f.mul(C.Sigma1.getEvaluation(h*4),N.beta));Ft=f.add(Ft,N.gamma);let rt=f.add(d,f.mul(C.Sigma2.getEvaluation(h*4),N.beta));rt=f.add(rt,N.gamma);let z=f.add(m,f.mul(C.Sigma3.getEvaluation(h*4),N.beta));z=f.add(z,N.gamma);let wt=f.mul(Ft,f.mul(rt,z));ft=f.mul(M.slice(Q,Q+g),ft),M.set(ft,(h+1)%l.domainSize*g),wt=f.mul(W.slice(Q,Q+g),wt),W.set(wt,(h+1)%l.domainSize*g),A=f.mul(A,f.w[l.power])}W=await f.batchInverse(W);for(let h=0;h<l.domainSize;h++){const Q=h*g,p=f.mul(M.slice(Q,Q+g),W.slice(Q,Q+g));M.set(p,Q)}if(E.Z=M,!f.eq(M.slice(0,g),f.one))throw new Error("Copy constraints does not match");if(e&&e.debug("··· Computing Z ifft"),G.Z=await ee.fromEvaluations(E.Z,c,e),e&&e.debug("··· Computing Z fft"),C.Z=await Be.fromPolynomial(G.Z,4,c,e),G.Z.blindCoefficients([N.b[9],N.b[8],N.b[7]]),G.Z.degree()>=l.domainSize+3)throw new Error("Z Polynomial is not well calculated");delete E.Z}async function T(){e&&e.debug("> Computing challenge alpha"),j.reset(),j.addScalar(N.beta),j.addScalar(N.gamma),j.addPolCommitment(J.getPolynomial("Z")),N.alpha=j.getChallenge(),N.alpha2=f.square(N.alpha),e&&e.debug("··· challenges.alpha: "+f.toString(N.alpha,16)),e&&e.debug("> Computing T polynomial"),await B(),e&&e.debug("> Computing T MSM");let M=await G.T1.multiExponentiation(R,"T1"),W=await G.T2.multiExponentiation(R,"T2"),A=await G.T3.multiExponentiation(R,"T3");J.addPolynomial("T1",M),J.addPolynomial("T2",W),J.addPolynomial("T3",A)}async function B(){e&&e.debug(`··· Reading sections ${Vr}, ${Wr}, ${jr}, ${Zr}, ${Xr}. Q selectors`),C.QL=new Be(new Ht(L*4),c,e),C.QR=new Be(new Ht(L*4),c,e),C.QM=new Be(new Ht(L*4),c,e),C.QO=new Be(new Ht(L*4),c,e),C.QC=new Be(new Ht(L*4),c,e),await r.readToBuffer(C.QL.eval,0,L*4,u[Vr][0].p+L),await r.readToBuffer(C.QR.eval,0,L*4,u[Wr][0].p+L),await r.readToBuffer(C.QM.eval,0,L*4,u[jr][0].p+L),await r.readToBuffer(C.QO.eval,0,L*4,u[Zr][0].p+L),await r.readToBuffer(C.QC.eval,0,L*4,u[Xr][0].p+L),C.Lagrange=new Be(new Ht(L*4*l.nPublic),c,e);for(let h=0;h<l.nPublic;h++)await r.readToBuffer(C.Lagrange.eval,h*L*4,L*4,u[dA][0].p+h*5*L+L);E.T=new Ht(L*4),E.Tz=new Ht(L*4),e&&e.debug("··· Computing T evaluations");let M=f.one;for(let h=0;h<l.domainSize*4;h++){e&&h!==0&&h%1e5===0&&e.debug(`      T evaluation ${h}/${l.domainSize*4}`);const Q=C.A.getEvaluation(h),p=C.B.getEvaluation(h),d=C.C.getEvaluation(h),m=C.Z.getEvaluation(h),v=C.Z.getEvaluation((l.domainSize*4+4+h)%(l.domainSize*4)),et=C.QM.getEvaluation(h),ct=C.QL.getEvaluation(h),dt=C.QR.getEvaluation(h),ft=C.QO.getEvaluation(h),Ft=C.QC.getEvaluation(h),rt=C.Sigma1.getEvaluation(h),z=C.Sigma2.getEvaluation(h),wt=C.Sigma3.getEvaluation(h),yt=f.add(N.b[2],f.mul(N.b[1],M)),It=f.add(N.b[4],f.mul(N.b[3],M)),Ut=f.add(N.b[6],f.mul(N.b[5],M)),Dt=f.square(M),Mt=f.add(f.add(f.mul(N.b[7],Dt),f.mul(N.b[8],M)),N.b[9]),Qt=f.mul(M,f.w[l.power]),it=f.square(Qt),K=f.add(f.add(f.mul(N.b[7],it),f.mul(N.b[8],Qt)),N.b[9]);let U=f.zero;for(let Lt=0;Lt<l.nPublic;Lt++){const bt=Lt*4*l.domainSize+h,Bt=C.Lagrange.getEvaluation(bt),At=E.A.slice(Lt*g,(Lt+1)*g);U=f.sub(U,f.mul(Bt,At))}let[D,ot]=Yr.mul2(Q,p,yt,It,h%4,f);D=f.mul(D,et),ot=f.mul(ot,et),D=f.add(D,f.mul(Q,ct)),ot=f.add(ot,f.mul(yt,ct)),D=f.add(D,f.mul(p,dt)),ot=f.add(ot,f.mul(It,dt)),D=f.add(D,f.mul(d,ft)),ot=f.add(ot,f.mul(Ut,ft)),D=f.add(D,U),D=f.add(D,Ft);const st=f.mul(N.beta,M);let lt=Q;lt=f.add(lt,st),lt=f.add(lt,N.gamma);let at=p;at=f.add(at,f.mul(st,l.k1)),at=f.add(at,N.gamma);let x=d;x=f.add(x,f.mul(st,l.k2)),x=f.add(x,N.gamma);let q=m,[gt,mt]=Yr.mul4(lt,at,x,q,yt,It,Ut,Mt,h%4,f);gt=f.mul(gt,N.alpha),mt=f.mul(mt,N.alpha);let ut=Q;ut=f.add(ut,f.mul(N.beta,rt)),ut=f.add(ut,N.gamma);let Ct=p;Ct=f.add(Ct,f.mul(N.beta,z)),Ct=f.add(Ct,N.gamma);let vt=d;vt=f.add(vt,f.mul(N.beta,wt)),vt=f.add(vt,N.gamma);let kt=v,[Ot,Rt]=Yr.mul4(ut,Ct,vt,kt,yt,It,Ut,K,h%4,f);Ot=f.mul(Ot,N.alpha),Rt=f.mul(Rt,N.alpha);let ht=f.sub(m,f.one);ht=f.mul(ht,C.Lagrange.getEvaluation(h)),ht=f.mul(ht,N.alpha2);let O=f.mul(Mt,C.Lagrange.getEvaluation(h));O=f.mul(O,N.alpha2);let H=f.add(f.sub(f.add(D,gt),Ot),ht),pt=f.add(f.sub(f.add(ot,mt),Rt),O);E.T.set(H,h*g),E.Tz.set(pt,h*g),M=f.mul(M,f.w[l.power+2])}if(e&&e.debug("··· Computing T ifft"),G.T=await ee.fromEvaluations(E.T,c,e),e&&e.debug("··· Computing T / ZH"),G.T.divZh(l.domainSize,4),e&&e.debug("··· Computing Tz ifft"),G.Tz=await ee.fromEvaluations(E.Tz,c,e),G.T.add(G.Tz),G.T.degree()>=l.domainSize*3+6)throw new Error("T Polynomial is not well calculated");e&&e.debug("··· Computing T1, T2, T3 polynomials"),G.T1=new ee(new Ht((l.domainSize+1)*g),c,e),G.T2=new ee(new Ht((l.domainSize+1)*g),c,e),G.T3=new ee(new Ht((l.domainSize+6)*g),c,e),G.T1.coef.set(G.T.coef.slice(0,L),0),G.T2.coef.set(G.T.coef.slice(L,L*2),0),G.T3.coef.set(G.T.coef.slice(L*2,L*3+6*g),0),G.T1.setCoef(l.domainSize,N.b[10]);const W=f.sub(G.T2.getCoef(0),N.b[10]);G.T2.setCoef(0,W),G.T2.setCoef(l.domainSize,N.b[11]);const A=f.sub(G.T3.getCoef(0),N.b[11]);G.T3.setCoef(0,A)}async function Y(){e&&e.debug("> Computing challenge xi"),j.reset(),j.addScalar(N.alpha),j.addPolCommitment(J.getPolynomial("T1")),j.addPolCommitment(J.getPolynomial("T2")),j.addPolCommitment(J.getPolynomial("T3")),N.xi=j.getChallenge(),N.xiw=f.mul(N.xi,f.w[l.power]),e&&e.debug("··· challenges.xi: "+f.toString(N.xi,16)),J.addEvaluation("eval_a",G.A.evaluate(N.xi)),J.addEvaluation("eval_b",G.B.evaluate(N.xi)),J.addEvaluation("eval_c",G.C.evaluate(N.xi)),J.addEvaluation("eval_s1",G.Sigma1.evaluate(N.xi)),J.addEvaluation("eval_s2",G.Sigma2.evaluate(N.xi)),J.addEvaluation("eval_zw",G.Z.evaluate(N.xiw))}async function tt(){e&&e.debug("> Computing challenge v"),j.reset(),j.addScalar(N.xi),j.addScalar(J.getEvaluation("eval_a")),j.addScalar(J.getEvaluation("eval_b")),j.addScalar(J.getEvaluation("eval_c")),j.addScalar(J.getEvaluation("eval_s1")),j.addScalar(J.getEvaluation("eval_s2")),j.addScalar(J.getEvaluation("eval_zw")),N.v=[],N.v[1]=j.getChallenge(),e&&e.debug("··· challenges.v: "+f.toString(N.v[1],16));for(let A=2;A<6;A++)N.v[A]=f.mul(N.v[A-1],N.v[1]);e&&e.debug("> Computing linearisation polynomial R(X)"),await $(),e&&e.debug("> Computing opening proof polynomial Wxi(X) polynomial"),X(),e&&e.debug("> Computing opening proof polynomial Wxiw(X) polynomial"),F(),e&&e.debug("> Computing Wxi, Wxiw MSM");let M=await G.Wxi.multiExponentiation(R,"Wxi"),W=await G.Wxiw.multiExponentiation(R,"Wxiw");J.addPolynomial("Wxi",M),J.addPolynomial("Wxiw",W)}async function $(){const M=c.Fr;G.QL=new ee(new Ht(L),c,e),G.QR=new ee(new Ht(L),c,e),G.QM=new ee(new Ht(L),c,e),G.QO=new ee(new Ht(L),c,e),G.QC=new ee(new Ht(L),c,e),await r.readToBuffer(G.QL.coef,0,L,u[Vr][0].p),await r.readToBuffer(G.QR.coef,0,L,u[Wr][0].p),await r.readToBuffer(G.QM.coef,0,L,u[jr][0].p),await r.readToBuffer(G.QO.coef,0,L,u[Zr][0].p),await r.readToBuffer(G.QC.coef,0,L,u[Xr][0].p),N.xin=N.xi;for(let It=0;It<l.power;It++)N.xin=M.square(N.xin);N.zh=M.sub(N.xin,M.one);const W=[],A=M.e(l.domainSize);let h=M.one;for(let It=1;It<=Math.max(1,l.nPublic);It++)W[It]=M.div(M.mul(h,N.zh),M.mul(A,M.sub(N.xi,h))),h=M.mul(h,M.w[l.power]);const Q=M.div(M.sub(N.xin,M.one),M.mul(A,M.sub(N.xi,M.one)));if(e){e.debug("Lagrange Evaluations: ");for(let It=1;It<W.length;It++)e.debug(`L${It}(xi)=`+M.toString(W[It],16))}let p=M.zero;for(let It=0;It<b.length;It++){const Ut=M.e(b[It]);p=M.sub(p,M.mul(Ut,W[It+1]))}e&&e.debug("PI: "+M.toString(p,16));const d=M.mul(J.evaluations.eval_a,J.evaluations.eval_b);let m=J.evaluations.eval_a;const v=M.mul(N.beta,N.xi);m=M.add(m,v),m=M.add(m,N.gamma);let et=J.evaluations.eval_b;et=M.add(et,M.mul(v,l.k1)),et=M.add(et,N.gamma);let ct=J.evaluations.eval_c;ct=M.add(ct,M.mul(v,l.k2)),ct=M.add(ct,N.gamma);const dt=M.mul(M.mul(M.mul(m,et),ct),N.alpha);let ft=J.evaluations.eval_a;ft=M.add(ft,M.mul(N.beta,J.evaluations.eval_s1)),ft=M.add(ft,N.gamma);let Ft=J.evaluations.eval_b;Ft=M.add(Ft,M.mul(N.beta,J.evaluations.eval_s2)),Ft=M.add(Ft,N.gamma);let rt=M.mul(ft,Ft);rt=M.mul(rt,J.evaluations.eval_zw),rt=M.mul(rt,N.alpha);const z=M.mul(Q,N.alpha2);G.R=new ee(new Ht((l.domainSize+6)*g),c,e),G.R.add(G.QM,d),G.R.add(G.QL,J.evaluations.eval_a),G.R.add(G.QR,J.evaluations.eval_b),G.R.add(G.QO,J.evaluations.eval_c),G.R.add(G.QC),G.R.add(G.Z,dt),G.R.sub(G.Sigma3,M.mul(rt,N.beta)),G.R.add(G.Z,z);let wt=ee.fromPolynomial(G.T3,c,e);wt.mulScalar(M.square(N.xin)),wt.add(G.T2,N.xin),wt.add(G.T1),wt.mulScalar(N.zh),G.R.sub(wt);let yt=M.sub(p,M.mul(rt,M.add(J.evaluations.eval_c,N.gamma)));yt=M.sub(yt,z),e&&e.debug("r0: "+M.toString(yt,16)),G.R.addScalar(yt)}function X(){G.Wxi=new ee(new Ht(L+6*g),c,e),G.Wxi.add(G.R),G.Wxi.add(G.A,N.v[1]),G.Wxi.add(G.B,N.v[2]),G.Wxi.add(G.C,N.v[3]),G.Wxi.add(G.Sigma1,N.v[4]),G.Wxi.add(G.Sigma2,N.v[5]),G.Wxi.subScalar(f.mul(N.v[1],J.evaluations.eval_a)),G.Wxi.subScalar(f.mul(N.v[2],J.evaluations.eval_b)),G.Wxi.subScalar(f.mul(N.v[3],J.evaluations.eval_c)),G.Wxi.subScalar(f.mul(N.v[4],J.evaluations.eval_s1)),G.Wxi.subScalar(f.mul(N.v[5],J.evaluations.eval_s2)),G.Wxi.divByZerofier(1,N.xi)}async function F(){G.Wxiw=ee.fromPolynomial(G.Z,c,e),G.Wxiw.subScalar(J.evaluations.eval_zw),G.Wxiw.divByZerofier(1,N.xiw)}}const{unstringifyBigInts:fA}=nn;async function hA(a,t,e,n,i,o){const s=fA(a),r={type:"mem"};return await Ws(s,t,r,i),await F0(e,r,n,o)}const{unstringifyBigInts:$r}=nn;async function gA(a,t,e,n){let i=$r(a);e=$r(e);let o=$r(t);const s=await Ji(i.curve),r=s.Fr,u=s.G1;n&&n.info("PLONK VERIFIER STARTED");let l=pA(s,e);if(i=LA(s,i),!wA(s,l))return n.error("Proof is not well constructed"),!1;if(o.length!=i.nPublic)return n.error("Invalid number of public inputs"),!1;const c=mA(s,l,o,i);if(n){n.debug("beta: "+r.toString(c.beta,16)),n.debug("gamma: "+r.toString(c.gamma,16)),n.debug("alpha: "+r.toString(c.alpha,16)),n.debug("xi: "+r.toString(c.xi,16));for(let C=1;C<6;C++)n&&n.debug("v: "+r.toString(c.v[C],16));n.debug("u: "+r.toString(c.u,16))}const f=bA(s,c,i);if(n)for(let C=1;C<f.length;C++)n.debug(`L${C}(xi)=`+r.toString(f[C],16));if(o.length!=i.nPublic)return n.error("Number of public signals does not match with vk"),!1;const g=yA(s,o,f);n&&n.debug("PI(xi): "+r.toString(g,16));const L=AA(s,l,c,g,f[1]);n&&n.debug("r0: "+r.toString(L,16));const S=IA(s,l,c,i,f[1]);n&&n.debug("D: "+u.toString(u.toAffine(S),16));const k=EA(s,l,c,i,S);n&&n.debug("F: "+u.toString(u.toAffine(k),16));const E=CA(s,l,c,L);n&&n.debug("E: "+u.toString(u.toAffine(E),16));const G=await BA(s,l,c,i,E,k);return n&&(G?n.info("OK!"):n.warn("Invalid Proof")),G}function pA(a,t){const e=a.G1,n=a.Fr,i={};return i.A=e.fromObject(t.A),i.B=e.fromObject(t.B),i.C=e.fromObject(t.C),i.Z=e.fromObject(t.Z),i.T1=e.fromObject(t.T1),i.T2=e.fromObject(t.T2),i.T3=e.fromObject(t.T3),i.eval_a=n.fromObject(t.eval_a),i.eval_b=n.fromObject(t.eval_b),i.eval_c=n.fromObject(t.eval_c),i.eval_zw=n.fromObject(t.eval_zw),i.eval_s1=n.fromObject(t.eval_s1),i.eval_s2=n.fromObject(t.eval_s2),i.Wxi=e.fromObject(t.Wxi),i.Wxiw=e.fromObject(t.Wxiw),i}function LA(a,t){const e=a.G1,n=a.G2,i=a.Fr,o=t;return o.Qm=e.fromObject(t.Qm),o.Ql=e.fromObject(t.Ql),o.Qr=e.fromObject(t.Qr),o.Qo=e.fromObject(t.Qo),o.Qc=e.fromObject(t.Qc),o.S1=e.fromObject(t.S1),o.S2=e.fromObject(t.S2),o.S3=e.fromObject(t.S3),o.k1=i.fromObject(t.k1),o.k2=i.fromObject(t.k2),o.X_2=n.fromObject(t.X_2),o}function wA(a,t){const e=a.G1;return!(!e.isValid(t.A)||!e.isValid(t.B)||!e.isValid(t.C)||!e.isValid(t.Z)||!e.isValid(t.T1)||!e.isValid(t.T2)||!e.isValid(t.T3)||!e.isValid(t.Wxi)||!e.isValid(t.Wxiw))}function mA(a,t,e,n){const i=a.Fr,o={},s=new Oi(a);s.addPolCommitment(n.Qm),s.addPolCommitment(n.Ql),s.addPolCommitment(n.Qr),s.addPolCommitment(n.Qo),s.addPolCommitment(n.Qc),s.addPolCommitment(n.S1),s.addPolCommitment(n.S2),s.addPolCommitment(n.S3);for(let r=0;r<e.length;r++)s.addScalar(i.e(e[r]));s.addPolCommitment(t.A),s.addPolCommitment(t.B),s.addPolCommitment(t.C),o.beta=s.getChallenge(),s.reset(),s.addScalar(o.beta),o.gamma=s.getChallenge(),s.reset(),s.addScalar(o.beta),s.addScalar(o.gamma),s.addPolCommitment(t.Z),o.alpha=s.getChallenge(),s.reset(),s.addScalar(o.alpha),s.addPolCommitment(t.T1),s.addPolCommitment(t.T2),s.addPolCommitment(t.T3),o.xi=s.getChallenge(),s.reset(),s.addScalar(o.xi),s.addScalar(t.eval_a),s.addScalar(t.eval_b),s.addScalar(t.eval_c),s.addScalar(t.eval_s1),s.addScalar(t.eval_s2),s.addScalar(t.eval_zw),o.v=[],o.v[1]=s.getChallenge();for(let r=2;r<6;r++)o.v[r]=i.mul(o.v[r-1],o.v[1]);return s.reset(),s.addPolCommitment(t.Wxi),s.addPolCommitment(t.Wxiw),o.u=s.getChallenge(),o}function bA(a,t,e){const n=a.Fr;let i=t.xi,o=1;for(let l=0;l<e.power;l++)i=n.square(i),o*=2;t.xin=i,t.zh=n.sub(i,n.one);const s=[],r=n.e(o);let u=n.one;for(let l=1;l<=Math.max(1,e.nPublic);l++)s[l]=n.div(n.mul(u,t.zh),n.mul(r,n.sub(t.xi,u))),u=n.mul(u,n.w[e.power]);return s}function yA(a,t,e){const n=a.Fr;let i=n.zero;for(let o=0;o<t.length;o++){const s=n.e(t[o]);i=n.sub(i,n.mul(s,e[o+1]))}return i}function AA(a,t,e,n,i){const o=a.Fr,s=n,r=o.mul(i,o.square(e.alpha));let u=o.add(t.eval_a,o.mul(e.beta,t.eval_s1));u=o.add(u,e.gamma);let l=o.add(t.eval_b,o.mul(e.beta,t.eval_s2));l=o.add(l,e.gamma);let c=o.add(t.eval_c,e.gamma),f=o.mul(o.mul(u,l),c);return f=o.mul(f,t.eval_zw),f=o.mul(f,e.alpha),o.sub(o.sub(s,r),f)}function IA(a,t,e,n,i){const o=a.G1,s=a.Fr;let r=o.timesFr(n.Qm,s.mul(t.eval_a,t.eval_b));r=o.add(r,o.timesFr(n.Ql,t.eval_a)),r=o.add(r,o.timesFr(n.Qr,t.eval_b)),r=o.add(r,o.timesFr(n.Qo,t.eval_c)),r=o.add(r,n.Qc);const u=s.mul(e.beta,e.xi),l=s.add(s.add(t.eval_a,u),e.gamma),c=s.add(s.add(t.eval_b,s.mul(u,n.k1)),e.gamma),f=s.add(s.add(t.eval_c,s.mul(u,n.k2)),e.gamma),g=s.mul(s.mul(s.mul(l,c),f),e.alpha),L=s.mul(i,s.square(e.alpha)),S=o.timesFr(t.Z,s.add(s.add(g,L),e.u)),k=s.add(s.add(t.eval_a,s.mul(e.beta,t.eval_s1)),e.gamma),E=s.add(s.add(t.eval_b,s.mul(e.beta,t.eval_s2)),e.gamma),G=s.mul(s.mul(e.alpha,e.beta),t.eval_zw),C=o.timesFr(n.S3,s.mul(s.mul(k,E),G)),N=t.T1,J=o.timesFr(t.T2,e.xin),j=o.timesFr(t.T3,s.square(e.xin));let R=o.add(N,o.add(J,j));return R=o.timesFr(R,e.zh),o.sub(o.sub(o.add(r,S),C),R)}function EA(a,t,e,n,i){const o=a.G1;let s=o.add(i,o.timesFr(t.A,e.v[1]));return s=o.add(s,o.timesFr(t.B,e.v[2])),s=o.add(s,o.timesFr(t.C,e.v[3])),s=o.add(s,o.timesFr(n.S1,e.v[4])),s=o.add(s,o.timesFr(n.S2,e.v[5])),s}function CA(a,t,e,n){const i=a.G1,o=a.Fr;let s=o.add(o.neg(n),o.mul(e.v[1],t.eval_a));return s=o.add(s,o.mul(e.v[2],t.eval_b)),s=o.add(s,o.mul(e.v[3],t.eval_c)),s=o.add(s,o.mul(e.v[4],t.eval_s1)),s=o.add(s,o.mul(e.v[5],t.eval_s2)),s=o.add(s,o.mul(e.u,t.eval_zw)),i.timesFr(i.one,s)}async function BA(a,t,e,n,i,o){const s=a.G1,r=a.Fr;let u=t.Wxi;u=s.add(u,s.timesFr(t.Wxiw,e.u));let l=s.timesFr(t.Wxi,e.xi);const c=r.mul(r.mul(e.u,e.xi),r.w[n.power]);return l=s.add(l,s.timesFr(t.Wxiw,c)),l=s.add(l,o),l=s.sub(l,i),await a.pairingEq(s.neg(u),n.X_2,l,a.G2.one)}const{unstringifyBigInts:Sf}=nn;function Se(a){let t=a.toString(16);for(;t.length<64;)t="0"+t;return t=`"0x${t}"`,t}async function vA(a,t){const e=Sf(a),n=Sf(t);await Ji(e.curve);let i="";for(let o=0;o<n.length;o++)i!=""&&(i=i+","),i=i+Se(n[o]);return`[${Se(e.A[0])}, ${Se(e.A[1])},${Se(e.B[0])},${Se(e.B[1])},${Se(e.C[0])},${Se(e.C[1])},${Se(e.Z[0])},${Se(e.Z[1])},${Se(e.T1[0])},${Se(e.T1[1])},${Se(e.T2[0])},${Se(e.T2[1])},${Se(e.T3[0])},${Se(e.T3[1])},${Se(e.Wxi[0])},${Se(e.Wxi[1])},${Se(e.Wxiw[0])},${Se(e.Wxiw[1])},${Se(e.eval_a)},${Se(e.eval_b)},${Se(e.eval_c)},${Se(e.eval_s1)},${Se(e.eval_s2)},${Se(e.eval_zw)}][${i}]`}var FA=Object.freeze({__proto__:null,setup:oA,fullProve:hA,prove:F0,verify:gA,exportSolidityCallData:vA});function _f(a,t){return[a,0,0,t.one,t.zero,t.zero,t.zero,t.zero]}function SA(a,t,e,n,i,o,s,r){return[a,t,e,n,i,o,s,r]}function _A(a,t,e,n,i,o,s,r,u){return[a,t,e,n,i,o,s,r]}const tc=0,ec=1,xA=2;class MA{constructor(t,e,n,i,o){this.Fr=t,this.logger=o,this.fnGetAdditionConstraint=n,this.fnGetMultiplicationConstraint=i}processR1csConstraint(t,e,n,i){this.normalizeLinearCombination(e),this.normalizeLinearCombination(n),this.normalizeLinearCombination(i);const o=this.getLinearCombinationType(e),s=this.getLinearCombinationType(n);if(o===tc||s===tc)return this.processR1csAdditionConstraint(t,i);if(o===ec){const r=this.joinLinearCombinations(n,i,e[0]);return this.processR1csAdditionConstraint(t,r)}else if(s===ec){const r=this.joinLinearCombinations(e,i,n[0]);return this.processR1csAdditionConstraint(t,r)}else return this.processR1csMultiplicationConstraint(t,e,n,i)}getLinearCombinationType(t){let e=this.Fr.zero,n=0;const i=Object.keys(t);for(let o=0;o<i.length;o++)t[i[o]]==0n?delete t[i[o]]:i[o]==0?e=this.Fr.add(e,t[i[o]]):n++;return n>0?xA:this.Fr.isZero(e)?tc:ec}normalizeLinearCombination(t){const e=Object.keys(t);for(let n=0;n<e.length;n++)this.Fr.isZero(t[e[n]])&&delete t[e[n]];return t}joinLinearCombinations(t,e,n){const i={};for(let o in t)typeof i[o]>"u"?i[o]=this.Fr.mul(n,t[o]):i[o]=this.Fr.add(i[o],this.Fr.mul(n,t[o]));for(let o in e)typeof i[o]>"u"?i[o]=e[o]:i[o]=this.Fr.add(i[o],e[o]);return this.normalizeLinearCombination(i)}reduceCoefs(t,e,n,i,o){const s={k:this.Fr.zero,signals:[],coefs:[]},r=[];for(let u in i)u==0?s.k=this.Fr.add(s.k,i[u]):i[u]!=0n&&r.push([Number(u),i[u]]);for(;r.length>o;){const u=r.shift(),l=r.shift(),c=t.nVars++,f=this.fnGetAdditionConstraint(u[0],l[0],c,this.Fr.neg(u[1]),this.Fr.neg(l[1]),this.Fr.zero,this.Fr.one,this.Fr.zero);e.push(f),n.push([u[0],l[0],u[1],l[1]]),r.push([c,this.Fr.one])}for(let u=0;u<r.length;u++)s.signals[u]=r[u][0],s.coefs[u]=r[u][1];for(;s.coefs.length<o;)s.signals.push(0),s.coefs.push(this.Fr.zero);return s}processR1csAdditionConstraint(t,e){const n=[],i=[],o=this.reduceCoefs(t,n,i,e,3),s=this.fnGetAdditionConstraint(o.signals[0],o.signals[1],o.signals[2],o.coefs[0],o.coefs[1],this.Fr.zero,o.coefs[2],o.k);return n.push(s),[n,i]}processR1csMultiplicationConstraint(t,e,n,i){const o=[],s=[],r=this.reduceCoefs(t,o,s,e,1),u=this.reduceCoefs(t,o,s,n,1),l=this.reduceCoefs(t,o,s,i,1),c=this.fnGetMultiplicationConstraint(r.signals[0],u.signals[0],l.signals[0],this.Fr.mul(r.coefs[0],u.k),this.Fr.mul(r.k,u.coefs[0]),this.Fr.mul(r.coefs[0],u.coefs[0]),this.Fr.neg(l.coefs[0]),this.Fr.sub(this.Fr.mul(r.k,u.k),l.k));return o.push(c),[o,s]}}class hl{constructor(t,e,n){this.n=t,this.polynomials=Array(t).fill(void 0),this.curve=e,this.Fr=e.Fr,this.G1=e.G1,this.logger=n}addPolynomial(t,e){if(t>this.n-1)throw new Error("CPolynomial:addPolynomial, cannot add a polynomial to a position greater than n-1");this.polynomials[t]=e}degree(){let t=this.polynomials.map((e,n)=>e===void 0?0:e.degree()*this.n+n);return Math.max(...t)}getPolynomial(){let t=this.polynomials.map(s=>s===void 0?0:s.degree());const e=this.degree(),n=2**(Bi(e-1)+1),i=this.Fr.n8;let o=new ee(new Ht(n*i),this.curve,this.logger);for(let s=0;s<e;s++){const r=s*i,u=r*this.n;for(let l=0;l<this.n;l++)this.polynomials[l]!==void 0&&s<=t[l]&&o.coef.set(this.polynomials[l].coef.slice(r,r+i),u+l*i)}return o}async multiExponentiation(t,e){let n=this.getPolynomial();const i=n.coef.byteLength/this.Fr.n8,o=t.slice(0,i*this.G1.F.n8*2),s=await this.Fr.batchFromMontgomery(n.coef);let r=await this.G1.multiExpAffine(o,s,this.logger,e);return r=this.G1.toAffine(r),r}}async function kA(a,t,e,n){n&&n.info("FFLONK SETUP STARTED"),globalThis.gc&&globalThis.gc(),n&&n.info("> Reading PTau file");const{fd:i,sections:o}=await Ie(t,"ptau",1);if(!o[12])throw new Error("Powers of Tau is not well prepared. Section 12 missing.");n&&n.info("> Getting curve from PTau settings");const{curve:s}=await kn(i,o);n&&n.info("> Reading r1cs file");const{fd:r,sections:u}=await Ie(a,"r1cs",1),l=await Zs(r,u,{loadConstraints:!1,loadCustomGates:!0});if(l.prime!==s.r)throw new Error("r1cs curve does not match powers of tau ceremony curve");const c=s.Fr,f=s.Fr.n8,g=s.G1.F.n8*2,L=s.G2.F.n8*2;let S={},k={},E,G={nVars:l.nVars,nPublic:l.nOutputs+l.nPubInputs};const C=new Cn;let N=new Cn;if(n&&n.info("> Processing FFlonk constraints"),await P(s.Fr,l,n),globalThis.gc&&globalThis.gc(),G.cirPower=Math.max(Db,Bi(C.length+2-1)+1),G.domainSize=2**G.cirPower,o[2][0].size<(G.domainSize*9+18)*g)throw new Error("Powers of Tau is not big enough for this circuit size. Section 2 too small.");if(o[3][0].size<L)throw new Error("Powers of Tau is not well prepared. Section 3 too small.");n&&(n.info("----------------------------"),n.info("  FFLONK SETUP SETTINGS"),n.info(`  Curve:         ${s.name}`),n.info(`  Circuit power: ${G.cirPower}`),n.info(`  Domain size:   ${G.domainSize}`),n.info(`  Vars:          ${G.nVars}`),n.info(`  Public vars:   ${G.nPublic}`),n.info(`  Constraints:   ${C.length}`),n.info(`  Additions:     ${N.length}`),n.info("----------------------------")),n&&n.info("> computing k1 and k2");const[J,j]=F();n&&n.info("> computing w3");const R=M();n&&n.info("> computing w4");const b=W();n&&n.info("> computing w8");const w=A();n&&n.info("> computing wr");const Z=h(G.cirPower,s.Fr);return await V(),await r.close(),await i.close(),n&&n.info("FFLONK SETUP FINISHED"),0;async function P(Q,p,d){for(let ft=0;ft<G.nPublic;ft++)C.push(_f(ft+1,Q));const m=new MA(Q,_f,SA,_A,d),v=await ye(r,u,2);let et=0;for(let ft=0;ft<p.nConstraints;ft++){d&&ft!==0&&ft%5e5===0&&d.info(`    processing r1cs constraints ${ft}/${p.nConstraints}`);const[Ft,rt]=m.processR1csConstraint(G,...ct());C.push(...Ft),N.push(...rt)}function ct(){const ft=[];return ft[0]=dt(),ft[1]=dt(),ft[2]=dt(),ft}function dt(){const ft={},Ft=v.slice(et,et+4);et+=4;const z=new DataView(Ft.buffer).getUint32(0,!0),wt=v.slice(et,et+(4+p.n8)*z);et+=(4+p.n8)*z;const yt=new DataView(wt.buffer);for(let It=0;It<z;It++){const Ut=yt.getUint32(It*(4+p.n8),!0),Dt=p.F.fromRprLE(wt,It*(4+p.n8)+4);ft[Ut]=Dt}return ft}return 0}async function V(){n&&n.info("> Writing the zkey file");const Q=await pn(e,"zkey",1,qb,1<<22,1<<24);n&&n.info(`··· Writing Section ${Af}. Zkey Header`),await nt(Q),n&&n.info(`··· Writing Section ${Ss}. Additions`),await I(Q),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${sl}. A Map`),await y(Q,sl,0,"A map"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${rl}. B Map`),await y(Q,rl,1,"B map"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${cl}. C Map`),await y(Q,cl,2,"C map"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${aa}. QL`),await _(Q,aa,3,"QL"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${sa}. QR`),await _(Q,sa,4,"QR"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${ra}. QM`),await _(Q,ra,5,"QM"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${ca}. QO`),await _(Q,ca,6,"QO"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${la}. QC`),await _(Q,la,7,"QC"),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Sections ${ua},${da},${fa}. Sigma1, Sigma2 & Sigma 3`),await T(Q),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${ll}. Lagrange Polynomials`),await B(Q),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${_s}. Powers of Tau`),await Y(Q),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${ul}. C0`),await tt(Q),globalThis.gc&&globalThis.gc(),n&&n.info(`··· Writing Section ${al}. FFlonk Header`),await $(Q),globalThis.gc&&globalThis.gc(),n&&n.info("> Writing the zkey file finished"),await Q.close()}async function nt(Q){await ge(Q,Af),await Q.writeULE32(Sa),await pe(Q)}async function I(Q){await ge(Q,Ss);const p=new Uint8Array(8+2*f),d=new DataView(p.buffer);for(let m=0;m<N.length;m++){n&&m!==0&&m%5e5===0&&n.info(`      writing Additions: ${m}/${N.length}`);const v=N[m];d.setUint32(0,v[0],!0),d.setUint32(4,v[1],!0),p.set(v[2],8),p.set(v[3],8+f),await Q.write(p)}await pe(Q)}async function y(Q,p,d,m){await ge(Q,p);for(let v=0;v<C.length;v++)n&&v!==0&&v%5e5===0&&n.info(`      writing witness ${m}: ${v}/${C.length}`),await Q.writeULE32(C[v][d]);await pe(Q)}async function _(Q,p,d,m){let v=new Ht(G.domainSize*f);for(let et=0;et<C.length;et++)v.set(C[et][d],et*f),n&&et!==0&&et%5e5===0&&n.info(`      writing ${m}: ${et}/${C.length}`);S[m]=await ee.fromEvaluations(v,s,n),k[m]=await Be.fromPolynomial(S[m],4,s,n),await ge(Q,p),await Q.write(S[m].coef),await Q.write(k[m].eval),await pe(Q)}async function T(Q){const p=new Ht(f*G.domainSize*3),d=new Cn(G.nVars),m=new Cn(G.nVars);let v=c.one;for(let ct=0;ct<G.domainSize;ct++)ct<C.length?(et(C[ct][0],ct),et(C[ct][1],G.domainSize+ct),et(C[ct][2],G.domainSize*2+ct)):ct<G.domainSize-2?(et(0,ct),et(0,G.domainSize+ct),et(0,G.domainSize*2+ct)):(p.set(v,ct*f),p.set(c.mul(v,J),(G.domainSize+ct)*f),p.set(c.mul(v,j),(G.domainSize*2+ct)*f)),v=c.mul(v,c.w[G.cirPower]),n&&ct!==0&&ct%5e5===0&&n.info(`      writing sigma phase1: ${ct}/${C.length}`);for(let ct=0;ct<G.nVars;ct++)typeof m[ct]<"u"?p.set(d[ct],m[ct]*f):console.log("Variable not used"),n&&ct!==0&&ct%5e5===0&&n.info(`      writing sigma phase2: ${ct}/${G.nVars}`);globalThis.gc&&globalThis.gc();for(let ct=0;ct<3;ct++){const dt=ct===0?ua:ct===1?da:fa;let ft="S"+(ct+1);S[ft]=await ee.fromEvaluations(p.slice(G.domainSize*f*ct,G.domainSize*f*(ct+1)),s,n),k[ft]=await Be.fromPolynomial(S[ft],4,s,n),await ge(Q,dt),await Q.write(S[ft].coef),await Q.write(k[ft].eval),await pe(Q),globalThis.gc&&globalThis.gc()}return 0;function et(ct,dt){typeof d[ct]>"u"?m[ct]=dt:p.set(d[ct],dt*f);let ft;dt<G.domainSize?ft=v:dt<2*G.domainSize?ft=c.mul(v,J):ft=c.mul(v,j),d[ct]=ft}}async function B(Q){await ge(Q,ll);const p=Math.max(G.nPublic,1);for(let d=0;d<p;d++){let m=new Ht(G.domainSize*f);m.set(c.one,d*f),await X(Q,m)}await pe(Q)}async function Y(Q){await ge(Q,_s),E=new Ht((G.domainSize*9+18)*g),await i.readToBuffer(E,0,(G.domainSize*9+18)*g,o[2][0].p),await Q.write(E),await pe(Q)}async function tt(Q){let p=new hl(8,s,n);if(p.addPolynomial(0,S.QL),p.addPolynomial(1,S.QR),p.addPolynomial(2,S.QO),p.addPolynomial(3,S.QM),p.addPolynomial(4,S.QC),p.addPolynomial(5,S.S1),p.addPolynomial(6,S.S2),p.addPolynomial(7,S.S3),S.C0=p.getPolynomial(),S.C0.degree()>=8*G.domainSize)throw new Error("C0 Polynomial is not well calculated");await ge(Q,ul),await Q.write(S.C0.coef),await pe(Q)}async function $(Q){await ge(Q,al);const p=s.q,d=(Math.floor((oe.bitLength(p)-1)/64)+1)*8;await Q.writeULE32(d),await Dn(Q,p,d);const m=s.r,v=(Math.floor((oe.bitLength(m)-1)/64)+1)*8;await Q.writeULE32(v),await Dn(Q,m,v),await Q.writeULE32(G.nVars),await Q.writeULE32(G.nPublic),await Q.writeULE32(G.domainSize),await Q.writeULE32(N.length),await Q.writeULE32(C.length),await Q.write(J),await Q.write(j),await Q.write(R),await Q.write(b),await Q.write(w),await Q.write(Z);let et;et=await i.read(L,o[3][0].p+L),await Q.write(et);let ct=await S.C0.multiExponentiation(E,"C0");await Q.write(ct),await pe(Q)}async function X(Q,p){const[d,m]=await ee.to4T(p,G.domainSize,[],c);return await Q.write(d),await Q.write(m),[d,m]}function F(){let Q=c.two;for(;d(Q,[],G.cirPower);)c.add(Q,c.one);let p=c.add(Q,c.one);for(;d(p,[Q],G.cirPower);)c.add(p,c.one);return[Q,p];function d(m,v,et){const ct=2**et;let dt=c.one;for(let ft=0;ft<ct;ft++){if(c.eq(m,dt))return!0;for(let Ft=0;Ft<v.length;Ft++)if(c.eq(m,c.mul(v[Ft],dt)))return!0;dt=c.mul(dt,c.w[et])}return!1}}function M(){let Q=c.e(31624),d=oe.div(3648040478639879203707734290876212514758060733402672390616367364429301415936n,oe.e(3));return c.exp(Q,d)}function W(){return c.w[2]}function A(){return c.w[3]}function h(Q,p){const d=p.e(467799165886069610036046866799264026481344299079011762026774533774345988080n);return p.exp(d,2**(28-Q))}}const{stringifyBigInts:xf}=nn;async function S0(a,t,e,n){e&&e.info("FFLONK PROVER STARTED"),e&&e.info("> Reading witness file");const{fd:i,sections:o}=await Ie(t,"wtns",2),s=await _a(i,o);e&&e.info("> Reading zkey file");const{fd:r,sections:u}=await Ie(a,"zkey",2),l=await qn(r,u,void 0,n);if(l.protocolId!==Sa)throw new Error("zkey file is not fflonk");if(!oe.eq(l.r,s.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(s.nWitness!==l.nVars-l.nAdditions)throw new Error(`Invalid witness length. Circuit: ${l.nVars}, witness: ${s.nWitness}, ${l.nAdditions}`);const c=l.curve,f=c.Fr,g=c.Fr.n8,L=c.G1.F.n8*2,S=l.domainSize*g;e&&(e.info("----------------------------"),e.info("  FFLONK PROVE SETTINGS"),e.info(`  Curve:         ${c.name}`),e.info(`  Circuit power: ${l.power}`),e.info(`  Domain size:   ${l.domainSize}`),e.info(`  Vars:          ${l.nVars}`),e.info(`  Public vars:   ${l.nPublic}`),e.info(`  Constraints:   ${l.nConstraints}`),e.info(`  Additions:     ${l.nAdditions}`),e.info("----------------------------")),e&&e.info("> Reading witness file data");const k=await ye(i,o,2);await i.close(),k.set(f.zero,0);const E=new Ht(l.nAdditions*g);let G={},C={},N={},J={},j={},R={},b=new iu(c,e);e&&e.info(`> Reading Section ${Ss}. Additions`),await V(),e&&e.info(`> Reading Sections ${ua},${da},${fa}. Sigma1, Sigma2 & Sigma 3`),e&&e.info("··· Reading Sigma polynomials "),C.Sigma1=new ee(new Ht(S),c,e),C.Sigma2=new ee(new Ht(S),c,e),C.Sigma3=new ee(new Ht(S),c,e),await r.readToBuffer(C.Sigma1.coef,0,S,u[ua][0].p),await r.readToBuffer(C.Sigma2.coef,0,S,u[da][0].p),await r.readToBuffer(C.Sigma3.coef,0,S,u[fa][0].p),e&&e.info("··· Reading Sigma evaluations"),N.Sigma1=new Be(new Ht(S*4),c,e),N.Sigma2=new Be(new Ht(S*4),c,e),N.Sigma3=new Be(new Ht(S*4),c,e),await r.readToBuffer(N.Sigma1.eval,0,S*4,u[ua][0].p+S),await r.readToBuffer(N.Sigma2.eval,0,S*4,u[da][0].p+S),await r.readToBuffer(N.Sigma3.eval,0,S*4,u[fa][0].p+S),e&&e.info(`> Reading Section ${_s}. Powers of Tau`);const w=new Ht(l.domainSize*16*L);await r.readToBuffer(w,0,(l.domainSize*9+18)*L,u[_s][0].p),globalThis.gc&&globalThis.gc(),e&&e.info(""),e&&e.info("> ROUND 1"),await y(),delete C.T0,delete N.QL,delete N.QR,delete N.QM,delete N.QO,delete N.QC,globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 2"),await _(),delete G.A,delete G.B,delete G.C,delete N.A,delete N.B,delete N.C,delete N.Sigma1,delete N.Sigma2,delete N.Sigma3,delete N.lagrange1,delete N.Z,globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 3"),await T(),delete C.A,delete C.B,delete C.C,delete C.Z,delete C.T1,delete C.T2,delete C.Sigma1,delete C.Sigma2,delete C.Sigma3,delete C.QL,delete C.QR,delete C.QM,delete C.QC,delete C.QO,globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 4"),await B(),globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 5"),await Y(),delete C.C0,delete C.C1,delete C.C2,delete C.R1,delete C.R2,delete C.F,delete C.L,delete C.ZT,delete C.ZTS2,await r.close(),globalThis.gc&&globalThis.gc(),b.addEvaluation("inv",tt());let Z=b.toObjectProof();Z.protocol="fflonk",Z.curve=c.name;let P=[];for(let $=1;$<=l.nPublic;$++){const X=$*g,F=k.slice(X,X+g);P.push(oe.fromRprLE(F))}return e&&e.info("FFLONK PROVER FINISHED"),{proof:xf(Z),publicSignals:xf(P)};async function V(){e&&e.info("··· Computing additions");const $=await ye(r,u,Ss),X=8+g*2;for(let F=0;F<l.nAdditions;F++){e&&F!==0&&F%1e5===0&&e.info(`    addition ${F}/${l.nAdditions}`);let M=F*X;const W=nt($,M);M+=4;const A=nt($,M);M+=4;const h=$.slice(M,M+g);M+=g;const Q=$.slice(M,M+g),p=I(W),d=I(A),m=f.add(f.mul(h,p),f.mul(Q,d));E.set(m,g*F)}}function nt($,X){const F=$.slice(X,X+4);return new DataView(F.buffer,F.byteOffset,F.byteLength).getUint32(0,!0)}function I($){let X=l.nVars-l.nAdditions;if($<X)return k.slice($*g,$*g+g);if($<l.nVars){const F=($-X)*g;return E.slice(F,F+g)}return f.zero}async function y(){j.b=[];for(let W=1;W<=9;W++)j.b[W]=f.random();e&&e.info("> Computing A, B, C wire polynomials"),await X(),e&&e.info("> Computing T0 polynomial"),await F(),e&&e.info("> Computing C1 polynomial"),await M(),e&&e.info("> Computing C1 multi exponentiation");let $=await C.C1.multiExponentiation(w,"C1");return b.addPolynomial("C1",$),0;async function X(){e&&e.info("··· Reading data from zkey file"),G.A=new Ht(S),G.B=new Ht(S),G.C=new Ht(S);const W=await ye(r,u,sl),A=await ye(r,u,rl),h=await ye(r,u,cl);for(let Q=0;Q<l.nConstraints;Q++){const p=Q*g,d=Q*4,m=nt(W,d);G.A.set(I(m),p);const v=nt(A,d);G.B.set(I(v),p);const et=nt(h,d);G.C.set(I(et),p)}if(G.A.set(j.b[1],S-64),G.A.set(j.b[2],S-32),G.B.set(j.b[3],S-64),G.B.set(j.b[4],S-32),G.C.set(j.b[5],S-64),G.C.set(j.b[6],S-32),G.A=await f.batchToMontgomery(G.A),G.B=await f.batchToMontgomery(G.B),G.C=await f.batchToMontgomery(G.C),e&&e.info("··· Computing A ifft"),C.A=await ee.fromEvaluations(G.A,c,e),e&&e.info("··· Computing B ifft"),C.B=await ee.fromEvaluations(G.B,c,e),e&&e.info("··· Computing C ifft"),C.C=await ee.fromEvaluations(G.C,c,e),e&&e.info("··· Computing A fft"),N.A=await Be.fromPolynomial(C.A,4,c,e),e&&e.info("··· Computing B fft"),N.B=await Be.fromPolynomial(C.B,4,c,e),e&&e.info("··· Computing C fft"),N.C=await Be.fromPolynomial(C.C,4,c,e),C.A.degree()>=l.domainSize)throw new Error("A Polynomial is not well calculated");if(C.B.degree()>=l.domainSize)throw new Error("B Polynomial is not well calculated");if(C.C.degree()>=l.domainSize)throw new Error("C Polynomial is not well calculated")}async function F(){e&&e.info(`··· Reading sections ${aa}, ${sa}, ${ra}, ${ca}, ${la}. Q selectors`),N.QL=new Be(new Ht(S*4),c,e),N.QR=new Be(new Ht(S*4),c,e),N.QM=new Be(new Ht(S*4),c,e),N.QO=new Be(new Ht(S*4),c,e),N.QC=new Be(new Ht(S*4),c,e),await r.readToBuffer(N.QL.eval,0,S*4,u[aa][0].p+S),await r.readToBuffer(N.QR.eval,0,S*4,u[sa][0].p+S),await r.readToBuffer(N.QM.eval,0,S*4,u[ra][0].p+S),await r.readToBuffer(N.QO.eval,0,S*4,u[ca][0].p+S),await r.readToBuffer(N.QC.eval,0,S*4,u[la][0].p+S);const W=await ye(r,u,ll);N.lagrange1=new Be(W,c,e),G.T0=new Ht(S*4),e&&e.info("··· Computing T0 evaluations");for(let A=0;A<l.domainSize*4;A++){e&&A!==0&&A%1e5===0&&e.info(`      T0 evaluation ${A}/${l.domainSize*4}`);const h=N.A.getEvaluation(A),Q=N.B.getEvaluation(A),p=N.C.getEvaluation(A),d=N.QL.getEvaluation(A),m=N.QR.getEvaluation(A),v=N.QM.getEvaluation(A),et=N.QO.getEvaluation(A),ct=N.QC.getEvaluation(A);let dt=f.zero;for(let yt=0;yt<l.nPublic;yt++){const It=yt*5*l.domainSize+l.domainSize+A,Ut=N.lagrange1.getEvaluation(It),Dt=G.A.slice(yt*g,(yt+1)*g);dt=f.sub(dt,f.mul(Ut,Dt))}const ft=f.mul(h,d),Ft=f.mul(Q,m),rt=f.mul(f.mul(h,Q),v),z=f.mul(p,et),wt=f.add(ft,f.add(Ft,f.add(rt,f.add(z,f.add(ct,dt)))));G.T0.set(wt,A*g)}if(e&&e.info("buffer T0: "+G.T0.byteLength/g),e&&e.info("··· Computing T0 ifft"),C.T0=await ee.fromEvaluations(G.T0,c,e),e&&e.info("T0 length: "+C.T0.length()),e&&e.info("T0 degree: "+C.T0.degree()),e&&e.info("··· Computing T0 / ZH"),C.T0.divByZerofier(l.domainSize,f.one),C.T0.degree()>=2*l.domainSize-2)throw new Error(`T0 Polynomial is not well calculated (degree is ${C.T0.degree()} and must be less than ${2*l.domainSize+2}`);delete G.T0}async function M(){let W=new hl(4,c,e);if(W.addPolynomial(0,C.A),W.addPolynomial(1,C.B),W.addPolynomial(2,C.C),W.addPolynomial(3,C.T0),C.C1=W.getPolynomial(),C.C1.degree()>=8*l.domainSize-8)throw new Error("C1 Polynomial is not well calculated")}}async function _(){e&&e.info("> Computing challenges beta and gamma");const $=new Oi(c);$.addPolCommitment(l.C0);for(let h=0;h<l.nPublic;h++)$.addScalar(G.A.slice(h*g,h*g+g));$.addPolCommitment(b.getPolynomial("C1")),j.beta=$.getChallenge(),e&&e.info("··· challenges.beta: "+f.toString(j.beta)),$.reset(),$.addScalar(j.beta),j.gamma=$.getChallenge(),e&&e.info("··· challenges.gamma: "+f.toString(j.gamma)),e&&e.info("> Computing Z polynomial"),await F(),e&&e.info("> Computing T1 polynomial"),await M(),e&&e.info("> Computing T2 polynomial"),await W(),e&&e.info("> Computing C2 polynomial"),await A(),e&&e.info("> Computing C2 multi exponentiation");let X=await C.C2.multiExponentiation(w,"C2");return b.addPolynomial("C2",X),0;async function F(){e&&e.info("··· Computing Z evaluations");let h=new Ht(S),Q=new Ht(S);h.set(f.one,0),Q.set(f.one,0);let p=f.one;for(let d=0;d<l.domainSize;d++){e&&d!==0&&d%1e5===0&&e.info(`    Z evaluation ${d}/${l.domainSize}`);const m=d*g,v=f.mul(j.beta,p);let et=G.A.slice(m,m+g);et=f.add(et,v),et=f.add(et,j.gamma);let ct=G.B.slice(m,m+g);ct=f.add(ct,f.mul(l.k1,v)),ct=f.add(ct,j.gamma);let dt=G.C.slice(m,m+g);dt=f.add(dt,f.mul(l.k2,v)),dt=f.add(dt,j.gamma);let ft=f.mul(et,f.mul(ct,dt)),Ft=G.A.slice(m,m+g);Ft=f.add(Ft,f.mul(j.beta,N.Sigma1.getEvaluation(d*4))),Ft=f.add(Ft,j.gamma);let rt=G.B.slice(m,m+g);rt=f.add(rt,f.mul(j.beta,N.Sigma2.getEvaluation(d*4))),rt=f.add(rt,j.gamma);let z=G.C.slice(m,m+g);z=f.add(z,f.mul(j.beta,N.Sigma3.getEvaluation(d*4))),z=f.add(z,j.gamma);let wt=f.mul(Ft,f.mul(rt,z));ft=f.mul(h.slice(m,m+g),ft),h.set(ft,(d+1)%l.domainSize*g),wt=f.mul(Q.slice(m,m+g),wt),Q.set(wt,(d+1)%l.domainSize*g),p=f.mul(p,f.w[l.power])}Q=await f.batchInverse(Q);for(let d=0;d<l.domainSize;d++){const m=d*g,v=f.mul(h.slice(m,m+g),Q.slice(m,m+g));h.set(v,m)}if(G.Z=h,!f.eq(h.slice(0,g),f.one))throw new Error("Copy constraints does not match");if(e&&e.info("··· Computing Z ifft"),C.Z=await ee.fromEvaluations(G.Z,c,e),e&&e.info("··· Computing Z fft"),N.Z=await Be.fromPolynomial(C.Z,4,c,e),C.Z.blindCoefficients([j.b[9],j.b[8],j.b[7]]),C.Z.degree()>=l.domainSize+3)throw new Error("Z Polynomial is not well calculated");delete G.Z}async function M(){e&&e.info("··· Computing T1 evaluations"),G.T1=new Ht(S*2),G.T1z=new Ht(S*2);let h=f.one;for(let Q=0;Q<l.domainSize*2;Q++){e&&Q!==0&&Q%1e5===0&&e.info(`    T1 evaluation ${Q}/${l.domainSize*4}`);const p=f.square(h),d=N.Z.getEvaluation(Q*2),m=f.add(f.add(f.mul(j.b[7],p),f.mul(j.b[8],h)),j.b[9]),v=N.lagrange1.getEvaluation(l.domainSize+Q*2);let et=f.mul(f.sub(d,f.one),v),ct=f.mul(m,v);G.T1.set(et,Q*g),G.T1z.set(ct,Q*g),h=f.mul(h,f.w[l.power+1])}if(e&&e.info("··· Computing T1 ifft"),C.T1=await ee.fromEvaluations(G.T1,c,e),C.T1.divByZerofier(l.domainSize,f.one),e&&e.info("··· Computing T1z ifft"),C.T1z=await ee.fromEvaluations(G.T1z,c,e),C.T1.add(C.T1z),C.T1.degree()>=l.domainSize+2)throw new Error("T1 Polynomial is not well calculated");delete G.T1,delete G.T1z,delete C.T1z}async function W(){e&&e.info("··· Computing T2 evaluations"),G.T2=new Ht(S*4),G.T2z=new Ht(S*4);let h=f.one;for(let Q=0;Q<l.domainSize*4;Q++){e&&Q!==0&&Q%1e5===0&&e.info(`    T2 evaluation ${Q}/${l.domainSize*4}`);const p=f.square(h),d=f.mul(h,f.w[l.power]),m=f.square(d),v=N.A.getEvaluation(Q),et=N.B.getEvaluation(Q),ct=N.C.getEvaluation(Q),dt=N.Z.getEvaluation(Q),ft=N.Z.getEvaluation((l.domainSize*4+4+Q)%(l.domainSize*4)),Ft=f.add(f.add(f.mul(j.b[7],p),f.mul(j.b[8],h)),j.b[9]),rt=f.add(f.add(f.mul(j.b[7],m),f.mul(j.b[8],d)),j.b[9]),z=N.Sigma1.getEvaluation(Q),wt=N.Sigma2.getEvaluation(Q),yt=N.Sigma3.getEvaluation(Q),It=f.mul(j.beta,h);let Ut=f.add(v,It);Ut=f.add(Ut,j.gamma);let Dt=f.add(et,f.mul(It,l.k1));Dt=f.add(Dt,j.gamma);let Mt=f.add(ct,f.mul(It,l.k2));Mt=f.add(Mt,j.gamma);let Qt=f.mul(f.mul(f.mul(Ut,Dt),Mt),dt),it=f.mul(f.mul(f.mul(Ut,Dt),Mt),Ft),K=f.add(v,f.mul(j.beta,z));K=f.add(K,j.gamma);let U=f.add(et,f.mul(j.beta,wt));U=f.add(U,j.gamma);let D=f.add(ct,f.mul(j.beta,yt));D=f.add(D,j.gamma);let ot=f.mul(f.mul(f.mul(K,U),D),ft),st=f.mul(f.mul(f.mul(K,U),D),rt),lt=f.sub(Qt,ot),at=f.sub(it,st);G.T2.set(lt,Q*g),G.T2z.set(at,Q*g),h=f.mul(h,f.w[l.power+2])}if(e&&e.info("··· Computing T2 ifft"),C.T2=await ee.fromEvaluations(G.T2,c,e),e&&e.info("··· Computing T2 / ZH"),C.T2.divByZerofier(l.domainSize,f.one),e&&e.info("··· Computing T2z ifft"),C.T2z=await ee.fromEvaluations(G.T2z,c,e),C.T2.add(C.T2z),C.T2.degree()>=3*l.domainSize)throw new Error("T2 Polynomial is not well calculated");delete G.T2,delete G.T2z,delete C.T2z}async function A(){let h=new hl(3,c,e);if(h.addPolynomial(0,C.Z),h.addPolynomial(1,C.T1),h.addPolynomial(2,C.T2),C.C2=h.getPolynomial(),C.C2.degree()>=9*l.domainSize)throw new Error("C2 Polynomial is not well calculated")}}async function T(){e&&e.info("> Computing challenge xi");const $=new Oi(c);$.addScalar(j.gamma),$.addPolCommitment(b.getPolynomial("C2")),j.xiSeed=$.getChallenge();const X=f.square(j.xiSeed);R.w8=[],R.w8[0]=f.one;for(let F=1;F<8;F++)R.w8[F]=f.mul(R.w8[F-1],l.w8);R.w4=[],R.w4[0]=f.one;for(let F=1;F<4;F++)R.w4[F]=f.mul(R.w4[F-1],l.w4);R.w3=[],R.w3[0]=f.one,R.w3[1]=l.w3,R.w3[2]=f.square(l.w3),R.S0={},R.S0.h0w8=[],R.S0.h0w8[0]=f.mul(X,j.xiSeed);for(let F=1;F<8;F++)R.S0.h0w8[F]=f.mul(R.S0.h0w8[0],R.w8[F]);R.S1={},R.S1.h1w4=[],R.S1.h1w4[0]=f.square(R.S0.h0w8[0]);for(let F=1;F<4;F++)R.S1.h1w4[F]=f.mul(R.S1.h1w4[0],R.w4[F]);R.S2={},R.S2.h2w3=[],R.S2.h2w3[0]=f.mul(R.S1.h1w4[0],X),R.S2.h2w3[1]=f.mul(R.S2.h2w3[0],R.w3[1]),R.S2.h2w3[2]=f.mul(R.S2.h2w3[0],R.w3[2]),R.S2.h3w3=[],R.S2.h3w3[0]=f.mul(R.S2.h2w3[0],l.wr),R.S2.h3w3[1]=f.mul(R.S2.h3w3[0],R.w3[1]),R.S2.h3w3[2]=f.mul(R.S2.h3w3[0],R.w3[2]),j.xi=f.mul(f.square(R.S2.h2w3[0]),R.S2.h2w3[0]),e&&e.info("··· challenges.xi: "+f.toString(j.xi)),C.QL=new ee(new Ht(S),c,e),C.QR=new ee(new Ht(S),c,e),C.QM=new ee(new Ht(S),c,e),C.QO=new ee(new Ht(S),c,e),C.QC=new ee(new Ht(S),c,e),await r.readToBuffer(C.QL.coef,0,S,u[aa][0].p),await r.readToBuffer(C.QR.coef,0,S,u[sa][0].p),await r.readToBuffer(C.QM.coef,0,S,u[ra][0].p),await r.readToBuffer(C.QO.coef,0,S,u[ca][0].p),await r.readToBuffer(C.QC.coef,0,S,u[la][0].p),e&&e.info("··· Computing evaluations"),b.addEvaluation("ql",C.QL.evaluate(j.xi)),b.addEvaluation("qr",C.QR.evaluate(j.xi)),b.addEvaluation("qm",C.QM.evaluate(j.xi)),b.addEvaluation("qo",C.QO.evaluate(j.xi)),b.addEvaluation("qc",C.QC.evaluate(j.xi)),b.addEvaluation("s1",C.Sigma1.evaluate(j.xi)),b.addEvaluation("s2",C.Sigma2.evaluate(j.xi)),b.addEvaluation("s3",C.Sigma3.evaluate(j.xi)),b.addEvaluation("a",C.A.evaluate(j.xi)),b.addEvaluation("b",C.B.evaluate(j.xi)),b.addEvaluation("c",C.C.evaluate(j.xi)),b.addEvaluation("z",C.Z.evaluate(j.xi)),j.xiw=f.mul(j.xi,f.w[l.power]),b.addEvaluation("zw",C.Z.evaluate(j.xiw)),b.addEvaluation("t1w",C.T1.evaluate(j.xiw)),b.addEvaluation("t2w",C.T2.evaluate(j.xiw))}async function B(){e&&e.info("> Computing challenge alpha");const $=new Oi(c);$.addScalar(j.xiSeed),$.addScalar(b.getEvaluation("ql")),$.addScalar(b.getEvaluation("qr")),$.addScalar(b.getEvaluation("qm")),$.addScalar(b.getEvaluation("qo")),$.addScalar(b.getEvaluation("qc")),$.addScalar(b.getEvaluation("s1")),$.addScalar(b.getEvaluation("s2")),$.addScalar(b.getEvaluation("s3")),$.addScalar(b.getEvaluation("a")),$.addScalar(b.getEvaluation("b")),$.addScalar(b.getEvaluation("c")),$.addScalar(b.getEvaluation("z")),$.addScalar(b.getEvaluation("zw")),$.addScalar(b.getEvaluation("t1w")),$.addScalar(b.getEvaluation("t2w")),j.alpha=$.getChallenge(),e&&e.info("··· challenges.alpha: "+f.toString(j.alpha)),e&&e.info("> Reading C0 polynomial"),C.C0=new ee(new Ht(S*8),c,e),await r.readToBuffer(C.C0.coef,0,S*8,u[ul][0].p),e&&e.info("> Computing R0 polynomial"),F(),e&&e.info("> Computing R1 polynomial"),M(),e&&e.info("> Computing R2 polynomial"),W(),e&&e.info("> Computing F polynomial"),await A(),e&&e.info("> Computing W1 multi exponentiation");let X=await C.F.multiExponentiation(w,"W1");return b.addPolynomial("W1",X),0;function F(){if(C.R0=ee.lagrangePolynomialInterpolation([R.S0.h0w8[0],R.S0.h0w8[1],R.S0.h0w8[2],R.S0.h0w8[3],R.S0.h0w8[4],R.S0.h0w8[5],R.S0.h0w8[6],R.S0.h0w8[7]],[C.C0.evaluate(R.S0.h0w8[0]),C.C0.evaluate(R.S0.h0w8[1]),C.C0.evaluate(R.S0.h0w8[2]),C.C0.evaluate(R.S0.h0w8[3]),C.C0.evaluate(R.S0.h0w8[4]),C.C0.evaluate(R.S0.h0w8[5]),C.C0.evaluate(R.S0.h0w8[6]),C.C0.evaluate(R.S0.h0w8[7])],c),C.R0.degree()>7)throw new Error("R0 Polynomial is not well calculated")}function M(){if(C.R1=ee.lagrangePolynomialInterpolation([R.S1.h1w4[0],R.S1.h1w4[1],R.S1.h1w4[2],R.S1.h1w4[3]],[C.C1.evaluate(R.S1.h1w4[0]),C.C1.evaluate(R.S1.h1w4[1]),C.C1.evaluate(R.S1.h1w4[2]),C.C1.evaluate(R.S1.h1w4[3])],c),C.R1.degree()>3)throw new Error("R1 Polynomial is not well calculated")}function W(){if(C.R2=ee.lagrangePolynomialInterpolation([R.S2.h2w3[0],R.S2.h2w3[1],R.S2.h2w3[2],R.S2.h3w3[0],R.S2.h3w3[1],R.S2.h3w3[2]],[C.C2.evaluate(R.S2.h2w3[0]),C.C2.evaluate(R.S2.h2w3[1]),C.C2.evaluate(R.S2.h2w3[2]),C.C2.evaluate(R.S2.h3w3[0]),C.C2.evaluate(R.S2.h3w3[1]),C.C2.evaluate(R.S2.h3w3[2])],c),C.R2.degree()>5)throw new Error("R2 Polynomial is not well calculated")}async function A(){e&&e.info("··· Computing F polynomial"),C.F=ee.fromPolynomial(C.C0,c,e),C.F.sub(C.R0),C.F.divByZerofier(8,j.xi);let h=ee.fromPolynomial(C.C1,c,e);h.sub(C.R1),h.mulScalar(j.alpha),h.divByZerofier(4,j.xi);let Q=ee.fromPolynomial(C.C2,c,e);if(Q.sub(C.R2),Q.mulScalar(f.square(j.alpha)),Q.divByZerofier(3,j.xi),Q.divByZerofier(3,j.xiw),C.F.add(h),C.F.add(Q),C.F.degree()>=9*l.domainSize-6)throw new Error("F Polynomial is not well calculated")}}async function Y(){e&&e.info("> Computing challenge y");const $=new Oi(c);$.addScalar(j.alpha),$.addPolCommitment(b.getPolynomial("W1")),j.y=$.getChallenge(),e&&e.info("··· challenges.y: "+f.toString(j.y)),e&&e.info("> Computing L polynomial"),await A(),e&&e.info("> Computing ZTS2 polynomial"),await Q();let X=C.ZTS2.evaluate(j.y);X=f.inv(X),C.L.mulScalar(X);const F=ee.fromCoefficientsArray([f.neg(j.y),f.one],c);e&&e.info("> Computing W' = L / ZTS2 polynomial");const M=C.L.divBy(F);if(M.degree()>0)throw new Error(`Degree of L(X)/(ZTS2(y)(X-y)) remainder is ${M.degree()} and should be 0`);if(C.L.degree()>=9*l.domainSize-1)throw new Error("Degree of L(X)/(ZTS2(y)(X-y)) is not correct");e&&e.info("> Computing W' multi exponentiation");let W=await C.L.multiExponentiation(w,"W2");return b.addPolynomial("W2",W),0;async function A(){e&&e.info("··· Computing L polynomial");const p=C.R0.evaluate(j.y),d=C.R1.evaluate(j.y),m=C.R2.evaluate(j.y);let v=f.sub(j.y,R.S0.h0w8[0]);for(let yt=1;yt<8;yt++)v=f.mul(v,f.sub(j.y,R.S0.h0w8[yt]));let et=f.sub(j.y,R.S1.h1w4[0]);for(let yt=1;yt<4;yt++)et=f.mul(et,f.sub(j.y,R.S1.h1w4[yt]));let ct=f.sub(j.y,R.S2.h2w3[0]);for(let yt=1;yt<3;yt++)ct=f.mul(ct,f.sub(j.y,R.S2.h2w3[yt]));for(let yt=0;yt<3;yt++)ct=f.mul(ct,f.sub(j.y,R.S2.h3w3[yt]));let dt=f.mul(et,ct),ft=f.mul(j.alpha,f.mul(v,ct)),Ft=f.mul(f.square(j.alpha),f.mul(v,et));J.denH1=et,J.denH2=ct,C.L=ee.fromPolynomial(C.C0,c,e),C.L.subScalar(p),C.L.mulScalar(dt);let rt=ee.fromPolynomial(C.C1,c,e);rt.subScalar(d),rt.mulScalar(ft);let z=ee.fromPolynomial(C.C2,c,e);z.subScalar(m),z.mulScalar(Ft),C.L.add(rt),C.L.add(z),e&&e.info("> Computing ZT polynomial"),await h();const wt=C.ZT.evaluate(j.y);if(C.F.mulScalar(wt),C.L.sub(C.F),C.L.degree()>=9*l.domainSize)throw new Error("L Polynomial is not well calculated");delete G.L}async function h(){C.ZT=ee.zerofierPolynomial([R.S0.h0w8[0],R.S0.h0w8[1],R.S0.h0w8[2],R.S0.h0w8[3],R.S0.h0w8[4],R.S0.h0w8[5],R.S0.h0w8[6],R.S0.h0w8[7],R.S1.h1w4[0],R.S1.h1w4[1],R.S1.h1w4[2],R.S1.h1w4[3],R.S2.h2w3[0],R.S2.h2w3[1],R.S2.h2w3[2],R.S2.h3w3[0],R.S2.h3w3[1],R.S2.h3w3[2]],c)}async function Q(){C.ZTS2=ee.zerofierPolynomial([R.S1.h1w4[0],R.S1.h1w4[1],R.S1.h1w4[2],R.S1.h1w4[3],R.S2.h2w3[0],R.S2.h2w3[1],R.S2.h2w3[2],R.S2.h3w3[0],R.S2.h3w3[1],R.S2.h3w3[2]],c)}}function tt(){let $=j.xi;for(let Q=0;Q<l.power;Q++)$=f.square($);J.zh=f.sub($,f.one),W(J,R.S0.h0w8,j.y,c),A(J,R.S1.h1w4,j.y,c),h(J,R.S2.h2w3,R.S2.h3w3,j.y,j.xi,j.xiw,c);const X=Math.max(1,l.nPublic);let F=f.one;for(let Q=0;Q<X;Q++)J["Li_"+(Q+1)]=f.mul(f.e(l.domainSize),f.sub(j.xi,F)),F=f.mul(F,f.w[l.power]);let M=f.one;for(const Q of Object.values(J))if(Array.isArray(Q))for(const p of Q)M=f.mul(M,p);else M=f.mul(M,Q);return f.inv(M);function W(Q,p,d,m){const v=m.Fr,et=p.length,ct=v.mul(v.e(et),v.exp(p[0],et-2)),dt=[];for(let ft=0;ft<et;ft++){const Ft=p[(et-1)*ft%et],rt=v.sub(d,p[ft]);Q[["LiS0_"+(ft+1)]]=v.mul(v.mul(ct,Ft),rt)}return dt}function A(Q,p,d,m){const v=m.Fr,et=p.length,ct=v.mul(v.e(et),v.exp(p[0],et-2)),dt=[];for(let ft=0;ft<et;ft++){const Ft=p[(et-1)*ft%et],rt=v.sub(d,p[ft]);Q[["LiS1_"+(ft+1)]]=v.mul(v.mul(ct,Ft),rt)}return dt}function h(Q,p,d,m,v,et,ct){const dt=ct.Fr,ft=[],Ft=dt.mul(dt.e(3),p[0]),rt=dt.sub(v,et);let z=dt.mul(Ft,rt);for(let It=0;It<3;It++){const Ut=p[2*It%3],Dt=dt.sub(m,p[It]);Q[["LiS2_"+(It+1)]]=dt.mul(z,dt.mul(Ut,Dt))}const wt=dt.mul(dt.e(3),d[0]),yt=dt.sub(et,v);z=dt.mul(wt,yt);for(let It=0;It<3;It++){const Ut=d[2*It%3],Dt=dt.sub(m,d[It]);Q[["LiS2_"+(It+1+3)]]=dt.mul(z,dt.mul(Ut,Dt))}return ft}}}const{unstringifyBigInts:UA}=nn;async function GA(a,t,e,n,i,o){const s=UA(a),r={type:"mem"};return await Ws(s,t,r,i),await S0(e,r,n,o)}const{unstringifyBigInts:nc}=nn;async function PA(a,t,e,n){n&&n.info("FFLONK VERIFIER STARTED"),a=nc(a),e=nc(e);const i=await Ji(a.curve),o=OA(i,a),s=new iu(i,n);s.fromObjectProof(e);const r=nc(t);if(r.length!==o.nPublic)return n.error("Number of public signals does not match with vk"),!1;const u=i.Fr;if(n&&(n.info("----------------------------"),n.info("  FFLONK VERIFY SETTINGS"),n.info(`  Curve:         ${i.name}`),n.info(`  Circuit power: ${o.power}`),n.info(`  Domain size:   ${2**o.power}`),n.info(`  Public vars:   ${o.nPublic}`),n.info("----------------------------")),n&&n.info("> Checking commitments belong to G1"),!DA(i,s,o))return n&&n.error("Proof commitments are not valid"),!1;if(n&&n.info("> Checking evaluations belong to F"),!qA(i,s))return n&&n.error("Proof evaluations are not valid."),!1;if(n&&n.info("> Checking public inputs belong to F"),!TA(i,r))return n&&n.error("Public inputs are not valid."),!1;n&&n.info("> Computing challenges");const{challenges:l,roots:c}=RA(i,s,o,r,n);n&&n.info("> Computing Zero polynomial evaluation Z_H(xi)"),l.zh=u.sub(l.xiN,u.one),l.invzh=u.inv(l.zh),n&&n.info("> Computing Lagrange evaluations");const f=await HA(i,l,o);n&&n.info("> Computing polynomial identities PI(X)");const g=QA(i,r,f);n&&n.info("> Computing r0(y)");const L=KA(s,l,c,i,n);n&&n.info("> Computing r1(y)");const S=NA(s,l,c,g,i,n);n&&n.info("> Computing r2(y)");const k=zA(s,l,c,f[1],o,i,n);n&&n.info("> Computing F");const E=JA(i,s,o,l,c);n&&n.info("> Computing E");const G=YA(i,s,l,o,L,S,k);n&&n.info("> Computing J");const C=jA(i,s,l);n&&n.info("> Validate all evaluations with a pairing");const N=await VA(i,s,l,o,E,G,C);return n&&(N?n.info("PROOF VERIFIED SUCCESSFULLY"):n.warn("Invalid Proof")),n&&n.info("FFLONK VERIFIER FINISHED"),N}function OA(a,t){const e=t;return e.k1=a.Fr.fromObject(t.k1),e.k2=a.Fr.fromObject(t.k2),e.w=a.Fr.fromObject(t.w),e.w3=a.Fr.fromObject(t.w3),e.w4=a.Fr.fromObject(t.w4),e.w8=a.Fr.fromObject(t.w8),e.wr=a.Fr.fromObject(t.wr),e.X_2=a.G2.fromObject(t.X_2),e.C0=a.G1.fromObject(t.C0),e}function DA(a,t,e){const n=a.G1;return n.isValid(t.polynomials.C1)&&n.isValid(t.polynomials.C2)&&n.isValid(t.polynomials.W1)&&n.isValid(t.polynomials.W2)&&n.isValid(e.C0)}function _0(a,t){return oe.lt(t,a.r)}function dn(a,t){return _0(a,oe.fromRprLE(t))}function qA(a,t){return dn(a,t.evaluations.ql)&&dn(a,t.evaluations.qr)&&dn(a,t.evaluations.qm)&&dn(a,t.evaluations.qo)&&dn(a,t.evaluations.qc)&&dn(a,t.evaluations.s1)&&dn(a,t.evaluations.s2)&&dn(a,t.evaluations.s3)&&dn(a,t.evaluations.a)&&dn(a,t.evaluations.b)&&dn(a,t.evaluations.c)&&dn(a,t.evaluations.z)&&dn(a,t.evaluations.zw)&&dn(a,t.evaluations.t1w)&&dn(a,t.evaluations.t2w)}function TA(a,t){for(let e=0;e<t.length;e++)if(!_0(a,t[e]))return!1;return!0}function RA(a,t,e,n,i){const o=a.Fr,s={},r={},u=new Oi(a);u.addPolCommitment(e.C0);for(let S=0;S<n.length;S++)u.addScalar(o.e(n[S]));u.addPolCommitment(t.polynomials.C1),s.beta=u.getChallenge(),u.reset(),u.addScalar(s.beta),s.gamma=u.getChallenge(),u.reset(),u.addScalar(s.gamma),u.addPolCommitment(t.polynomials.C2);const l=u.getChallenge(),c=o.square(l);let f=[];f[1]=e.w8,f[2]=o.square(e.w8),f[3]=o.mul(f[2],e.w8),f[4]=o.mul(f[3],e.w8),f[5]=o.mul(f[4],e.w8),f[6]=o.mul(f[5],e.w8),f[7]=o.mul(f[6],e.w8);let g=[];g[1]=e.w4,g[2]=o.square(e.w4),g[3]=o.mul(g[2],e.w4);let L=[];L[1]=e.w3,L[2]=o.square(e.w3),r.S0={},r.S0.h0w8=[],r.S0.h0w8[0]=o.mul(c,l);for(let S=1;S<8;S++)r.S0.h0w8[S]=o.mul(r.S0.h0w8[0],f[S]);r.S1={},r.S1.h1w4=[],r.S1.h1w4[0]=o.square(r.S0.h0w8[0]);for(let S=1;S<4;S++)r.S1.h1w4[S]=o.mul(r.S1.h1w4[0],g[S]);r.S2={},r.S2.h2w3=[],r.S2.h2w3[0]=o.mul(r.S1.h1w4[0],c),r.S2.h2w3[1]=o.mul(r.S2.h2w3[0],L[1]),r.S2.h2w3[2]=o.mul(r.S2.h2w3[0],L[2]),r.S2.h3w3=[],r.S2.h3w3[0]=o.mul(r.S2.h2w3[0],e.wr),r.S2.h3w3[1]=o.mul(r.S2.h3w3[0],L[1]),r.S2.h3w3[2]=o.mul(r.S2.h3w3[0],L[2]),s.xi=o.mul(o.square(r.S2.h2w3[0]),r.S2.h2w3[0]),s.xiw=o.mul(s.xi,o.w[e.power]),s.xiN=s.xi,e.domainSize=1;for(let S=0;S<e.power;S++)s.xiN=o.square(s.xiN),e.domainSize*=2;return u.reset(),u.addScalar(l),u.addScalar(t.evaluations.ql),u.addScalar(t.evaluations.qr),u.addScalar(t.evaluations.qm),u.addScalar(t.evaluations.qo),u.addScalar(t.evaluations.qc),u.addScalar(t.evaluations.s1),u.addScalar(t.evaluations.s2),u.addScalar(t.evaluations.s3),u.addScalar(t.evaluations.a),u.addScalar(t.evaluations.b),u.addScalar(t.evaluations.c),u.addScalar(t.evaluations.z),u.addScalar(t.evaluations.zw),u.addScalar(t.evaluations.t1w),u.addScalar(t.evaluations.t2w),s.alpha=u.getChallenge(),u.reset(),u.addScalar(s.alpha),u.addPolCommitment(t.polynomials.W1),s.y=u.getChallenge(),i&&(i.info("··· challenges.beta:  "+o.toString(s.beta)),i.info("··· challenges.gamma: "+o.toString(s.gamma)),i.info("··· challenges.xi:    "+o.toString(s.xi)),i.info("··· challenges.alpha: "+o.toString(s.alpha)),i.info("··· challenges.y:     "+o.toString(s.y))),{challenges:s,roots:r}}async function HA(a,t,e){const n=a.Fr,i=Math.max(1,e.nPublic),o=new Ht(i*n.n8);let s=new Ht(i*n.n8),r=n.one;for(let l=0;l<i;l++){const c=l*n.n8;o.set(n.mul(r,t.zh),c),s.set(n.mul(n.e(e.domainSize),n.sub(t.xi,r)),c),r=n.mul(r,e.w)}s=await n.batchInverse(s);let u=[];for(let l=0;l<i;l++){const c=l*n.n8;u[l+1]=n.mul(o.slice(c,c+n.n8),s.slice(c,c+n.n8))}return u}function QA(a,t,e){const n=a.Fr;let i=n.zero;for(let o=0;o<t.length;o++){const s=n.e(t[o]);i=n.sub(i,n.mul(s,e[o+1]))}return i}function KA(a,t,e,n,i){const o=n.Fr,s=x0(e.S0.h0w8,t.y,t.xi,n);i&&i.info("··· Computing r0(y)");let r=o.zero;for(let u=0;u<8;u++){let l=[];l[1]=e.S0.h0w8[u];for(let f=2;f<8;f++)l[f]=o.mul(l[f-1],e.S0.h0w8[u]);let c=o.add(a.evaluations.ql,o.mul(a.evaluations.qr,l[1]));c=o.add(c,o.mul(a.evaluations.qo,l[2])),c=o.add(c,o.mul(a.evaluations.qm,l[3])),c=o.add(c,o.mul(a.evaluations.qc,l[4])),c=o.add(c,o.mul(a.evaluations.s1,l[5])),c=o.add(c,o.mul(a.evaluations.s2,l[6])),c=o.add(c,o.mul(a.evaluations.s3,l[7])),r=o.add(r,o.mul(c,s[u]))}return r}function NA(a,t,e,n,i,o){const s=i.Fr,r=x0(e.S1.h1w4,t.y,t.xi,i);o&&o.info("··· Computing T0(xi)");let u=s.mul(a.evaluations.ql,a.evaluations.a);u=s.add(u,s.mul(a.evaluations.qr,a.evaluations.b)),u=s.add(u,s.mul(a.evaluations.qm,s.mul(a.evaluations.a,a.evaluations.b))),u=s.add(u,s.mul(a.evaluations.qo,a.evaluations.c)),u=s.add(u,a.evaluations.qc),u=s.add(u,n),u=s.mul(u,t.invzh),o&&o.info("··· Computing C1(h_1ω_4^i) values");let l=s.zero;for(let c=0;c<4;c++){let f=a.evaluations.a;f=s.add(f,s.mul(e.S1.h1w4[c],a.evaluations.b));const g=s.square(e.S1.h1w4[c]);f=s.add(f,s.mul(g,a.evaluations.c)),f=s.add(f,s.mul(s.mul(g,e.S1.h1w4[c]),u)),l=s.add(l,s.mul(f,r[c]))}return l}function zA(a,t,e,n,i,o,s){const r=o.Fr,u=WA([e.S2.h2w3,e.S2.h3w3],t.y,t.xi,t.xiw,o);s&&s.info("··· Computing T1(xi)");let l=r.sub(a.evaluations.z,r.one);l=r.mul(l,n),l=r.mul(l,t.invzh),s&&s.info("··· Computing T2(xi)");const c=r.mul(t.beta,t.xi),f=r.add(a.evaluations.a,r.add(c,t.gamma)),g=r.add(a.evaluations.b,r.add(r.mul(c,i.k1),t.gamma)),L=r.add(a.evaluations.c,r.add(r.mul(c,i.k2),t.gamma)),S=r.mul(f,r.mul(g,r.mul(L,a.evaluations.z))),k=r.add(a.evaluations.a,r.add(r.mul(t.beta,a.evaluations.s1),t.gamma)),E=r.add(a.evaluations.b,r.add(r.mul(t.beta,a.evaluations.s2),t.gamma)),G=r.add(a.evaluations.c,r.add(r.mul(t.beta,a.evaluations.s3),t.gamma)),C=r.mul(k,r.mul(E,r.mul(G,a.evaluations.zw)));let N=r.sub(S,C);N=r.mul(N,t.invzh),s&&s.info("··· Computing C2(h_2ω_3^i) values");let J=r.zero;for(let j=0;j<3;j++){let R=r.add(a.evaluations.z,r.mul(e.S2.h2w3[j],l));R=r.add(R,r.mul(r.square(e.S2.h2w3[j]),N)),J=r.add(J,r.mul(R,u[j]))}s&&s.info("··· Computing C2(h_3ω_3^i) values");for(let j=0;j<3;j++){let R=r.add(a.evaluations.zw,r.mul(e.S2.h3w3[j],a.evaluations.t1w));R=r.add(R,r.mul(r.square(e.S2.h3w3[j]),a.evaluations.t2w)),J=r.add(J,r.mul(R,u[j+3]))}return J}function JA(a,t,e,n,i){const o=a.G1,s=a.Fr;let r=s.sub(n.y,i.S0.h0w8[0]);for(let g=1;g<8;g++)r=s.mul(r,s.sub(n.y,i.S0.h0w8[g]));n.temp=r;let u=s.sub(n.y,i.S1.h1w4[0]);for(let g=1;g<4;g++)u=s.mul(u,s.sub(n.y,i.S1.h1w4[g]));let l=s.sub(n.y,i.S2.h2w3[0]);for(let g=1;g<3;g++)l=s.mul(l,s.sub(n.y,i.S2.h2w3[g]));for(let g=0;g<3;g++)l=s.mul(l,s.sub(n.y,i.S2.h3w3[g]));n.quotient1=s.mul(n.alpha,s.div(r,u)),n.quotient2=s.mul(s.square(n.alpha),s.div(r,l));let c=o.timesFr(t.polynomials.C1,n.quotient1),f=o.timesFr(t.polynomials.C2,n.quotient2);return o.add(e.C0,o.add(c,f))}function YA(a,t,e,n,i,o,s){const r=a.G1,u=a.Fr;let l=u.mul(o,e.quotient1),c=u.mul(s,e.quotient2);return r.timesFr(r.one,u.add(i,u.add(l,c)))}function jA(a,t,e){return a.G1.timesFr(t.polynomials.W1,e.temp)}async function VA(a,t,e,n,i,o,s){const r=a.G1;let u=r.timesFr(t.polynomials.W2,e.y);u=r.add(r.sub(r.sub(i,o),s),u);const l=a.G2.one,c=t.polynomials.W2,f=n.X_2;return await a.pairingEq(r.neg(u),l,c,f)}function x0(a,t,e,n){const i=n.Fr,o=a.length,s=i.sub(i.exp(t,o),e),r=i.mul(i.e(o),i.exp(a[0],o-2)),u=[];for(let l=0;l<o;l++){const c=a[(o-1)*l%o],f=i.sub(t,a[l]);u[l]=i.div(s,i.mul(i.mul(r,c),f))}return u}function WA(a,t,e,n,i){const o=i.Fr,s=[],r=a[0].length,u=r*a.length,l=o.exp(t,u),c=o.mul(o.add(e,n),o.exp(t,r)),f=o.mul(e,n),g=o.add(o.sub(l,c),f);let L=o.mul(o.mul(o.e(r),a[0][0]),o.sub(e,n));for(let S=0;S<r;S++){const k=a[0][(r-1)*S%r],E=o.sub(t,a[0][S]),G=o.mul(L,o.mul(k,E));s[S]=o.div(g,G)}L=o.mul(o.mul(o.e(r),a[1][0]),o.sub(n,e));for(let S=0;S<r;S++){const k=a[1][(r-1)*S%r],E=o.sub(t,a[1][S]),G=o.mul(L,o.mul(k,E));s[S+r]=o.div(g,G)}return s}const{unstringifyBigInts:Mf}=nn;function _e(a){let t=a.toString(16);for(;t.length<64;)t="0"+t;return t=`0x${t}`,t}async function ZA(a,t){const e=Mf(t),n=Mf(a);await Ji(e.curve);let i="";for(let o=0;o<n.length;o++)i!==""&&(i=i+","),i=i+_e(n[o]);return`[${_e(e.polynomials.C1[0])}, ${_e(e.polynomials.C1[1])},${_e(e.polynomials.C2[0])},${_e(e.polynomials.C2[1])},${_e(e.polynomials.W1[0])},${_e(e.polynomials.W1[1])},${_e(e.polynomials.W2[0])},${_e(e.polynomials.W2[1])},${_e(e.evaluations.ql)},${_e(e.evaluations.qr)},${_e(e.evaluations.qm)},${_e(e.evaluations.qo)},${_e(e.evaluations.qc)},${_e(e.evaluations.s1)},${_e(e.evaluations.s2)},${_e(e.evaluations.s3)},${_e(e.evaluations.a)},${_e(e.evaluations.b)},${_e(e.evaluations.c)},${_e(e.evaluations.z)},${_e(e.evaluations.zw)},${_e(e.evaluations.t1w)},${_e(e.evaluations.t2w)},${_e(e.evaluations.inv)}],[${i}]`}var XA=Object.freeze({__proto__:null,setup:kA,prove:S0,fullProve:GA,verify:PA,exportSolidityVerifier:B0,exportSolidityCallData:ZA});const $A=Object.freeze(Object.defineProperty({__proto__:null,curves:hb,fflonk:XA,groth16:cy,plonk:FA,powersOfTau:Cy,r1cs:Oy,wtns:Hy,zKey:iA},Symbol.toStringTag,{value:"Module"})),t4=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];function M0(a,t){if(!t||t==10)return BigInt(a);if(t==16)return a.slice(0,2)=="0x"?BigInt(a):BigInt("0x"+a)}const e4=M0;function n4(a,t){let e=BigInt(0);t=BigInt(t);for(let n=0;n<a.length;n++)e=e*t+BigInt(a[n]);return e}function i4(a){const t=a.toString(16);return(t.length-1)*4+t4[parseInt(t[0],16)]}function o4(a){return BigInt(a)<BigInt(0)}function a4(a){return!a}function k0(a,t){return BigInt(a)<<BigInt(t)}function U0(a,t){return BigInt(a)>>BigInt(t)}const s4=k0,r4=U0;function c4(a){return(BigInt(a)&BigInt(1))==BigInt(1)}function l4(a){let t=BigInt(a);const e=[];for(;t;){if(t&BigInt(1)){const n=2-Number(t%BigInt(4));e.push(n),t=t-BigInt(n)}else e.push(0);t=t>>BigInt(1)}return e}function u4(a){let t=BigInt(a);const e=[];for(;t;)t&BigInt(1)?e.push(1):e.push(0),t=t>>BigInt(1);return e}function d4(a){if(a>BigInt(Number.MAX_SAFE_INTEGER))throw new Error("Number too big");return Number(a)}function f4(a,t){const e=[];let n=BigInt(a);for(t=BigInt(t);n;)e.unshift(Number(n%t)),n=n/t;return e}function h4(a,t){return BigInt(a)+BigInt(t)}function g4(a,t){return BigInt(a)-BigInt(t)}function p4(a){return-BigInt(a)}function L4(a,t){return BigInt(a)*BigInt(t)}function w4(a){return BigInt(a)*BigInt(a)}function m4(a,t){return BigInt(a)**BigInt(t)}function b4(a,t){return BigInt(a)**BigInt(t)}function y4(a){return BigInt(a)>=0?BigInt(a):-BigInt(a)}function A4(a,t){return BigInt(a)/BigInt(t)}function I4(a,t){return BigInt(a)%BigInt(t)}function E4(a,t){return BigInt(a)==BigInt(t)}function C4(a,t){return BigInt(a)!=BigInt(t)}function B4(a,t){return BigInt(a)<BigInt(t)}function v4(a,t){return BigInt(a)>BigInt(t)}function F4(a,t){return BigInt(a)<=BigInt(t)}function S4(a,t){return BigInt(a)>=BigInt(t)}function _4(a,t){return BigInt(a)&BigInt(t)}function x4(a,t){return BigInt(a)|BigInt(t)}function M4(a,t){return BigInt(a)^BigInt(t)}function k4(a,t){return BigInt(a)&&BigInt(t)}function U4(a,t){return BigInt(a)||BigInt(t)}function G4(a){return!BigInt(a)}const P4=Object.freeze(Object.defineProperty({__proto__:null,abs:y4,add:h4,band:_4,bitLength:i4,bits:u4,bor:x4,bxor:M4,div:A4,e:e4,eq:E4,exp:b4,fromArray:n4,fromString:M0,geq:S4,gt:v4,isNegative:o4,isOdd:c4,isZero:a4,land:k4,leq:F4,lnot:G4,lor:U4,lt:B4,mod:I4,mul:L4,naf:l4,neg:p4,neq:C4,pow:m4,shiftLeft:k0,shiftRight:U0,shl:s4,shr:r4,square:w4,sub:g4,toArray:f4,toNumber:d4},Symbol.toStringTag,{value:"Module"}));var ic={exports:{}},kf;function Yn(){return kf||(kf=1,function(a){var t=function(e){var n=1e7,i=7,o=9007199254740992,s=S(o),r="0123456789abcdefghijklmnopqrstuvwxyz",u=typeof BigInt=="function";function l(it,K,U,D){return typeof it>"u"?l[0]:typeof K<"u"?+K==10&&!U?Mt(it):rt(it,K,U,D):Mt(it)}function c(it,K){this.value=it,this.sign=K,this.isSmall=!1}c.prototype=Object.create(l.prototype);function f(it){this.value=it,this.sign=it<0,this.isSmall=!0}f.prototype=Object.create(l.prototype);function g(it){this.value=it}g.prototype=Object.create(l.prototype);function L(it){return-9007199254740992<it&&it<o}function S(it){return it<1e7?[it]:it<1e14?[it%1e7,Math.floor(it/1e7)]:[it%1e7,Math.floor(it/1e7)%1e7,Math.floor(it/1e14)]}function k(it){E(it);var K=it.length;if(K<4&&$(it,s)<0)switch(K){case 0:return 0;case 1:return it[0];case 2:return it[0]+it[1]*n;default:return it[0]+(it[1]+it[2]*n)*n}return it}function E(it){for(var K=it.length;it[--K]===0;);it.length=K+1}function G(it){for(var K=new Array(it),U=-1;++U<it;)K[U]=0;return K}function C(it){return it>0?Math.floor(it):Math.ceil(it)}function N(it,K){var U=it.length,D=K.length,ot=new Array(U),st=0,lt=n,at,x;for(x=0;x<D;x++)at=it[x]+K[x]+st,st=at>=lt?1:0,ot[x]=at-st*lt;for(;x<U;)at=it[x]+st,st=at===lt?1:0,ot[x++]=at-st*lt;return st>0&&ot.push(st),ot}function J(it,K){return it.length>=K.length?N(it,K):N(K,it)}function j(it,K){var U=it.length,D=new Array(U),ot=n,st,lt;for(lt=0;lt<U;lt++)st=it[lt]-ot+K,K=Math.floor(st/ot),D[lt]=st-K*ot,K+=1;for(;K>0;)D[lt++]=K%ot,K=Math.floor(K/ot);return D}c.prototype.add=function(it){var K=Mt(it);if(this.sign!==K.sign)return this.subtract(K.negate());var U=this.value,D=K.value;return K.isSmall?new c(j(U,Math.abs(D)),this.sign):new c(J(U,D),this.sign)},c.prototype.plus=c.prototype.add,f.prototype.add=function(it){var K=Mt(it),U=this.value;if(U<0!==K.sign)return this.subtract(K.negate());var D=K.value;if(K.isSmall){if(L(U+D))return new f(U+D);D=S(Math.abs(D))}return new c(j(D,Math.abs(U)),U<0)},f.prototype.plus=f.prototype.add,g.prototype.add=function(it){return new g(this.value+Mt(it).value)},g.prototype.plus=g.prototype.add;function R(it,K){var U=it.length,D=K.length,ot=new Array(U),st=0,lt=n,at,x;for(at=0;at<D;at++)x=it[at]-st-K[at],x<0?(x+=lt,st=1):st=0,ot[at]=x;for(at=D;at<U;at++){if(x=it[at]-st,x<0)x+=lt;else{ot[at++]=x;break}ot[at]=x}for(;at<U;at++)ot[at]=it[at];return E(ot),ot}function b(it,K,U){var D;return $(it,K)>=0?D=R(it,K):(D=R(K,it),U=!U),D=k(D),typeof D=="number"?(U&&(D=-D),new f(D)):new c(D,U)}function w(it,K,U){var D=it.length,ot=new Array(D),st=-K,lt=n,at,x;for(at=0;at<D;at++)x=it[at]+st,st=Math.floor(x/lt),x%=lt,ot[at]=x<0?x+lt:x;return ot=k(ot),typeof ot=="number"?(U&&(ot=-ot),new f(ot)):new c(ot,U)}c.prototype.subtract=function(it){var K=Mt(it);if(this.sign!==K.sign)return this.add(K.negate());var U=this.value,D=K.value;return K.isSmall?w(U,Math.abs(D),this.sign):b(U,D,this.sign)},c.prototype.minus=c.prototype.subtract,f.prototype.subtract=function(it){var K=Mt(it),U=this.value;if(U<0!==K.sign)return this.add(K.negate());var D=K.value;return K.isSmall?new f(U-D):w(D,Math.abs(U),U>=0)},f.prototype.minus=f.prototype.subtract,g.prototype.subtract=function(it){return new g(this.value-Mt(it).value)},g.prototype.minus=g.prototype.subtract,c.prototype.negate=function(){return new c(this.value,!this.sign)},f.prototype.negate=function(){var it=this.sign,K=new f(-this.value);return K.sign=!it,K},g.prototype.negate=function(){return new g(-this.value)},c.prototype.abs=function(){return new c(this.value,!1)},f.prototype.abs=function(){return new f(Math.abs(this.value))},g.prototype.abs=function(){return new g(this.value>=0?this.value:-this.value)};function Z(it,K){var U=it.length,D=K.length,ot=U+D,st=G(ot),lt=n,at,x,q,gt,mt;for(q=0;q<U;++q){gt=it[q];for(var ut=0;ut<D;++ut)mt=K[ut],at=gt*mt+st[q+ut],x=Math.floor(at/lt),st[q+ut]=at-x*lt,st[q+ut+1]+=x}return E(st),st}function P(it,K){var U=it.length,D=new Array(U),ot=n,st=0,lt,at;for(at=0;at<U;at++)lt=it[at]*K+st,st=Math.floor(lt/ot),D[at]=lt-st*ot;for(;st>0;)D[at++]=st%ot,st=Math.floor(st/ot);return D}function V(it,K){for(var U=[];K-- >0;)U.push(0);return U.concat(it)}function nt(it,K){var U=Math.max(it.length,K.length);if(U<=30)return Z(it,K);U=Math.ceil(U/2);var D=it.slice(U),ot=it.slice(0,U),st=K.slice(U),lt=K.slice(0,U),at=nt(ot,lt),x=nt(D,st),q=nt(J(ot,D),J(lt,st)),gt=J(J(at,V(R(R(q,at),x),U)),V(x,2*U));return E(gt),gt}function I(it,K){return-.012*it-.012*K+15e-6*it*K>0}c.prototype.multiply=function(it){var K=Mt(it),U=this.value,D=K.value,ot=this.sign!==K.sign,st;if(K.isSmall){if(D===0)return l[0];if(D===1)return this;if(D===-1)return this.negate();if(st=Math.abs(D),st<n)return new c(P(U,st),ot);D=S(st)}return I(U.length,D.length)?new c(nt(U,D),ot):new c(Z(U,D),ot)},c.prototype.times=c.prototype.multiply;function y(it,K,U){return it<n?new c(P(K,it),U):new c(Z(K,S(it)),U)}f.prototype._multiplyBySmall=function(it){return L(it.value*this.value)?new f(it.value*this.value):y(Math.abs(it.value),S(Math.abs(this.value)),this.sign!==it.sign)},c.prototype._multiplyBySmall=function(it){return it.value===0?l[0]:it.value===1?this:it.value===-1?this.negate():y(Math.abs(it.value),this.value,this.sign!==it.sign)},f.prototype.multiply=function(it){return Mt(it)._multiplyBySmall(this)},f.prototype.times=f.prototype.multiply,g.prototype.multiply=function(it){return new g(this.value*Mt(it).value)},g.prototype.times=g.prototype.multiply;function _(it){var K=it.length,U=G(K+K),D=n,ot,st,lt,at,x;for(lt=0;lt<K;lt++){at=it[lt],st=0-at*at;for(var q=lt;q<K;q++)x=it[q],ot=2*(at*x)+U[lt+q]+st,st=Math.floor(ot/D),U[lt+q]=ot-st*D;U[lt+K]=st}return E(U),U}c.prototype.square=function(){return new c(_(this.value),!1)},f.prototype.square=function(){var it=this.value*this.value;return L(it)?new f(it):new c(_(S(Math.abs(this.value))),!1)},g.prototype.square=function(it){return new g(this.value*this.value)};function T(it,K){var U=it.length,D=K.length,ot=n,st=G(K.length),lt=K[D-1],at=Math.ceil(ot/(2*lt)),x=P(it,at),q=P(K,at),gt,mt,ut,Ct,vt,kt,Ot;for(x.length<=U&&x.push(0),q.push(0),lt=q[D-1],mt=U-D;mt>=0;mt--){for(gt=ot-1,x[mt+D]!==lt&&(gt=Math.floor((x[mt+D]*ot+x[mt+D-1])/lt)),ut=0,Ct=0,kt=q.length,vt=0;vt<kt;vt++)ut+=gt*q[vt],Ot=Math.floor(ut/ot),Ct+=x[mt+vt]-(ut-Ot*ot),ut=Ot,Ct<0?(x[mt+vt]=Ct+ot,Ct=-1):(x[mt+vt]=Ct,Ct=0);for(;Ct!==0;){for(gt-=1,ut=0,vt=0;vt<kt;vt++)ut+=x[mt+vt]-ot+q[vt],ut<0?(x[mt+vt]=ut+ot,ut=0):(x[mt+vt]=ut,ut=1);Ct+=ut}st[mt]=gt}return x=Y(x,at)[0],[k(st),k(x)]}function B(it,K){for(var U=it.length,D=K.length,ot=[],st=[],lt=n,at,x,q,gt,mt;U;){if(st.unshift(it[--U]),E(st),$(st,K)<0){ot.push(0);continue}x=st.length,q=st[x-1]*lt+st[x-2],gt=K[D-1]*lt+K[D-2],x>D&&(q=(q+1)*lt),at=Math.ceil(q/gt);do{if(mt=P(K,at),$(mt,st)<=0)break;at--}while(at);ot.push(at),st=R(st,mt)}return ot.reverse(),[k(ot),k(st)]}function Y(it,K){var U=it.length,D=G(U),ot=n,st,lt,at,x;for(at=0,st=U-1;st>=0;--st)x=at*ot+it[st],lt=C(x/K),at=x-lt*K,D[st]=lt|0;return[D,at|0]}function tt(it,K){var U,D=Mt(K);if(u)return[new g(it.value/D.value),new g(it.value%D.value)];var ot=it.value,st=D.value,lt;if(st===0)throw new Error("Cannot divide by zero");if(it.isSmall)return D.isSmall?[new f(C(ot/st)),new f(ot%st)]:[l[0],it];if(D.isSmall){if(st===1)return[it,l[0]];if(st==-1)return[it.negate(),l[0]];var at=Math.abs(st);if(at<n){U=Y(ot,at),lt=k(U[0]);var x=U[1];return it.sign&&(x=-x),typeof lt=="number"?(it.sign!==D.sign&&(lt=-lt),[new f(lt),new f(x)]):[new c(lt,it.sign!==D.sign),new f(x)]}st=S(at)}var q=$(ot,st);if(q===-1)return[l[0],it];if(q===0)return[l[it.sign===D.sign?1:-1],l[0]];ot.length+st.length<=200?U=T(ot,st):U=B(ot,st),lt=U[0];var gt=it.sign!==D.sign,mt=U[1],ut=it.sign;return typeof lt=="number"?(gt&&(lt=-lt),lt=new f(lt)):lt=new c(lt,gt),typeof mt=="number"?(ut&&(mt=-mt),mt=new f(mt)):mt=new c(mt,ut),[lt,mt]}c.prototype.divmod=function(it){var K=tt(this,it);return{quotient:K[0],remainder:K[1]}},g.prototype.divmod=f.prototype.divmod=c.prototype.divmod,c.prototype.divide=function(it){return tt(this,it)[0]},g.prototype.over=g.prototype.divide=function(it){return new g(this.value/Mt(it).value)},f.prototype.over=f.prototype.divide=c.prototype.over=c.prototype.divide,c.prototype.mod=function(it){return tt(this,it)[1]},g.prototype.mod=g.prototype.remainder=function(it){return new g(this.value%Mt(it).value)},f.prototype.remainder=f.prototype.mod=c.prototype.remainder=c.prototype.mod,c.prototype.pow=function(it){var K=Mt(it),U=this.value,D=K.value,ot,st,lt;if(D===0)return l[1];if(U===0)return l[0];if(U===1)return l[1];if(U===-1)return K.isEven()?l[1]:l[-1];if(K.sign)return l[0];if(!K.isSmall)throw new Error("The exponent "+K.toString()+" is too large.");if(this.isSmall&&L(ot=Math.pow(U,D)))return new f(C(ot));for(st=this,lt=l[1];D&!0&&(lt=lt.times(st),--D),D!==0;)D/=2,st=st.square();return lt},f.prototype.pow=c.prototype.pow,g.prototype.pow=function(it){var K=Mt(it),U=this.value,D=K.value,ot=BigInt(0),st=BigInt(1),lt=BigInt(2);if(D===ot)return l[1];if(U===ot)return l[0];if(U===st)return l[1];if(U===BigInt(-1))return K.isEven()?l[1]:l[-1];if(K.isNegative())return new g(ot);for(var at=this,x=l[1];(D&st)===st&&(x=x.times(at),--D),D!==ot;)D/=lt,at=at.square();return x},c.prototype.modPow=function(it,K){if(it=Mt(it),K=Mt(K),K.isZero())throw new Error("Cannot take modPow with modulus 0");var U=l[1],D=this.mod(K);for(it.isNegative()&&(it=it.multiply(l[-1]),D=D.modInv(K));it.isPositive();){if(D.isZero())return l[0];it.isOdd()&&(U=U.multiply(D).mod(K)),it=it.divide(2),D=D.square().mod(K)}return U},g.prototype.modPow=f.prototype.modPow=c.prototype.modPow;function $(it,K){if(it.length!==K.length)return it.length>K.length?1:-1;for(var U=it.length-1;U>=0;U--)if(it[U]!==K[U])return it[U]>K[U]?1:-1;return 0}c.prototype.compareAbs=function(it){var K=Mt(it),U=this.value,D=K.value;return K.isSmall?1:$(U,D)},f.prototype.compareAbs=function(it){var K=Mt(it),U=Math.abs(this.value),D=K.value;return K.isSmall?(D=Math.abs(D),U===D?0:U>D?1:-1):-1},g.prototype.compareAbs=function(it){var K=this.value,U=Mt(it).value;return K=K>=0?K:-K,U=U>=0?U:-U,K===U?0:K>U?1:-1},c.prototype.compare=function(it){if(it===1/0)return-1;if(it===-1/0)return 1;var K=Mt(it),U=this.value,D=K.value;return this.sign!==K.sign?K.sign?1:-1:K.isSmall?this.sign?-1:1:$(U,D)*(this.sign?-1:1)},c.prototype.compareTo=c.prototype.compare,f.prototype.compare=function(it){if(it===1/0)return-1;if(it===-1/0)return 1;var K=Mt(it),U=this.value,D=K.value;return K.isSmall?U==D?0:U>D?1:-1:U<0!==K.sign?U<0?-1:1:U<0?1:-1},f.prototype.compareTo=f.prototype.compare,g.prototype.compare=function(it){if(it===1/0)return-1;if(it===-1/0)return 1;var K=this.value,U=Mt(it).value;return K===U?0:K>U?1:-1},g.prototype.compareTo=g.prototype.compare,c.prototype.equals=function(it){return this.compare(it)===0},g.prototype.eq=g.prototype.equals=f.prototype.eq=f.prototype.equals=c.prototype.eq=c.prototype.equals,c.prototype.notEquals=function(it){return this.compare(it)!==0},g.prototype.neq=g.prototype.notEquals=f.prototype.neq=f.prototype.notEquals=c.prototype.neq=c.prototype.notEquals,c.prototype.greater=function(it){return this.compare(it)>0},g.prototype.gt=g.prototype.greater=f.prototype.gt=f.prototype.greater=c.prototype.gt=c.prototype.greater,c.prototype.lesser=function(it){return this.compare(it)<0},g.prototype.lt=g.prototype.lesser=f.prototype.lt=f.prototype.lesser=c.prototype.lt=c.prototype.lesser,c.prototype.greaterOrEquals=function(it){return this.compare(it)>=0},g.prototype.geq=g.prototype.greaterOrEquals=f.prototype.geq=f.prototype.greaterOrEquals=c.prototype.geq=c.prototype.greaterOrEquals,c.prototype.lesserOrEquals=function(it){return this.compare(it)<=0},g.prototype.leq=g.prototype.lesserOrEquals=f.prototype.leq=f.prototype.lesserOrEquals=c.prototype.leq=c.prototype.lesserOrEquals,c.prototype.isEven=function(){return(this.value[0]&1)===0},f.prototype.isEven=function(){return(this.value&1)===0},g.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},c.prototype.isOdd=function(){return(this.value[0]&1)===1},f.prototype.isOdd=function(){return(this.value&1)===1},g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},c.prototype.isPositive=function(){return!this.sign},f.prototype.isPositive=function(){return this.value>0},g.prototype.isPositive=f.prototype.isPositive,c.prototype.isNegative=function(){return this.sign},f.prototype.isNegative=function(){return this.value<0},g.prototype.isNegative=f.prototype.isNegative,c.prototype.isUnit=function(){return!1},f.prototype.isUnit=function(){return Math.abs(this.value)===1},g.prototype.isUnit=function(){return this.abs().value===BigInt(1)},c.prototype.isZero=function(){return!1},f.prototype.isZero=function(){return this.value===0},g.prototype.isZero=function(){return this.value===BigInt(0)},c.prototype.isDivisibleBy=function(it){var K=Mt(it);return K.isZero()?!1:K.isUnit()?!0:K.compareAbs(2)===0?this.isEven():this.mod(K).isZero()},g.prototype.isDivisibleBy=f.prototype.isDivisibleBy=c.prototype.isDivisibleBy;function X(it){var K=it.abs();if(K.isUnit())return!1;if(K.equals(2)||K.equals(3)||K.equals(5))return!0;if(K.isEven()||K.isDivisibleBy(3)||K.isDivisibleBy(5))return!1;if(K.lesser(49))return!0}function F(it,K){for(var U=it.prev(),D=U,ot=0,st,lt,at;D.isEven();)D=D.divide(2),ot++;t:for(lt=0;lt<K.length;lt++)if(!it.lesser(K[lt])&&(at=t(K[lt]).modPow(D,it),!(at.isUnit()||at.equals(U)))){for(st=ot-1;st!=0;st--){if(at=at.square().mod(it),at.isUnit())return!1;if(at.equals(U))continue t}return!1}return!0}c.prototype.isPrime=function(it){var K=X(this);if(K!==e)return K;var U=this.abs(),D=U.bitLength();if(D<=64)return F(U,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var ot=Math.log(2)*D.toJSNumber(),st=Math.ceil(it===!0?2*Math.pow(ot,2):ot),lt=[],at=0;at<st;at++)lt.push(t(at+2));return F(U,lt)},g.prototype.isPrime=f.prototype.isPrime=c.prototype.isPrime,c.prototype.isProbablePrime=function(it,K){var U=X(this);if(U!==e)return U;for(var D=this.abs(),ot=it===e?5:it,st=[],lt=0;lt<ot;lt++)st.push(t.randBetween(2,D.minus(2),K));return F(D,st)},g.prototype.isProbablePrime=f.prototype.isProbablePrime=c.prototype.isProbablePrime,c.prototype.modInv=function(it){for(var K=t.zero,U=t.one,D=Mt(it),ot=this.abs(),st,lt,at;!ot.isZero();)st=D.divide(ot),lt=K,at=D,K=U,D=ot,U=lt.subtract(st.multiply(U)),ot=at.subtract(st.multiply(ot));if(!D.isUnit())throw new Error(this.toString()+" and "+it.toString()+" are not co-prime");return K.compare(0)===-1&&(K=K.add(it)),this.isNegative()?K.negate():K},g.prototype.modInv=f.prototype.modInv=c.prototype.modInv,c.prototype.next=function(){var it=this.value;return this.sign?w(it,1,this.sign):new c(j(it,1),this.sign)},f.prototype.next=function(){var it=this.value;return it+1<o?new f(it+1):new c(s,!1)},g.prototype.next=function(){return new g(this.value+BigInt(1))},c.prototype.prev=function(){var it=this.value;return this.sign?new c(j(it,1),!0):w(it,1,this.sign)},f.prototype.prev=function(){var it=this.value;return it-1>-9007199254740992?new f(it-1):new c(s,!0)},g.prototype.prev=function(){return new g(this.value-BigInt(1))};for(var M=[1];2*M[M.length-1]<=n;)M.push(2*M[M.length-1]);var W=M.length,A=M[W-1];function h(it){return Math.abs(it)<=n}c.prototype.shiftLeft=function(it){var K=Mt(it).toJSNumber();if(!h(K))throw new Error(String(K)+" is too large for shifting.");if(K<0)return this.shiftRight(-K);var U=this;if(U.isZero())return U;for(;K>=W;)U=U.multiply(A),K-=W-1;return U.multiply(M[K])},g.prototype.shiftLeft=f.prototype.shiftLeft=c.prototype.shiftLeft,c.prototype.shiftRight=function(it){var K,U=Mt(it).toJSNumber();if(!h(U))throw new Error(String(U)+" is too large for shifting.");if(U<0)return this.shiftLeft(-U);for(var D=this;U>=W;){if(D.isZero()||D.isNegative()&&D.isUnit())return D;K=tt(D,A),D=K[1].isNegative()?K[0].prev():K[0],U-=W-1}return K=tt(D,M[U]),K[1].isNegative()?K[0].prev():K[0]},g.prototype.shiftRight=f.prototype.shiftRight=c.prototype.shiftRight;function Q(it,K,U){K=Mt(K);for(var D=it.isNegative(),ot=K.isNegative(),st=D?it.not():it,lt=ot?K.not():K,at=0,x=0,q=null,gt=null,mt=[];!st.isZero()||!lt.isZero();)q=tt(st,A),at=q[1].toJSNumber(),D&&(at=A-1-at),gt=tt(lt,A),x=gt[1].toJSNumber(),ot&&(x=A-1-x),st=q[0],lt=gt[0],mt.push(U(at,x));for(var ut=U(D?1:0,ot?1:0)!==0?t(-1):t(0),Ct=mt.length-1;Ct>=0;Ct-=1)ut=ut.multiply(A).add(t(mt[Ct]));return ut}c.prototype.not=function(){return this.negate().prev()},g.prototype.not=f.prototype.not=c.prototype.not,c.prototype.and=function(it){return Q(this,it,function(K,U){return K&U})},g.prototype.and=f.prototype.and=c.prototype.and,c.prototype.or=function(it){return Q(this,it,function(K,U){return K|U})},g.prototype.or=f.prototype.or=c.prototype.or,c.prototype.xor=function(it){return Q(this,it,function(K,U){return K^U})},g.prototype.xor=f.prototype.xor=c.prototype.xor;var p=1<<30,d=(n&-1e7)*(n&-1e7)|p;function m(it){var K=it.value,U=typeof K=="number"?K|p:typeof K=="bigint"?K|BigInt(p):K[0]+K[1]*n|d;return U&-U}function v(it,K){if(K.compareTo(it)<=0){var U=v(it,K.square(K)),D=U.p,ot=U.e,st=D.multiply(K);return st.compareTo(it)<=0?{p:st,e:ot*2+1}:{p:D,e:ot*2}}return{p:t(1),e:0}}c.prototype.bitLength=function(){var it=this;return it.compareTo(t(0))<0&&(it=it.negate().subtract(t(1))),it.compareTo(t(0))===0?t(0):t(v(it,t(2)).e).add(t(1))},g.prototype.bitLength=f.prototype.bitLength=c.prototype.bitLength;function et(it,K){return it=Mt(it),K=Mt(K),it.greater(K)?it:K}function ct(it,K){return it=Mt(it),K=Mt(K),it.lesser(K)?it:K}function dt(it,K){if(it=Mt(it).abs(),K=Mt(K).abs(),it.equals(K))return it;if(it.isZero())return K;if(K.isZero())return it;for(var U=l[1],D,ot;it.isEven()&&K.isEven();)D=ct(m(it),m(K)),it=it.divide(D),K=K.divide(D),U=U.multiply(D);for(;it.isEven();)it=it.divide(m(it));do{for(;K.isEven();)K=K.divide(m(K));it.greater(K)&&(ot=K,K=it,it=ot),K=K.subtract(it)}while(!K.isZero());return U.isUnit()?it:it.multiply(U)}function ft(it,K){return it=Mt(it).abs(),K=Mt(K).abs(),it.divide(dt(it,K)).multiply(K)}function Ft(it,K,U){it=Mt(it),K=Mt(K);var D=U||Math.random,ot=ct(it,K),st=et(it,K),lt=st.subtract(ot).add(1);if(lt.isSmall)return ot.add(Math.floor(D()*lt));for(var at=yt(lt,n).value,x=[],q=!0,gt=0;gt<at.length;gt++){var mt=q?at[gt]+(gt+1<at.length?at[gt+1]/n:0):n,ut=C(D()*mt);x.push(ut),ut<at[gt]&&(q=!1)}return ot.add(l.fromArray(x,n,!1))}var rt=function(it,K,U,D){U=U||r,it=String(it),D||(it=it.toLowerCase(),U=U.toLowerCase());var ot=it.length,st,lt=Math.abs(K),at={};for(st=0;st<U.length;st++)at[U[st]]=st;for(st=0;st<ot;st++){var x=it[st];if(x!=="-"&&x in at&&at[x]>=lt){if(x==="1"&&lt===1)continue;throw new Error(x+" is not a valid digit in base "+K+".")}}K=Mt(K);var q=[],gt=it[0]==="-";for(st=gt?1:0;st<it.length;st++){var x=it[st];if(x in at)q.push(Mt(at[x]));else if(x==="<"){var mt=st;do st++;while(it[st]!==">"&&st<it.length);q.push(Mt(it.slice(mt+1,st)))}else throw new Error(x+" is not a valid character")}return z(q,K,gt)};function z(it,K,U){var D=l[0],ot=l[1],st;for(st=it.length-1;st>=0;st--)D=D.add(it[st].times(ot)),ot=ot.times(K);return U?D.negate():D}function wt(it,K){return K=K||r,it<K.length?K[it]:"<"+it+">"}function yt(it,K){if(K=t(K),K.isZero()){if(it.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(K.equals(-1)){if(it.isZero())return{value:[0],isNegative:!1};if(it.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-it.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var U=Array.apply(null,Array(it.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return U.unshift([1]),{value:[].concat.apply([],U),isNegative:!1}}var D=!1;if(it.isNegative()&&K.isPositive()&&(D=!0,it=it.abs()),K.isUnit())return it.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(it.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:D};for(var ot=[],st=it,lt;st.isNegative()||st.compareAbs(K)>=0;){lt=st.divmod(K),st=lt.quotient;var at=lt.remainder;at.isNegative()&&(at=K.minus(at).abs(),st=st.next()),ot.push(at.toJSNumber())}return ot.push(st.toJSNumber()),{value:ot.reverse(),isNegative:D}}function It(it,K,U){var D=yt(it,K);return(D.isNegative?"-":"")+D.value.map(function(ot){return wt(ot,U)}).join("")}c.prototype.toArray=function(it){return yt(this,it)},f.prototype.toArray=function(it){return yt(this,it)},g.prototype.toArray=function(it){return yt(this,it)},c.prototype.toString=function(it,K){if(it===e&&(it=10),it!==10||K)return It(this,it,K);for(var U=this.value,D=U.length,ot=String(U[--D]),st="0000000",lt;--D>=0;)lt=String(U[D]),ot+=st.slice(lt.length)+lt;var at=this.sign?"-":"";return at+ot},f.prototype.toString=function(it,K){return it===e&&(it=10),it!=10||K?It(this,it,K):String(this.value)},g.prototype.toString=f.prototype.toString,g.prototype.toJSON=c.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()},c.prototype.valueOf=function(){return parseInt(this.toString(),10)},c.prototype.toJSNumber=c.prototype.valueOf,f.prototype.valueOf=function(){return this.value},f.prototype.toJSNumber=f.prototype.valueOf,g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function Ut(it){if(L(+it)){var K=+it;if(K===C(K))return u?new g(BigInt(K)):new f(K);throw new Error("Invalid integer: "+it)}var U=it[0]==="-";U&&(it=it.slice(1));var D=it.split(/e/i);if(D.length>2)throw new Error("Invalid integer: "+D.join("e"));if(D.length===2){var ot=D[1];if(ot[0]==="+"&&(ot=ot.slice(1)),ot=+ot,ot!==C(ot)||!L(ot))throw new Error("Invalid integer: "+ot+" is not a valid exponent.");var st=D[0],lt=st.indexOf(".");if(lt>=0&&(ot-=st.length-lt-1,st=st.slice(0,lt)+st.slice(lt+1)),ot<0)throw new Error("Cannot include negative exponent part for integers");st+=new Array(ot+1).join("0"),it=st}var at=/^([0-9][0-9]*)$/.test(it);if(!at)throw new Error("Invalid integer: "+it);if(u)return new g(BigInt(U?"-"+it:it));for(var x=[],q=it.length,gt=i,mt=q-gt;q>0;)x.push(+it.slice(mt,q)),mt-=gt,mt<0&&(mt=0),q-=gt;return E(x),new c(x,U)}function Dt(it){if(u)return new g(BigInt(it));if(L(it)){if(it!==C(it))throw new Error(it+" is not an integer.");return new f(it)}return Ut(it.toString())}function Mt(it){return typeof it=="number"?Dt(it):typeof it=="string"?Ut(it):typeof it=="bigint"?new g(it):it}for(var Qt=0;Qt<1e3;Qt++)l[Qt]=Mt(Qt),Qt>0&&(l[-Qt]=Mt(-Qt));return l.one=l[1],l.zero=l[0],l.minusOne=l[-1],l.max=et,l.min=ct,l.gcd=dt,l.lcm=ft,l.isInstance=function(it){return it instanceof c||it instanceof f||it instanceof g},l.randBetween=Ft,l.fromArray=function(it,K,U){return z(it.map(Mt),Mt(K||10),U)},l}();a.hasOwnProperty("exports")&&(a.exports=t)}(ic)),ic.exports}var O4=Yn();const ne=ba(O4);function G0(a,t){return typeof a=="string"&&a.slice(0,2)=="0x"?ne(a.slice(2),16):ne(a,t)}const D4=G0;function q4(a,t){return ne.fromArray(a,t)}function T4(a){return ne(a).bitLength()}function R4(a){return ne(a).isNegative()}function H4(a){return ne(a).isZero()}function P0(a,t){return ne(a).shiftLeft(t)}function O0(a,t){return ne(a).shiftRight(t)}const Q4=P0,K4=O0;function N4(a){return ne(a).isOdd()}function z4(a){let t=ne(a);const e=[];for(;t.gt(ne.zero);){if(t.isOdd()){const n=2-t.mod(4).toJSNumber();e.push(n),t=t.minus(n)}else e.push(0);t=t.shiftRight(1)}return e}function J4(a){let t=ne(a);const e=[];for(;t.gt(ne.zero);)t.isOdd()?e.push(1):e.push(0),t=t.shiftRight(1);return e}function Y4(a){if(!a.lt(ne("9007199254740992",10)))throw new Error("Number too big");return a.toJSNumber()}function j4(a,t){return ne(a).toArray(t)}function V4(a,t){return ne(a).add(ne(t))}function W4(a,t){return ne(a).minus(ne(t))}function Z4(a){return ne.zero.minus(ne(a))}function X4(a,t){return ne(a).times(ne(t))}function $4(a){return ne(a).square()}function t8(a,t){return ne(a).pow(ne(t))}function e8(a,t){return ne(a).pow(ne(t))}function n8(a){return ne(a).abs()}function i8(a,t){return ne(a).divide(ne(t))}function o8(a,t){return ne(a).mod(ne(t))}function a8(a,t){return ne(a).eq(ne(t))}function s8(a,t){return ne(a).neq(ne(t))}function r8(a,t){return ne(a).lt(ne(t))}function c8(a,t){return ne(a).gt(ne(t))}function l8(a,t){return ne(a).leq(ne(t))}function u8(a,t){return ne(a).geq(ne(t))}function d8(a,t){return ne(a).and(ne(t))}function f8(a,t){return ne(a).or(ne(t))}function h8(a,t){return ne(a).xor(ne(t))}function g8(a,t){return!ne(a).isZero()&&!ne(t).isZero()}function p8(a,t){return!ne(a).isZero()||!ne(t).isZero()}function L8(a){return ne(a).isZero()}const w8=Object.freeze(Object.defineProperty({__proto__:null,abs:n8,add:V4,band:d8,bitLength:T4,bits:J4,bor:f8,bxor:h8,div:i8,e:D4,eq:a8,exp:e8,fromArray:q4,fromString:G0,geq:u8,gt:c8,isNegative:R4,isOdd:N4,isZero:H4,land:g8,leq:l8,lnot:L8,lor:p8,lt:r8,mod:o8,mul:X4,naf:z4,neg:Z4,neq:s8,pow:t8,shiftLeft:P0,shiftRight:O0,shl:Q4,shr:K4,square:$4,sub:W4,toArray:j4,toNumber:Y4},Symbol.toStringTag,{value:"Module"})),m8=typeof BigInt=="function";let Ne={};m8?Object.assign(Ne,P4):Object.assign(Ne,w8);Ne.toRprLE=function(t,e,n,i){const o="0000000"+n.toString(16),s=new Uint32Array(t.buffer,e,i/4),r=((o.length-7)*4-1>>5)+1;for(let u=0;u<r;u++)s[u]=parseInt(o.substring(o.length-8*u-8,o.length-8*u),16);for(let u=r;u<s.length;u++)s[u]=0;for(let u=s.length*4;u<i;u++)t[u]=Ne.toNumber(Ne.band(Ne.shiftRight(n,u*8),255))};Ne.toRprBE=function(t,e,n,i){const o="0000000"+n.toString(16),s=new DataView(t.buffer,t.byteOffset+e,i),r=((o.length-7)*4-1>>5)+1;for(let u=0;u<r;u++)s.setUint32(i-u*4-4,parseInt(o.substring(o.length-8*u-8,o.length-8*u),16),!1);for(let u=0;u<i/4-r;u++)s[u]=0};Ne.fromRprLE=function(t,e,n){n=n||t.byteLength,e=e||0;const i=new Uint32Array(t.buffer,e,n/4),o=new Array(n/4);return i.forEach((s,r)=>o[o.length-r-1]=s.toString(16).padStart(8,"0")),Ne.fromString(o.join(""),16)};Ne.fromRprBE=function(t,e,n){n=n||t.byteLength,e=e||0;const i=new DataView(t.buffer,t.byteOffset+e,n),o=new Array(n/4);for(let s=0;s<n/4;s++)o[s]=i.getUint32(s*4,!1).toString(16).padStart(8,"0");return Ne.fromString(o.join(""),16)};Ne.toString=function(t,e){return t.toString(e)};Ne.toLEBuff=function(t){const e=new Uint8Array(Math.floor((Ne.bitLength(t)-1)/8)+1);return Ne.toRprLE(e,0,t,e.byteLength),e};Ne.zero=Ne.e(0);Ne.one=Ne.e(1);let{toRprLE:Uf,toRprBE:eE,fromRprLE:gl,fromRprBE:nE,toString:b8,toLEBuff:ma,zero:y8,one:Wi,fromString:iE,e:bn,fromArray:oE,bitLength:D0,isNegative:A8,isZero:aE,shiftLeft:Gf,shiftRight:oc,shl:sE,shr:rE,isOdd:I8,naf:cE,bits:lE,toNumber:uE,toArray:dE,add:q0,sub:ac,neg:E8,mul:C8,square:fE,pow:hE,exp:gE,abs:pE,div:LE,mod:Pf,eq:wE,neq:mE,lt:bE,gt:Of,leq:yE,geq:B8,band:v8,bor:AE,bxor:IE,land:EE,lor:CE,lnot:BE}=Ne;function gi(a,t,e,n,i){a[t]=a[t]+a[e]>>>0,a[i]=(a[i]^a[t])>>>0,a[i]=(a[i]<<16|a[i]>>>16&65535)>>>0,a[n]=a[n]+a[i]>>>0,a[e]=(a[e]^a[n])>>>0,a[e]=(a[e]<<12|a[e]>>>20&4095)>>>0,a[t]=a[t]+a[e]>>>0,a[i]=(a[i]^a[t])>>>0,a[i]=(a[i]<<8|a[i]>>>24&255)>>>0,a[n]=a[n]+a[i]>>>0,a[e]=(a[e]^a[n])>>>0,a[e]=(a[e]<<7|a[e]>>>25&127)>>>0}function F8(a){gi(a,0,4,8,12),gi(a,1,5,9,13),gi(a,2,6,10,14),gi(a,3,7,11,15),gi(a,0,5,10,15),gi(a,1,6,11,12),gi(a,2,7,8,13),gi(a,3,4,9,14)}class S8{constructor(t){t=t||[0,0,0,0,0,0,0,0],this.state=[1634760805,857760878,2036477234,1797285236,t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],0,0,0,0],this.idx=16,this.buff=new Array(16)}nextU32(){return this.idx==16&&this.update(),this.buff[this.idx++]}nextU64(){return q0(C8(this.nextU32(),4294967296),this.nextU32())}nextBool(){return(this.nextU32()&1)==1}update(){for(let t=0;t<16;t++)this.buff[t]=this.state[t];for(let t=0;t<10;t++)F8(this.buff);for(let t=0;t<16;t++)this.buff[t]=this.buff[t]+this.state[t]>>>0;this.idx=0,this.state[12]=this.state[12]+1>>>0,this.state[12]==0&&(this.state[13]=this.state[13]+1>>>0,this.state[13]==0&&(this.state[14]=this.state[14]+1>>>0,this.state[14]==0&&(this.state[15]=this.state[15]+1>>>0)))}}function _8(a){let t=new Uint8Array(a);if(typeof globalThis.crypto<"u")globalThis.crypto.getRandomValues(t);else for(let e=0;e<a;e++)t[e]=Math.random()*4294967296>>>0;return t}function x8(){const a=_8(32),t=new Uint32Array(a.buffer),e=[];for(let n=0;n<8;n++)e.push(t[n]);return e}let ss=null;function ou(){return ss||(ss=new S8(x8()),ss)}var rs={},ta={},Df;function Co(){if(Df)return ta;Df=1;const a=Yn();return ta.bigInt2BytesLE=function(e,n){const i=Array(n);let o=a(e);for(let s=0;s<n;s++)i[s]=o.and(255).toJSNumber(),o=o.shiftRight(8);return i},ta.bigInt2U32LE=function(e,n){const i=Array(n);let o=a(e);for(let s=0;s<n;s++)i[s]=o.and(4294967295).toJSNumber(),o=o.shiftRight(32);return i},ta.isOcamNum=function(t){return!(!Array.isArray(t)||t.length!=3||typeof t[0]!="number"||typeof t[1]!="number"||!Array.isArray(t[2]))},ta}var sc,qf;function M8(){if(qf)return sc;qf=1;const a=Co();return sc=function(e,n,i){const o=i||"int";if(e.modules[o])return o;e.modules[o]={};const s=n*2,r=n*8;e.alloc(r,a.bigInt2BytesLE(1,r));function u(){const b=e.addFunction(o+"_copy");b.addParam("px","i32"),b.addParam("pr","i32");const w=b.getCodeBuilder();for(let Z=0;Z<n;Z++)b.addCode(w.i64_store(w.getLocal("pr"),Z*8,w.i64_load(w.getLocal("px"),Z*8)))}function l(){const b=e.addFunction(o+"_zero");b.addParam("pr","i32");const w=b.getCodeBuilder();for(let Z=0;Z<n;Z++)b.addCode(w.i64_store(w.getLocal("pr"),Z*8,w.i64_const(0)))}function c(){const b=e.addFunction(o+"_one");b.addParam("pr","i32");const w=b.getCodeBuilder();b.addCode(w.i64_store(w.getLocal("pr"),0,w.i64_const(1)));for(let Z=1;Z<n;Z++)b.addCode(w.i64_store(w.getLocal("pr"),Z*8,w.i64_const(0)))}function f(){const b=e.addFunction(o+"_isZero");b.addParam("px","i32"),b.setReturnType("i32");const w=b.getCodeBuilder();function Z(P){return P==0?w.ret(w.i64_eqz(w.i64_load(w.getLocal("px")))):w.if(w.i64_eqz(w.i64_load(w.getLocal("px"),P*8)),Z(P-1),w.ret(w.i32_const(0)))}b.addCode(Z(n-1)),b.addCode(w.ret(w.i32_const(0)))}function g(){const b=e.addFunction(o+"_eq");b.addParam("px","i32"),b.addParam("py","i32"),b.setReturnType("i32");const w=b.getCodeBuilder();function Z(P){return P==0?w.ret(w.i64_eq(w.i64_load(w.getLocal("px")),w.i64_load(w.getLocal("py")))):w.if(w.i64_eq(w.i64_load(w.getLocal("px"),P*8),w.i64_load(w.getLocal("py"),P*8)),Z(P-1),w.ret(w.i32_const(0)))}b.addCode(Z(n-1)),b.addCode(w.ret(w.i32_const(0)))}function L(){const b=e.addFunction(o+"_gte");b.addParam("px","i32"),b.addParam("py","i32"),b.setReturnType("i32");const w=b.getCodeBuilder();function Z(P){return P==0?w.ret(w.i64_ge_u(w.i64_load(w.getLocal("px")),w.i64_load(w.getLocal("py")))):w.if(w.i64_lt_u(w.i64_load(w.getLocal("px"),P*8),w.i64_load(w.getLocal("py"),P*8)),w.ret(w.i32_const(0)),w.if(w.i64_gt_u(w.i64_load(w.getLocal("px"),P*8),w.i64_load(w.getLocal("py"),P*8)),w.ret(w.i32_const(1)),Z(P-1)))}b.addCode(Z(n-1)),b.addCode(w.ret(w.i32_const(0)))}function S(){const b=e.addFunction(o+"_add");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("r","i32"),b.setReturnType("i32"),b.addLocal("c","i64");const w=b.getCodeBuilder();b.addCode(w.setLocal("c",w.i64_add(w.i64_load32_u(w.getLocal("x")),w.i64_load32_u(w.getLocal("y"))))),b.addCode(w.i64_store32(w.getLocal("r"),w.getLocal("c")));for(let Z=1;Z<s;Z++)b.addCode(w.setLocal("c",w.i64_add(w.i64_add(w.i64_load32_u(w.getLocal("x"),4*Z),w.i64_load32_u(w.getLocal("y"),4*Z)),w.i64_shr_u(w.getLocal("c"),w.i64_const(32))))),b.addCode(w.i64_store32(w.getLocal("r"),Z*4,w.getLocal("c")));b.addCode(w.i32_wrap_i64(w.i64_shr_u(w.getLocal("c"),w.i64_const(32))))}function k(){const b=e.addFunction(o+"_sub");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("r","i32"),b.setReturnType("i32"),b.addLocal("c","i64");const w=b.getCodeBuilder();b.addCode(w.setLocal("c",w.i64_sub(w.i64_load32_u(w.getLocal("x")),w.i64_load32_u(w.getLocal("y"))))),b.addCode(w.i64_store32(w.getLocal("r"),w.i64_and(w.getLocal("c"),w.i64_const("0xFFFFFFFF"))));for(let Z=1;Z<s;Z++)b.addCode(w.setLocal("c",w.i64_add(w.i64_sub(w.i64_load32_u(w.getLocal("x"),4*Z),w.i64_load32_u(w.getLocal("y"),4*Z)),w.i64_shr_s(w.getLocal("c"),w.i64_const(32))))),b.addCode(w.i64_store32(w.getLocal("r"),Z*4,w.i64_and(w.getLocal("c"),w.i64_const("0xFFFFFFFF"))));b.addCode(w.i32_wrap_i64(w.i64_shr_s(w.getLocal("c"),w.i64_const(32))))}function E(){const b=e.addFunction(o+"_mul");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("r","i32"),b.addLocal("c0","i64"),b.addLocal("c1","i64");for(let y=0;y<s;y++)b.addLocal("x"+y,"i64"),b.addLocal("y"+y,"i64");const w=b.getCodeBuilder(),Z=[],P=[];function V(y,_){let T,B;return Z[y]?T=w.getLocal("x"+y):(T=w.teeLocal("x"+y,w.i64_load32_u(w.getLocal("x"),y*4)),Z[y]=!0),P[_]?B=w.getLocal("y"+_):(B=w.teeLocal("y"+_,w.i64_load32_u(w.getLocal("y"),_*4)),P[_]=!0),w.i64_mul(T,B)}let nt="c0",I="c1";for(let y=0;y<s*2-1;y++){for(let _=Math.max(0,y-s+1);_<=y&&_<s;_++){const T=y-_;b.addCode(w.setLocal(nt,w.i64_add(w.i64_and(w.getLocal(nt),w.i64_const(4294967295)),V(_,T)))),b.addCode(w.setLocal(I,w.i64_add(w.getLocal(I),w.i64_shr_u(w.getLocal(nt),w.i64_const(32)))))}b.addCode(w.i64_store32(w.getLocal("r"),y*4,w.getLocal(nt))),[nt,I]=[I,nt],b.addCode(w.setLocal(I,w.i64_shr_u(w.getLocal(nt),w.i64_const(32))))}b.addCode(w.i64_store32(w.getLocal("r"),s*4*2-4,w.getLocal(nt)))}function G(){const b=e.addFunction(o+"_square");b.addParam("x","i32"),b.addParam("r","i32"),b.addLocal("c0","i64"),b.addLocal("c1","i64"),b.addLocal("c0_old","i64"),b.addLocal("c1_old","i64");for(let _=0;_<s;_++)b.addLocal("x"+_,"i64");const w=b.getCodeBuilder(),Z=[];function P(_,T){let B,Y;return Z[_]?B=w.getLocal("x"+_):(B=w.teeLocal("x"+_,w.i64_load32_u(w.getLocal("x"),_*4)),Z[_]=!0),Z[T]?Y=w.getLocal("x"+T):(Y=w.teeLocal("x"+T,w.i64_load32_u(w.getLocal("x"),T*4)),Z[T]=!0),w.i64_mul(B,Y)}let V="c0",nt="c1",I="c0_old",y="c1_old";for(let _=0;_<s*2-1;_++){b.addCode(w.setLocal(V,w.i64_const(0)),w.setLocal(nt,w.i64_const(0)));for(let T=Math.max(0,_-s+1);T<_+1>>1&&T<s;T++){const B=_-T;b.addCode(w.setLocal(V,w.i64_add(w.i64_and(w.getLocal(V),w.i64_const(4294967295)),P(T,B)))),b.addCode(w.setLocal(nt,w.i64_add(w.getLocal(nt),w.i64_shr_u(w.getLocal(V),w.i64_const(32)))))}b.addCode(w.setLocal(V,w.i64_shl(w.i64_and(w.getLocal(V),w.i64_const(4294967295)),w.i64_const(1)))),b.addCode(w.setLocal(nt,w.i64_add(w.i64_shl(w.getLocal(nt),w.i64_const(1)),w.i64_shr_u(w.getLocal(V),w.i64_const(32))))),_%2==0&&(b.addCode(w.setLocal(V,w.i64_add(w.i64_and(w.getLocal(V),w.i64_const(4294967295)),P(_>>1,_>>1)))),b.addCode(w.setLocal(nt,w.i64_add(w.getLocal(nt),w.i64_shr_u(w.getLocal(V),w.i64_const(32)))))),_>0&&(b.addCode(w.setLocal(V,w.i64_add(w.i64_and(w.getLocal(V),w.i64_const(4294967295)),w.i64_and(w.getLocal(I),w.i64_const(4294967295))))),b.addCode(w.setLocal(nt,w.i64_add(w.i64_add(w.getLocal(nt),w.i64_shr_u(w.getLocal(V),w.i64_const(32))),w.getLocal(y))))),b.addCode(w.i64_store32(w.getLocal("r"),_*4,w.getLocal(V))),b.addCode(w.setLocal(I,w.getLocal(nt)),w.setLocal(y,w.i64_shr_u(w.getLocal(I),w.i64_const(32))))}b.addCode(w.i64_store32(w.getLocal("r"),s*4*2-4,w.getLocal(I)))}function C(){const b=e.addFunction(o+"_squareOld");b.addParam("x","i32"),b.addParam("r","i32");const w=b.getCodeBuilder();b.addCode(w.call(o+"_mul",w.getLocal("x"),w.getLocal("x"),w.getLocal("r")))}function N(){const b=e.addFunction(o+"__mul1");b.addParam("px","i32"),b.addParam("y","i64"),b.addParam("pr","i32"),b.addLocal("c","i64");const w=b.getCodeBuilder();b.addCode(w.setLocal("c",w.i64_mul(w.i64_load32_u(w.getLocal("px"),0,0),w.getLocal("y")))),b.addCode(w.i64_store32(w.getLocal("pr"),0,0,w.getLocal("c")));for(let Z=1;Z<s;Z++)b.addCode(w.setLocal("c",w.i64_add(w.i64_mul(w.i64_load32_u(w.getLocal("px"),4*Z,0),w.getLocal("y")),w.i64_shr_u(w.getLocal("c"),w.i64_const(32))))),b.addCode(w.i64_store32(w.getLocal("pr"),Z*4,0,w.getLocal("c")))}function J(){const b=e.addFunction(o+"__add1");b.addParam("x","i32"),b.addParam("y","i64"),b.addLocal("c","i64"),b.addLocal("px","i32");const w=b.getCodeBuilder();b.addCode(w.setLocal("px",w.getLocal("x"))),b.addCode(w.setLocal("c",w.i64_add(w.i64_load32_u(w.getLocal("px"),0,0),w.getLocal("y")))),b.addCode(w.i64_store32(w.getLocal("px"),0,0,w.getLocal("c"))),b.addCode(w.setLocal("c",w.i64_shr_u(w.getLocal("c"),w.i64_const(32)))),b.addCode(w.block(w.loop(w.br_if(1,w.i64_eqz(w.getLocal("c"))),w.setLocal("px",w.i32_add(w.getLocal("px"),w.i32_const(4))),w.setLocal("c",w.i64_add(w.i64_load32_u(w.getLocal("px"),0,0),w.getLocal("c"))),w.i64_store32(w.getLocal("px"),0,0,w.getLocal("c")),w.setLocal("c",w.i64_shr_u(w.getLocal("c"),w.i64_const(32))),w.br(0))))}function j(){N(),J();const b=e.addFunction(o+"_div");b.addParam("x","i32"),b.addParam("y","i32"),b.addParam("c","i32"),b.addParam("r","i32"),b.addLocal("rr","i32"),b.addLocal("cc","i32"),b.addLocal("eX","i32"),b.addLocal("eY","i32"),b.addLocal("sy","i64"),b.addLocal("sx","i64"),b.addLocal("ec","i32");const w=b.getCodeBuilder(),Z=w.i32_const(e.alloc(r)),P=w.i32_const(e.alloc(r)),V=w.i32_const(e.alloc(r)),nt=w.getLocal("cc"),I=w.getLocal("rr"),y=e.alloc(r*2),_=w.i32_const(y),T=w.i32_const(y+r);b.addCode(w.if(w.getLocal("c"),w.setLocal("cc",w.getLocal("c")),w.setLocal("cc",P))),b.addCode(w.if(w.getLocal("r"),w.setLocal("rr",w.getLocal("r")),w.setLocal("rr",V))),b.addCode(w.call(o+"_copy",w.getLocal("x"),I)),b.addCode(w.call(o+"_copy",w.getLocal("y"),Z)),b.addCode(w.call(o+"_zero",nt)),b.addCode(w.call(o+"_zero",_)),b.addCode(w.setLocal("eX",w.i32_const(r-1))),b.addCode(w.setLocal("eY",w.i32_const(r-1))),b.addCode(w.block(w.loop(w.br_if(1,w.i32_or(w.i32_load8_u(w.i32_add(Z,w.getLocal("eY")),0,0),w.i32_eq(w.getLocal("eY"),w.i32_const(3)))),w.setLocal("eY",w.i32_sub(w.getLocal("eY"),w.i32_const(1))),w.br(0)))),b.addCode(w.setLocal("sy",w.i64_add(w.i64_load32_u(w.i32_sub(w.i32_add(Z,w.getLocal("eY")),w.i32_const(3)),0,0),w.i64_const(1)))),b.addCode(w.if(w.i64_eq(w.getLocal("sy"),w.i64_const(1)),w.drop(w.i64_div_u(w.i64_const(0),w.i64_const(0))))),b.addCode(w.block(w.loop(w.block(w.loop(w.br_if(1,w.i32_or(w.i32_load8_u(w.i32_add(I,w.getLocal("eX")),0,0),w.i32_eq(w.getLocal("eX"),w.i32_const(7)))),w.setLocal("eX",w.i32_sub(w.getLocal("eX"),w.i32_const(1))),w.br(0))),w.setLocal("sx",w.i64_load(w.i32_sub(w.i32_add(I,w.getLocal("eX")),w.i32_const(7)),0,0)),w.setLocal("sx",w.i64_div_u(w.getLocal("sx"),w.getLocal("sy"))),w.setLocal("ec",w.i32_sub(w.i32_sub(w.getLocal("eX"),w.getLocal("eY")),w.i32_const(4))),w.block(w.loop(w.br_if(1,w.i32_and(w.i64_eqz(w.i64_and(w.getLocal("sx"),w.i64_const("0xFFFFFFFF00000000"))),w.i32_ge_s(w.getLocal("ec"),w.i32_const(0)))),w.setLocal("sx",w.i64_shr_u(w.getLocal("sx"),w.i64_const(8))),w.setLocal("ec",w.i32_add(w.getLocal("ec"),w.i32_const(1))),w.br(0))),w.if(w.i64_eqz(w.getLocal("sx")),[...w.br_if(2,w.i32_eqz(w.call(o+"_gte",I,Z))),...w.setLocal("sx",w.i64_const(1)),...w.setLocal("ec",w.i32_const(0))]),w.call(o+"__mul1",Z,w.getLocal("sx"),T),w.drop(w.call(o+"_sub",I,w.i32_sub(T,w.getLocal("ec")),I)),w.call(o+"__add1",w.i32_add(nt,w.getLocal("ec")),w.getLocal("sx")),w.br(0))))}function R(){const b=e.addFunction(o+"_inverseMod");b.addParam("px","i32"),b.addParam("pm","i32"),b.addParam("pr","i32"),b.addLocal("t","i32"),b.addLocal("newt","i32"),b.addLocal("r","i32"),b.addLocal("qq","i32"),b.addLocal("qr","i32"),b.addLocal("newr","i32"),b.addLocal("swp","i32"),b.addLocal("x","i32"),b.addLocal("signt","i32"),b.addLocal("signnewt","i32"),b.addLocal("signx","i32");const w=b.getCodeBuilder(),Z=w.i32_const(e.alloc(r)),P=w.i32_const(e.alloc(r)),V=w.i32_const(e.alloc(r)),nt=w.i32_const(e.alloc(r)),I=w.i32_const(e.alloc(r)),y=w.i32_const(e.alloc(r)),_=w.i32_const(e.alloc(r*2)),T=w.i32_const(e.alloc(r));b.addCode(w.setLocal("t",Z),w.call(o+"_zero",Z),w.setLocal("signt",w.i32_const(0))),b.addCode(w.setLocal("r",P),w.call(o+"_copy",w.getLocal("pm"),P)),b.addCode(w.setLocal("newt",V),w.call(o+"_one",V),w.setLocal("signnewt",w.i32_const(0))),b.addCode(w.setLocal("newr",nt),w.call(o+"_copy",w.getLocal("px"),nt)),b.addCode(w.setLocal("qq",I)),b.addCode(w.setLocal("qr",y)),b.addCode(w.setLocal("x",T)),b.addCode(w.block(w.loop(w.br_if(1,w.call(o+"_isZero",w.getLocal("newr"))),w.call(o+"_div",w.getLocal("r"),w.getLocal("newr"),w.getLocal("qq"),w.getLocal("qr")),w.call(o+"_mul",w.getLocal("qq"),w.getLocal("newt"),_),w.if(w.getLocal("signt"),w.if(w.getLocal("signnewt"),w.if(w.call(o+"_gte",_,w.getLocal("t")),[...w.drop(w.call(o+"_sub",_,w.getLocal("t"),w.getLocal("x"))),...w.setLocal("signx",w.i32_const(0))],[...w.drop(w.call(o+"_sub",w.getLocal("t"),_,w.getLocal("x"))),...w.setLocal("signx",w.i32_const(1))]),[...w.drop(w.call(o+"_add",_,w.getLocal("t"),w.getLocal("x"))),...w.setLocal("signx",w.i32_const(1))]),w.if(w.getLocal("signnewt"),[...w.drop(w.call(o+"_add",_,w.getLocal("t"),w.getLocal("x"))),...w.setLocal("signx",w.i32_const(0))],w.if(w.call(o+"_gte",w.getLocal("t"),_),[...w.drop(w.call(o+"_sub",w.getLocal("t"),_,w.getLocal("x"))),...w.setLocal("signx",w.i32_const(0))],[...w.drop(w.call(o+"_sub",_,w.getLocal("t"),w.getLocal("x"))),...w.setLocal("signx",w.i32_const(1))]))),w.setLocal("swp",w.getLocal("t")),w.setLocal("t",w.getLocal("newt")),w.setLocal("newt",w.getLocal("x")),w.setLocal("x",w.getLocal("swp")),w.setLocal("signt",w.getLocal("signnewt")),w.setLocal("signnewt",w.getLocal("signx")),w.setLocal("swp",w.getLocal("r")),w.setLocal("r",w.getLocal("newr")),w.setLocal("newr",w.getLocal("qr")),w.setLocal("qr",w.getLocal("swp")),w.br(0)))),b.addCode(w.if(w.getLocal("signt"),w.drop(w.call(o+"_sub",w.getLocal("pm"),w.getLocal("t"),w.getLocal("pr"))),w.call(o+"_copy",w.getLocal("t"),w.getLocal("pr"))))}return u(),l(),f(),c(),g(),L(),S(),k(),E(),G(),C(),j(),R(),e.exportFunction(o+"_copy"),e.exportFunction(o+"_zero"),e.exportFunction(o+"_one"),e.exportFunction(o+"_isZero"),e.exportFunction(o+"_eq"),e.exportFunction(o+"_gte"),e.exportFunction(o+"_add"),e.exportFunction(o+"_sub"),e.exportFunction(o+"_mul"),e.exportFunction(o+"_square"),e.exportFunction(o+"_squareOld"),e.exportFunction(o+"_div"),e.exportFunction(o+"_inverseMod"),o},sc}var rc,Tf;function au(){return Tf||(Tf=1,rc=function(t,e,n,i,o,s,r){const u=t.addFunction(e);u.addParam("base","i32"),u.addParam("scalar","i32"),u.addParam("scalarLength","i32"),u.addParam("r","i32"),u.addLocal("i","i32"),u.addLocal("b","i32");const l=u.getCodeBuilder(),c=l.i32_const(t.alloc(n));u.addCode(l.if(l.i32_eqz(l.getLocal("scalarLength")),[...l.call(r,l.getLocal("r")),...l.ret([])])),u.addCode(l.call(s,l.getLocal("base"),c)),u.addCode(l.call(r,l.getLocal("r"))),u.addCode(l.setLocal("i",l.getLocal("scalarLength"))),u.addCode(l.block(l.loop(l.setLocal("i",l.i32_sub(l.getLocal("i"),l.i32_const(1))),l.setLocal("b",l.i32_load8_u(l.i32_add(l.getLocal("scalar"),l.getLocal("i")))),...f(),l.br_if(1,l.i32_eqz(l.getLocal("i"))),l.br(0))));function f(){const g=[];for(let L=0;L<8;L++)g.push(...l.call(o,l.getLocal("r"),l.getLocal("r")),...l.if(l.i32_ge_u(l.getLocal("b"),l.i32_const(128>>L)),[...l.setLocal("b",l.i32_sub(l.getLocal("b"),l.i32_const(128>>L))),...l.call(i,l.getLocal("r"),c,l.getLocal("r"))]));return g}}),rc}var cc,Rf;function su(){if(Rf)return cc;Rf=1,cc=a;function a(t,e){const n=t.modules[e].n64*8,i=t.addFunction(e+"_batchInverse");i.addParam("pIn","i32"),i.addParam("inStep","i32"),i.addParam("n","i32"),i.addParam("pOut","i32"),i.addParam("outStep","i32"),i.addLocal("itAux","i32"),i.addLocal("itIn","i32"),i.addLocal("itOut","i32"),i.addLocal("i","i32");const o=i.getCodeBuilder(),s=o.i32_const(t.alloc(n));i.addCode(o.setLocal("itAux",o.i32_load(o.i32_const(0))),o.i32_store(o.i32_const(0),o.i32_add(o.getLocal("itAux"),o.i32_mul(o.i32_add(o.getLocal("n"),o.i32_const(1)),o.i32_const(n))))),i.addCode(o.call(e+"_one",o.getLocal("itAux")),o.setLocal("itIn",o.getLocal("pIn")),o.setLocal("itAux",o.i32_add(o.getLocal("itAux"),o.i32_const(n))),o.setLocal("i",o.i32_const(0)),o.block(o.loop(o.br_if(1,o.i32_eq(o.getLocal("i"),o.getLocal("n"))),o.if(o.call(e+"_isZero",o.getLocal("itIn")),o.call(e+"_copy",o.i32_sub(o.getLocal("itAux"),o.i32_const(n)),o.getLocal("itAux")),o.call(e+"_mul",o.getLocal("itIn"),o.i32_sub(o.getLocal("itAux"),o.i32_const(n)),o.getLocal("itAux"))),o.setLocal("itIn",o.i32_add(o.getLocal("itIn"),o.getLocal("inStep"))),o.setLocal("itAux",o.i32_add(o.getLocal("itAux"),o.i32_const(n))),o.setLocal("i",o.i32_add(o.getLocal("i"),o.i32_const(1))),o.br(0))),o.setLocal("itIn",o.i32_sub(o.getLocal("itIn"),o.getLocal("inStep"))),o.setLocal("itAux",o.i32_sub(o.getLocal("itAux"),o.i32_const(n))),o.setLocal("itOut",o.i32_add(o.getLocal("pOut"),o.i32_mul(o.i32_sub(o.getLocal("n"),o.i32_const(1)),o.getLocal("outStep")))),o.call(e+"_inverse",o.getLocal("itAux"),o.getLocal("itAux")),o.block(o.loop(o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.if(o.call(e+"_isZero",o.getLocal("itIn")),[...o.call(e+"_copy",o.getLocal("itAux"),o.i32_sub(o.getLocal("itAux"),o.i32_const(n))),...o.call(e+"_zero",o.getLocal("itOut"))],[...o.call(e+"_copy",o.i32_sub(o.getLocal("itAux"),o.i32_const(n)),s),...o.call(e+"_mul",o.getLocal("itAux"),o.getLocal("itIn"),o.i32_sub(o.getLocal("itAux"),o.i32_const(n))),...o.call(e+"_mul",o.getLocal("itAux"),s,o.getLocal("itOut"))]),o.setLocal("itIn",o.i32_sub(o.getLocal("itIn"),o.getLocal("inStep"))),o.setLocal("itOut",o.i32_sub(o.getLocal("itOut"),o.getLocal("outStep"))),o.setLocal("itAux",o.i32_sub(o.getLocal("itAux"),o.i32_const(n))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0)))),i.addCode(o.i32_store(o.i32_const(0),o.getLocal("itAux")))}return cc}var lc,Hf;function T0(){if(Hf)return lc;Hf=1,lc=a;function a(t,e,n,i,o,s){typeof s>"u"&&(i<o?s=!0:s=!1);const r=t.addFunction(e);r.addParam("pIn","i32"),r.addParam("n","i32"),r.addParam("pOut","i32"),r.addLocal("i","i32"),r.addLocal("itIn","i32"),r.addLocal("itOut","i32");const u=r.getCodeBuilder();s?r.addCode(u.setLocal("itIn",u.i32_add(u.getLocal("pIn"),u.i32_mul(u.i32_sub(u.getLocal("n"),u.i32_const(1)),u.i32_const(i)))),u.setLocal("itOut",u.i32_add(u.getLocal("pOut"),u.i32_mul(u.i32_sub(u.getLocal("n"),u.i32_const(1)),u.i32_const(o)))),u.setLocal("i",u.i32_const(0)),u.block(u.loop(u.br_if(1,u.i32_eq(u.getLocal("i"),u.getLocal("n"))),u.call(n,u.getLocal("itIn"),u.getLocal("itOut")),u.setLocal("itIn",u.i32_sub(u.getLocal("itIn"),u.i32_const(i))),u.setLocal("itOut",u.i32_sub(u.getLocal("itOut"),u.i32_const(o))),u.setLocal("i",u.i32_add(u.getLocal("i"),u.i32_const(1))),u.br(0)))):r.addCode(u.setLocal("itIn",u.getLocal("pIn")),u.setLocal("itOut",u.getLocal("pOut")),u.setLocal("i",u.i32_const(0)),u.block(u.loop(u.br_if(1,u.i32_eq(u.getLocal("i"),u.getLocal("n"))),u.call(n,u.getLocal("itIn"),u.getLocal("itOut")),u.setLocal("itIn",u.i32_add(u.getLocal("itIn"),u.i32_const(i))),u.setLocal("itOut",u.i32_add(u.getLocal("itOut"),u.i32_const(o))),u.setLocal("i",u.i32_add(u.getLocal("i"),u.i32_const(1))),u.br(0))))}return lc}var uc,Qf;function k8(){if(Qf)return uc;Qf=1,uc=a;function a(t,e,n,i,o,s){typeof s>"u"&&(i<o?s=!0:s=!1);const r=t.addFunction(e);r.addParam("pIn1","i32"),r.addParam("pIn2","i32"),r.addParam("n","i32"),r.addParam("pOut","i32"),r.addLocal("i","i32"),r.addLocal("itIn1","i32"),r.addLocal("itIn2","i32"),r.addLocal("itOut","i32");const u=r.getCodeBuilder();s?r.addCode(u.setLocal("itIn1",u.i32_add(u.getLocal("pIn1"),u.i32_mul(u.i32_sub(u.getLocal("n"),u.i32_const(1)),u.i32_const(i)))),u.setLocal("itIn2",u.i32_add(u.getLocal("pIn2"),u.i32_mul(u.i32_sub(u.getLocal("n"),u.i32_const(1)),u.i32_const(i)))),u.setLocal("itOut",u.i32_add(u.getLocal("pOut"),u.i32_mul(u.i32_sub(u.getLocal("n"),u.i32_const(1)),u.i32_const(o)))),u.setLocal("i",u.i32_const(0)),u.block(u.loop(u.br_if(1,u.i32_eq(u.getLocal("i"),u.getLocal("n"))),u.call(n,u.getLocal("itIn1"),u.getLocal("itIn2"),u.getLocal("itOut")),u.setLocal("itIn1",u.i32_sub(u.getLocal("itIn1"),u.i32_const(i))),u.setLocal("itIn2",u.i32_sub(u.getLocal("itIn2"),u.i32_const(i))),u.setLocal("itOut",u.i32_sub(u.getLocal("itOut"),u.i32_const(o))),u.setLocal("i",u.i32_add(u.getLocal("i"),u.i32_const(1))),u.br(0)))):r.addCode(u.setLocal("itIn1",u.getLocal("pIn1")),u.setLocal("itIn2",u.getLocal("pIn2")),u.setLocal("itOut",u.getLocal("pOut")),u.setLocal("i",u.i32_const(0)),u.block(u.loop(u.br_if(1,u.i32_eq(u.getLocal("i"),u.getLocal("n"))),u.call(n,u.getLocal("itIn1"),u.getLocal("itIn2"),u.getLocal("itOut")),u.setLocal("itIn1",u.i32_add(u.getLocal("itIn1"),u.i32_const(i))),u.setLocal("itIn2",u.i32_add(u.getLocal("itIn2"),u.i32_const(i))),u.setLocal("itOut",u.i32_add(u.getLocal("itOut"),u.i32_const(o))),u.setLocal("i",u.i32_add(u.getLocal("i"),u.i32_const(1))),u.br(0))))}return uc}var dc,Kf;function ru(){if(Kf)return dc;Kf=1;const a=Yn(),t=M8(),e=Co(),n=au(),i=su(),o=T0(),s=k8();return dc=function(u,l,c,f){const g=a(l),L=Math.floor((g.minus(1).bitLength()-1)/64)+1,S=L*2,k=L*8,E=c||"f1m";if(u.modules[E])return E;const G=t(u,L,f),C=u.alloc(k,e.bigInt2BytesLE(g,k));u.alloc(e.bigInt2BytesLE(a.one.shiftLeft(L*64).mod(g),k));const N=u.alloc(e.bigInt2BytesLE(a.one.shiftLeft(L*64).square().mod(g),k)),J=u.alloc(e.bigInt2BytesLE(a.one.shiftLeft(L*64).mod(g),k)),j=u.alloc(e.bigInt2BytesLE(a.zero,k)),R=g.minus(a.one),b=R.shiftRight(1),w=u.alloc(k,e.bigInt2BytesLE(b,k)),Z=b.add(a.one),P=u.alloc(k,e.bigInt2BytesLE(Z,k));u.modules[E]={pq:C,pR2:N,n64:L,q:g,pOne:J,pZero:j,pePlusOne:P};function V(){const rt=u.addFunction(E+"_one");rt.addParam("pr","i32");const z=rt.getCodeBuilder();rt.addCode(z.call(G+"_copy",z.i32_const(J),z.getLocal("pr")))}function nt(){const rt=u.addFunction(E+"_add");rt.addParam("x","i32"),rt.addParam("y","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder();rt.addCode(z.if(z.call(G+"_add",z.getLocal("x"),z.getLocal("y"),z.getLocal("r")),z.drop(z.call(G+"_sub",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))),z.if(z.call(G+"_gte",z.getLocal("r"),z.i32_const(C)),z.drop(z.call(G+"_sub",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))))))}function I(){const rt=u.addFunction(E+"_sub");rt.addParam("x","i32"),rt.addParam("y","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder();rt.addCode(z.if(z.call(G+"_sub",z.getLocal("x"),z.getLocal("y"),z.getLocal("r")),z.drop(z.call(G+"_add",z.getLocal("r"),z.i32_const(C),z.getLocal("r")))))}function y(){const rt=u.addFunction(E+"_neg");rt.addParam("x","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder();rt.addCode(z.call(E+"_sub",z.i32_const(j),z.getLocal("x"),z.getLocal("r")))}function _(){const rt=u.addFunction(E+"_isNegative");rt.addParam("x","i32"),rt.setReturnType("i32");const z=rt.getCodeBuilder(),wt=z.i32_const(u.alloc(k));rt.addCode(z.call(E+"_fromMontgomery",z.getLocal("x"),wt),z.call(G+"_gte",wt,z.i32_const(P)))}function T(){const rt=u.addFunction(E+"_sign");rt.addParam("x","i32"),rt.setReturnType("i32");const z=rt.getCodeBuilder(),wt=z.i32_const(u.alloc(k));rt.addCode(z.if(z.call(G+"_isZero",z.getLocal("x")),z.ret(z.i32_const(0))),z.call(E+"_fromMontgomery",z.getLocal("x"),wt),z.if(z.call(G+"_gte",wt,z.i32_const(P)),z.ret(z.i32_const(-1))),z.ret(z.i32_const(1)))}function B(){const rt=u.alloc(S*S*8),z=u.addFunction(E+"_mReduct");z.addParam("t","i32"),z.addParam("r","i32"),z.addLocal("np32","i64"),z.addLocal("c","i64"),z.addLocal("m","i64");const wt=z.getCodeBuilder(),yt=a("100000000",16).minus(g.modInv(a("100000000",16))).toJSNumber();z.addCode(wt.setLocal("np32",wt.i64_const(yt)));for(let It=0;It<S;It++){z.addCode(wt.setLocal("c",wt.i64_const(0))),z.addCode(wt.setLocal("m",wt.i64_and(wt.i64_mul(wt.i64_load32_u(wt.getLocal("t"),It*4),wt.getLocal("np32")),wt.i64_const("0xFFFFFFFF"))));for(let Ut=0;Ut<S;Ut++)z.addCode(wt.setLocal("c",wt.i64_add(wt.i64_add(wt.i64_load32_u(wt.getLocal("t"),(It+Ut)*4),wt.i64_shr_u(wt.getLocal("c"),wt.i64_const(32))),wt.i64_mul(wt.i64_load32_u(wt.i32_const(C),Ut*4),wt.getLocal("m"))))),z.addCode(wt.i64_store32(wt.getLocal("t"),(It+Ut)*4,wt.getLocal("c")));z.addCode(wt.i64_store32(wt.i32_const(rt),It*4,wt.i64_shr_u(wt.getLocal("c"),wt.i64_const(32))))}z.addCode(wt.call(E+"_add",wt.i32_const(rt),wt.i32_add(wt.getLocal("t"),wt.i32_const(S*4)),wt.getLocal("r")))}function Y(){const rt=u.addFunction(E+"_mul");rt.addParam("x","i32"),rt.addParam("y","i32"),rt.addParam("r","i32"),rt.addLocal("c0","i64"),rt.addLocal("c1","i64"),rt.addLocal("np32","i64");for(let K=0;K<S;K++)rt.addLocal("x"+K,"i64"),rt.addLocal("y"+K,"i64"),rt.addLocal("m"+K,"i64"),rt.addLocal("q"+K,"i64");const z=rt.getCodeBuilder(),wt=a("100000000",16).minus(g.modInv(a("100000000",16))).toJSNumber();rt.addCode(z.setLocal("np32",z.i64_const(wt)));const yt=[],It=[],Ut=[];function Dt(K,U){let D,ot;return yt[K]?D=z.getLocal("x"+K):(D=z.teeLocal("x"+K,z.i64_load32_u(z.getLocal("x"),K*4)),yt[K]=!0),It[U]?ot=z.getLocal("y"+U):(ot=z.teeLocal("y"+U,z.i64_load32_u(z.getLocal("y"),U*4)),It[U]=!0),z.i64_mul(D,ot)}function Mt(K,U){let D,ot;return Ut[K]?D=z.getLocal("q"+K):(D=z.teeLocal("q"+K,z.i64_load32_u(z.i32_const(0),C+K*4)),Ut[K]=!0),ot=z.getLocal("m"+U),z.i64_mul(D,ot)}let Qt="c0",it="c1";for(let K=0;K<S*2-1;K++){for(let U=Math.max(0,K-S+1);U<=K&&U<S;U++){const D=K-U;rt.addCode(z.setLocal(Qt,z.i64_add(z.i64_and(z.getLocal(Qt),z.i64_const(4294967295)),Dt(U,D)))),rt.addCode(z.setLocal(it,z.i64_add(z.getLocal(it),z.i64_shr_u(z.getLocal(Qt),z.i64_const(32)))))}for(let U=Math.max(1,K-S+1);U<=K&&U<S;U++){const D=K-U;rt.addCode(z.setLocal(Qt,z.i64_add(z.i64_and(z.getLocal(Qt),z.i64_const(4294967295)),Mt(U,D)))),rt.addCode(z.setLocal(it,z.i64_add(z.getLocal(it),z.i64_shr_u(z.getLocal(Qt),z.i64_const(32)))))}K<S&&(rt.addCode(z.setLocal("m"+K,z.i64_and(z.i64_mul(z.i64_and(z.getLocal(Qt),z.i64_const(4294967295)),z.getLocal("np32")),z.i64_const("0xFFFFFFFF")))),rt.addCode(z.setLocal(Qt,z.i64_add(z.i64_and(z.getLocal(Qt),z.i64_const(4294967295)),Mt(0,K)))),rt.addCode(z.setLocal(it,z.i64_add(z.getLocal(it),z.i64_shr_u(z.getLocal(Qt),z.i64_const(32)))))),K>=S&&rt.addCode(z.i64_store32(z.getLocal("r"),(K-S)*4,z.getLocal(Qt))),[Qt,it]=[it,Qt],rt.addCode(z.setLocal(it,z.i64_shr_u(z.getLocal(Qt),z.i64_const(32))))}rt.addCode(z.i64_store32(z.getLocal("r"),S*4-4,z.getLocal(Qt))),rt.addCode(z.if(z.i32_wrap_i64(z.getLocal(it)),z.drop(z.call(G+"_sub",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))),z.if(z.call(G+"_gte",z.getLocal("r"),z.i32_const(C)),z.drop(z.call(G+"_sub",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))))))}function tt(){const rt=u.addFunction(E+"_square");rt.addParam("x","i32"),rt.addParam("r","i32"),rt.addLocal("c0","i64"),rt.addLocal("c1","i64"),rt.addLocal("c0_old","i64"),rt.addLocal("c1_old","i64"),rt.addLocal("np32","i64");for(let U=0;U<S;U++)rt.addLocal("x"+U,"i64"),rt.addLocal("m"+U,"i64"),rt.addLocal("q"+U,"i64");const z=rt.getCodeBuilder(),wt=a("100000000",16).minus(g.modInv(a("100000000",16))).toJSNumber();rt.addCode(z.setLocal("np32",z.i64_const(wt)));const yt=[],It=[];function Ut(U,D){let ot,st;return yt[U]?ot=z.getLocal("x"+U):(ot=z.teeLocal("x"+U,z.i64_load32_u(z.getLocal("x"),U*4)),yt[U]=!0),yt[D]?st=z.getLocal("x"+D):(st=z.teeLocal("x"+D,z.i64_load32_u(z.getLocal("x"),D*4)),yt[D]=!0),z.i64_mul(ot,st)}function Dt(U,D){let ot,st;return It[U]?ot=z.getLocal("q"+U):(ot=z.teeLocal("q"+U,z.i64_load32_u(z.i32_const(0),C+U*4)),It[U]=!0),st=z.getLocal("m"+D),z.i64_mul(ot,st)}let Mt="c0",Qt="c1",it="c0_old",K="c1_old";for(let U=0;U<S*2-1;U++){rt.addCode(z.setLocal(Mt,z.i64_const(0)),z.setLocal(Qt,z.i64_const(0)));for(let D=Math.max(0,U-S+1);D<U+1>>1&&D<S;D++){const ot=U-D;rt.addCode(z.setLocal(Mt,z.i64_add(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),Ut(D,ot)))),rt.addCode(z.setLocal(Qt,z.i64_add(z.getLocal(Qt),z.i64_shr_u(z.getLocal(Mt),z.i64_const(32)))))}rt.addCode(z.setLocal(Mt,z.i64_shl(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),z.i64_const(1)))),rt.addCode(z.setLocal(Qt,z.i64_add(z.i64_shl(z.getLocal(Qt),z.i64_const(1)),z.i64_shr_u(z.getLocal(Mt),z.i64_const(32))))),U%2==0&&(rt.addCode(z.setLocal(Mt,z.i64_add(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),Ut(U>>1,U>>1)))),rt.addCode(z.setLocal(Qt,z.i64_add(z.getLocal(Qt),z.i64_shr_u(z.getLocal(Mt),z.i64_const(32)))))),U>0&&(rt.addCode(z.setLocal(Mt,z.i64_add(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),z.i64_and(z.getLocal(it),z.i64_const(4294967295))))),rt.addCode(z.setLocal(Qt,z.i64_add(z.i64_add(z.getLocal(Qt),z.i64_shr_u(z.getLocal(Mt),z.i64_const(32))),z.getLocal(K)))));for(let D=Math.max(1,U-S+1);D<=U&&D<S;D++){const ot=U-D;rt.addCode(z.setLocal(Mt,z.i64_add(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),Dt(D,ot)))),rt.addCode(z.setLocal(Qt,z.i64_add(z.getLocal(Qt),z.i64_shr_u(z.getLocal(Mt),z.i64_const(32)))))}U<S&&(rt.addCode(z.setLocal("m"+U,z.i64_and(z.i64_mul(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),z.getLocal("np32")),z.i64_const("0xFFFFFFFF")))),rt.addCode(z.setLocal(Mt,z.i64_add(z.i64_and(z.getLocal(Mt),z.i64_const(4294967295)),Dt(0,U)))),rt.addCode(z.setLocal(Qt,z.i64_add(z.getLocal(Qt),z.i64_shr_u(z.getLocal(Mt),z.i64_const(32)))))),U>=S&&rt.addCode(z.i64_store32(z.getLocal("r"),(U-S)*4,z.getLocal(Mt))),rt.addCode(z.setLocal(it,z.getLocal(Qt)),z.setLocal(K,z.i64_shr_u(z.getLocal(it),z.i64_const(32))))}rt.addCode(z.i64_store32(z.getLocal("r"),S*4-4,z.getLocal(it))),rt.addCode(z.if(z.i32_wrap_i64(z.getLocal(K)),z.drop(z.call(G+"_sub",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))),z.if(z.call(G+"_gte",z.getLocal("r"),z.i32_const(C)),z.drop(z.call(G+"_sub",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))))))}function $(){const rt=u.addFunction(E+"_squareOld");rt.addParam("x","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder();rt.addCode(z.call(E+"_mul",z.getLocal("x"),z.getLocal("x"),z.getLocal("r")))}function X(){const rt=u.addFunction(E+"_toMontgomery");rt.addParam("x","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder();rt.addCode(z.call(E+"_mul",z.getLocal("x"),z.i32_const(N),z.getLocal("r")))}function F(){const rt=u.alloc(k*2),z=u.addFunction(E+"_fromMontgomery");z.addParam("x","i32"),z.addParam("r","i32");const wt=z.getCodeBuilder();z.addCode(wt.call(G+"_copy",wt.getLocal("x"),wt.i32_const(rt))),z.addCode(wt.call(G+"_zero",wt.i32_const(rt+k))),z.addCode(wt.call(E+"_mReduct",wt.i32_const(rt),wt.getLocal("r")))}function M(){const rt=u.addFunction(E+"_inverse");rt.addParam("x","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder();rt.addCode(z.call(E+"_fromMontgomery",z.getLocal("x"),z.getLocal("r"))),rt.addCode(z.call(G+"_inverseMod",z.getLocal("r"),z.i32_const(C),z.getLocal("r"))),rt.addCode(z.call(E+"_toMontgomery",z.getLocal("r"),z.getLocal("r")))}let W=a(2);if(g.isPrime())for(;!W.modPow(b,g).equals(R);)W=W.add(a.one);u.alloc(e.bigInt2BytesLE(W.shiftLeft(L*64).mod(g),k));let A=0,h=R;for(;!h.isOdd()&&!h.isZero();)A++,h=h.shiftRight(1);const Q=u.alloc(k,e.bigInt2BytesLE(h,k)),p=W.modPow(h,g),d=u.alloc(e.bigInt2BytesLE(p.shiftLeft(L*64).mod(g),k)),m=h.add(1).shiftRight(1),v=u.alloc(k,e.bigInt2BytesLE(m,k));function et(){const rt=u.addFunction(E+"_sqrt");rt.addParam("n","i32"),rt.addParam("r","i32"),rt.addLocal("m","i32"),rt.addLocal("i","i32"),rt.addLocal("j","i32");const z=rt.getCodeBuilder(),wt=z.i32_const(J),yt=z.i32_const(u.alloc(k)),It=z.i32_const(u.alloc(k)),Ut=z.i32_const(u.alloc(k)),Dt=z.i32_const(u.alloc(k)),Mt=z.i32_const(u.alloc(k));rt.addCode(z.if(z.call(E+"_isZero",z.getLocal("n")),z.ret(z.call(E+"_zero",z.getLocal("r")))),z.setLocal("m",z.i32_const(A)),z.call(E+"_copy",z.i32_const(d),yt),z.call(E+"_exp",z.getLocal("n"),z.i32_const(Q),z.i32_const(k),It),z.call(E+"_exp",z.getLocal("n"),z.i32_const(v),z.i32_const(k),Ut),z.block(z.loop(z.br_if(1,z.call(E+"_eq",It,wt)),z.call(E+"_square",It,Dt),z.setLocal("i",z.i32_const(1)),z.block(z.loop(z.br_if(1,z.call(E+"_eq",Dt,wt)),z.call(E+"_square",Dt,Dt),z.setLocal("i",z.i32_add(z.getLocal("i"),z.i32_const(1))),z.br(0))),z.call(E+"_copy",yt,Mt),z.setLocal("j",z.i32_sub(z.i32_sub(z.getLocal("m"),z.getLocal("i")),z.i32_const(1))),z.block(z.loop(z.br_if(1,z.i32_eqz(z.getLocal("j"))),z.call(E+"_square",Mt,Mt),z.setLocal("j",z.i32_sub(z.getLocal("j"),z.i32_const(1))),z.br(0))),z.setLocal("m",z.getLocal("i")),z.call(E+"_square",Mt,yt),z.call(E+"_mul",It,yt,It),z.call(E+"_mul",Ut,Mt,Ut),z.br(0))),z.if(z.call(E+"_isNegative",Ut),z.call(E+"_neg",Ut,z.getLocal("r")),z.call(E+"_copy",Ut,z.getLocal("r"))))}function ct(){const rt=u.addFunction(E+"_isSquare");rt.addParam("n","i32"),rt.setReturnType("i32");const z=rt.getCodeBuilder(),wt=z.i32_const(J),yt=z.i32_const(u.alloc(k));rt.addCode(z.if(z.call(E+"_isZero",z.getLocal("n")),z.ret(z.i32_const(1))),z.call(E+"_exp",z.getLocal("n"),z.i32_const(w),z.i32_const(k),yt),z.call(E+"_eq",yt,wt))}function dt(){const rt=u.addFunction(E+"_load");rt.addParam("scalar","i32"),rt.addParam("scalarLen","i32"),rt.addParam("r","i32"),rt.addLocal("p","i32"),rt.addLocal("l","i32"),rt.addLocal("i","i32"),rt.addLocal("j","i32");const z=rt.getCodeBuilder(),wt=z.i32_const(u.alloc(k)),yt=u.alloc(k),It=z.i32_const(yt);rt.addCode(z.call(G+"_zero",z.getLocal("r")),z.setLocal("i",z.i32_const(k)),z.setLocal("p",z.getLocal("scalar")),z.block(z.loop(z.br_if(1,z.i32_gt_u(z.getLocal("i"),z.getLocal("scalarLen"))),z.if(z.i32_eq(z.getLocal("i"),z.i32_const(k)),z.call(E+"_one",wt),z.call(E+"_mul",wt,z.i32_const(N),wt)),z.call(E+"_mul",z.getLocal("p"),wt,It),z.call(E+"_add",z.getLocal("r"),It,z.getLocal("r")),z.setLocal("p",z.i32_add(z.getLocal("p"),z.i32_const(k))),z.setLocal("i",z.i32_add(z.getLocal("i"),z.i32_const(k))),z.br(0))),z.setLocal("l",z.i32_rem_u(z.getLocal("scalarLen"),z.i32_const(k))),z.if(z.i32_eqz(z.getLocal("l")),z.ret([])),z.call(G+"_zero",It),z.setLocal("j",z.i32_const(0)),z.block(z.loop(z.br_if(1,z.i32_eq(z.getLocal("j"),z.getLocal("l"))),z.i32_store8(z.getLocal("j"),yt,z.i32_load8_u(z.getLocal("p"))),z.setLocal("p",z.i32_add(z.getLocal("p"),z.i32_const(1))),z.setLocal("j",z.i32_add(z.getLocal("j"),z.i32_const(1))),z.br(0))),z.if(z.i32_eq(z.getLocal("i"),z.i32_const(k)),z.call(E+"_one",wt),z.call(E+"_mul",wt,z.i32_const(N),wt)),z.call(E+"_mul",It,wt,It),z.call(E+"_add",z.getLocal("r"),It,z.getLocal("r")))}function ft(){const rt=u.addFunction(E+"_timesScalar");rt.addParam("x","i32"),rt.addParam("scalar","i32"),rt.addParam("scalarLen","i32"),rt.addParam("r","i32");const z=rt.getCodeBuilder(),wt=z.i32_const(u.alloc(k));rt.addCode(z.call(E+"_load",z.getLocal("scalar"),z.getLocal("scalarLen"),wt),z.call(E+"_toMontgomery",wt,wt),z.call(E+"_mul",z.getLocal("x"),wt,z.getLocal("r")))}function Ft(){const rt=u.addFunction(E+"_isOne");rt.addParam("x","i32"),rt.setReturnType("i32");const z=rt.getCodeBuilder();rt.addCode(z.ret(z.call(G+"_eq",z.getLocal("x"),z.i32_const(J))))}return u.exportFunction(G+"_copy",E+"_copy"),u.exportFunction(G+"_zero",E+"_zero"),u.exportFunction(G+"_isZero",E+"_isZero"),u.exportFunction(G+"_eq",E+"_eq"),Ft(),nt(),I(),y(),B(),Y(),tt(),$(),X(),F(),_(),T(),M(),V(),dt(),ft(),i(u,E),o(u,E+"_batchToMontgomery",E+"_toMontgomery",k,k),o(u,E+"_batchFromMontgomery",E+"_fromMontgomery",k,k),o(u,E+"_batchNeg",E+"_neg",k,k),s(u,E+"_batchAdd",E+"_add",k,k),s(u,E+"_batchSub",E+"_sub",k,k),s(u,E+"_batchMul",E+"_mul",k,k),u.exportFunction(E+"_add"),u.exportFunction(E+"_sub"),u.exportFunction(E+"_neg"),u.exportFunction(E+"_isNegative"),u.exportFunction(E+"_isOne"),u.exportFunction(E+"_sign"),u.exportFunction(E+"_mReduct"),u.exportFunction(E+"_mul"),u.exportFunction(E+"_square"),u.exportFunction(E+"_squareOld"),u.exportFunction(E+"_fromMontgomery"),u.exportFunction(E+"_toMontgomery"),u.exportFunction(E+"_inverse"),u.exportFunction(E+"_one"),u.exportFunction(E+"_load"),u.exportFunction(E+"_timesScalar"),n(u,E+"_exp",k,E+"_mul",E+"_square",G+"_copy",E+"_one"),u.exportFunction(E+"_exp"),u.exportFunction(E+"_batchInverse"),g.isPrime()&&(et(),ct(),u.exportFunction(E+"_sqrt"),u.exportFunction(E+"_isSquare")),u.exportFunction(E+"_batchToMontgomery"),u.exportFunction(E+"_batchFromMontgomery"),E},dc}var fc,Nf;function R0(){if(Nf)return fc;Nf=1;const a=Yn(),t=ru();return fc=function(n,i,o,s,r){const u=a(i),l=Math.floor((u.minus(1).bitLength()-1)/64)+1,c=l*8,f=o||"f1";if(n.modules[f])return f;n.modules[f]={n64:l};const g=r||"int",L=t(n,u,s,g),S=n.modules[L].pR2,k=n.modules[L].pq,E=n.modules[L].pePlusOne;function G(){const j=n.alloc(c),R=n.addFunction(f+"_mul");R.addParam("x","i32"),R.addParam("y","i32"),R.addParam("r","i32");const b=R.getCodeBuilder();R.addCode(b.call(L+"_mul",b.getLocal("x"),b.getLocal("y"),b.i32_const(j))),R.addCode(b.call(L+"_mul",b.i32_const(j),b.i32_const(S),b.getLocal("r")))}function C(){const j=n.addFunction(f+"_square");j.addParam("x","i32"),j.addParam("r","i32");const R=j.getCodeBuilder();j.addCode(R.call(f+"_mul",R.getLocal("x"),R.getLocal("x"),R.getLocal("r")))}function N(){const j=n.addFunction(f+"_inverse");j.addParam("x","i32"),j.addParam("r","i32");const R=j.getCodeBuilder();j.addCode(R.call(g+"_inverseMod",R.getLocal("x"),R.i32_const(k),R.getLocal("r")))}function J(){const j=n.addFunction(f+"_isNegative");j.addParam("x","i32"),j.setReturnType("i32");const R=j.getCodeBuilder();j.addCode(R.call(g+"_gte",R.getLocal("x"),R.i32_const(E)))}return G(),C(),N(),J(),n.exportFunction(L+"_add",f+"_add"),n.exportFunction(L+"_sub",f+"_sub"),n.exportFunction(L+"_neg",f+"_neg"),n.exportFunction(f+"_mul"),n.exportFunction(f+"_square"),n.exportFunction(f+"_inverse"),n.exportFunction(f+"_isNegative"),n.exportFunction(L+"_copy",f+"_copy"),n.exportFunction(L+"_zero",f+"_zero"),n.exportFunction(L+"_one",f+"_one"),n.exportFunction(L+"_isZero",f+"_isZero"),n.exportFunction(L+"_eq",f+"_eq"),f},fc}var hc,zf;function H0(){if(zf)return hc;zf=1;const a=au(),t=su(),e=Yn(),n=Co();return hc=function(o,s,r,u){if(o.modules[r])return r;const l=o.modules[u].n64*8,c=o.modules[u].q;o.modules[r]={n64:o.modules[u].n64*2};function f(){const T=o.addFunction(r+"_add");T.addParam("x","i32"),T.addParam("y","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("y"),X=B.i32_add(B.getLocal("y"),B.i32_const(l)),F=B.getLocal("r"),M=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_add",Y,$,F),B.call(u+"_add",tt,X,M))}function g(){const T=o.addFunction(r+"_timesScalar");T.addParam("x","i32"),T.addParam("scalar","i32"),T.addParam("scalarLen","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_timesScalar",Y,B.getLocal("scalar"),B.getLocal("scalarLen"),$),B.call(u+"_timesScalar",tt,B.getLocal("scalar"),B.getLocal("scalarLen"),X))}function L(){const T=o.addFunction(r+"_sub");T.addParam("x","i32"),T.addParam("y","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("y"),X=B.i32_add(B.getLocal("y"),B.i32_const(l)),F=B.getLocal("r"),M=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_sub",Y,$,F),B.call(u+"_sub",tt,X,M))}function S(){const T=o.addFunction(r+"_neg");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_neg",Y,$),B.call(u+"_neg",tt,X))}function k(){const T=o.addFunction(r+"_conjugate");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_copy",Y,$),B.call(u+"_neg",tt,X))}function E(){const T=o.addFunction(r+"_isNegative");T.addParam("x","i32"),T.setReturnType("i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l));T.addCode(B.if(B.call(u+"_isZero",tt),B.ret(B.call(u+"_isNegative",Y))),B.ret(B.call(u+"_isNegative",tt)))}function G(){const T=o.addFunction(r+"_mul");T.addParam("x","i32"),T.addParam("y","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("y"),X=B.i32_add(B.getLocal("y"),B.i32_const(l)),F=B.getLocal("r"),M=B.i32_add(B.getLocal("r"),B.i32_const(l)),W=B.i32_const(o.alloc(l)),A=B.i32_const(o.alloc(l)),h=B.i32_const(o.alloc(l)),Q=B.i32_const(o.alloc(l));T.addCode(B.call(u+"_mul",Y,$,W),B.call(u+"_mul",tt,X,A),B.call(u+"_add",Y,tt,h),B.call(u+"_add",$,X,Q),B.call(u+"_mul",h,Q,h),B.call(s,A,F),B.call(u+"_add",W,F,F),B.call(u+"_add",W,A,M),B.call(u+"_sub",h,M,M))}function C(){const T=o.addFunction(r+"_mul1");T.addParam("x","i32"),T.addParam("y","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("y"),X=B.getLocal("r"),F=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_mul",Y,$,X),B.call(u+"_mul",tt,$,F))}function N(){const T=o.addFunction(r+"_square");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l)),F=B.i32_const(o.alloc(l)),M=B.i32_const(o.alloc(l)),W=B.i32_const(o.alloc(l)),A=B.i32_const(o.alloc(l));T.addCode(B.call(u+"_mul",Y,tt,F),B.call(u+"_add",Y,tt,M),B.call(s,tt,W),B.call(u+"_add",Y,W,W),B.call(s,F,A),B.call(u+"_add",A,F,A),B.call(u+"_mul",M,W,$),B.call(u+"_sub",$,A,$),B.call(u+"_add",F,F,X))}function J(){const T=o.addFunction(r+"_toMontgomery");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_toMontgomery",Y,$),B.call(u+"_toMontgomery",tt,X))}function j(){const T=o.addFunction(r+"_fromMontgomery");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_fromMontgomery",Y,$),B.call(u+"_fromMontgomery",tt,X))}function R(){const T=o.addFunction(r+"_copy");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l));T.addCode(B.call(u+"_copy",Y,$),B.call(u+"_copy",tt,X))}function b(){const T=o.addFunction(r+"_zero");T.addParam("x","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l));T.addCode(B.call(u+"_zero",Y),B.call(u+"_zero",tt))}function w(){const T=o.addFunction(r+"_one");T.addParam("x","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l));T.addCode(B.call(u+"_one",Y),B.call(u+"_zero",tt))}function Z(){const T=o.addFunction(r+"_eq");T.addParam("x","i32"),T.addParam("y","i32"),T.setReturnType("i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("y"),X=B.i32_add(B.getLocal("y"),B.i32_const(l));T.addCode(B.i32_and(B.call(u+"_eq",Y,$),B.call(u+"_eq",tt,X)))}function P(){const T=o.addFunction(r+"_isZero");T.addParam("x","i32"),T.setReturnType("i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l));T.addCode(B.i32_and(B.call(u+"_isZero",Y),B.call(u+"_isZero",tt)))}function V(){const T=o.addFunction(r+"_inverse");T.addParam("x","i32"),T.addParam("r","i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l)),$=B.getLocal("r"),X=B.i32_add(B.getLocal("r"),B.i32_const(l)),F=B.i32_const(o.alloc(l)),M=B.i32_const(o.alloc(l)),W=B.i32_const(o.alloc(l)),A=B.i32_const(o.alloc(l));T.addCode(B.call(u+"_square",Y,F),B.call(u+"_square",tt,M),B.call(s,M,W),B.call(u+"_sub",F,W,W),B.call(u+"_inverse",W,A),B.call(u+"_mul",Y,A,$),B.call(u+"_mul",tt,A,X),B.call(u+"_neg",X,X))}function nt(){const T=o.addFunction(r+"_sign");T.addParam("x","i32"),T.addLocal("s","i32"),T.setReturnType("i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l));T.addCode(B.setLocal("s",B.call(u+"_sign",tt)),B.if(B.getLocal("s"),B.ret(B.getLocal("s"))),B.ret(B.call(u+"_sign",Y)))}function I(){const T=o.addFunction(r+"_isOne");T.addParam("x","i32"),T.setReturnType("i32");const B=T.getCodeBuilder(),Y=B.getLocal("x"),tt=B.i32_add(B.getLocal("x"),B.i32_const(l));T.addCode(B.ret(B.i32_and(B.call(u+"_isOne",Y),B.call(u+"_isZero",tt))))}function y(){const T=o.addFunction(r+"_sqrt");T.addParam("a","i32"),T.addParam("pr","i32");const B=T.getCodeBuilder(),Y=B.i32_const(o.alloc(n.bigInt2BytesLE(e(c).minus(e(3)).divide(4),l))),tt=B.i32_const(o.alloc(n.bigInt2BytesLE(e(c).minus(e(1)).divide(2),l))),$=B.getLocal("a"),X=B.i32_const(o.alloc(l*2)),F=B.i32_const(o.alloc(l*2)),M=B.i32_const(o.alloc(l*2)),W=o.alloc(l*2),A=B.i32_const(W),h=B.i32_const(W),Q=B.i32_const(W+l),p=B.i32_const(o.alloc(l*2)),d=B.i32_const(o.alloc(l*2));T.addCode(B.call(r+"_one",A),B.call(r+"_neg",A,A),B.call(r+"_exp",$,Y,B.i32_const(l),X),B.call(r+"_square",X,F),B.call(r+"_mul",$,F,F),B.call(r+"_conjugate",F,M),B.call(r+"_mul",M,F,M),B.if(B.call(r+"_eq",M,A),B.unreachable()),B.call(r+"_mul",X,$,p),B.if(B.call(r+"_eq",F,A),[...B.call(u+"_zero",h),...B.call(u+"_one",Q),...B.call(r+"_mul",A,p,B.getLocal("pr"))],[...B.call(r+"_one",d),...B.call(r+"_add",d,F,d),...B.call(r+"_exp",d,tt,B.i32_const(l),d),...B.call(r+"_mul",d,p,B.getLocal("pr"))]))}function _(){const T=o.addFunction(r+"_isSquare");T.addParam("a","i32"),T.setReturnType("i32");const B=T.getCodeBuilder(),Y=B.i32_const(o.alloc(n.bigInt2BytesLE(e(c).minus(e(3)).divide(4),l))),tt=B.getLocal("a"),$=B.i32_const(o.alloc(l*2)),X=B.i32_const(o.alloc(l*2)),F=B.i32_const(o.alloc(l*2)),M=o.alloc(l*2),W=B.i32_const(M);T.addCode(B.call(r+"_one",W),B.call(r+"_neg",W,W),B.call(r+"_exp",tt,Y,B.i32_const(l),$),B.call(r+"_square",$,X),B.call(r+"_mul",tt,X,X),B.call(r+"_conjugate",X,F),B.call(r+"_mul",F,X,F),B.if(B.call(r+"_eq",F,W),B.ret(B.i32_const(0))),B.ret(B.i32_const(1)))}return P(),I(),b(),w(),R(),G(),C(),N(),f(),L(),S(),k(),J(),j(),Z(),V(),g(),nt(),E(),o.exportFunction(r+"_isZero"),o.exportFunction(r+"_isOne"),o.exportFunction(r+"_zero"),o.exportFunction(r+"_one"),o.exportFunction(r+"_copy"),o.exportFunction(r+"_mul"),o.exportFunction(r+"_mul1"),o.exportFunction(r+"_square"),o.exportFunction(r+"_add"),o.exportFunction(r+"_sub"),o.exportFunction(r+"_neg"),o.exportFunction(r+"_sign"),o.exportFunction(r+"_conjugate"),o.exportFunction(r+"_fromMontgomery"),o.exportFunction(r+"_toMontgomery"),o.exportFunction(r+"_eq"),o.exportFunction(r+"_inverse"),t(o,r),a(o,r+"_exp",l*2,r+"_mul",r+"_square",r+"_copy",r+"_one"),y(),_(),o.exportFunction(r+"_exp"),o.exportFunction(r+"_timesScalar"),o.exportFunction(r+"_batchInverse"),o.exportFunction(r+"_sqrt"),o.exportFunction(r+"_isSquare"),o.exportFunction(r+"_isNegative"),r},hc}var gc,Jf;function Q0(){if(Jf)return gc;Jf=1;const a=au(),t=su();return gc=function(n,i,o,s){if(n.modules[o])return o;const r=n.modules[s].n64*8;n.modules[o]={n64:n.modules[s].n64*3};function u(){const Z=n.addFunction(o+"_add");Z.addParam("x","i32"),Z.addParam("y","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("y"),_=P.i32_add(P.getLocal("y"),P.i32_const(r)),T=P.i32_add(P.getLocal("y"),P.i32_const(2*r)),B=P.getLocal("r"),Y=P.i32_add(P.getLocal("r"),P.i32_const(r)),tt=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_add",V,y,B),P.call(s+"_add",nt,_,Y),P.call(s+"_add",I,T,tt))}function l(){const Z=n.addFunction(o+"_timesScalar");Z.addParam("x","i32"),Z.addParam("scalar","i32"),Z.addParam("scalarLen","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_timesScalar",V,P.getLocal("scalar"),P.getLocal("scalarLen"),y),P.call(s+"_timesScalar",nt,P.getLocal("scalar"),P.getLocal("scalarLen"),_),P.call(s+"_timesScalar",I,P.getLocal("scalar"),P.getLocal("scalarLen"),T))}function c(){const Z=n.addFunction(o+"_sub");Z.addParam("x","i32"),Z.addParam("y","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("y"),_=P.i32_add(P.getLocal("y"),P.i32_const(r)),T=P.i32_add(P.getLocal("y"),P.i32_const(2*r)),B=P.getLocal("r"),Y=P.i32_add(P.getLocal("r"),P.i32_const(r)),tt=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_sub",V,y,B),P.call(s+"_sub",nt,_,Y),P.call(s+"_sub",I,T,tt))}function f(){const Z=n.addFunction(o+"_neg");Z.addParam("x","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_neg",V,y),P.call(s+"_neg",nt,_),P.call(s+"_neg",I,T))}function g(){const Z=n.addFunction(o+"_isNegative");Z.addParam("x","i32"),Z.setReturnType("i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r));Z.addCode(P.if(P.call(s+"_isZero",I),P.if(P.call(s+"_isZero",nt),P.ret(P.call(s+"_isNegative",V)),P.ret(P.call(s+"_isNegative",nt)))),P.ret(P.call(s+"_isNegative",I)))}function L(){const Z=n.addFunction(o+"_mul");Z.addParam("x","i32"),Z.addParam("y","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("y"),_=P.i32_add(P.getLocal("y"),P.i32_const(r)),T=P.i32_add(P.getLocal("y"),P.i32_const(2*r)),B=P.getLocal("r"),Y=P.i32_add(P.getLocal("r"),P.i32_const(r)),tt=P.i32_add(P.getLocal("r"),P.i32_const(2*r)),$=P.i32_const(n.alloc(r)),X=P.i32_const(n.alloc(r)),F=P.i32_const(n.alloc(r)),M=P.i32_const(n.alloc(r)),W=P.i32_const(n.alloc(r)),A=P.i32_const(n.alloc(r)),h=P.i32_const(n.alloc(r)),Q=P.i32_const(n.alloc(r)),p=P.i32_const(n.alloc(r)),d=P.i32_const(n.alloc(r)),m=P.i32_const(n.alloc(r)),v=P.i32_const(n.alloc(r)),et=P.i32_const(n.alloc(r));Z.addCode(P.call(s+"_mul",V,y,$),P.call(s+"_mul",nt,_,X),P.call(s+"_mul",I,T,F),P.call(s+"_add",V,nt,M),P.call(s+"_add",y,_,W),P.call(s+"_add",V,I,A),P.call(s+"_add",y,T,h),P.call(s+"_add",nt,I,Q),P.call(s+"_add",_,T,p),P.call(s+"_add",$,X,d),P.call(s+"_add",$,F,m),P.call(s+"_add",X,F,v),P.call(s+"_mul",Q,p,B),P.call(s+"_sub",B,v,B),P.call(i,B,B),P.call(s+"_add",$,B,B),P.call(s+"_mul",M,W,Y),P.call(s+"_sub",Y,d,Y),P.call(i,F,et),P.call(s+"_add",Y,et,Y),P.call(s+"_mul",A,h,tt),P.call(s+"_sub",tt,m,tt),P.call(s+"_add",tt,X,tt))}function S(){const Z=n.addFunction(o+"_square");Z.addParam("x","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r)),B=P.i32_const(n.alloc(r)),Y=P.i32_const(n.alloc(r)),tt=P.i32_const(n.alloc(r)),$=P.i32_const(n.alloc(r)),X=P.i32_const(n.alloc(r)),F=P.i32_const(n.alloc(r)),M=P.i32_const(n.alloc(r));Z.addCode(P.call(s+"_square",V,B),P.call(s+"_mul",V,nt,Y),P.call(s+"_add",Y,Y,tt),P.call(s+"_sub",V,nt,$),P.call(s+"_add",$,I,$),P.call(s+"_square",$,$),P.call(s+"_mul",nt,I,X),P.call(s+"_add",X,X,F),P.call(s+"_square",I,M),P.call(i,F,y),P.call(s+"_add",B,y,y),P.call(i,M,_),P.call(s+"_add",tt,_,_),P.call(s+"_add",B,M,T),P.call(s+"_sub",F,T,T),P.call(s+"_add",$,T,T),P.call(s+"_add",tt,T,T))}function k(){const Z=n.addFunction(o+"_toMontgomery");Z.addParam("x","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_toMontgomery",V,y),P.call(s+"_toMontgomery",nt,_),P.call(s+"_toMontgomery",I,T))}function E(){const Z=n.addFunction(o+"_fromMontgomery");Z.addParam("x","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_fromMontgomery",V,y),P.call(s+"_fromMontgomery",nt,_),P.call(s+"_fromMontgomery",I,T))}function G(){const Z=n.addFunction(o+"_copy");Z.addParam("x","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r));Z.addCode(P.call(s+"_copy",V,y),P.call(s+"_copy",nt,_),P.call(s+"_copy",I,T))}function C(){const Z=n.addFunction(o+"_zero");Z.addParam("x","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r));Z.addCode(P.call(s+"_zero",V),P.call(s+"_zero",nt),P.call(s+"_zero",I))}function N(){const Z=n.addFunction(o+"_one");Z.addParam("x","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r));Z.addCode(P.call(s+"_one",V),P.call(s+"_zero",nt),P.call(s+"_zero",I))}function J(){const Z=n.addFunction(o+"_eq");Z.addParam("x","i32"),Z.addParam("y","i32"),Z.setReturnType("i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("y"),_=P.i32_add(P.getLocal("y"),P.i32_const(r)),T=P.i32_add(P.getLocal("y"),P.i32_const(2*r));Z.addCode(P.i32_and(P.i32_and(P.call(s+"_eq",V,y),P.call(s+"_eq",nt,_)),P.call(s+"_eq",I,T)))}function j(){const Z=n.addFunction(o+"_isZero");Z.addParam("x","i32"),Z.setReturnType("i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r));Z.addCode(P.i32_and(P.i32_and(P.call(s+"_isZero",V),P.call(s+"_isZero",nt)),P.call(s+"_isZero",I)))}function R(){const Z=n.addFunction(o+"_inverse");Z.addParam("x","i32"),Z.addParam("r","i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r)),y=P.getLocal("r"),_=P.i32_add(P.getLocal("r"),P.i32_const(r)),T=P.i32_add(P.getLocal("r"),P.i32_const(2*r)),B=P.i32_const(n.alloc(r)),Y=P.i32_const(n.alloc(r)),tt=P.i32_const(n.alloc(r)),$=P.i32_const(n.alloc(r)),X=P.i32_const(n.alloc(r)),F=P.i32_const(n.alloc(r)),M=P.i32_const(n.alloc(r)),W=P.i32_const(n.alloc(r)),A=P.i32_const(n.alloc(r)),h=P.i32_const(n.alloc(r)),Q=P.i32_const(n.alloc(r));Z.addCode(P.call(s+"_square",V,B),P.call(s+"_square",nt,Y),P.call(s+"_square",I,tt),P.call(s+"_mul",V,nt,$),P.call(s+"_mul",V,I,X),P.call(s+"_mul",nt,I,F),P.call(i,F,M),P.call(s+"_sub",B,M,M),P.call(i,tt,W),P.call(s+"_sub",W,$,W),P.call(s+"_sub",Y,X,A),P.call(s+"_mul",I,W,h),P.call(s+"_mul",nt,A,Q),P.call(s+"_add",h,Q,h),P.call(i,h,h),P.call(s+"_mul",V,M,Q),P.call(s+"_add",Q,h,h),P.call(s+"_inverse",h,h),P.call(s+"_mul",h,M,y),P.call(s+"_mul",h,W,_),P.call(s+"_mul",h,A,T))}function b(){const Z=n.addFunction(o+"_sign");Z.addParam("x","i32"),Z.addLocal("s","i32"),Z.setReturnType("i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(2*r));Z.addCode(P.setLocal("s",P.call(s+"_sign",I)),P.if(P.getLocal("s"),P.ret(P.getLocal("s"))),P.setLocal("s",P.call(s+"_sign",nt)),P.if(P.getLocal("s"),P.ret(P.getLocal("s"))),P.ret(P.call(s+"_sign",V)))}function w(){const Z=n.addFunction(o+"_isOne");Z.addParam("x","i32"),Z.setReturnType("i32");const P=Z.getCodeBuilder(),V=P.getLocal("x"),nt=P.i32_add(P.getLocal("x"),P.i32_const(r)),I=P.i32_add(P.getLocal("x"),P.i32_const(r*2));Z.addCode(P.ret(P.i32_and(P.i32_and(P.call(s+"_isOne",V),P.call(s+"_isZero",nt)),P.call(s+"_isZero",I))))}return j(),w(),C(),N(),G(),L(),S(),u(),c(),f(),b(),k(),E(),J(),R(),l(),g(),n.exportFunction(o+"_isZero"),n.exportFunction(o+"_isOne"),n.exportFunction(o+"_zero"),n.exportFunction(o+"_one"),n.exportFunction(o+"_copy"),n.exportFunction(o+"_mul"),n.exportFunction(o+"_square"),n.exportFunction(o+"_add"),n.exportFunction(o+"_sub"),n.exportFunction(o+"_neg"),n.exportFunction(o+"_sign"),n.exportFunction(o+"_fromMontgomery"),n.exportFunction(o+"_toMontgomery"),n.exportFunction(o+"_eq"),n.exportFunction(o+"_inverse"),t(n,o),a(n,o+"_exp",r*3,o+"_mul",o+"_square",o+"_copy",o+"_one"),n.exportFunction(o+"_exp"),n.exportFunction(o+"_timesScalar"),n.exportFunction(o+"_batchInverse"),n.exportFunction(o+"_isNegative"),o},gc}var pc,Yf;function U8(){return Yf||(Yf=1,pc=function(t,e,n,i,o,s,r,u){const l=t.addFunction(e);l.addParam("base","i32"),l.addParam("scalar","i32"),l.addParam("scalarLength","i32"),l.addParam("r","i32"),l.addLocal("old0","i32"),l.addLocal("nbits","i32"),l.addLocal("i","i32"),l.addLocal("last","i32"),l.addLocal("cur","i32"),l.addLocal("carry","i32"),l.addLocal("p","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(n));function g(S){return c.i32_and(c.i32_shr_u(c.i32_load(c.i32_add(c.getLocal("scalar"),c.i32_and(c.i32_shr_u(S,c.i32_const(3)),c.i32_const(4294967292)))),c.i32_and(S,c.i32_const(31))),c.i32_const(1))}function L(S){return[...c.i32_store8(c.getLocal("p"),c.i32_const(S)),...c.setLocal("p",c.i32_add(c.getLocal("p"),c.i32_const(1)))]}l.addCode(c.if(c.i32_eqz(c.getLocal("scalarLength")),[...c.call(u,c.getLocal("r")),...c.ret([])]),c.setLocal("nbits",c.i32_shl(c.getLocal("scalarLength"),c.i32_const(3))),c.setLocal("old0",c.i32_load(c.i32_const(0))),c.setLocal("p",c.getLocal("old0")),c.i32_store(c.i32_const(0),c.i32_and(c.i32_add(c.i32_add(c.getLocal("old0"),c.i32_const(32)),c.getLocal("nbits")),c.i32_const(4294967288))),c.setLocal("i",c.i32_const(1)),c.setLocal("last",g(c.i32_const(0))),c.setLocal("carry",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("nbits"))),c.setLocal("cur",g(c.getLocal("i"))),c.if(c.getLocal("last"),c.if(c.getLocal("cur"),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(1)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(255)]),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(255)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(0)),...L(1)])),c.if(c.getLocal("cur"),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...L(0)],[...c.setLocal("last",c.i32_const(1)),...c.setLocal("carry",c.i32_const(0)),...L(0)]),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(1)),...c.setLocal("carry",c.i32_const(0)),...L(0)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(0)),...L(0)]))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))),c.if(c.getLocal("last"),c.if(c.getLocal("carry"),[...L(255),...L(0),...L(1)],[...L(1)]),c.if(c.getLocal("carry"),[...L(0),...L(1)])),c.setLocal("p",c.i32_sub(c.getLocal("p"),c.i32_const(1))),c.call(r,c.getLocal("base"),f),c.call(u,c.getLocal("r")),c.block(c.loop(c.call(o,c.getLocal("r"),c.getLocal("r")),c.setLocal("cur",c.i32_load8_u(c.getLocal("p"))),c.if(c.getLocal("cur"),c.if(c.i32_eq(c.getLocal("cur"),c.i32_const(1)),c.call(i,c.getLocal("r"),f,c.getLocal("r")),c.call(s,c.getLocal("r"),f,c.getLocal("r")))),c.br_if(1,c.i32_eq(c.getLocal("old0"),c.getLocal("p"))),c.setLocal("p",c.i32_sub(c.getLocal("p"),c.i32_const(1))),c.br(0))),c.i32_store(c.i32_const(0),c.getLocal("old0")))}),pc}var Lc,jf;function G8(){return jf||(jf=1,Lc=function(t,e,n,i,o){const r=t.modules[e].n64*8;function u(){const g=t.addFunction(n+"_getChunk");g.addParam("pScalar","i32"),g.addParam("scalarSize","i32"),g.addParam("startBit","i32"),g.addParam("chunkSize","i32"),g.addLocal("bitsToEnd","i32"),g.addLocal("mask","i32"),g.setReturnType("i32");const L=g.getCodeBuilder();g.addCode(L.setLocal("bitsToEnd",L.i32_sub(L.i32_mul(L.getLocal("scalarSize"),L.i32_const(8)),L.getLocal("startBit"))),L.if(L.i32_gt_s(L.getLocal("chunkSize"),L.getLocal("bitsToEnd")),L.setLocal("mask",L.i32_sub(L.i32_shl(L.i32_const(1),L.getLocal("bitsToEnd")),L.i32_const(1))),L.setLocal("mask",L.i32_sub(L.i32_shl(L.i32_const(1),L.getLocal("chunkSize")),L.i32_const(1)))),L.i32_and(L.i32_shr_u(L.i32_load(L.i32_add(L.getLocal("pScalar"),L.i32_shr_u(L.getLocal("startBit"),L.i32_const(3))),0,0),L.i32_and(L.getLocal("startBit"),L.i32_const(7))),L.getLocal("mask")))}function l(){const g=t.addFunction(n+"_chunk");g.addParam("pBases","i32"),g.addParam("pScalars","i32"),g.addParam("scalarSize","i32"),g.addParam("n","i32"),g.addParam("startBit","i32"),g.addParam("chunkSize","i32"),g.addParam("pr","i32"),g.addLocal("nChunks","i32"),g.addLocal("itScalar","i32"),g.addLocal("endScalar","i32"),g.addLocal("itBase","i32"),g.addLocal("i","i32"),g.addLocal("j","i32"),g.addLocal("nTable","i32"),g.addLocal("pTable","i32"),g.addLocal("idx","i32"),g.addLocal("pIdxTable","i32");const L=g.getCodeBuilder();g.addCode(L.if(L.i32_eqz(L.getLocal("n")),[...L.call(e+"_zero",L.getLocal("pr")),...L.ret([])]),L.setLocal("nTable",L.i32_shl(L.i32_const(1),L.getLocal("chunkSize"))),L.setLocal("pTable",L.i32_load(L.i32_const(0))),L.i32_store(L.i32_const(0),L.i32_add(L.getLocal("pTable"),L.i32_mul(L.getLocal("nTable"),L.i32_const(r)))),L.setLocal("j",L.i32_const(0)),L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("j"),L.getLocal("nTable"))),L.call(e+"_zero",L.i32_add(L.getLocal("pTable"),L.i32_mul(L.getLocal("j"),L.i32_const(r)))),L.setLocal("j",L.i32_add(L.getLocal("j"),L.i32_const(1))),L.br(0))),L.setLocal("itBase",L.getLocal("pBases")),L.setLocal("itScalar",L.getLocal("pScalars")),L.setLocal("endScalar",L.i32_add(L.getLocal("pScalars"),L.i32_mul(L.getLocal("n"),L.getLocal("scalarSize")))),L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("itScalar"),L.getLocal("endScalar"))),L.setLocal("idx",L.call(n+"_getChunk",L.getLocal("itScalar"),L.getLocal("scalarSize"),L.getLocal("startBit"),L.getLocal("chunkSize"))),L.if(L.getLocal("idx"),[...L.setLocal("pIdxTable",L.i32_add(L.getLocal("pTable"),L.i32_mul(L.i32_sub(L.getLocal("idx"),L.i32_const(1)),L.i32_const(r)))),...L.call(i,L.getLocal("pIdxTable"),L.getLocal("itBase"),L.getLocal("pIdxTable"))]),L.setLocal("itScalar",L.i32_add(L.getLocal("itScalar"),L.getLocal("scalarSize"))),L.setLocal("itBase",L.i32_add(L.getLocal("itBase"),L.i32_const(o))),L.br(0))),L.call(n+"_reduceTable",L.getLocal("pTable"),L.getLocal("chunkSize")),L.call(e+"_copy",L.getLocal("pTable"),L.getLocal("pr")),L.i32_store(L.i32_const(0),L.getLocal("pTable")))}function c(){const g=t.addFunction(n);g.addParam("pBases","i32"),g.addParam("pScalars","i32"),g.addParam("scalarSize","i32"),g.addParam("n","i32"),g.addParam("pr","i32"),g.addLocal("chunkSize","i32"),g.addLocal("nChunks","i32"),g.addLocal("itScalar","i32"),g.addLocal("endScalar","i32"),g.addLocal("itBase","i32"),g.addLocal("itBit","i32"),g.addLocal("i","i32"),g.addLocal("j","i32"),g.addLocal("nTable","i32"),g.addLocal("pTable","i32"),g.addLocal("idx","i32"),g.addLocal("pIdxTable","i32");const L=g.getCodeBuilder(),S=L.i32_const(t.alloc(r)),k=t.alloc([17,17,17,17,17,17,17,17,17,17,16,16,15,14,13,13,12,11,10,9,8,7,7,6,5,4,3,2,1,1,1,1]);g.addCode(L.call(e+"_zero",L.getLocal("pr")),L.if(L.i32_eqz(L.getLocal("n")),L.ret([])),L.setLocal("chunkSize",L.i32_load8_u(L.i32_clz(L.getLocal("n")),k)),L.setLocal("nChunks",L.i32_add(L.i32_div_u(L.i32_sub(L.i32_shl(L.getLocal("scalarSize"),L.i32_const(3)),L.i32_const(1)),L.getLocal("chunkSize")),L.i32_const(1))),L.setLocal("itBit",L.i32_mul(L.i32_sub(L.getLocal("nChunks"),L.i32_const(1)),L.getLocal("chunkSize"))),L.block(L.loop(L.br_if(1,L.i32_lt_s(L.getLocal("itBit"),L.i32_const(0))),L.if(L.i32_eqz(L.call(e+"_isZero",L.getLocal("pr"))),[...L.setLocal("j",L.i32_const(0)),...L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("j"),L.getLocal("chunkSize"))),L.call(e+"_double",L.getLocal("pr"),L.getLocal("pr")),L.setLocal("j",L.i32_add(L.getLocal("j"),L.i32_const(1))),L.br(0)))]),L.call(n+"_chunk",L.getLocal("pBases"),L.getLocal("pScalars"),L.getLocal("scalarSize"),L.getLocal("n"),L.getLocal("itBit"),L.getLocal("chunkSize"),S),L.call(e+"_add",L.getLocal("pr"),S,L.getLocal("pr")),L.setLocal("itBit",L.i32_sub(L.getLocal("itBit"),L.getLocal("chunkSize"))),L.br(0))))}function f(){const g=t.addFunction(n+"_reduceTable");g.addParam("pTable","i32"),g.addParam("p","i32"),g.addLocal("half","i32"),g.addLocal("it1","i32"),g.addLocal("it2","i32"),g.addLocal("pAcc","i32");const L=g.getCodeBuilder();g.addCode(L.if(L.i32_eq(L.getLocal("p"),L.i32_const(1)),L.ret([])),L.setLocal("half",L.i32_shl(L.i32_const(1),L.i32_sub(L.getLocal("p"),L.i32_const(1)))),L.setLocal("it1",L.getLocal("pTable")),L.setLocal("it2",L.i32_add(L.getLocal("pTable"),L.i32_mul(L.getLocal("half"),L.i32_const(r)))),L.setLocal("pAcc",L.i32_sub(L.getLocal("it2"),L.i32_const(r))),L.block(L.loop(L.br_if(1,L.i32_eq(L.getLocal("it1"),L.getLocal("pAcc"))),L.call(e+"_add",L.getLocal("it1"),L.getLocal("it2"),L.getLocal("it1")),L.call(e+"_add",L.getLocal("pAcc"),L.getLocal("it2"),L.getLocal("pAcc")),L.setLocal("it1",L.i32_add(L.getLocal("it1"),L.i32_const(r))),L.setLocal("it2",L.i32_add(L.getLocal("it2"),L.i32_const(r))),L.br(0))),L.call(n+"_reduceTable",L.getLocal("pTable"),L.i32_sub(L.getLocal("p"),L.i32_const(1))),L.setLocal("p",L.i32_sub(L.getLocal("p"),L.i32_const(1))),L.block(L.loop(L.br_if(1,L.i32_eqz(L.getLocal("p"))),L.call(e+"_double",L.getLocal("pAcc"),L.getLocal("pAcc")),L.setLocal("p",L.i32_sub(L.getLocal("p"),L.i32_const(1))),L.br(0))),L.call(e+"_add",L.getLocal("pTable"),L.getLocal("pAcc"),L.getLocal("pTable")))}u(),f(),l(),c(),t.exportFunction(n),t.exportFunction(n+"_chunk")}),Lc}var wc,Vf;function K0(){if(Vf)return wc;Vf=1;const a=U8(),t=T0(),e=G8();return wc=function(i,o,s,r){const u=i.modules[s].n64,l=u*8;if(i.modules[o])return o;i.modules[o]={n64:u*3};function c(){const p=i.addFunction(o+"_isZero");p.addParam("p1","i32"),p.setReturnType("i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_isZero",d.i32_add(d.getLocal("p1"),d.i32_const(l*2))))}function f(){const p=i.addFunction(o+"_isZeroAffine");p.addParam("p1","i32"),p.setReturnType("i32");const d=p.getCodeBuilder();p.addCode(d.i32_and(d.call(s+"_isZero",d.getLocal("p1")),d.call(s+"_isZero",d.i32_add(d.getLocal("p1"),d.i32_const(l)))))}function g(){const p=i.addFunction(o+"_copy");p.addParam("ps","i32"),p.addParam("pd","i32");const d=p.getCodeBuilder();for(let m=0;m<u*3;m++)p.addCode(d.i64_store(d.getLocal("pd"),m*8,d.i64_load(d.getLocal("ps"),m*8)))}function L(){const p=i.addFunction(o+"_copyAffine");p.addParam("ps","i32"),p.addParam("pd","i32");const d=p.getCodeBuilder();for(let m=0;m<u*2;m++)p.addCode(d.i64_store(d.getLocal("pd"),m*8,d.i64_load(d.getLocal("ps"),m*8)))}function S(){const p=i.addFunction(o+"_zero");p.addParam("pr","i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_zero",d.getLocal("pr"))),p.addCode(d.call(s+"_one",d.i32_add(d.getLocal("pr"),d.i32_const(l)))),p.addCode(d.call(s+"_zero",d.i32_add(d.getLocal("pr"),d.i32_const(l*2))))}function k(){const p=i.addFunction(o+"_zeroAffine");p.addParam("pr","i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_zero",d.getLocal("pr"))),p.addCode(d.call(s+"_zero",d.i32_add(d.getLocal("pr"),d.i32_const(l))))}function E(){const p=i.addFunction(o+"_eq");p.addParam("p1","i32"),p.addParam("p2","i32"),p.setReturnType("i32"),p.addLocal("z1","i32"),p.addLocal("z2","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l));p.addCode(d.setLocal("z1",d.i32_add(d.getLocal("p1"),d.i32_const(l*2))));const et=d.getLocal("z1"),ct=d.getLocal("p2"),dt=d.i32_add(d.getLocal("p2"),d.i32_const(l));p.addCode(d.setLocal("z2",d.i32_add(d.getLocal("p2"),d.i32_const(l*2))));const ft=d.getLocal("z2"),Ft=d.i32_const(i.alloc(l)),rt=d.i32_const(i.alloc(l)),z=d.i32_const(i.alloc(l)),wt=d.i32_const(i.alloc(l)),yt=d.i32_const(i.alloc(l)),It=d.i32_const(i.alloc(l)),Ut=d.i32_const(i.alloc(l)),Dt=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),d.ret(d.call(o+"_isZero",d.getLocal("p2")))),d.if(d.call(o+"_isZero",d.getLocal("p2")),d.ret(d.i32_const(0))),d.if(d.call(s+"_isOne",et),d.ret(d.call(o+"_eqMixed",d.getLocal("p2"),d.getLocal("p1")))),d.if(d.call(s+"_isOne",ft),d.ret(d.call(o+"_eqMixed",d.getLocal("p1"),d.getLocal("p2")))),d.call(s+"_square",et,Ft),d.call(s+"_square",ft,rt),d.call(s+"_mul",m,rt,z),d.call(s+"_mul",ct,Ft,wt),d.call(s+"_mul",et,Ft,yt),d.call(s+"_mul",ft,rt,It),d.call(s+"_mul",v,It,Ut),d.call(s+"_mul",dt,yt,Dt),d.if(d.call(s+"_eq",z,wt),d.if(d.call(s+"_eq",Ut,Dt),d.ret(d.i32_const(1)))),d.ret(d.i32_const(0)))}function G(){const p=i.addFunction(o+"_eqMixed");p.addParam("p1","i32"),p.addParam("p2","i32"),p.setReturnType("i32"),p.addLocal("z1","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l));p.addCode(d.setLocal("z1",d.i32_add(d.getLocal("p1"),d.i32_const(l*2))));const et=d.getLocal("z1"),ct=d.getLocal("p2"),dt=d.i32_add(d.getLocal("p2"),d.i32_const(l)),ft=d.i32_const(i.alloc(l)),Ft=d.i32_const(i.alloc(l)),rt=d.i32_const(i.alloc(l)),z=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),d.ret(d.call(o+"_isZeroAffine",d.getLocal("p2")))),d.if(d.call(o+"_isZeroAffine",d.getLocal("p2")),d.ret(d.i32_const(0))),d.if(d.call(s+"_isOne",et),d.ret(d.call(o+"_eqAffine",d.getLocal("p1"),d.getLocal("p2")))),d.call(s+"_square",et,ft),d.call(s+"_mul",ct,ft,Ft),d.call(s+"_mul",et,ft,rt),d.call(s+"_mul",dt,rt,z),d.if(d.call(s+"_eq",m,Ft),d.if(d.call(s+"_eq",v,z),d.ret(d.i32_const(1)))),d.ret(d.i32_const(0)))}function C(){const p=i.addFunction(o+"_double");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.i32_add(d.getLocal("p1"),d.i32_const(l*2)),ct=d.getLocal("pr"),dt=d.i32_add(d.getLocal("pr"),d.i32_const(l)),ft=d.i32_add(d.getLocal("pr"),d.i32_const(l*2)),Ft=d.i32_const(i.alloc(l)),rt=d.i32_const(i.alloc(l)),z=d.i32_const(i.alloc(l)),wt=d.i32_const(i.alloc(l)),yt=d.i32_const(i.alloc(l)),It=d.i32_const(i.alloc(l)),Ut=d.i32_const(i.alloc(l)),Dt=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),[...d.call(o+"_copy",d.getLocal("p1"),d.getLocal("pr")),...d.ret([])]),d.if(d.call(s+"_isOne",et),[...d.ret(d.call(o+"_doubleAffine",d.getLocal("p1"),d.getLocal("pr"))),...d.ret([])]),d.call(s+"_square",m,Ft),d.call(s+"_square",v,rt),d.call(s+"_square",rt,z),d.call(s+"_add",m,rt,wt),d.call(s+"_square",wt,wt),d.call(s+"_sub",wt,Ft,wt),d.call(s+"_sub",wt,z,wt),d.call(s+"_add",wt,wt,wt),d.call(s+"_add",Ft,Ft,yt),d.call(s+"_add",yt,Ft,yt),d.call(s+"_square",yt,It),d.call(s+"_mul",v,et,Ut),d.call(s+"_add",wt,wt,ct),d.call(s+"_sub",It,ct,ct),d.call(s+"_add",z,z,Dt),d.call(s+"_add",Dt,Dt,Dt),d.call(s+"_add",Dt,Dt,Dt),d.call(s+"_sub",wt,ct,dt),d.call(s+"_mul",dt,yt,dt),d.call(s+"_sub",dt,Dt,dt),d.call(s+"_add",Ut,Ut,ft))}function N(){const p=i.addFunction(o+"_doubleAffine");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.getLocal("pr"),ct=d.i32_add(d.getLocal("pr"),d.i32_const(l)),dt=d.i32_add(d.getLocal("pr"),d.i32_const(l*2)),ft=d.i32_const(i.alloc(l)),Ft=d.i32_const(i.alloc(l)),rt=d.i32_const(i.alloc(l)),z=d.i32_const(i.alloc(l)),wt=d.i32_const(i.alloc(l)),yt=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZeroAffine",d.getLocal("p1")),[...d.call(o+"_toJacobian",d.getLocal("p1"),d.getLocal("pr")),...d.ret([])]),d.call(s+"_square",m,ft),d.call(s+"_square",v,Ft),d.call(s+"_square",Ft,rt),d.call(s+"_add",m,Ft,z),d.call(s+"_square",z,z),d.call(s+"_sub",z,ft,z),d.call(s+"_sub",z,rt,z),d.call(s+"_add",z,z,z),d.call(s+"_add",ft,ft,wt),d.call(s+"_add",wt,ft,wt),d.call(s+"_add",v,v,dt),d.call(s+"_square",wt,et),d.call(s+"_sub",et,z,et),d.call(s+"_sub",et,z,et),d.call(s+"_add",rt,rt,yt),d.call(s+"_add",yt,yt,yt),d.call(s+"_add",yt,yt,yt),d.call(s+"_sub",z,et,ct),d.call(s+"_mul",ct,wt,ct),d.call(s+"_sub",ct,yt,ct))}function J(){const p=i.addFunction(o+"_eqAffine");p.addParam("p1","i32"),p.addParam("p2","i32"),p.setReturnType("i32"),p.addLocal("z1","i32");const d=p.getCodeBuilder();p.addCode(d.ret(d.i32_and(d.call(s+"_eq",d.getLocal("p1"),d.getLocal("p2")),d.call(s+"_eq",d.i32_add(d.getLocal("p1"),d.i32_const(l)),d.i32_add(d.getLocal("p2"),d.i32_const(l))))))}function j(){const p=i.addFunction(o+"_toMontgomery");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_toMontgomery",d.getLocal("p1"),d.getLocal("pr")));for(let m=1;m<3;m++)p.addCode(d.call(s+"_toMontgomery",d.i32_add(d.getLocal("p1"),d.i32_const(m*l)),d.i32_add(d.getLocal("pr"),d.i32_const(m*l))))}function R(){const p=i.addFunction(o+"_toMontgomeryAffine");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_toMontgomery",d.getLocal("p1"),d.getLocal("pr")));for(let m=1;m<2;m++)p.addCode(d.call(s+"_toMontgomery",d.i32_add(d.getLocal("p1"),d.i32_const(m*l)),d.i32_add(d.getLocal("pr"),d.i32_const(m*l))))}function b(){const p=i.addFunction(o+"_fromMontgomery");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_fromMontgomery",d.getLocal("p1"),d.getLocal("pr")));for(let m=1;m<3;m++)p.addCode(d.call(s+"_fromMontgomery",d.i32_add(d.getLocal("p1"),d.i32_const(m*l)),d.i32_add(d.getLocal("pr"),d.i32_const(m*l))))}function w(){const p=i.addFunction(o+"_fromMontgomeryAffine");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder();p.addCode(d.call(s+"_fromMontgomery",d.getLocal("p1"),d.getLocal("pr")));for(let m=1;m<2;m++)p.addCode(d.call(s+"_fromMontgomery",d.i32_add(d.getLocal("p1"),d.i32_const(m*l)),d.i32_add(d.getLocal("pr"),d.i32_const(m*l))))}function Z(){const p=i.addFunction(o+"_add");p.addParam("p1","i32"),p.addParam("p2","i32"),p.addParam("pr","i32"),p.addLocal("z1","i32"),p.addLocal("z2","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l));p.addCode(d.setLocal("z1",d.i32_add(d.getLocal("p1"),d.i32_const(l*2))));const et=d.getLocal("z1"),ct=d.getLocal("p2"),dt=d.i32_add(d.getLocal("p2"),d.i32_const(l));p.addCode(d.setLocal("z2",d.i32_add(d.getLocal("p2"),d.i32_const(l*2))));const ft=d.getLocal("z2"),Ft=d.getLocal("pr"),rt=d.i32_add(d.getLocal("pr"),d.i32_const(l)),z=d.i32_add(d.getLocal("pr"),d.i32_const(l*2)),wt=d.i32_const(i.alloc(l)),yt=d.i32_const(i.alloc(l)),It=d.i32_const(i.alloc(l)),Ut=d.i32_const(i.alloc(l)),Dt=d.i32_const(i.alloc(l)),Mt=d.i32_const(i.alloc(l)),Qt=d.i32_const(i.alloc(l)),it=d.i32_const(i.alloc(l)),K=d.i32_const(i.alloc(l)),U=d.i32_const(i.alloc(l)),D=d.i32_const(i.alloc(l)),ot=d.i32_const(i.alloc(l)),st=d.i32_const(i.alloc(l)),lt=d.i32_const(i.alloc(l)),at=d.i32_const(i.alloc(l)),x=d.i32_const(i.alloc(l)),q=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),[...d.call(o+"_copy",d.getLocal("p2"),d.getLocal("pr")),...d.ret([])]),d.if(d.call(o+"_isZero",d.getLocal("p2")),[...d.call(o+"_copy",d.getLocal("p1"),d.getLocal("pr")),...d.ret([])]),d.if(d.call(s+"_isOne",et),[...d.call(o+"_addMixed",ct,m,Ft),...d.ret([])]),d.if(d.call(s+"_isOne",ft),[...d.call(o+"_addMixed",m,ct,Ft),...d.ret([])]),d.call(s+"_square",et,wt),d.call(s+"_square",ft,yt),d.call(s+"_mul",m,yt,It),d.call(s+"_mul",ct,wt,Ut),d.call(s+"_mul",et,wt,Dt),d.call(s+"_mul",ft,yt,Mt),d.call(s+"_mul",v,Mt,Qt),d.call(s+"_mul",dt,Dt,it),d.if(d.call(s+"_eq",It,Ut),d.if(d.call(s+"_eq",Qt,it),[...d.call(o+"_double",d.getLocal("p1"),d.getLocal("pr")),...d.ret([])])),d.call(s+"_sub",Ut,It,K),d.call(s+"_sub",it,Qt,U),d.call(s+"_add",K,K,D),d.call(s+"_square",D,D),d.call(s+"_mul",K,D,ot),d.call(s+"_add",U,U,st),d.call(s+"_mul",It,D,at),d.call(s+"_square",st,lt),d.call(s+"_add",at,at,x),d.call(s+"_sub",lt,ot,Ft),d.call(s+"_sub",Ft,x,Ft),d.call(s+"_mul",Qt,ot,q),d.call(s+"_add",q,q,q),d.call(s+"_sub",at,Ft,rt),d.call(s+"_mul",rt,st,rt),d.call(s+"_sub",rt,q,rt),d.call(s+"_add",et,ft,z),d.call(s+"_square",z,z),d.call(s+"_sub",z,wt,z),d.call(s+"_sub",z,yt,z),d.call(s+"_mul",z,K,z))}function P(){const p=i.addFunction(o+"_addMixed");p.addParam("p1","i32"),p.addParam("p2","i32"),p.addParam("pr","i32"),p.addLocal("z1","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l));p.addCode(d.setLocal("z1",d.i32_add(d.getLocal("p1"),d.i32_const(l*2))));const et=d.getLocal("z1"),ct=d.getLocal("p2"),dt=d.i32_add(d.getLocal("p2"),d.i32_const(l)),ft=d.getLocal("pr"),Ft=d.i32_add(d.getLocal("pr"),d.i32_const(l)),rt=d.i32_add(d.getLocal("pr"),d.i32_const(l*2)),z=d.i32_const(i.alloc(l)),wt=d.i32_const(i.alloc(l)),yt=d.i32_const(i.alloc(l)),It=d.i32_const(i.alloc(l)),Ut=d.i32_const(i.alloc(l)),Dt=d.i32_const(i.alloc(l)),Mt=d.i32_const(i.alloc(l)),Qt=d.i32_const(i.alloc(l)),it=d.i32_const(i.alloc(l)),K=d.i32_const(i.alloc(l)),U=d.i32_const(i.alloc(l)),D=d.i32_const(i.alloc(l)),ot=d.i32_const(i.alloc(l)),st=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),[...d.call(o+"_copyAffine",d.getLocal("p2"),d.getLocal("pr")),...d.call(s+"_one",d.i32_add(d.getLocal("pr"),d.i32_const(l*2))),...d.ret([])]),d.if(d.call(o+"_isZeroAffine",d.getLocal("p2")),[...d.call(o+"_copy",d.getLocal("p1"),d.getLocal("pr")),...d.ret([])]),d.if(d.call(s+"_isOne",et),[...d.call(o+"_addAffine",m,ct,ft),...d.ret([])]),d.call(s+"_square",et,z),d.call(s+"_mul",ct,z,wt),d.call(s+"_mul",et,z,yt),d.call(s+"_mul",dt,yt,It),d.if(d.call(s+"_eq",m,wt),d.if(d.call(s+"_eq",v,It),[...d.call(o+"_doubleAffine",d.getLocal("p2"),d.getLocal("pr")),...d.ret([])])),d.call(s+"_sub",wt,m,Ut),d.call(s+"_sub",It,v,Mt),d.call(s+"_square",Ut,Dt),d.call(s+"_add",Dt,Dt,Qt),d.call(s+"_add",Qt,Qt,Qt),d.call(s+"_mul",Ut,Qt,it),d.call(s+"_add",Mt,Mt,K),d.call(s+"_mul",m,Qt,D),d.call(s+"_square",K,U),d.call(s+"_add",D,D,ot),d.call(s+"_sub",U,it,ft),d.call(s+"_sub",ft,ot,ft),d.call(s+"_mul",v,it,st),d.call(s+"_add",st,st,st),d.call(s+"_sub",D,ft,Ft),d.call(s+"_mul",Ft,K,Ft),d.call(s+"_sub",Ft,st,Ft),d.call(s+"_add",et,Ut,rt),d.call(s+"_square",rt,rt),d.call(s+"_sub",rt,z,rt),d.call(s+"_sub",rt,Dt,rt))}function V(){const p=i.addFunction(o+"_addAffine");p.addParam("p1","i32"),p.addParam("p2","i32"),p.addParam("pr","i32"),p.addLocal("z1","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l));p.addCode(d.setLocal("z1",d.i32_add(d.getLocal("p1"),d.i32_const(l*2))));const et=d.getLocal("p2"),ct=d.i32_add(d.getLocal("p2"),d.i32_const(l)),dt=d.getLocal("pr"),ft=d.i32_add(d.getLocal("pr"),d.i32_const(l)),Ft=d.i32_add(d.getLocal("pr"),d.i32_const(l*2)),rt=d.i32_const(i.alloc(l)),z=d.i32_const(i.alloc(l)),wt=d.i32_const(i.alloc(l)),yt=d.i32_const(i.alloc(l)),It=d.i32_const(i.alloc(l)),Ut=d.i32_const(i.alloc(l)),Dt=d.i32_const(i.alloc(l)),Mt=d.i32_const(i.alloc(l)),Qt=d.i32_const(i.alloc(l)),it=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZeroAffine",d.getLocal("p1")),[...d.call(o+"_copyAffine",d.getLocal("p2"),d.getLocal("pr")),...d.call(s+"_one",d.i32_add(d.getLocal("pr"),d.i32_const(l*2))),...d.ret([])]),d.if(d.call(o+"_isZeroAffine",d.getLocal("p2")),[...d.call(o+"_copyAffine",d.getLocal("p1"),d.getLocal("pr")),...d.call(s+"_one",d.i32_add(d.getLocal("pr"),d.i32_const(l*2))),...d.ret([])]),d.if(d.call(s+"_eq",m,et),d.if(d.call(s+"_eq",v,ct),[...d.call(o+"_doubleAffine",d.getLocal("p2"),d.getLocal("pr")),...d.ret([])])),d.call(s+"_sub",et,m,rt),d.call(s+"_sub",ct,v,wt),d.call(s+"_square",rt,z),d.call(s+"_add",z,z,yt),d.call(s+"_add",yt,yt,yt),d.call(s+"_mul",rt,yt,It),d.call(s+"_add",wt,wt,Ut),d.call(s+"_mul",m,yt,Mt),d.call(s+"_square",Ut,Dt),d.call(s+"_add",Mt,Mt,Qt),d.call(s+"_sub",Dt,It,dt),d.call(s+"_sub",dt,Qt,dt),d.call(s+"_mul",v,It,it),d.call(s+"_add",it,it,it),d.call(s+"_sub",Mt,dt,ft),d.call(s+"_mul",ft,Ut,ft),d.call(s+"_sub",ft,it,ft),d.call(s+"_add",rt,rt,Ft))}function nt(){const p=i.addFunction(o+"_neg");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.i32_add(d.getLocal("p1"),d.i32_const(l*2)),ct=d.getLocal("pr"),dt=d.i32_add(d.getLocal("pr"),d.i32_const(l)),ft=d.i32_add(d.getLocal("pr"),d.i32_const(l*2));p.addCode(d.call(s+"_copy",m,ct),d.call(s+"_neg",v,dt),d.call(s+"_copy",et,ft))}function I(){const p=i.addFunction(o+"_negAffine");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.getLocal("pr"),ct=d.i32_add(d.getLocal("pr"),d.i32_const(l));p.addCode(d.call(s+"_copy",m,et),d.call(s+"_neg",v,ct))}function y(){const p=i.addFunction(o+"_sub");p.addParam("p1","i32"),p.addParam("p2","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.i32_const(i.alloc(l*3));p.addCode(d.call(o+"_neg",d.getLocal("p2"),m),d.call(o+"_add",d.getLocal("p1"),m,d.getLocal("pr")))}function _(){const p=i.addFunction(o+"_subMixed");p.addParam("p1","i32"),p.addParam("p2","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.i32_const(i.alloc(l*3));p.addCode(d.call(o+"_negAffine",d.getLocal("p2"),m),d.call(o+"_addMixed",d.getLocal("p1"),m,d.getLocal("pr")))}function T(){const p=i.addFunction(o+"_subAffine");p.addParam("p1","i32"),p.addParam("p2","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.i32_const(i.alloc(l*3));p.addCode(d.call(o+"_negAffine",d.getLocal("p2"),m),d.call(o+"_addAffine",d.getLocal("p1"),m,d.getLocal("pr")))}function B(){const p=i.addFunction(o+"_normalize");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.i32_add(d.getLocal("p1"),d.i32_const(l*2)),ct=d.getLocal("pr"),dt=d.i32_add(d.getLocal("pr"),d.i32_const(l)),ft=d.i32_add(d.getLocal("pr"),d.i32_const(l*2)),Ft=d.i32_const(i.alloc(l)),rt=d.i32_const(i.alloc(l)),z=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),d.call(o+"_zero",d.getLocal("pr")),[...d.call(s+"_inverse",et,Ft),...d.call(s+"_square",Ft,rt),...d.call(s+"_mul",Ft,rt,z),...d.call(s+"_mul",m,rt,ct),...d.call(s+"_mul",v,z,dt),...d.call(s+"_one",ft)]))}function Y(){const p=i.addFunction(o+"_toAffine");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.i32_add(d.getLocal("p1"),d.i32_const(l*2)),ct=d.getLocal("pr"),dt=d.i32_add(d.getLocal("pr"),d.i32_const(l)),ft=d.i32_const(i.alloc(l)),Ft=d.i32_const(i.alloc(l)),rt=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("p1")),[...d.call(s+"_zero",ct),...d.call(s+"_zero",dt)],[...d.call(s+"_inverse",et,ft),...d.call(s+"_square",ft,Ft),...d.call(s+"_mul",ft,Ft,rt),...d.call(s+"_mul",m,Ft,ct),...d.call(s+"_mul",v,rt,dt)]))}function tt(){const p=i.addFunction(o+"_toJacobian");p.addParam("p1","i32"),p.addParam("pr","i32");const d=p.getCodeBuilder(),m=d.getLocal("p1"),v=d.i32_add(d.getLocal("p1"),d.i32_const(l)),et=d.getLocal("pr"),ct=d.i32_add(d.getLocal("pr"),d.i32_const(l)),dt=d.i32_add(d.getLocal("pr"),d.i32_const(l*2));p.addCode(d.if(d.call(o+"_isZeroAffine",d.getLocal("p1")),d.call(o+"_zero",d.getLocal("pr")),[...d.call(s+"_one",dt),...d.call(s+"_copy",v,ct),...d.call(s+"_copy",m,et)]))}function $(){const p=i.addFunction(o+"_batchToAffine");p.addParam("pIn","i32"),p.addParam("n","i32"),p.addParam("pOut","i32"),p.addLocal("pAux","i32"),p.addLocal("itIn","i32"),p.addLocal("itAux","i32"),p.addLocal("itOut","i32"),p.addLocal("i","i32");const d=p.getCodeBuilder(),m=d.i32_const(i.alloc(l));p.addCode(d.setLocal("pAux",d.i32_load(d.i32_const(0))),d.i32_store(d.i32_const(0),d.i32_add(d.getLocal("pAux"),d.i32_mul(d.getLocal("n"),d.i32_const(l)))),d.call(s+"_batchInverse",d.i32_add(d.getLocal("pIn"),d.i32_const(l*2)),d.i32_const(l*3),d.getLocal("n"),d.getLocal("pAux"),d.i32_const(l)),d.setLocal("itIn",d.getLocal("pIn")),d.setLocal("itAux",d.getLocal("pAux")),d.setLocal("itOut",d.getLocal("pOut")),d.setLocal("i",d.i32_const(0)),d.block(d.loop(d.br_if(1,d.i32_eq(d.getLocal("i"),d.getLocal("n"))),d.if(d.call(s+"_isZero",d.getLocal("itAux")),[...d.call(s+"_zero",d.getLocal("itOut")),...d.call(s+"_zero",d.i32_add(d.getLocal("itOut"),d.i32_const(l)))],[...d.call(s+"_mul",d.getLocal("itAux"),d.i32_add(d.getLocal("itIn"),d.i32_const(l)),m),...d.call(s+"_square",d.getLocal("itAux"),d.getLocal("itAux")),...d.call(s+"_mul",d.getLocal("itAux"),d.getLocal("itIn"),d.getLocal("itOut")),...d.call(s+"_mul",d.getLocal("itAux"),m,d.i32_add(d.getLocal("itOut"),d.i32_const(l)))]),d.setLocal("itIn",d.i32_add(d.getLocal("itIn"),d.i32_const(l*3))),d.setLocal("itOut",d.i32_add(d.getLocal("itOut"),d.i32_const(l*2))),d.setLocal("itAux",d.i32_add(d.getLocal("itAux"),d.i32_const(l))),d.setLocal("i",d.i32_add(d.getLocal("i"),d.i32_const(1))),d.br(0))),d.i32_store(d.i32_const(0),d.getLocal("pAux")))}function X(){const p=i.addFunction(o+"__reverseBytes");p.addParam("pIn","i32"),p.addParam("n","i32"),p.addParam("pOut","i32"),p.addLocal("itOut","i32"),p.addLocal("itIn","i32");const d=p.getCodeBuilder();p.addCode(d.setLocal("itOut",d.i32_sub(d.i32_add(d.getLocal("pOut"),d.getLocal("n")),d.i32_const(1))),d.setLocal("itIn",d.getLocal("pIn")),d.block(d.loop(d.br_if(1,d.i32_lt_s(d.getLocal("itOut"),d.getLocal("pOut"))),d.i32_store8(d.getLocal("itOut"),d.i32_load8_u(d.getLocal("itIn"))),d.setLocal("itOut",d.i32_sub(d.getLocal("itOut"),d.i32_const(1))),d.setLocal("itIn",d.i32_add(d.getLocal("itIn"),d.i32_const(1))),d.br(0))))}function F(){const p=i.addFunction(o+"_LEMtoC");p.addParam("pIn","i32"),p.addParam("pOut","i32");const d=p.getCodeBuilder(),m=d.i32_const(i.alloc(l));p.addCode(d.if(d.call(o+"_isZero",d.getLocal("pIn")),[...d.call(s+"_zero",d.getLocal("pOut")),...d.i32_store8(d.getLocal("pOut"),d.i32_const(64)),...d.ret([])]),d.call(s+"_fromMontgomery",d.getLocal("pIn"),m),d.call(o+"__reverseBytes",m,d.i32_const(l),d.getLocal("pOut")),d.if(d.i32_eq(d.call(s+"_sign",d.i32_add(d.getLocal("pIn"),d.i32_const(l))),d.i32_const(-1)),d.i32_store8(d.getLocal("pOut"),d.i32_or(d.i32_load8_u(d.getLocal("pOut")),d.i32_const(128)))))}function M(){const p=i.addFunction(o+"_LEMtoU");p.addParam("pIn","i32"),p.addParam("pOut","i32");const d=p.getCodeBuilder(),m=i.alloc(l*2),v=d.i32_const(m),et=d.i32_const(m),ct=d.i32_const(m+l);p.addCode(d.if(d.call(o+"_isZeroAffine",d.getLocal("pIn")),[...d.call(o+"_zeroAffine",d.getLocal("pOut")),...d.i32_store8(d.getLocal("pOut"),d.i32_const(64)),...d.ret([])]),d.call(o+"_fromMontgomeryAffine",d.getLocal("pIn"),v),d.call(o+"__reverseBytes",et,d.i32_const(l),d.getLocal("pOut")),d.call(o+"__reverseBytes",ct,d.i32_const(l),d.i32_add(d.getLocal("pOut"),d.i32_const(l))))}function W(){const p=i.addFunction(o+"_UtoLEM");p.addParam("pIn","i32"),p.addParam("pOut","i32");const d=p.getCodeBuilder(),m=i.alloc(l*2),v=d.i32_const(m),et=d.i32_const(m),ct=d.i32_const(m+l);p.addCode(d.if(d.i32_and(d.i32_load8_u(d.getLocal("pIn")),d.i32_const(64)),[...d.call(o+"_zeroAffine",d.getLocal("pOut")),...d.ret([])]),d.call(o+"__reverseBytes",d.getLocal("pIn"),d.i32_const(l),et),d.call(o+"__reverseBytes",d.i32_add(d.getLocal("pIn"),d.i32_const(l)),d.i32_const(l),ct),d.call(o+"_toMontgomeryAffine",v,d.getLocal("pOut")))}function A(){const p=i.addFunction(o+"_CtoLEM");p.addParam("pIn","i32"),p.addParam("pOut","i32"),p.addLocal("firstByte","i32"),p.addLocal("greatest","i32");const d=p.getCodeBuilder(),m=i.alloc(l*2),v=d.i32_const(m),et=d.i32_const(m+l);p.addCode(d.setLocal("firstByte",d.i32_load8_u(d.getLocal("pIn"))),d.if(d.i32_and(d.getLocal("firstByte"),d.i32_const(64)),[...d.call(o+"_zeroAffine",d.getLocal("pOut")),...d.ret([])]),d.setLocal("greatest",d.i32_and(d.getLocal("firstByte"),d.i32_const(128))),d.call(s+"_copy",d.getLocal("pIn"),et),d.i32_store8(et,d.i32_and(d.getLocal("firstByte"),d.i32_const(63))),d.call(o+"__reverseBytes",et,d.i32_const(l),v),d.call(s+"_toMontgomery",v,d.getLocal("pOut")),d.call(s+"_square",d.getLocal("pOut"),et),d.call(s+"_mul",d.getLocal("pOut"),et,et),d.call(s+"_add",et,d.i32_const(r),et),d.call(s+"_sqrt",et,et),d.call(s+"_neg",et,v),d.if(d.i32_eq(d.call(s+"_sign",et),d.i32_const(-1)),d.if(d.getLocal("greatest"),d.call(s+"_copy",et,d.i32_add(d.getLocal("pOut"),d.i32_const(l))),d.call(s+"_neg",et,d.i32_add(d.getLocal("pOut"),d.i32_const(l)))),d.if(d.getLocal("greatest"),d.call(s+"_neg",et,d.i32_add(d.getLocal("pOut"),d.i32_const(l))),d.call(s+"_copy",et,d.i32_add(d.getLocal("pOut"),d.i32_const(l))))))}function h(){const p=i.addFunction(o+"_inCurveAffine");p.addParam("pIn","i32"),p.setReturnType("i32");const d=p.getCodeBuilder(),m=d.getLocal("pIn"),v=d.i32_add(d.getLocal("pIn"),d.i32_const(l)),et=d.i32_const(i.alloc(l)),ct=d.i32_const(i.alloc(l));p.addCode(d.call(s+"_square",v,et),d.call(s+"_square",m,ct),d.call(s+"_mul",m,ct,ct),d.call(s+"_add",ct,d.i32_const(r),ct),d.ret(d.call(s+"_eq",et,ct)))}function Q(){const p=i.addFunction(o+"_inCurve");p.addParam("pIn","i32"),p.setReturnType("i32");const d=p.getCodeBuilder(),m=d.i32_const(i.alloc(l*2));p.addCode(d.call(o+"_toAffine",d.getLocal("pIn"),m),d.ret(d.call(o+"_inCurveAffine",m)))}return f(),c(),k(),S(),L(),g(),tt(),J(),G(),E(),N(),C(),V(),P(),Z(),I(),nt(),T(),_(),y(),w(),b(),R(),j(),Y(),h(),Q(),$(),B(),X(),M(),F(),W(),A(),t(i,o+"_batchLEMtoU",o+"_LEMtoU",l*2,l*2),t(i,o+"_batchLEMtoC",o+"_LEMtoC",l*2,l),t(i,o+"_batchUtoLEM",o+"_UtoLEM",l*2,l*2),t(i,o+"_batchCtoLEM",o+"_CtoLEM",l,l*2,!0),t(i,o+"_batchToJacobian",o+"_toJacobian",l*2,l*3,!0),e(i,o,o+"_multiexp",o+"_add",l*3),e(i,o,o+"_multiexpAffine",o+"_addMixed",l*2),a(i,o+"_timesScalar",l*3,o+"_add",o+"_double",o+"_sub",o+"_copy",o+"_zero"),a(i,o+"_timesScalarAffine",l*2,o+"_addMixed",o+"_double",o+"_subMixed",o+"_copyAffine",o+"_zero"),i.exportFunction(o+"_isZero"),i.exportFunction(o+"_isZeroAffine"),i.exportFunction(o+"_eq"),i.exportFunction(o+"_eqMixed"),i.exportFunction(o+"_eqAffine"),i.exportFunction(o+"_copy"),i.exportFunction(o+"_copyAffine"),i.exportFunction(o+"_zero"),i.exportFunction(o+"_zeroAffine"),i.exportFunction(o+"_double"),i.exportFunction(o+"_doubleAffine"),i.exportFunction(o+"_add"),i.exportFunction(o+"_addMixed"),i.exportFunction(o+"_addAffine"),i.exportFunction(o+"_neg"),i.exportFunction(o+"_negAffine"),i.exportFunction(o+"_sub"),i.exportFunction(o+"_subMixed"),i.exportFunction(o+"_subAffine"),i.exportFunction(o+"_fromMontgomery"),i.exportFunction(o+"_fromMontgomeryAffine"),i.exportFunction(o+"_toMontgomery"),i.exportFunction(o+"_toMontgomeryAffine"),i.exportFunction(o+"_timesScalar"),i.exportFunction(o+"_timesScalarAffine"),i.exportFunction(o+"_normalize"),i.exportFunction(o+"_LEMtoU"),i.exportFunction(o+"_LEMtoC"),i.exportFunction(o+"_UtoLEM"),i.exportFunction(o+"_CtoLEM"),i.exportFunction(o+"_batchLEMtoU"),i.exportFunction(o+"_batchLEMtoC"),i.exportFunction(o+"_batchUtoLEM"),i.exportFunction(o+"_batchCtoLEM"),i.exportFunction(o+"_toAffine"),i.exportFunction(o+"_toJacobian"),i.exportFunction(o+"_batchToAffine"),i.exportFunction(o+"_batchToJacobian"),i.exportFunction(o+"_inCurve"),i.exportFunction(o+"_inCurveAffine"),o},wc}var mc,Wf;function N0(){if(Wf)return mc;Wf=1;const a=Yn(),t=Co();return mc=function(n,i,o,s,r){const l=n.modules[s].n64*8,f=n.modules[o].n64*8,g=n.modules[s].q;let L=g.minus(a(1)),S=0;for(;!L.isOdd();)S++,L=L.shiftRight(1);let k=a(2);for(;k.modPow(g.shiftRight(1),g).equals(1);)k=k.add(1);const E=new Array(S+1);E[S]=k.modPow(L,g);let G=S-1;for(;G>=0;)E[G]=E[G+1].modPow(2,g),G--;const C=[],N=a(1).shiftLeft(l*8).mod(g);for(let d=0;d<E.length;d++){const m=E[d].times(N).mod(g);C.push(...t.bigInt2BytesLE(m,l))}const J=n.alloc(C),j=new Array(S+1);j[0]=a(1);for(let d=1;d<=S;d++)j[d]=j[d-1].times(2);const R=[];for(let d=0;d<=S;d++){const m=j[d].modInv(g).times(N).mod(g);R.push(...t.bigInt2BytesLE(m,l))}const b=n.alloc(R),w=k.modPow(2,g),Z=[],P=[];for(let d=0;d<=S;d++){const m=w.modPow(a(2).pow(d),g),v=g.add(a.one).minus(m).modInv(g);Z.push(...t.bigInt2BytesLE(m.times(N).mod(g),l)),P.push(...t.bigInt2BytesLE(v.times(N).mod(g),l))}const V=n.alloc(Z),nt=n.alloc(P);function I(d){let m=0;for(let v=0;v<8;v++)d&1<<v&&(m=m|128>>v);return m}const y=Array(256);for(let d=0;d<256;d++)y[d]=I(d);const _=n.alloc(y);function T(){const d=n.addFunction(i+"__log2");d.addParam("n","i32"),d.setReturnType("i32"),d.addLocal("bits","i32"),d.addLocal("aux","i32");const m=d.getCodeBuilder();d.addCode(m.setLocal("aux",m.i32_shr_u(m.getLocal("n"),m.i32_const(1)))),d.addCode(m.setLocal("bits",m.i32_const(0))),d.addCode(m.block(m.loop(m.br_if(1,m.i32_eqz(m.getLocal("aux"))),m.setLocal("aux",m.i32_shr_u(m.getLocal("aux"),m.i32_const(1))),m.setLocal("bits",m.i32_add(m.getLocal("bits"),m.i32_const(1))),m.br(0)))),d.addCode(m.if(m.i32_ne(m.getLocal("n"),m.i32_shl(m.i32_const(1),m.getLocal("bits"))),m.unreachable())),d.addCode(m.if(m.i32_gt_u(m.getLocal("bits"),m.i32_const(S)),m.unreachable())),d.addCode(m.getLocal("bits"))}function B(){const d=n.addFunction(i+"_fft");d.addParam("px","i32"),d.addParam("n","i32"),d.addLocal("bits","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l));d.addCode(m.setLocal("bits",m.call(i+"__log2",m.getLocal("n"))),m.call(s+"_one",v),m.call(i+"_rawfft",m.getLocal("px"),m.getLocal("bits"),m.i32_const(0),v))}function Y(){const d=n.addFunction(i+"_ifft");d.addParam("px","i32"),d.addParam("n","i32"),d.addLocal("bits","i32"),d.addLocal("pInv2","i32");const m=d.getCodeBuilder();d.addCode(m.setLocal("bits",m.call(i+"__log2",m.getLocal("n"))),m.setLocal("pInv2",m.i32_add(m.i32_const(b),m.i32_mul(m.getLocal("bits"),m.i32_const(l)))),m.call(i+"_rawfft",m.getLocal("px"),m.getLocal("bits"),m.i32_const(1),m.getLocal("pInv2")))}function tt(){const d=n.addFunction(i+"_rawfft");d.addParam("px","i32"),d.addParam("bits","i32"),d.addParam("reverse","i32"),d.addParam("mulFactor","i32"),d.addLocal("s","i32"),d.addLocal("k","i32"),d.addLocal("j","i32"),d.addLocal("m","i32"),d.addLocal("mdiv2","i32"),d.addLocal("n","i32"),d.addLocal("pwm","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l)),et=m.i32_const(n.alloc(f)),ct=m.i32_const(n.alloc(f));d.addCode(m.call(i+"__reversePermutation",m.getLocal("px"),m.getLocal("bits")),m.setLocal("n",m.i32_shl(m.i32_const(1),m.getLocal("bits"))),m.setLocal("s",m.i32_const(1)),m.block(m.loop(m.br_if(1,m.i32_gt_u(m.getLocal("s"),m.getLocal("bits"))),m.setLocal("m",m.i32_shl(m.i32_const(1),m.getLocal("s"))),m.setLocal("pwm",m.i32_add(m.i32_const(J),m.i32_mul(m.getLocal("s"),m.i32_const(l)))),m.setLocal("k",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_ge_u(m.getLocal("k"),m.getLocal("n"))),m.call(s+"_one",v),m.setLocal("mdiv2",m.i32_shr_u(m.getLocal("m"),m.i32_const(1))),m.setLocal("j",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_ge_u(m.getLocal("j"),m.getLocal("mdiv2"))),m.setLocal("idx1",m.i32_add(m.getLocal("px"),m.i32_mul(m.i32_add(m.getLocal("k"),m.getLocal("j")),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("idx1"),m.i32_mul(m.getLocal("mdiv2"),m.i32_const(f)))),m.call(r,m.getLocal("idx2"),v,et),m.call(o+"_copy",m.getLocal("idx1"),ct),m.call(o+"_add",ct,et,m.getLocal("idx1")),m.call(o+"_sub",ct,et,m.getLocal("idx2")),m.call(s+"_mul",v,m.getLocal("pwm"),v),m.setLocal("j",m.i32_add(m.getLocal("j"),m.i32_const(1))),m.br(0))),m.setLocal("k",m.i32_add(m.getLocal("k"),m.getLocal("m"))),m.br(0))),m.setLocal("s",m.i32_add(m.getLocal("s"),m.i32_const(1))),m.br(0))),m.call(i+"__fftFinal",m.getLocal("px"),m.getLocal("bits"),m.getLocal("reverse"),m.getLocal("mulFactor")))}function $(){const d=n.addFunction(i+"__fftFinal");d.addParam("px","i32"),d.addParam("bits","i32"),d.addParam("reverse","i32"),d.addParam("mulFactor","i32"),d.addLocal("n","i32"),d.addLocal("ndiv2","i32"),d.addLocal("pInv2","i32"),d.addLocal("i","i32"),d.addLocal("mask","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(f));d.addCode(m.if(m.i32_and(m.i32_eqz(m.getLocal("reverse")),m.call(s+"_isOne",m.getLocal("mulFactor"))),m.ret([])),m.setLocal("n",m.i32_shl(m.i32_const(1),m.getLocal("bits"))),m.setLocal("mask",m.i32_sub(m.getLocal("n"),m.i32_const(1))),m.setLocal("i",m.i32_const(1)),m.setLocal("ndiv2",m.i32_shr_u(m.getLocal("n"),m.i32_const(1))),m.block(m.loop(m.br_if(1,m.i32_ge_u(m.getLocal("i"),m.getLocal("ndiv2"))),m.setLocal("idx1",m.i32_add(m.getLocal("px"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("px"),m.i32_mul(m.i32_sub(m.getLocal("n"),m.getLocal("i")),m.i32_const(f)))),m.if(m.getLocal("reverse"),m.if(m.call(s+"_isOne",m.getLocal("mulFactor")),[...m.call(o+"_copy",m.getLocal("idx1"),v),...m.call(o+"_copy",m.getLocal("idx2"),m.getLocal("idx1")),...m.call(o+"_copy",v,m.getLocal("idx2"))],[...m.call(o+"_copy",m.getLocal("idx1"),v),...m.call(r,m.getLocal("idx2"),m.getLocal("mulFactor"),m.getLocal("idx1")),...m.call(r,v,m.getLocal("mulFactor"),m.getLocal("idx2"))]),m.if(m.call(s+"_isOne",m.getLocal("mulFactor")),[],[...m.call(r,m.getLocal("idx1"),m.getLocal("mulFactor"),m.getLocal("idx1")),...m.call(r,m.getLocal("idx2"),m.getLocal("mulFactor"),m.getLocal("idx2"))])),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))),m.if(m.call(s+"_isOne",m.getLocal("mulFactor")),[],[...m.call(r,m.getLocal("px"),m.getLocal("mulFactor"),m.getLocal("px")),...m.setLocal("idx2",m.i32_add(m.getLocal("px"),m.i32_mul(m.getLocal("ndiv2"),m.i32_const(f)))),...m.call(r,m.getLocal("idx2"),m.getLocal("mulFactor"),m.getLocal("idx2"))]))}function X(){const d=n.addFunction(i+"__reversePermutation");d.addParam("px","i32"),d.addParam("bits","i32"),d.addLocal("n","i32"),d.addLocal("i","i32"),d.addLocal("ri","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(f));d.addCode(m.setLocal("n",m.i32_shl(m.i32_const(1),m.getLocal("bits"))),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("i"),m.getLocal("n"))),m.setLocal("idx1",m.i32_add(m.getLocal("px"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("ri",m.call(i+"__rev",m.getLocal("i"),m.getLocal("bits"))),m.setLocal("idx2",m.i32_add(m.getLocal("px"),m.i32_mul(m.getLocal("ri"),m.i32_const(f)))),m.if(m.i32_lt_u(m.getLocal("i"),m.getLocal("ri")),[...m.call(o+"_copy",m.getLocal("idx1"),v),...m.call(o+"_copy",m.getLocal("idx2"),m.getLocal("idx1")),...m.call(o+"_copy",v,m.getLocal("idx2"))]),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}function F(){const d=n.addFunction(i+"__rev");d.addParam("x","i32"),d.addParam("bits","i32"),d.setReturnType("i32");const m=d.getCodeBuilder();d.addCode(m.i32_rotl(m.i32_add(m.i32_add(m.i32_shl(m.i32_load8_u(m.i32_and(m.getLocal("x"),m.i32_const(255)),_,0),m.i32_const(24)),m.i32_shl(m.i32_load8_u(m.i32_and(m.i32_shr_u(m.getLocal("x"),m.i32_const(8)),m.i32_const(255)),_,0),m.i32_const(16))),m.i32_add(m.i32_shl(m.i32_load8_u(m.i32_and(m.i32_shr_u(m.getLocal("x"),m.i32_const(16)),m.i32_const(255)),_,0),m.i32_const(8)),m.i32_load8_u(m.i32_and(m.i32_shr_u(m.getLocal("x"),m.i32_const(24)),m.i32_const(255)),_,0))),m.getLocal("bits")))}function M(){const d=n.addFunction(i+"_fftJoin");d.addParam("pBuff1","i32"),d.addParam("pBuff2","i32"),d.addParam("n","i32"),d.addParam("first","i32"),d.addParam("inc","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32"),d.addLocal("i","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l)),et=m.i32_const(n.alloc(f)),ct=m.i32_const(n.alloc(f));d.addCode(m.call(s+"_copy",m.getLocal("first"),v),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("i"),m.getLocal("n"))),m.setLocal("idx1",m.i32_add(m.getLocal("pBuff1"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("pBuff2"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.call(r,m.getLocal("idx2"),v,et),m.call(o+"_copy",m.getLocal("idx1"),ct),m.call(o+"_add",ct,et,m.getLocal("idx1")),m.call(o+"_sub",ct,et,m.getLocal("idx2")),m.call(s+"_mul",v,m.getLocal("inc"),v),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}function W(){const d=n.addFunction(i+"_fftJoinExt");d.addParam("pBuff1","i32"),d.addParam("pBuff2","i32"),d.addParam("n","i32"),d.addParam("first","i32"),d.addParam("inc","i32"),d.addParam("totalBits","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32"),d.addLocal("i","i32"),d.addLocal("pShiftToM","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l)),et=m.i32_const(n.alloc(f));d.addCode(m.setLocal("pShiftToM",m.i32_add(m.i32_const(V),m.i32_mul(m.getLocal("totalBits"),m.i32_const(l)))),m.call(s+"_copy",m.getLocal("first"),v),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("i"),m.getLocal("n"))),m.setLocal("idx1",m.i32_add(m.getLocal("pBuff1"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("pBuff2"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.call(o+"_add",m.getLocal("idx1"),m.getLocal("idx2"),et),m.call(r,m.getLocal("idx2"),m.getLocal("pShiftToM"),m.getLocal("idx2")),m.call(o+"_add",m.getLocal("idx1"),m.getLocal("idx2"),m.getLocal("idx2")),m.call(r,m.getLocal("idx2"),v,m.getLocal("idx2")),m.call(o+"_copy",et,m.getLocal("idx1")),m.call(s+"_mul",v,m.getLocal("inc"),v),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}function A(){const d=n.addFunction(i+"_fftJoinExtInv");d.addParam("pBuff1","i32"),d.addParam("pBuff2","i32"),d.addParam("n","i32"),d.addParam("first","i32"),d.addParam("inc","i32"),d.addParam("totalBits","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32"),d.addLocal("i","i32"),d.addLocal("pShiftToM","i32"),d.addLocal("pSConst","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l)),et=m.i32_const(n.alloc(f));d.addCode(m.setLocal("pShiftToM",m.i32_add(m.i32_const(V),m.i32_mul(m.getLocal("totalBits"),m.i32_const(l)))),m.setLocal("pSConst",m.i32_add(m.i32_const(nt),m.i32_mul(m.getLocal("totalBits"),m.i32_const(l)))),m.call(s+"_copy",m.getLocal("first"),v),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("i"),m.getLocal("n"))),m.setLocal("idx1",m.i32_add(m.getLocal("pBuff1"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("pBuff2"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.call(r,m.getLocal("idx2"),v,et),m.call(o+"_sub",m.getLocal("idx1"),et,m.getLocal("idx2")),m.call(r,m.getLocal("idx2"),m.getLocal("pSConst"),m.getLocal("idx2")),m.call(r,m.getLocal("idx1"),m.getLocal("pShiftToM"),m.getLocal("idx1")),m.call(o+"_sub",et,m.getLocal("idx1"),m.getLocal("idx1")),m.call(r,m.getLocal("idx1"),m.getLocal("pSConst"),m.getLocal("idx1")),m.call(s+"_mul",v,m.getLocal("inc"),v),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}function h(){const d=n.addFunction(i+"_prepareLagrangeEvaluation");d.addParam("pBuff1","i32"),d.addParam("pBuff2","i32"),d.addParam("n","i32"),d.addParam("first","i32"),d.addParam("inc","i32"),d.addParam("totalBits","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32"),d.addLocal("i","i32"),d.addLocal("pShiftToM","i32"),d.addLocal("pSConst","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l)),et=m.i32_const(n.alloc(f));d.addCode(m.setLocal("pShiftToM",m.i32_add(m.i32_const(V),m.i32_mul(m.getLocal("totalBits"),m.i32_const(l)))),m.setLocal("pSConst",m.i32_add(m.i32_const(nt),m.i32_mul(m.getLocal("totalBits"),m.i32_const(l)))),m.call(s+"_copy",m.getLocal("first"),v),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("i"),m.getLocal("n"))),m.setLocal("idx1",m.i32_add(m.getLocal("pBuff1"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("pBuff2"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.call(r,m.getLocal("idx1"),m.getLocal("pShiftToM"),et),m.call(o+"_sub",m.getLocal("idx2"),et,et),m.call(o+"_sub",m.getLocal("idx1"),m.getLocal("idx2"),m.getLocal("idx2")),m.call(r,et,m.getLocal("pSConst"),m.getLocal("idx1")),m.call(r,m.getLocal("idx2"),v,m.getLocal("idx2")),m.call(s+"_mul",v,m.getLocal("inc"),v),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}function Q(){const d=n.addFunction(i+"_fftMix");d.addParam("pBuff","i32"),d.addParam("n","i32"),d.addParam("exp","i32"),d.addLocal("nGroups","i32"),d.addLocal("nPerGroup","i32"),d.addLocal("nPerGroupDiv2","i32"),d.addLocal("pairOffset","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32"),d.addLocal("i","i32"),d.addLocal("j","i32"),d.addLocal("pwm","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(l)),et=m.i32_const(n.alloc(f)),ct=m.i32_const(n.alloc(f));d.addCode(m.setLocal("nPerGroup",m.i32_shl(m.i32_const(1),m.getLocal("exp"))),m.setLocal("nPerGroupDiv2",m.i32_shr_u(m.getLocal("nPerGroup"),m.i32_const(1))),m.setLocal("nGroups",m.i32_shr_u(m.getLocal("n"),m.getLocal("exp"))),m.setLocal("pairOffset",m.i32_mul(m.getLocal("nPerGroupDiv2"),m.i32_const(f))),m.setLocal("pwm",m.i32_add(m.i32_const(J),m.i32_mul(m.getLocal("exp"),m.i32_const(l)))),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("i"),m.getLocal("nGroups"))),m.call(s+"_one",v),m.setLocal("j",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_eq(m.getLocal("j"),m.getLocal("nPerGroupDiv2"))),m.setLocal("idx1",m.i32_add(m.getLocal("pBuff"),m.i32_mul(m.i32_add(m.i32_mul(m.getLocal("i"),m.getLocal("nPerGroup")),m.getLocal("j")),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("idx1"),m.getLocal("pairOffset"))),m.call(r,m.getLocal("idx2"),v,et),m.call(o+"_copy",m.getLocal("idx1"),ct),m.call(o+"_add",ct,et,m.getLocal("idx1")),m.call(o+"_sub",ct,et,m.getLocal("idx2")),m.call(s+"_mul",v,m.getLocal("pwm"),v),m.setLocal("j",m.i32_add(m.getLocal("j"),m.i32_const(1))),m.br(0))),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}function p(){const d=n.addFunction(i+"_fftFinal");d.addParam("pBuff","i32"),d.addParam("n","i32"),d.addParam("factor","i32"),d.addLocal("idx1","i32"),d.addLocal("idx2","i32"),d.addLocal("i","i32"),d.addLocal("ndiv2","i32");const m=d.getCodeBuilder(),v=m.i32_const(n.alloc(f));d.addCode(m.setLocal("ndiv2",m.i32_shr_u(m.getLocal("n"),m.i32_const(1))),m.if(m.i32_and(m.getLocal("n"),m.i32_const(1)),m.call(r,m.i32_add(m.getLocal("pBuff"),m.i32_mul(m.getLocal("ndiv2"),m.i32_const(f))),m.getLocal("factor"),m.i32_add(m.getLocal("pBuff"),m.i32_mul(m.getLocal("ndiv2"),m.i32_const(f))))),m.setLocal("i",m.i32_const(0)),m.block(m.loop(m.br_if(1,m.i32_ge_u(m.getLocal("i"),m.getLocal("ndiv2"))),m.setLocal("idx1",m.i32_add(m.getLocal("pBuff"),m.i32_mul(m.getLocal("i"),m.i32_const(f)))),m.setLocal("idx2",m.i32_add(m.getLocal("pBuff"),m.i32_mul(m.i32_sub(m.i32_sub(m.getLocal("n"),m.i32_const(1)),m.getLocal("i")),m.i32_const(f)))),m.call(r,m.getLocal("idx2"),m.getLocal("factor"),v),m.call(r,m.getLocal("idx1"),m.getLocal("factor"),m.getLocal("idx2")),m.call(o+"_copy",v,m.getLocal("idx1")),m.setLocal("i",m.i32_add(m.getLocal("i"),m.i32_const(1))),m.br(0))))}F(),X(),$(),tt(),T(),B(),Y(),M(),W(),A(),Q(),p(),h(),n.exportFunction(i+"_fft"),n.exportFunction(i+"_ifft"),n.exportFunction(i+"_rawfft"),n.exportFunction(i+"_fftJoin"),n.exportFunction(i+"_fftJoinExt"),n.exportFunction(i+"_fftJoinExtInv"),n.exportFunction(i+"_fftMix"),n.exportFunction(i+"_fftFinal"),n.exportFunction(i+"_prepareLagrangeEvaluation")},mc}var bc,Zf;function z0(){return Zf||(Zf=1,bc=function(t,e,n){const o=t.modules[n].n64*8;function s(){const u=t.addFunction(e+"_zero");u.addParam("px","i32"),u.addParam("n","i32"),u.addLocal("lastp","i32"),u.addLocal("p","i32");const l=u.getCodeBuilder();u.addCode(l.setLocal("p",l.getLocal("px")),l.setLocal("lastp",l.i32_add(l.getLocal("px"),l.i32_mul(l.getLocal("n"),l.i32_const(o)))),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("p"),l.getLocal("lastp"))),l.call(n+"_zero",l.getLocal("p")),l.setLocal("p",l.i32_add(l.getLocal("p"),l.i32_const(o))),l.br(0))))}function r(){const u=t.addFunction(e+"_constructLC");u.addParam("ppolynomials","i32"),u.addParam("psignals","i32"),u.addParam("nSignals","i32"),u.addParam("pres","i32"),u.addLocal("i","i32"),u.addLocal("j","i32"),u.addLocal("pp","i32"),u.addLocal("ps","i32"),u.addLocal("pd","i32"),u.addLocal("ncoefs","i32");const l=u.getCodeBuilder(),c=l.i32_const(t.alloc(o));u.addCode(l.setLocal("i",l.i32_const(0)),l.setLocal("pp",l.getLocal("ppolynomials")),l.setLocal("ps",l.getLocal("psignals")),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("nSignals"))),l.setLocal("ncoefs",l.i32_load(l.getLocal("pp"))),l.setLocal("pp",l.i32_add(l.getLocal("pp"),l.i32_const(4))),l.setLocal("j",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("j"),l.getLocal("ncoefs"))),l.setLocal("pd",l.i32_add(l.getLocal("pres"),l.i32_mul(l.i32_load(l.getLocal("pp")),l.i32_const(o)))),l.setLocal("pp",l.i32_add(l.getLocal("pp"),l.i32_const(4))),l.call(n+"_mul",l.getLocal("ps"),l.getLocal("pp"),c),l.call(n+"_add",c,l.getLocal("pd"),l.getLocal("pd")),l.setLocal("pp",l.i32_add(l.getLocal("pp"),l.i32_const(o))),l.setLocal("j",l.i32_add(l.getLocal("j"),l.i32_const(1))),l.br(0))),l.setLocal("ps",l.i32_add(l.getLocal("ps"),l.i32_const(o))),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}return s(),r(),t.exportFunction(e+"_zero"),t.exportFunction(e+"_constructLC"),e}),bc}var yc,Xf;function J0(){return Xf||(Xf=1,yc=function(t,e,n){const o=t.modules[n].n64*8;function s(){const l=t.addFunction(e+"_buildABC");l.addParam("pCoefs","i32"),l.addParam("nCoefs","i32"),l.addParam("pWitness","i32"),l.addParam("pA","i32"),l.addParam("pB","i32"),l.addParam("pC","i32"),l.addParam("offsetOut","i32"),l.addParam("nOut","i32"),l.addParam("offsetWitness","i32"),l.addParam("nWitness","i32"),l.addLocal("it","i32"),l.addLocal("ita","i32"),l.addLocal("itb","i32"),l.addLocal("last","i32"),l.addLocal("m","i32"),l.addLocal("c","i32"),l.addLocal("s","i32"),l.addLocal("pOut","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(o));l.addCode(c.setLocal("ita",c.getLocal("pA")),c.setLocal("itb",c.getLocal("pB")),c.setLocal("last",c.i32_add(c.getLocal("pA"),c.i32_mul(c.getLocal("nOut"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_zero",c.getLocal("ita")),c.call(n+"_zero",c.getLocal("itb")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.br(0))),c.setLocal("it",c.getLocal("pCoefs")),c.setLocal("last",c.i32_add(c.getLocal("pCoefs"),c.i32_mul(c.getLocal("nCoefs"),c.i32_const(o+12)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("it"),c.getLocal("last"))),c.setLocal("s",c.i32_load(c.getLocal("it"),8)),c.if(c.i32_or(c.i32_lt_u(c.getLocal("s"),c.getLocal("offsetWitness")),c.i32_ge_u(c.getLocal("s"),c.i32_add(c.getLocal("offsetWitness"),c.getLocal("nWitness")))),[...c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),...c.br(1)]),c.setLocal("m",c.i32_load(c.getLocal("it"))),c.if(c.i32_eq(c.getLocal("m"),c.i32_const(0)),c.setLocal("pOut",c.getLocal("pA")),c.if(c.i32_eq(c.getLocal("m"),c.i32_const(1)),c.setLocal("pOut",c.getLocal("pB")),[...c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),...c.br(1)])),c.setLocal("c",c.i32_load(c.getLocal("it"),4)),c.if(c.i32_or(c.i32_lt_u(c.getLocal("c"),c.getLocal("offsetOut")),c.i32_ge_u(c.getLocal("c"),c.i32_add(c.getLocal("offsetOut"),c.getLocal("nOut")))),[...c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),...c.br(1)]),c.setLocal("pOut",c.i32_add(c.getLocal("pOut"),c.i32_mul(c.i32_sub(c.getLocal("c"),c.getLocal("offsetOut")),c.i32_const(o)))),c.call(n+"_mul",c.i32_add(c.getLocal("pWitness"),c.i32_mul(c.i32_sub(c.getLocal("s"),c.getLocal("offsetWitness")),c.i32_const(o))),c.i32_add(c.getLocal("it"),c.i32_const(12)),f),c.call(n+"_add",c.getLocal("pOut"),f,c.getLocal("pOut")),c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o+12))),c.br(0))),c.setLocal("ita",c.getLocal("pA")),c.setLocal("itb",c.getLocal("pB")),c.setLocal("it",c.getLocal("pC")),c.setLocal("last",c.i32_add(c.getLocal("pA"),c.i32_mul(c.getLocal("nOut"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_mul",c.getLocal("ita"),c.getLocal("itb"),c.getLocal("it")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.setLocal("it",c.i32_add(c.getLocal("it"),c.i32_const(o))),c.br(0))))}function r(){const l=t.addFunction(e+"_joinABC");l.addParam("pA","i32"),l.addParam("pB","i32"),l.addParam("pC","i32"),l.addParam("n","i32"),l.addParam("pP","i32"),l.addLocal("ita","i32"),l.addLocal("itb","i32"),l.addLocal("itc","i32"),l.addLocal("itp","i32"),l.addLocal("last","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(o));l.addCode(c.setLocal("ita",c.getLocal("pA")),c.setLocal("itb",c.getLocal("pB")),c.setLocal("itc",c.getLocal("pC")),c.setLocal("itp",c.getLocal("pP")),c.setLocal("last",c.i32_add(c.getLocal("pA"),c.i32_mul(c.getLocal("n"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_mul",c.getLocal("ita"),c.getLocal("itb"),f),c.call(n+"_sub",f,c.getLocal("itc"),c.getLocal("itp")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.setLocal("itc",c.i32_add(c.getLocal("itc"),c.i32_const(o))),c.setLocal("itp",c.i32_add(c.getLocal("itp"),c.i32_const(o))),c.br(0))))}function u(){const l=t.addFunction(e+"_batchAdd");l.addParam("pa","i32"),l.addParam("pb","i32"),l.addParam("n","i32"),l.addParam("pr","i32"),l.addLocal("ita","i32"),l.addLocal("itb","i32"),l.addLocal("itr","i32"),l.addLocal("last","i32");const c=l.getCodeBuilder();l.addCode(c.setLocal("ita",c.getLocal("pa")),c.setLocal("itb",c.getLocal("pb")),c.setLocal("itr",c.getLocal("pr")),c.setLocal("last",c.i32_add(c.getLocal("pa"),c.i32_mul(c.getLocal("n"),c.i32_const(o)))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("ita"),c.getLocal("last"))),c.call(n+"_add",c.getLocal("ita"),c.getLocal("itb"),c.getLocal("itr")),c.setLocal("ita",c.i32_add(c.getLocal("ita"),c.i32_const(o))),c.setLocal("itb",c.i32_add(c.getLocal("itb"),c.i32_const(o))),c.setLocal("itr",c.i32_add(c.getLocal("itr"),c.i32_const(o))),c.br(0))))}return s(),r(),u(),t.exportFunction(e+"_buildABC"),t.exportFunction(e+"_joinABC"),t.exportFunction(e+"_batchAdd"),e}),yc}var Ac,$f;function Y0(){return $f||($f=1,Ac=function(t,e,n,i,o,s,r,u){const l=t.addFunction(e);l.addParam("pIn","i32"),l.addParam("n","i32"),l.addParam("pFirst","i32"),l.addParam("pInc","i32"),l.addParam("pOut","i32"),l.addLocal("pOldFree","i32"),l.addLocal("i","i32"),l.addLocal("pFrom","i32"),l.addLocal("pTo","i32");const c=l.getCodeBuilder(),f=c.i32_const(t.alloc(r));l.addCode(c.setLocal("pFrom",c.getLocal("pIn")),c.setLocal("pTo",c.getLocal("pOut"))),l.addCode(c.call(i+"_copy",c.getLocal("pFirst"),f)),l.addCode(c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(u,c.getLocal("pFrom"),f,c.getLocal("pTo")),c.setLocal("pFrom",c.i32_add(c.getLocal("pFrom"),c.i32_const(o))),c.setLocal("pTo",c.i32_add(c.getLocal("pTo"),c.i32_const(s))),c.call(i+"_mul",f,c.getLocal("pInc"),f),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))),t.exportFunction(e)}),Ac}var Ic,t2;function P8(){if(t2)return Ic;t2=1;const a=Yn(),t=Co(),e=ru(),n=R0(),i=H0(),o=Q0(),s=K0(),r=N0(),u=z0(),l=J0(),c=Y0();return Ic=function(g,L){const S=L||"bn128";if(g.modules[S])return S;const k=a("21888242871839275222246405745257275088696311157297823662689037894645226208583"),E=a("21888242871839275222246405745257275088548364400416034343698204186575808495617"),G=Math.floor((k.minus(1).bitLength()-1)/64)+1,C=G*8,N=C,J=C,j=J*2,R=J*12,b=g.alloc(t.bigInt2BytesLE(E,N)),w=e(g,k,"f1m");n(g,E,"fr","frm");const Z=g.alloc(t.bigInt2BytesLE(_(a(3)),J)),P=s(g,"g1m","f1m",Z);r(g,"frm","frm","frm","frm_mul"),u(g,"pol","frm"),l(g,"qap","frm");const V=i(g,"f1m_neg","f2m","f1m"),nt=g.alloc([...t.bigInt2BytesLE(_(a("19485874751759354771024239261021720505790618469301721065564631296452457478373")),J),...t.bigInt2BytesLE(_(a("266929791119991161246907387137283842545076965332900288569378510910307636690")),J)]),I=s(g,"g2m","f2m",nt);function y(ht,O){const H=g.addFunction(ht);H.addParam("pG","i32"),H.addParam("pFr","i32"),H.addParam("pr","i32");const pt=H.getCodeBuilder(),Lt=pt.i32_const(g.alloc(C));H.addCode(pt.call("frm_fromMontgomery",pt.getLocal("pFr"),Lt),pt.call(O,pt.getLocal("pG"),Lt,pt.i32_const(C),pt.getLocal("pr"))),g.exportFunction(ht)}y("g1m_timesFr","g1m_timesScalar"),r(g,"g1m","g1m","frm","g1m_timesFr"),y("g2m_timesFr","g2m_timesScalar"),r(g,"g2m","g2m","frm","g2m_timesFr"),y("g1m_timesFrAffine","g1m_timesScalarAffine"),y("g2m_timesFrAffine","g2m_timesScalarAffine"),c(g,"frm_batchApplyKey","fmr","frm",C,C,C,"frm_mul"),c(g,"g1m_batchApplyKey","g1m","frm",C*3,C*3,C,"g1m_timesFr"),c(g,"g1m_batchApplyKeyMixed","g1m","frm",C*2,C*3,C,"g1m_timesFrAffine"),c(g,"g2m_batchApplyKey","g2m","frm",C*2*3,C*3*2,C,"g2m_timesFr"),c(g,"g2m_batchApplyKeyMixed","g2m","frm",C*2*2,C*3*2,C,"g2m_timesFrAffine");function _(ht){return a(ht).times(a.one.shiftLeft(J*8)).mod(k)}const T=[a("1"),a("2"),a.one],B=g.alloc([...t.bigInt2BytesLE(_(T[0]),J),...t.bigInt2BytesLE(_(T[1]),J),...t.bigInt2BytesLE(_(T[2]),J)]),Y=[a.zero,a.one,a.zero],tt=g.alloc([...t.bigInt2BytesLE(_(Y[0]),J),...t.bigInt2BytesLE(_(Y[1]),J),...t.bigInt2BytesLE(_(Y[2]),J)]),$=[[a("10857046999023057135944570762232829481370756359578518086990519993285655852781"),a("11559732032986387107991004021392285783925812861821192530917403151452391805634")],[a("8495653923123431417604973247489272438418190587263600148770280649306958101930"),a("4082367875863433681332203403145435568316851327593401208105741076214120093531")],[a.one,a.zero]],X=g.alloc([...t.bigInt2BytesLE(_($[0][0]),J),...t.bigInt2BytesLE(_($[0][1]),J),...t.bigInt2BytesLE(_($[1][0]),J),...t.bigInt2BytesLE(_($[1][1]),J),...t.bigInt2BytesLE(_($[2][0]),J),...t.bigInt2BytesLE(_($[2][1]),J)]),F=[[a.zero,a.zero],[a.one,a.zero],[a.zero,a.zero]],M=g.alloc([...t.bigInt2BytesLE(_(F[0][0]),J),...t.bigInt2BytesLE(_(F[0][1]),J),...t.bigInt2BytesLE(_(F[1][0]),J),...t.bigInt2BytesLE(_(F[1][1]),J),...t.bigInt2BytesLE(_(F[2][0]),J),...t.bigInt2BytesLE(_(F[2][1]),J)]),W=g.alloc([...t.bigInt2BytesLE(_(1),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J),...t.bigInt2BytesLE(_(0),J)]),A=g.alloc([...t.bigInt2BytesLE(_(9),J),...t.bigInt2BytesLE(_(1),J)]),h=g.alloc([...t.bigInt2BytesLE(_(a(2).modInv(k)),J),...t.bigInt2BytesLE(a(0),J)]),Q=A,p=g.alloc([...t.bigInt2BytesLE(_("19485874751759354771024239261021720505790618469301721065564631296452457478373"),J),...t.bigInt2BytesLE(_("266929791119991161246907387137283842545076965332900288569378510910307636690"),J)]);function d(){const ht=g.addFunction(S+"_mulNR6");ht.addParam("x","i32"),ht.addParam("pr","i32");const O=ht.getCodeBuilder();ht.addCode(O.call(V+"_mul",O.i32_const(A),O.getLocal("x"),O.getLocal("pr")))}d();const m=o(g,S+"_mulNR6","f6m","f2m");function v(){const ht=g.addFunction(S+"_mulNR12");ht.addParam("x","i32"),ht.addParam("pr","i32");const O=ht.getCodeBuilder();ht.addCode(O.call(V+"_mul",O.i32_const(A),O.i32_add(O.getLocal("x"),O.i32_const(C*4)),O.getLocal("pr")),O.call(V+"_copy",O.getLocal("x"),O.i32_add(O.getLocal("pr"),O.i32_const(C*2))),O.call(V+"_copy",O.i32_add(O.getLocal("x"),O.i32_const(C*2)),O.i32_add(O.getLocal("pr"),O.i32_const(C*4))))}v();const et=i(g,S+"_mulNR12","ftm",m),ct=a("29793968203157093288"),dt=Mt(ct),ft=g.alloc(dt),Ft=3*j,rt=dt.length-1,wt=dt.reduce((ht,O)=>ht+(O!=0?1:0),0)+rt+1,yt=3*2*C,It=3*C*2+wt*Ft;g.modules[S]={n64:G,pG1gen:B,pG1zero:tt,pG1b:Z,pG2gen:X,pG2zero:M,pG2b:nt,pq:g.modules.f1m.pq,pr:b,pOneT:W,prePSize:yt,preQSize:It,r:E.toString(),q:k.toString()};const Ut=a("4965661367192848881");function Dt(ht){let O=ht;const H=[];for(;O.gt(a.zero);){if(O.isOdd()){const pt=2-O.mod(4).toJSNumber();H.push(pt),O=O.minus(pt)}else H.push(0);O=O.shiftRight(1)}return H}function Mt(ht){let O=ht;const H=[];for(;O.gt(a.zero);)O.isOdd()?H.push(1):H.push(0),O=O.shiftRight(1);return H}function Qt(){const ht=g.addFunction(S+"_prepareG1");ht.addParam("pP","i32"),ht.addParam("ppreP","i32");const O=ht.getCodeBuilder();ht.addCode(O.call(P+"_normalize",O.getLocal("pP"),O.getLocal("ppreP")))}function it(){const ht=g.addFunction(S+"_prepAddStep");ht.addParam("pQ","i32"),ht.addParam("pR","i32"),ht.addParam("pCoef","i32");const O=ht.getCodeBuilder(),H=O.getLocal("pQ"),pt=O.i32_add(O.getLocal("pQ"),O.i32_const(j)),Lt=O.getLocal("pR"),bt=O.i32_add(O.getLocal("pR"),O.i32_const(j)),Bt=O.i32_add(O.getLocal("pR"),O.i32_const(2*j)),At=O.getLocal("pCoef"),xt=O.i32_add(O.getLocal("pCoef"),O.i32_const(j)),_t=O.i32_add(O.getLocal("pCoef"),O.i32_const(2*j)),St=xt,Gt=O.i32_const(g.alloc(j)),Tt=O.i32_const(g.alloc(j)),zt=O.i32_const(g.alloc(j)),Xt=O.i32_const(g.alloc(j)),Kt=O.i32_const(g.alloc(j)),Yt=O.i32_const(g.alloc(j)),re=O.i32_const(g.alloc(j));ht.addCode(O.call(V+"_mul",H,Bt,St),O.call(V+"_sub",Lt,St,St),O.call(V+"_mul",pt,Bt,Gt),O.call(V+"_sub",bt,Gt,Gt),O.call(V+"_square",St,Tt),O.call(V+"_square",Gt,zt),O.call(V+"_mul",St,Tt,Xt),O.call(V+"_mul",Lt,Tt,Kt),O.call(V+"_add",Kt,Kt,re),O.call(V+"_mul",Bt,zt,Yt),O.call(V+"_add",Xt,Yt,Yt),O.call(V+"_sub",Yt,re,Yt),O.call(V+"_mul",St,Yt,Lt),O.call(V+"_mul",Xt,bt,bt),O.call(V+"_sub",Kt,Yt,re),O.call(V+"_mul",Gt,re,re),O.call(V+"_sub",re,bt,bt),O.call(V+"_mul",Bt,Xt,Bt),O.call(V+"_mul",St,pt,re),O.call(V+"_mul",Gt,H,At),O.call(V+"_sub",At,re,At),O.call(V+"_mul",At,O.i32_const(Q),At),O.call(V+"_neg",Gt,_t))}function K(){const ht=g.addFunction(S+"_prepDblStep");ht.addParam("pR","i32"),ht.addParam("pCoef","i32");const O=ht.getCodeBuilder(),H=O.getLocal("pR"),pt=O.i32_add(O.getLocal("pR"),O.i32_const(j)),Lt=O.i32_add(O.getLocal("pR"),O.i32_const(2*j)),bt=O.getLocal("pCoef"),Bt=O.i32_add(O.getLocal("pCoef"),O.i32_const(j)),At=O.i32_add(O.getLocal("pCoef"),O.i32_const(2*j)),xt=O.i32_const(g.alloc(j)),_t=O.i32_const(g.alloc(j)),St=O.i32_const(g.alloc(j)),Gt=O.i32_const(g.alloc(j)),Tt=O.i32_const(g.alloc(j)),zt=O.i32_const(g.alloc(j)),Xt=O.i32_const(g.alloc(j)),Kt=O.i32_const(g.alloc(j)),Yt=O.i32_const(g.alloc(j)),re=O.i32_const(g.alloc(j)),ie=O.i32_const(g.alloc(j)),Vt=O.i32_const(g.alloc(j));ht.addCode(O.call(V+"_mul",pt,O.i32_const(h),xt),O.call(V+"_mul",H,xt,xt),O.call(V+"_square",pt,_t),O.call(V+"_square",Lt,St),O.call(V+"_add",St,St,Gt),O.call(V+"_add",Gt,St,Gt),O.call(V+"_mul",O.i32_const(p),Gt,Tt),O.call(V+"_add",Tt,Tt,zt),O.call(V+"_add",Tt,zt,zt),O.call(V+"_add",_t,zt,Xt),O.call(V+"_mul",Xt,O.i32_const(h),Xt),O.call(V+"_add",_t,St,Vt),O.call(V+"_add",pt,Lt,Kt),O.call(V+"_square",Kt,Kt),O.call(V+"_sub",Kt,Vt,Kt),O.call(V+"_sub",Tt,_t,Yt),O.call(V+"_square",H,re),O.call(V+"_square",Tt,ie),O.call(V+"_sub",_t,zt,Vt),O.call(V+"_mul",xt,Vt,H),O.call(V+"_add",ie,ie,Vt),O.call(V+"_add",ie,Vt,Vt),O.call(V+"_square",Xt,pt),O.call(V+"_sub",pt,Vt,pt),O.call(V+"_mul",_t,Kt,Lt),O.call(V+"_mul",O.i32_const(Q),Yt,bt),O.call(V+"_neg",Kt,Bt),O.call(V+"_add",re,re,At),O.call(V+"_add",re,At,At))}function U(){const ht=g.addFunction(S+"_mulByQ");ht.addParam("p1","i32"),ht.addParam("pr","i32");const O=ht.getCodeBuilder(),H=O.getLocal("p1"),pt=O.i32_add(O.getLocal("p1"),O.i32_const(j)),Lt=O.i32_add(O.getLocal("p1"),O.i32_const(j*2)),bt=O.getLocal("pr"),Bt=O.i32_add(O.getLocal("pr"),O.i32_const(j)),At=O.i32_add(O.getLocal("pr"),O.i32_const(j*2)),xt=O.i32_const(g.alloc([...t.bigInt2BytesLE(_("21575463638280843010398324269430826099269044274347216827212613867836435027261"),J),...t.bigInt2BytesLE(_("10307601595873709700152284273816112264069230130616436755625194854815875713954"),J)])),_t=O.i32_const(g.alloc([...t.bigInt2BytesLE(_("2821565182194536844548159561693502659359617185244120367078079554186484126554"),J),...t.bigInt2BytesLE(_("3505843767911556378687030309984248845540243509899259641013678093033130930403"),J)]));ht.addCode(O.call(V+"_conjugate",H,bt),O.call(V+"_mul",xt,bt,bt),O.call(V+"_conjugate",pt,Bt),O.call(V+"_mul",_t,Bt,Bt),O.call(V+"_conjugate",Lt,At))}function D(){U();const ht=g.addFunction(S+"_prepareG2");ht.addParam("pQ","i32"),ht.addParam("ppreQ","i32"),ht.addLocal("pCoef","i32"),ht.addLocal("i","i32");const O=ht.getCodeBuilder(),H=O.getLocal("pQ");O.i32_add(O.getLocal("pQ"),O.i32_const(j)),O.i32_add(O.getLocal("pQ"),O.i32_const(j*2));const pt=g.alloc(j*3),Lt=O.i32_const(pt),bt=O.i32_const(pt),Bt=O.i32_const(pt+j),At=O.i32_const(pt+2*j),xt=O.i32_add(O.getLocal("ppreQ"),O.i32_const(0)),_t=O.i32_add(O.getLocal("ppreQ"),O.i32_const(j));O.i32_add(O.getLocal("ppreQ"),O.i32_const(j*2));const St=g.alloc(j*3),Gt=O.i32_const(St),Tt=g.alloc(j*3),zt=O.i32_const(Tt);O.i32_const(Tt);const Xt=O.i32_const(Tt+j);O.i32_const(Tt+j*2),ht.addCode(O.call(I+"_normalize",H,xt),O.call(V+"_copy",xt,bt),O.call(V+"_copy",_t,Bt),O.call(V+"_one",At)),ht.addCode(O.setLocal("pCoef",O.i32_add(O.getLocal("ppreQ"),O.i32_const(j*3))),O.setLocal("i",O.i32_const(dt.length-2)),O.block(O.loop(O.call(S+"_prepDblStep",Lt,O.getLocal("pCoef")),O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft))),O.if(O.i32_load8_s(O.getLocal("i"),ft),[...O.call(S+"_prepAddStep",xt,Lt,O.getLocal("pCoef")),...O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft)))]),O.br_if(1,O.i32_eqz(O.getLocal("i"))),O.setLocal("i",O.i32_sub(O.getLocal("i"),O.i32_const(1))),O.br(0)))),ht.addCode(O.call(S+"_mulByQ",xt,Gt),O.call(S+"_mulByQ",Gt,zt)),ht.addCode(O.call(V+"_neg",Xt,Xt),O.call(S+"_prepAddStep",Gt,Lt,O.getLocal("pCoef")),O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft))),O.call(S+"_prepAddStep",zt,Lt,O.getLocal("pCoef")),O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft))))}function ot(){const ht=g.addFunction(S+"__mulBy024Old");ht.addParam("pEll0","i32"),ht.addParam("pEllVW","i32"),ht.addParam("pEllVV","i32"),ht.addParam("pR","i32");const O=ht.getCodeBuilder(),H=O.getLocal("pEll0"),pt=O.getLocal("pEllVV"),Lt=O.getLocal("pEllVW"),bt=O.getLocal("pR"),Bt=g.alloc(R),At=O.i32_const(Bt),xt=O.i32_const(Bt),_t=O.i32_const(Bt+j),St=O.i32_const(Bt+j*2),Gt=O.i32_const(Bt+j*3),Tt=O.i32_const(Bt+j*4),zt=O.i32_const(Bt+j*5);ht.addCode(O.call(V+"_copy",H,xt),O.call(V+"_zero",_t),O.call(V+"_copy",pt,St),O.call(V+"_zero",Gt),O.call(V+"_copy",Lt,Tt),O.call(V+"_zero",zt),O.call(et+"_mul",At,bt,bt))}function st(){const ht=g.addFunction(S+"__mulBy024");ht.addParam("pEll0","i32"),ht.addParam("pEllVW","i32"),ht.addParam("pEllVV","i32"),ht.addParam("pR","i32");const O=ht.getCodeBuilder(),H=O.getLocal("pEll0"),pt=O.getLocal("pEllVV"),Lt=O.getLocal("pEllVW"),bt=O.getLocal("pR"),Bt=O.i32_add(O.getLocal("pR"),O.i32_const(2*C)),At=O.i32_add(O.getLocal("pR"),O.i32_const(4*C)),xt=O.i32_add(O.getLocal("pR"),O.i32_const(6*C)),_t=O.i32_add(O.getLocal("pR"),O.i32_const(8*C)),St=O.i32_add(O.getLocal("pR"),O.i32_const(10*C)),Gt=O.i32_const(g.alloc(j)),Tt=O.i32_const(g.alloc(j)),zt=O.i32_const(g.alloc(j)),Xt=O.i32_const(g.alloc(j)),Kt=O.i32_const(g.alloc(j)),Yt=O.i32_const(g.alloc(j)),re=O.i32_const(g.alloc(j)),ie=O.i32_const(g.alloc(j)),Vt=O.i32_const(g.alloc(j)),ae=O.i32_const(g.alloc(j)),te=O.i32_const(g.alloc(j));ht.addCode(O.call(V+"_mul",bt,H,re),O.call(V+"_mul",At,pt,ie),O.call(V+"_mul",_t,Lt,Vt),O.call(V+"_add",bt,_t,zt),O.call(V+"_add",bt,At,Tt),O.call(V+"_add",Bt,xt,Xt),O.call(V+"_add",Xt,St,Xt),O.call(V+"_mul",Bt,pt,ae),O.call(V+"_add",ae,Vt,Kt),O.call(V+"_mul",O.i32_const(A),Kt,Yt),O.call(V+"_add",Yt,re,bt),O.call(V+"_mul",St,Lt,Kt),O.call(V+"_add",ae,Kt,ae),O.call(V+"_add",Kt,ie,Kt),O.call(V+"_mul",O.i32_const(A),Kt,Yt),O.call(V+"_mul",Bt,H,Kt),O.call(V+"_add",ae,Kt,ae),O.call(V+"_add",Yt,Kt,Bt),O.call(V+"_add",H,pt,Gt),O.call(V+"_mul",Tt,Gt,Kt),O.call(V+"_add",re,ie,te),O.call(V+"_sub",Kt,te,Kt),O.call(V+"_mul",xt,Lt,Yt),O.call(V+"_add",ae,Yt,ae),O.call(V+"_add",At,_t,Gt),O.call(V+"_add",Kt,Yt,At),O.call(V+"_add",pt,Lt,Tt),O.call(V+"_mul",Tt,Gt,Kt),O.call(V+"_add",ie,Vt,te),O.call(V+"_sub",Kt,te,Kt),O.call(V+"_mul",O.i32_const(A),Kt,Yt),O.call(V+"_mul",xt,H,Kt),O.call(V+"_add",ae,Kt,ae),O.call(V+"_add",Yt,Kt,xt),O.call(V+"_mul",St,pt,Kt),O.call(V+"_add",ae,Kt,ae),O.call(V+"_mul",O.i32_const(A),Kt,Yt),O.call(V+"_add",H,Lt,Gt),O.call(V+"_mul",zt,Gt,Kt),O.call(V+"_add",re,Vt,te),O.call(V+"_sub",Kt,te,Kt),O.call(V+"_add",Yt,Kt,_t),O.call(V+"_add",H,pt,Gt),O.call(V+"_add",Gt,Lt,Gt),O.call(V+"_mul",Xt,Gt,Kt),O.call(V+"_sub",Kt,ae,St))}function lt(){const ht=g.addFunction(S+"_millerLoop");ht.addParam("ppreP","i32"),ht.addParam("ppreQ","i32"),ht.addParam("r","i32"),ht.addLocal("pCoef","i32"),ht.addLocal("i","i32");const O=ht.getCodeBuilder(),H=O.getLocal("ppreP"),pt=O.i32_add(O.getLocal("ppreP"),O.i32_const(J)),Lt=O.getLocal("pCoef"),bt=O.i32_add(O.getLocal("pCoef"),O.i32_const(j)),Bt=O.i32_add(O.getLocal("pCoef"),O.i32_const(2*j)),At=g.alloc(j),xt=O.i32_const(At),_t=g.alloc(j),St=O.i32_const(_t),Gt=O.getLocal("r");ht.addCode(O.call(et+"_one",Gt),O.setLocal("pCoef",O.i32_add(O.getLocal("ppreQ"),O.i32_const(j*3))),O.setLocal("i",O.i32_const(dt.length-2)),O.block(O.loop(O.call(et+"_square",Gt,Gt),O.call(V+"_mul1",bt,pt,xt),O.call(V+"_mul1",Bt,H,St),O.call(S+"__mulBy024",Lt,xt,St,Gt),O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft))),O.if(O.i32_load8_s(O.getLocal("i"),ft),[...O.call(V+"_mul1",bt,pt,xt),...O.call(V+"_mul1",Bt,H,St),...O.call(S+"__mulBy024",Lt,xt,St,Gt),...O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft)))]),O.br_if(1,O.i32_eqz(O.getLocal("i"))),O.setLocal("i",O.i32_sub(O.getLocal("i"),O.i32_const(1))),O.br(0)))),ht.addCode(O.call(V+"_mul1",bt,pt,xt),O.call(V+"_mul1",Bt,H,St),O.call(S+"__mulBy024",Lt,xt,St,Gt),O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft))),O.call(V+"_mul1",bt,pt,xt),O.call(V+"_mul1",Bt,H,St),O.call(S+"__mulBy024",Lt,xt,St,Gt),O.setLocal("pCoef",O.i32_add(O.getLocal("pCoef"),O.i32_const(Ft))))}function at(ht){const O=[[[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")]],[[a("1"),a("0")],[a("8376118865763821496583973867626364092589906065868298776909617916018768340080"),a("16469823323077808223889137241176536799009286646108169935659301613961712198316")],[a("21888242871839275220042445260109153167277707414472061641714758635765020556617"),a("0")],[a("11697423496358154304825782922584725312912383441159505038794027105778954184319"),a("303847389135065887422783454877609941456349188919719272345083954437860409601")],[a("21888242871839275220042445260109153167277707414472061641714758635765020556616"),a("0")],[a("3321304630594332808241809054958361220322477375291206261884409189760185844239"),a("5722266937896532885780051958958348231143373700109372999374820235121374419868")],[a("21888242871839275222246405745257275088696311157297823662689037894645226208582"),a("0")],[a("13512124006075453725662431877630910996106405091429524885779419978626457868503"),a("5418419548761466998357268504080738289687024511189653727029736280683514010267")],[a("2203960485148121921418603742825762020974279258880205651966"),a("0")],[a("10190819375481120917420622822672549775783927716138318623895010788866272024264"),a("21584395482704209334823622290379665147239961968378104390343953940207365798982")],[a("2203960485148121921418603742825762020974279258880205651967"),a("0")],[a("18566938241244942414004596690298913868373833782006617400804628704885040364344"),a("16165975933942742336466353786298926857552937457188450663314217659523851788715")]]],H=[[[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")]],[[a("1"),a("0")],[a("21575463638280843010398324269430826099269044274347216827212613867836435027261"),a("10307601595873709700152284273816112264069230130616436755625194854815875713954")],[a("21888242871839275220042445260109153167277707414472061641714758635765020556616"),a("0")],[a("3772000881919853776433695186713858239009073593817195771773381919316419345261"),a("2236595495967245188281701248203181795121068902605861227855261137820944008926")],[a("2203960485148121921418603742825762020974279258880205651966"),a("0")],[a("18429021223477853657660792034369865839114504446431234726392080002137598044644"),a("9344045779998320333812420223237981029506012124075525679208581902008406485703")]],[[a("1"),a("0")],[a("2581911344467009335267311115468803099551665605076196740867805258568234346338"),a("19937756971775647987995932169929341994314640652964949448313374472400716661030")],[a("2203960485148121921418603742825762020974279258880205651966"),a("0")],[a("5324479202449903542726783395506214481928257762400643279780343368557297135718"),a("16208900380737693084919495127334387981393726419856888799917914180988844123039")],[a("21888242871839275220042445260109153167277707414472061641714758635765020556616"),a("0")],[a("13981852324922362344252311234282257507216387789820983642040889267519694726527"),a("7629828391165209371577384193250820201684255241773809077146787135900891633097")]]],pt=g.addFunction(S+"__frobeniusMap"+ht);pt.addParam("x","i32"),pt.addParam("r","i32");const Lt=pt.getCodeBuilder();for(let Bt=0;Bt<6;Bt++){const At=Bt==0?Lt.getLocal("x"):Lt.i32_add(Lt.getLocal("x"),Lt.i32_const(Bt*j)),xt=At,_t=Lt.i32_add(Lt.getLocal("x"),Lt.i32_const(Bt*j+J)),St=Bt==0?Lt.getLocal("r"):Lt.i32_add(Lt.getLocal("r"),Lt.i32_const(Bt*j)),Gt=St,Tt=Lt.i32_add(Lt.getLocal("r"),Lt.i32_const(Bt*j+J)),zt=bt(O[Math.floor(Bt/3)][ht%12],H[Bt%3][ht%6]),Xt=g.alloc([...t.bigInt2BytesLE(_(zt[0]),32),...t.bigInt2BytesLE(_(zt[1]),32)]);ht%2==1?pt.addCode(Lt.call(w+"_copy",xt,Gt),Lt.call(w+"_neg",_t,Tt),Lt.call(V+"_mul",St,Lt.i32_const(Xt),St)):pt.addCode(Lt.call(V+"_mul",At,Lt.i32_const(Xt),St))}function bt(Bt,At){const xt=a(Bt[0]),_t=a(Bt[1]),St=a(At[0]),Gt=a(At[1]),Tt=[xt.times(St).minus(_t.times(Gt)).mod(k),xt.times(Gt).add(_t.times(St)).mod(k)];return Tt[0].isNegative()&&(Tt[0]=Tt[0].add(k)),Tt}}function x(){const ht=g.addFunction(S+"__finalExponentiationFirstChunk");ht.addParam("x","i32"),ht.addParam("r","i32");const O=ht.getCodeBuilder(),H=O.getLocal("x"),pt=H,Lt=O.i32_add(H,O.i32_const(C*6)),bt=O.getLocal("r"),Bt=g.alloc(R),At=O.i32_const(Bt),xt=At,_t=O.i32_const(Bt+C*6),St=O.i32_const(g.alloc(R)),Gt=O.i32_const(g.alloc(R)),Tt=O.i32_const(g.alloc(R));ht.addCode(O.call(m+"_copy",pt,xt),O.call(m+"_neg",Lt,_t),O.call(et+"_inverse",H,St),O.call(et+"_mul",At,St,Gt),O.call(S+"__frobeniusMap2",Gt,Tt),O.call(et+"_mul",Gt,Tt,bt))}function q(){const ht=g.addFunction(S+"__cyclotomicSquare");ht.addParam("x","i32"),ht.addParam("r","i32");const O=ht.getCodeBuilder(),H=O.getLocal("x"),pt=O.i32_add(O.getLocal("x"),O.i32_const(j)),Lt=O.i32_add(O.getLocal("x"),O.i32_const(2*j)),bt=O.i32_add(O.getLocal("x"),O.i32_const(3*j)),Bt=O.i32_add(O.getLocal("x"),O.i32_const(4*j)),At=O.i32_add(O.getLocal("x"),O.i32_const(5*j)),xt=O.getLocal("r"),_t=O.i32_add(O.getLocal("r"),O.i32_const(j)),St=O.i32_add(O.getLocal("r"),O.i32_const(2*j)),Gt=O.i32_add(O.getLocal("r"),O.i32_const(3*j)),Tt=O.i32_add(O.getLocal("r"),O.i32_const(4*j)),zt=O.i32_add(O.getLocal("r"),O.i32_const(5*j)),Xt=O.i32_const(g.alloc(j)),Kt=O.i32_const(g.alloc(j)),Yt=O.i32_const(g.alloc(j)),re=O.i32_const(g.alloc(j)),ie=O.i32_const(g.alloc(j)),Vt=O.i32_const(g.alloc(j)),ae=O.i32_const(g.alloc(j)),te=O.i32_const(g.alloc(j));ht.addCode(O.call(V+"_mul",H,Bt,ae),O.call(V+"_mul",Bt,O.i32_const(A),Xt),O.call(V+"_add",H,Xt,Xt),O.call(V+"_add",H,Bt,te),O.call(V+"_mul",te,Xt,Xt),O.call(V+"_mul",O.i32_const(A),ae,te),O.call(V+"_add",ae,te,te),O.call(V+"_sub",Xt,te,Xt),O.call(V+"_add",ae,ae,Kt),O.call(V+"_mul",bt,Lt,ae),O.call(V+"_mul",Lt,O.i32_const(A),Yt),O.call(V+"_add",bt,Yt,Yt),O.call(V+"_add",bt,Lt,te),O.call(V+"_mul",te,Yt,Yt),O.call(V+"_mul",O.i32_const(A),ae,te),O.call(V+"_add",ae,te,te),O.call(V+"_sub",Yt,te,Yt),O.call(V+"_add",ae,ae,re),O.call(V+"_mul",pt,At,ae),O.call(V+"_mul",At,O.i32_const(A),ie),O.call(V+"_add",pt,ie,ie),O.call(V+"_add",pt,At,te),O.call(V+"_mul",te,ie,ie),O.call(V+"_mul",O.i32_const(A),ae,te),O.call(V+"_add",ae,te,te),O.call(V+"_sub",ie,te,ie),O.call(V+"_add",ae,ae,Vt),O.call(V+"_sub",Xt,H,xt),O.call(V+"_add",xt,xt,xt),O.call(V+"_add",Xt,xt,xt),O.call(V+"_add",Kt,Bt,Tt),O.call(V+"_add",Tt,Tt,Tt),O.call(V+"_add",Kt,Tt,Tt),O.call(V+"_mul",Vt,O.i32_const(Q),te),O.call(V+"_add",te,bt,Gt),O.call(V+"_add",Gt,Gt,Gt),O.call(V+"_add",te,Gt,Gt),O.call(V+"_sub",ie,Lt,St),O.call(V+"_add",St,St,St),O.call(V+"_add",ie,St,St),O.call(V+"_sub",Yt,pt,_t),O.call(V+"_add",_t,_t,_t),O.call(V+"_add",Yt,_t,_t),O.call(V+"_add",re,At,zt),O.call(V+"_add",zt,zt,zt),O.call(V+"_add",re,zt,zt))}function gt(ht,O){const H=Dt(ht).map(_t=>_t==-1?255:_t),pt=g.alloc(H);g.alloc(t.bigInt2BytesLE(ht,32));const Lt=g.addFunction(S+"__cyclotomicExp_"+O);Lt.addParam("x","i32"),Lt.addParam("r","i32"),Lt.addLocal("bit","i32"),Lt.addLocal("i","i32");const bt=Lt.getCodeBuilder(),Bt=bt.getLocal("x"),At=bt.getLocal("r"),xt=bt.i32_const(g.alloc(R));Lt.addCode(bt.call(et+"_conjugate",Bt,xt),bt.call(et+"_one",At),bt.if(bt.teeLocal("bit",bt.i32_load8_s(bt.i32_const(H.length-1),pt)),bt.if(bt.i32_eq(bt.getLocal("bit"),bt.i32_const(1)),bt.call(et+"_mul",At,Bt,At),bt.call(et+"_mul",At,xt,At))),bt.setLocal("i",bt.i32_const(H.length-2)),bt.block(bt.loop(bt.call(S+"__cyclotomicSquare",At,At),bt.if(bt.teeLocal("bit",bt.i32_load8_s(bt.getLocal("i"),pt)),bt.if(bt.i32_eq(bt.getLocal("bit"),bt.i32_const(1)),bt.call(et+"_mul",At,Bt,At),bt.call(et+"_mul",At,xt,At))),bt.br_if(1,bt.i32_eqz(bt.getLocal("i"))),bt.setLocal("i",bt.i32_sub(bt.getLocal("i"),bt.i32_const(1))),bt.br(0))))}function mt(){q(),gt(Ut,"w0");const ht=g.addFunction(S+"__finalExponentiationLastChunk");ht.addParam("x","i32"),ht.addParam("r","i32");const O=ht.getCodeBuilder(),H=O.getLocal("x"),pt=O.getLocal("r"),Lt=O.i32_const(g.alloc(R)),bt=O.i32_const(g.alloc(R)),Bt=O.i32_const(g.alloc(R)),At=O.i32_const(g.alloc(R)),xt=O.i32_const(g.alloc(R)),_t=O.i32_const(g.alloc(R)),St=O.i32_const(g.alloc(R)),Gt=O.i32_const(g.alloc(R)),Tt=O.i32_const(g.alloc(R)),zt=O.i32_const(g.alloc(R)),Xt=O.i32_const(g.alloc(R)),Kt=O.i32_const(g.alloc(R)),Yt=O.i32_const(g.alloc(R)),re=O.i32_const(g.alloc(R)),ie=O.i32_const(g.alloc(R)),Vt=O.i32_const(g.alloc(R)),ae=O.i32_const(g.alloc(R)),te=O.i32_const(g.alloc(R)),Le=O.i32_const(g.alloc(R)),ke=O.i32_const(g.alloc(R)),We=O.i32_const(g.alloc(R));ht.addCode(O.call(S+"__cyclotomicExp_w0",H,Lt),O.call(et+"_conjugate",Lt,Lt),O.call(S+"__cyclotomicSquare",Lt,bt),O.call(S+"__cyclotomicSquare",bt,Bt),O.call(et+"_mul",Bt,bt,At),O.call(S+"__cyclotomicExp_w0",At,xt),O.call(et+"_conjugate",xt,xt),O.call(S+"__cyclotomicSquare",xt,_t),O.call(S+"__cyclotomicExp_w0",_t,St),O.call(et+"_conjugate",St,St),O.call(et+"_conjugate",At,Gt),O.call(et+"_conjugate",St,Tt),O.call(et+"_mul",Tt,xt,zt),O.call(et+"_mul",zt,Gt,Xt),O.call(et+"_mul",Xt,bt,Kt),O.call(et+"_mul",Xt,xt,Yt),O.call(et+"_mul",Yt,H,re),O.call(S+"__frobeniusMap1",Kt,ie),O.call(et+"_mul",ie,re,Vt),O.call(S+"__frobeniusMap2",Xt,ae),O.call(et+"_mul",ae,Vt,te),O.call(et+"_conjugate",H,Le),O.call(et+"_mul",Le,Kt,ke),O.call(S+"__frobeniusMap3",ke,We),O.call(et+"_mul",We,te,pt))}function ut(){x(),mt();const ht=g.addFunction(S+"_finalExponentiation");ht.addParam("x","i32"),ht.addParam("r","i32");const O=ht.getCodeBuilder(),H=O.getLocal("x"),pt=O.getLocal("r"),Lt=O.i32_const(g.alloc(R));ht.addCode(O.call(S+"__finalExponentiationFirstChunk",H,Lt),O.call(S+"__finalExponentiationLastChunk",Lt,pt))}function Ct(){const ht=g.addFunction(S+"_finalExponentiationOld");ht.addParam("x","i32"),ht.addParam("r","i32");const O=a("552484233613224096312617126783173147097382103762957654188882734314196910839907541213974502761540629817009608548654680343627701153829446747810907373256841551006201639677726139946029199968412598804882391702273019083653272047566316584365559776493027495458238373902875937659943504873220554161550525926302303331747463515644711876653177129578303191095900909191624817826566688241804408081892785725967931714097716709526092261278071952560171111444072049229123565057483750161460024353346284167282452756217662335528813519139808291170539072125381230815729071544861602750936964829313608137325426383735122175229541155376346436093930287402089517426973178917569713384748081827255472576937471496195752727188261435633271238710131736096299798168852925540549342330775279877006784354801422249722573783561685179618816480037695005515426162362431072245638324744480"),H=g.alloc(t.bigInt2BytesLE(O,352)),pt=ht.getCodeBuilder();ht.addCode(pt.call(et+"_exp",pt.getLocal("x"),pt.i32_const(H),pt.i32_const(352),pt.getLocal("r")))}const vt=g.alloc(yt),kt=g.alloc(It);function Ot(ht){const O=g.addFunction(S+"_pairingEq"+ht);for(let bt=0;bt<ht;bt++)O.addParam("p_"+bt,"i32"),O.addParam("q_"+bt,"i32");O.addParam("c","i32"),O.setReturnType("i32");const H=O.getCodeBuilder(),pt=H.i32_const(g.alloc(R)),Lt=H.i32_const(g.alloc(R));O.addCode(H.call(et+"_one",pt));for(let bt=0;bt<ht;bt++)O.addCode(H.call(S+"_prepareG1",H.getLocal("p_"+bt),H.i32_const(vt))),O.addCode(H.call(S+"_prepareG2",H.getLocal("q_"+bt),H.i32_const(kt))),O.addCode(H.call(S+"_millerLoop",H.i32_const(vt),H.i32_const(kt),Lt)),O.addCode(H.call(et+"_mul",pt,Lt,pt));O.addCode(H.call(S+"_finalExponentiation",pt,pt)),O.addCode(H.call(et+"_eq",pt,H.getLocal("c")))}function Rt(){const ht=g.addFunction(S+"_pairing");ht.addParam("p","i32"),ht.addParam("q","i32"),ht.addParam("r","i32");const O=ht.getCodeBuilder(),H=O.i32_const(g.alloc(R));ht.addCode(O.call(S+"_prepareG1",O.getLocal("p"),O.i32_const(vt))),ht.addCode(O.call(S+"_prepareG2",O.getLocal("q"),O.i32_const(kt))),ht.addCode(O.call(S+"_millerLoop",O.i32_const(vt),O.i32_const(kt),H)),ht.addCode(O.call(S+"_finalExponentiation",H,O.getLocal("r")))}it(),K(),Qt(),D(),st(),ot(),lt();for(let ht=0;ht<10;ht++)at(ht),g.exportFunction(S+"__frobeniusMap"+ht);Ct(),ut();for(let ht=1;ht<=5;ht++)Ot(ht),g.exportFunction(S+"_pairingEq"+ht);Rt(),g.exportFunction(S+"_pairing"),g.exportFunction(S+"_prepareG1"),g.exportFunction(S+"_prepareG2"),g.exportFunction(S+"_millerLoop"),g.exportFunction(S+"_finalExponentiation"),g.exportFunction(S+"_finalExponentiationOld"),g.exportFunction(S+"__mulBy024"),g.exportFunction(S+"__mulBy024Old"),g.exportFunction(S+"__cyclotomicSquare"),g.exportFunction(S+"__cyclotomicExp_w0")},Ic}var Ec,e2;function O8(){if(e2)return Ec;e2=1;const a=Yn(),t=Co(),e=ru(),n=R0(),i=H0(),o=Q0(),s=K0(),r=N0(),u=z0(),l=J0(),c=Y0();return Ec=function(g,L){const S=L||"bls12381";if(g.modules[S])return S;const k=a("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),E=a("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),G=Math.floor((k.minus(1).bitLength()-1)/64)+1,C=G*8,N=C,J=N*2,j=N*12,R=Math.floor((E.minus(1).bitLength()-1)/64)+1,b=R*8,w=b,Z=g.alloc(t.bigInt2BytesLE(E,w)),P=e(g,k,"f1m","intq");n(g,E,"fr","frm","intr");const V=g.alloc(t.bigInt2BytesLE(B(a(4)),N)),nt=s(g,"g1m","f1m",V);r(g,"frm","frm","frm","frm_mul"),u(g,"pol","frm"),l(g,"qap","frm");const I=i(g,"f1m_neg","f2m","f1m"),y=g.alloc([...t.bigInt2BytesLE(B(a("4")),N),...t.bigInt2BytesLE(B(a("4")),N)]),_=s(g,"g2m","f2m",y);function T(O,H){const pt=g.addFunction(O);pt.addParam("pG","i32"),pt.addParam("pFr","i32"),pt.addParam("pr","i32");const Lt=pt.getCodeBuilder(),bt=Lt.i32_const(g.alloc(b));pt.addCode(Lt.call("frm_fromMontgomery",Lt.getLocal("pFr"),bt),Lt.call(H,Lt.getLocal("pG"),bt,Lt.i32_const(b),Lt.getLocal("pr"))),g.exportFunction(O)}T("g1m_timesFr","g1m_timesScalar"),r(g,"g1m","g1m","frm","g1m_timesFr"),T("g2m_timesFr","g2m_timesScalar"),r(g,"g2m","g2m","frm","g2m_timesFr"),T("g1m_timesFrAffine","g1m_timesScalarAffine"),T("g2m_timesFrAffine","g2m_timesScalarAffine"),c(g,"frm_batchApplyKey","fmr","frm",b,b,b,"frm_mul"),c(g,"g1m_batchApplyKey","g1m","frm",C*3,C*3,b,"g1m_timesFr"),c(g,"g1m_batchApplyKeyMixed","g1m","frm",C*2,C*3,b,"g1m_timesFrAffine"),c(g,"g2m_batchApplyKey","g2m","frm",C*2*3,C*3*2,b,"g2m_timesFr"),c(g,"g2m_batchApplyKeyMixed","g2m","frm",C*2*2,C*3*2,b,"g2m_timesFrAffine");function B(O){return a(O).times(a.one.shiftLeft(N*8)).mod(k)}const Y=[a("3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507"),a("1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569"),a.one],tt=g.alloc([...t.bigInt2BytesLE(B(Y[0]),N),...t.bigInt2BytesLE(B(Y[1]),N),...t.bigInt2BytesLE(B(Y[2]),N)]),$=[a.zero,a.one,a.zero],X=g.alloc([...t.bigInt2BytesLE(B($[0]),N),...t.bigInt2BytesLE(B($[1]),N),...t.bigInt2BytesLE(B($[2]),N)]),F=[[a("352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160"),a("3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758")],[a("1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905"),a("927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582")],[a.one,a.zero]],M=g.alloc([...t.bigInt2BytesLE(B(F[0][0]),N),...t.bigInt2BytesLE(B(F[0][1]),N),...t.bigInt2BytesLE(B(F[1][0]),N),...t.bigInt2BytesLE(B(F[1][1]),N),...t.bigInt2BytesLE(B(F[2][0]),N),...t.bigInt2BytesLE(B(F[2][1]),N)]),W=[[a.zero,a.zero],[a.one,a.zero],[a.zero,a.zero]],A=g.alloc([...t.bigInt2BytesLE(B(W[0][0]),N),...t.bigInt2BytesLE(B(W[0][1]),N),...t.bigInt2BytesLE(B(W[1][0]),N),...t.bigInt2BytesLE(B(W[1][1]),N),...t.bigInt2BytesLE(B(W[2][0]),N),...t.bigInt2BytesLE(B(W[2][1]),N)]),h=g.alloc([...t.bigInt2BytesLE(B(1),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N),...t.bigInt2BytesLE(B(0),N)]);g.alloc([...t.bigInt2BytesLE(B(a(2).modInv(k)),N),...t.bigInt2BytesLE(a(0),N)]);const Q=g.alloc([...t.bigInt2BytesLE(B(1),N),...t.bigInt2BytesLE(B(1),N)]);g.alloc([...t.bigInt2BytesLE(B("4"),N),...t.bigInt2BytesLE(B("4"),N)]);function p(){const O=g.addFunction(I+"_mulNR");O.addParam("x","i32"),O.addParam("pr","i32");const H=O.getCodeBuilder(),pt=H.i32_const(g.alloc(N)),Lt=H.getLocal("x"),bt=H.i32_add(H.getLocal("x"),H.i32_const(N)),Bt=H.getLocal("pr"),At=H.i32_add(H.getLocal("pr"),H.i32_const(N));O.addCode(H.call(P+"_copy",Lt,pt),H.call(P+"_sub",Lt,bt,Bt),H.call(P+"_add",pt,bt,At))}p();const d=o(g,I+"_mulNR","f6m","f2m");function m(){const O=g.addFunction(d+"_mulNR");O.addParam("x","i32"),O.addParam("pr","i32");const H=O.getCodeBuilder(),pt=H.i32_const(g.alloc(N*2));O.addCode(H.call(I+"_copy",H.getLocal("x"),pt),H.call(I+"_mulNR",H.i32_add(H.getLocal("x"),H.i32_const(C*4)),H.getLocal("pr")),H.call(I+"_copy",H.i32_add(H.getLocal("x"),H.i32_const(C*2)),H.i32_add(H.getLocal("pr"),H.i32_const(C*4))),H.call(I+"_copy",pt,H.i32_add(H.getLocal("pr"),H.i32_const(C*2))))}m();const v=i(g,d+"_mulNR","ftm",d),et=a("d201000000010000",16),ct=Mt(et),dt=g.alloc(ct),ft=3*J,Ft=ct.length-1,z=ct.reduce((O,H)=>O+(H!=0?1:0),0)+Ft+1,wt=3*2*C,yt=3*C*2+z*ft,It=!0,Ut=a("15132376222941642752");g.modules[S]={n64q:G,n64r:R,n8q:C,n8r:b,pG1gen:tt,pG1zero:X,pG1b:V,pG2gen:M,pG2zero:A,pG2b:y,pq:g.modules.f1m.pq,pr:Z,pOneT:h,r:E,q:k,prePSize:wt,preQSize:yt};function Dt(O){let H=O;const pt=[];for(;H.gt(a.zero);){if(H.isOdd()){const Lt=2-H.mod(4).toJSNumber();pt.push(Lt),H=H.minus(Lt)}else pt.push(0);H=H.shiftRight(1)}return pt}function Mt(O){let H=O;const pt=[];for(;H.gt(a.zero);)H.isOdd()?pt.push(1):pt.push(0),H=H.shiftRight(1);return pt}function Qt(){const O=g.addFunction(S+"_prepareG1");O.addParam("pP","i32"),O.addParam("ppreP","i32");const H=O.getCodeBuilder();O.addCode(H.call(nt+"_normalize",H.getLocal("pP"),H.getLocal("ppreP")))}function it(){const O=g.addFunction(S+"_prepDblStep");O.addParam("R","i32"),O.addParam("r","i32");const H=O.getCodeBuilder(),pt=H.getLocal("R"),Lt=H.i32_add(H.getLocal("R"),H.i32_const(2*C)),bt=H.i32_add(H.getLocal("R"),H.i32_const(4*C)),Bt=H.getLocal("r"),At=H.i32_add(H.getLocal("r"),H.i32_const(2*C)),xt=H.i32_add(H.getLocal("r"),H.i32_const(4*C)),_t=H.i32_const(g.alloc(J)),St=H.i32_const(g.alloc(J)),Gt=H.i32_const(g.alloc(J)),Tt=H.i32_const(g.alloc(J)),zt=H.i32_const(g.alloc(J));O.addCode(H.call(I+"_square",pt,Bt),H.call(I+"_square",Lt,St),H.call(I+"_square",St,Gt),H.call(I+"_add",St,pt,At),H.call(I+"_square",At,At),H.call(I+"_sub",At,Bt,At),H.call(I+"_sub",At,Gt,At),H.call(I+"_add",At,At,At),H.call(I+"_add",Bt,Bt,Tt),H.call(I+"_add",Tt,Bt,Tt),H.call(I+"_add",pt,Tt,xt),H.call(I+"_square",Tt,zt),H.call(I+"_square",bt,_t),H.call(I+"_sub",zt,At,pt),H.call(I+"_sub",pt,At,pt),H.call(I+"_add",bt,Lt,bt),H.call(I+"_square",bt,bt),H.call(I+"_sub",bt,St,bt),H.call(I+"_sub",bt,_t,bt),H.call(I+"_sub",At,pt,Lt),H.call(I+"_mul",Lt,Tt,Lt),H.call(I+"_add",Gt,Gt,Gt),H.call(I+"_add",Gt,Gt,Gt),H.call(I+"_add",Gt,Gt,Gt),H.call(I+"_sub",Lt,Gt,Lt),H.call(I+"_mul",Tt,_t,At),H.call(I+"_add",At,At,At),H.call(I+"_neg",At,At),H.call(I+"_square",xt,xt),H.call(I+"_sub",xt,Bt,xt),H.call(I+"_sub",xt,zt,xt),H.call(I+"_add",St,St,St),H.call(I+"_add",St,St,St),H.call(I+"_sub",xt,St,xt),H.call(I+"_mul",bt,_t,Bt),H.call(I+"_add",Bt,Bt,Bt))}function K(){const O=g.addFunction(S+"_prepAddStep");O.addParam("R","i32"),O.addParam("Q","i32"),O.addParam("r","i32");const H=O.getCodeBuilder(),pt=H.getLocal("R"),Lt=H.i32_add(H.getLocal("R"),H.i32_const(2*C)),bt=H.i32_add(H.getLocal("R"),H.i32_const(4*C)),Bt=H.getLocal("Q"),At=H.i32_add(H.getLocal("Q"),H.i32_const(2*C)),xt=H.getLocal("r"),_t=H.i32_add(H.getLocal("r"),H.i32_const(2*C)),St=H.i32_add(H.getLocal("r"),H.i32_const(4*C)),Gt=H.i32_const(g.alloc(J)),Tt=H.i32_const(g.alloc(J)),zt=H.i32_const(g.alloc(J)),Xt=H.i32_const(g.alloc(J)),Kt=H.i32_const(g.alloc(J)),Yt=H.i32_const(g.alloc(J)),re=H.i32_const(g.alloc(J)),ie=H.i32_const(g.alloc(J)),Vt=H.i32_const(g.alloc(J)),ae=H.i32_const(g.alloc(J)),te=H.i32_const(g.alloc(J));O.addCode(H.call(I+"_square",bt,Gt),H.call(I+"_square",At,Tt),H.call(I+"_mul",Gt,Bt,Xt),H.call(I+"_add",At,bt,_t),H.call(I+"_square",_t,_t),H.call(I+"_sub",_t,Tt,_t),H.call(I+"_sub",_t,Gt,_t),H.call(I+"_mul",_t,Gt,_t),H.call(I+"_sub",Xt,pt,Kt),H.call(I+"_square",Kt,Yt),H.call(I+"_add",Yt,Yt,re),H.call(I+"_add",re,re,re),H.call(I+"_mul",re,Kt,ie),H.call(I+"_sub",_t,Lt,Vt),H.call(I+"_sub",Vt,Lt,Vt),H.call(I+"_mul",Vt,Bt,St),H.call(I+"_mul",re,pt,ae),H.call(I+"_square",Vt,pt),H.call(I+"_sub",pt,ie,pt),H.call(I+"_sub",pt,ae,pt),H.call(I+"_sub",pt,ae,pt),H.call(I+"_add",bt,Kt,bt),H.call(I+"_square",bt,bt),H.call(I+"_sub",bt,Gt,bt),H.call(I+"_sub",bt,Yt,bt),H.call(I+"_add",At,bt,xt),H.call(I+"_sub",ae,pt,te),H.call(I+"_mul",te,Vt,te),H.call(I+"_mul",Lt,ie,Xt),H.call(I+"_add",Xt,Xt,Xt),H.call(I+"_sub",te,Xt,Lt),H.call(I+"_square",xt,xt),H.call(I+"_sub",xt,Tt,xt),H.call(I+"_square",bt,zt),H.call(I+"_sub",xt,zt,xt),H.call(I+"_add",St,St,St),H.call(I+"_sub",St,xt,St),H.call(I+"_add",bt,bt,xt),H.call(I+"_neg",Vt,Vt),H.call(I+"_add",Vt,Vt,_t))}function U(){const O=g.addFunction(S+"_prepareG2");O.addParam("pQ","i32"),O.addParam("ppreQ","i32"),O.addLocal("pCoef","i32"),O.addLocal("i","i32");const H=O.getCodeBuilder(),pt=H.getLocal("pQ"),Lt=g.alloc(J*3),bt=H.i32_const(Lt),Bt=H.getLocal("ppreQ");O.addCode(H.call(_+"_normalize",pt,Bt),H.if(H.call(_+"_isZero",Bt),H.ret([])),H.call(_+"_copy",Bt,bt),H.setLocal("pCoef",H.i32_add(H.getLocal("ppreQ"),H.i32_const(J*3)))),O.addCode(H.setLocal("i",H.i32_const(ct.length-2)),H.block(H.loop(H.call(S+"_prepDblStep",bt,H.getLocal("pCoef")),H.setLocal("pCoef",H.i32_add(H.getLocal("pCoef"),H.i32_const(ft))),H.if(H.i32_load8_s(H.getLocal("i"),dt),[...H.call(S+"_prepAddStep",bt,Bt,H.getLocal("pCoef")),...H.setLocal("pCoef",H.i32_add(H.getLocal("pCoef"),H.i32_const(ft)))]),H.br_if(1,H.i32_eqz(H.getLocal("i"))),H.setLocal("i",H.i32_sub(H.getLocal("i"),H.i32_const(1))),H.br(0))))}function D(){const O=g.addFunction(d+"_mul1");O.addParam("pA","i32"),O.addParam("pC1","i32"),O.addParam("pR","i32");const H=O.getCodeBuilder(),pt=H.getLocal("pA"),Lt=H.i32_add(H.getLocal("pA"),H.i32_const(N*2)),bt=H.i32_add(H.getLocal("pA"),H.i32_const(N*4)),Bt=H.getLocal("pC1"),At=H.getLocal("pR"),xt=H.i32_add(H.getLocal("pR"),H.i32_const(N*2)),_t=H.i32_add(H.getLocal("pR"),H.i32_const(N*4)),St=H.i32_const(g.alloc(N*2)),Gt=H.i32_const(g.alloc(N*2));O.addCode(H.call(I+"_add",pt,Lt,St),H.call(I+"_add",Lt,bt,Gt),H.call(I+"_mul",Lt,Bt,_t),H.call(I+"_mul",Gt,Bt,At),H.call(I+"_sub",At,_t,At),H.call(I+"_mulNR",At,At),H.call(I+"_mul",St,Bt,xt),H.call(I+"_sub",xt,_t,xt))}D();function ot(){const O=g.addFunction(d+"_mul01");O.addParam("pA","i32"),O.addParam("pC0","i32"),O.addParam("pC1","i32"),O.addParam("pR","i32");const H=O.getCodeBuilder(),pt=H.getLocal("pA"),Lt=H.i32_add(H.getLocal("pA"),H.i32_const(N*2)),bt=H.i32_add(H.getLocal("pA"),H.i32_const(N*4)),Bt=H.getLocal("pC0"),At=H.getLocal("pC1"),xt=H.getLocal("pR"),_t=H.i32_add(H.getLocal("pR"),H.i32_const(N*2)),St=H.i32_add(H.getLocal("pR"),H.i32_const(N*4)),Gt=H.i32_const(g.alloc(N*2)),Tt=H.i32_const(g.alloc(N*2)),zt=H.i32_const(g.alloc(N*2)),Xt=H.i32_const(g.alloc(N*2));O.addCode(H.call(I+"_mul",pt,Bt,Gt),H.call(I+"_mul",Lt,At,Tt),H.call(I+"_add",pt,Lt,zt),H.call(I+"_add",pt,bt,Xt),H.call(I+"_add",Lt,bt,xt),H.call(I+"_mul",xt,At,xt),H.call(I+"_sub",xt,Tt,xt),H.call(I+"_mulNR",xt,xt),H.call(I+"_add",xt,Gt,xt),H.call(I+"_add",Bt,At,_t),H.call(I+"_mul",_t,zt,_t),H.call(I+"_sub",_t,Gt,_t),H.call(I+"_sub",_t,Tt,_t),H.call(I+"_mul",Xt,Bt,St),H.call(I+"_sub",St,Gt,St),H.call(I+"_add",St,Tt,St))}ot();function st(){const O=g.addFunction(v+"_mul014");O.addParam("pA","i32"),O.addParam("pC0","i32"),O.addParam("pC1","i32"),O.addParam("pC4","i32"),O.addParam("pR","i32");const H=O.getCodeBuilder(),pt=H.getLocal("pA"),Lt=H.i32_add(H.getLocal("pA"),H.i32_const(N*6)),bt=H.getLocal("pC0"),Bt=H.getLocal("pC1"),At=H.getLocal("pC4"),xt=H.i32_const(g.alloc(N*6)),_t=H.i32_const(g.alloc(N*6)),St=H.i32_const(g.alloc(N*2)),Gt=H.getLocal("pR"),Tt=H.i32_add(H.getLocal("pR"),H.i32_const(N*6));O.addCode(H.call(d+"_mul01",pt,bt,Bt,xt),H.call(d+"_mul1",Lt,At,_t),H.call(I+"_add",Bt,At,St),H.call(d+"_add",Lt,pt,Tt),H.call(d+"_mul01",Tt,bt,St,Tt),H.call(d+"_sub",Tt,xt,Tt),H.call(d+"_sub",Tt,_t,Tt),H.call(d+"_copy",_t,Gt),H.call(d+"_mulNR",Gt,Gt),H.call(d+"_add",Gt,xt,Gt))}st();function lt(){const O=g.addFunction(S+"_ell");O.addParam("pP","i32"),O.addParam("pCoefs","i32"),O.addParam("pF","i32");const H=O.getCodeBuilder(),pt=H.getLocal("pP"),Lt=H.i32_add(H.getLocal("pP"),H.i32_const(C)),bt=H.getLocal("pF"),Bt=H.getLocal("pCoefs"),At=H.i32_add(H.getLocal("pCoefs"),H.i32_const(N)),xt=H.i32_add(H.getLocal("pCoefs"),H.i32_const(N*2)),_t=H.i32_add(H.getLocal("pCoefs"),H.i32_const(N*3)),St=H.i32_add(H.getLocal("pCoefs"),H.i32_const(N*4)),Gt=g.alloc(N*2),Tt=H.i32_const(Gt),zt=H.i32_const(Gt),Xt=H.i32_const(Gt+N),Kt=g.alloc(N*2),Yt=H.i32_const(Kt),re=H.i32_const(Kt),ie=H.i32_const(Kt+N);O.addCode(H.call(P+"_mul",Bt,Lt,zt),H.call(P+"_mul",At,Lt,Xt),H.call(P+"_mul",xt,pt,re),H.call(P+"_mul",_t,pt,ie),H.call(v+"_mul014",bt,St,Yt,Tt,bt))}lt();function at(){const O=g.addFunction(S+"_millerLoop");O.addParam("ppreP","i32"),O.addParam("ppreQ","i32"),O.addParam("r","i32"),O.addLocal("pCoef","i32"),O.addLocal("i","i32");const H=O.getCodeBuilder(),pt=H.getLocal("ppreP");H.getLocal("ppreQ");const Lt=H.getLocal("pCoef"),bt=H.getLocal("r");O.addCode(H.call(v+"_one",bt),H.if(H.call(nt+"_isZero",pt),H.ret([])),H.if(H.call(nt+"_isZero",H.getLocal("ppreQ")),H.ret([])),H.setLocal("pCoef",H.i32_add(H.getLocal("ppreQ"),H.i32_const(J*3))),H.setLocal("i",H.i32_const(ct.length-2)),H.block(H.loop(H.call(S+"_ell",pt,Lt,bt),H.setLocal("pCoef",H.i32_add(H.getLocal("pCoef"),H.i32_const(ft))),H.if(H.i32_load8_s(H.getLocal("i"),dt),[...H.call(S+"_ell",pt,Lt,bt),...H.setLocal("pCoef",H.i32_add(H.getLocal("pCoef"),H.i32_const(ft)))]),H.call(v+"_square",bt,bt),H.br_if(1,H.i32_eq(H.getLocal("i"),H.i32_const(1))),H.setLocal("i",H.i32_sub(H.getLocal("i"),H.i32_const(1))),H.br(0))),H.call(S+"_ell",pt,Lt,bt)),O.addCode(H.call(v+"_conjugate",bt,bt))}function x(O){const H=[[[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")]],[[a("1"),a("0")],[a("3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760"),a("151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027")],[a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351"),a("0")],[a("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530"),a("1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257")],[a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),a("0")],[a("3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557"),a("877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230")],[a("4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786"),a("0")],[a("151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027"),a("3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760")],[a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),a("0")],[a("1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257"),a("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530")],[a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437"),a("0")],[a("877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230"),a("3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557")]]],pt=[[[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")],[a("1"),a("0")]],[[a("1"),a("0")],[a("0"),a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436")],[a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),a("0")],[a("0"),a("1")],[a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),a("0")],[a("0"),a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350")]],[[a("1"),a("0")],[a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437"),a("0")],[a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),a("0")],[a("4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786"),a("0")],[a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),a("0")],[a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351"),a("0")]]],Lt=g.addFunction(v+"_frobeniusMap"+O);Lt.addParam("x","i32"),Lt.addParam("r","i32");const bt=Lt.getCodeBuilder();for(let At=0;At<6;At++){const xt=At==0?bt.getLocal("x"):bt.i32_add(bt.getLocal("x"),bt.i32_const(At*J)),_t=xt,St=bt.i32_add(bt.getLocal("x"),bt.i32_const(At*J+N)),Gt=At==0?bt.getLocal("r"):bt.i32_add(bt.getLocal("r"),bt.i32_const(At*J)),Tt=Gt,zt=bt.i32_add(bt.getLocal("r"),bt.i32_const(At*J+N)),Xt=Bt(H[Math.floor(At/3)][O%12],pt[At%3][O%6]),Kt=g.alloc([...t.bigInt2BytesLE(B(Xt[0]),C),...t.bigInt2BytesLE(B(Xt[1]),C)]);O%2==1?Lt.addCode(bt.call(P+"_copy",_t,Tt),bt.call(P+"_neg",St,zt),bt.call(I+"_mul",Gt,bt.i32_const(Kt),Gt)):Lt.addCode(bt.call(I+"_mul",xt,bt.i32_const(Kt),Gt))}function Bt(At,xt){const _t=a(At[0]),St=a(At[1]),Gt=a(xt[0]),Tt=a(xt[1]),zt=[_t.times(Gt).minus(St.times(Tt)).mod(k),_t.times(Tt).add(St.times(Gt)).mod(k)];return zt[0].isNegative()&&(zt[0]=zt[0].add(k)),zt}}function q(){const O=g.addFunction(S+"__cyclotomicSquare");O.addParam("x","i32"),O.addParam("r","i32");const H=O.getCodeBuilder(),pt=H.getLocal("x"),Lt=H.i32_add(H.getLocal("x"),H.i32_const(J)),bt=H.i32_add(H.getLocal("x"),H.i32_const(2*J)),Bt=H.i32_add(H.getLocal("x"),H.i32_const(3*J)),At=H.i32_add(H.getLocal("x"),H.i32_const(4*J)),xt=H.i32_add(H.getLocal("x"),H.i32_const(5*J)),_t=H.getLocal("r"),St=H.i32_add(H.getLocal("r"),H.i32_const(J)),Gt=H.i32_add(H.getLocal("r"),H.i32_const(2*J)),Tt=H.i32_add(H.getLocal("r"),H.i32_const(3*J)),zt=H.i32_add(H.getLocal("r"),H.i32_const(4*J)),Xt=H.i32_add(H.getLocal("r"),H.i32_const(5*J)),Kt=H.i32_const(g.alloc(J)),Yt=H.i32_const(g.alloc(J)),re=H.i32_const(g.alloc(J)),ie=H.i32_const(g.alloc(J)),Vt=H.i32_const(g.alloc(J)),ae=H.i32_const(g.alloc(J)),te=H.i32_const(g.alloc(J)),Le=H.i32_const(g.alloc(J));O.addCode(H.call(I+"_mul",pt,At,te),H.call(I+"_mulNR",At,Kt),H.call(I+"_add",pt,Kt,Kt),H.call(I+"_add",pt,At,Le),H.call(I+"_mul",Le,Kt,Kt),H.call(I+"_mulNR",te,Le),H.call(I+"_add",te,Le,Le),H.call(I+"_sub",Kt,Le,Kt),H.call(I+"_add",te,te,Yt),H.call(I+"_mul",Bt,bt,te),H.call(I+"_mulNR",bt,re),H.call(I+"_add",Bt,re,re),H.call(I+"_add",Bt,bt,Le),H.call(I+"_mul",Le,re,re),H.call(I+"_mulNR",te,Le),H.call(I+"_add",te,Le,Le),H.call(I+"_sub",re,Le,re),H.call(I+"_add",te,te,ie),H.call(I+"_mul",Lt,xt,te),H.call(I+"_mulNR",xt,Vt),H.call(I+"_add",Lt,Vt,Vt),H.call(I+"_add",Lt,xt,Le),H.call(I+"_mul",Le,Vt,Vt),H.call(I+"_mulNR",te,Le),H.call(I+"_add",te,Le,Le),H.call(I+"_sub",Vt,Le,Vt),H.call(I+"_add",te,te,ae),H.call(I+"_sub",Kt,pt,_t),H.call(I+"_add",_t,_t,_t),H.call(I+"_add",Kt,_t,_t),H.call(I+"_add",Yt,At,zt),H.call(I+"_add",zt,zt,zt),H.call(I+"_add",Yt,zt,zt),H.call(I+"_mul",ae,H.i32_const(Q),Le),H.call(I+"_add",Le,Bt,Tt),H.call(I+"_add",Tt,Tt,Tt),H.call(I+"_add",Le,Tt,Tt),H.call(I+"_sub",Vt,bt,Gt),H.call(I+"_add",Gt,Gt,Gt),H.call(I+"_add",Vt,Gt,Gt),H.call(I+"_sub",re,Lt,St),H.call(I+"_add",St,St,St),H.call(I+"_add",re,St,St),H.call(I+"_add",ie,xt,Xt),H.call(I+"_add",Xt,Xt,Xt),H.call(I+"_add",ie,Xt,Xt))}function gt(O,H,pt){const Lt=Dt(O).map(Gt=>Gt==-1?255:Gt),bt=g.alloc(Lt),Bt=g.addFunction(S+"__cyclotomicExp_"+pt);Bt.addParam("x","i32"),Bt.addParam("r","i32"),Bt.addLocal("bit","i32"),Bt.addLocal("i","i32");const At=Bt.getCodeBuilder(),xt=At.getLocal("x"),_t=At.getLocal("r"),St=At.i32_const(g.alloc(j));Bt.addCode(At.call(v+"_conjugate",xt,St),At.call(v+"_one",_t),At.if(At.teeLocal("bit",At.i32_load8_s(At.i32_const(Lt.length-1),bt)),At.if(At.i32_eq(At.getLocal("bit"),At.i32_const(1)),At.call(v+"_mul",_t,xt,_t),At.call(v+"_mul",_t,St,_t))),At.setLocal("i",At.i32_const(Lt.length-2)),At.block(At.loop(At.call(S+"__cyclotomicSquare",_t,_t),At.if(At.teeLocal("bit",At.i32_load8_s(At.getLocal("i"),bt)),At.if(At.i32_eq(At.getLocal("bit"),At.i32_const(1)),At.call(v+"_mul",_t,xt,_t),At.call(v+"_mul",_t,St,_t))),At.br_if(1,At.i32_eqz(At.getLocal("i"))),At.setLocal("i",At.i32_sub(At.getLocal("i"),At.i32_const(1))),At.br(0)))),Bt.addCode(At.call(v+"_conjugate",_t,_t))}function mt(){q(),gt(Ut,It,"w0");const O=g.addFunction(S+"_finalExponentiation");O.addParam("x","i32"),O.addParam("r","i32");const H=O.getCodeBuilder(),pt=H.getLocal("x"),Lt=H.getLocal("r"),bt=H.i32_const(g.alloc(j)),Bt=H.i32_const(g.alloc(j)),At=H.i32_const(g.alloc(j)),xt=H.i32_const(g.alloc(j)),_t=H.i32_const(g.alloc(j)),St=H.i32_const(g.alloc(j)),Gt=H.i32_const(g.alloc(j));O.addCode(H.call(v+"_frobeniusMap6",pt,bt),H.call(v+"_inverse",pt,Bt),H.call(v+"_mul",bt,Bt,At),H.call(v+"_copy",At,Bt),H.call(v+"_frobeniusMap2",At,At),H.call(v+"_mul",At,Bt,At),H.call(S+"__cyclotomicSquare",At,Bt),H.call(v+"_conjugate",Bt,Bt),H.call(S+"__cyclotomicExp_w0",At,xt),H.call(S+"__cyclotomicSquare",xt,_t),H.call(v+"_mul",Bt,xt,St),H.call(S+"__cyclotomicExp_w0",St,Bt),H.call(S+"__cyclotomicExp_w0",Bt,bt),H.call(S+"__cyclotomicExp_w0",bt,Gt),H.call(v+"_mul",Gt,_t,Gt),H.call(S+"__cyclotomicExp_w0",Gt,_t),H.call(v+"_conjugate",St,St),H.call(v+"_mul",_t,St,_t),H.call(v+"_mul",_t,At,_t),H.call(v+"_conjugate",At,St),H.call(v+"_mul",Bt,At,Bt),H.call(v+"_frobeniusMap3",Bt,Bt),H.call(v+"_mul",Gt,St,Gt),H.call(v+"_frobeniusMap1",Gt,Gt),H.call(v+"_mul",xt,bt,xt),H.call(v+"_frobeniusMap2",xt,xt),H.call(v+"_mul",xt,Bt,xt),H.call(v+"_mul",xt,Gt,xt),H.call(v+"_mul",xt,_t,Lt))}function ut(){const O=g.addFunction(S+"_finalExponentiationOld");O.addParam("x","i32"),O.addParam("r","i32");const H=a("322277361516934140462891564586510139908379969514828494218366688025288661041104682794998680497580008899973249814104447692778988208376779573819485263026159588510513834876303014016798809919343532899164848730280942609956670917565618115867287399623286813270357901731510188149934363360381614501334086825442271920079363289954510565375378443704372994881406797882676971082200626541916413184642520269678897559532260949334760604962086348898118982248842634379637598665468817769075878555493752214492790122785850202957575200176084204422751485957336465472324810982833638490904279282696134323072515220044451592646885410572234451732790590013479358343841220074174848221722017083597872017638514103174122784843925578370430843522959600095676285723737049438346544753168912974976791528535276317256904336520179281145394686565050419250614107803233314658825463117900250701199181529205942363159325765991819433914303908860460720581408201373164047773794825411011922305820065611121544561808414055302212057471395719432072209245600258134364584636810093520285711072578721435517884103526483832733289802426157301542744476740008494780363354305116978805620671467071400711358839553375340724899735460480144599782014906586543813292157922220645089192130209334926661588737007768565838519456601560804957985667880395221049249803753582637708560"),pt=g.alloc(t.bigInt2BytesLE(H,544)),Lt=O.getCodeBuilder();O.addCode(Lt.call(v+"_exp",Lt.getLocal("x"),Lt.i32_const(pt),Lt.i32_const(544),Lt.getLocal("r")))}const Ct=g.alloc(wt),vt=g.alloc(yt);function kt(O){const H=g.addFunction(S+"_pairingEq"+O);for(let Bt=0;Bt<O;Bt++)H.addParam("p_"+Bt,"i32"),H.addParam("q_"+Bt,"i32");H.addParam("c","i32"),H.setReturnType("i32");const pt=H.getCodeBuilder(),Lt=pt.i32_const(g.alloc(j)),bt=pt.i32_const(g.alloc(j));H.addCode(pt.call(v+"_one",Lt));for(let Bt=0;Bt<O;Bt++)H.addCode(pt.call(S+"_prepareG1",pt.getLocal("p_"+Bt),pt.i32_const(Ct))),H.addCode(pt.call(S+"_prepareG2",pt.getLocal("q_"+Bt),pt.i32_const(vt))),H.addCode(pt.if(pt.i32_eqz(pt.call(nt+"_inGroupAffine",pt.i32_const(Ct))),pt.ret(pt.i32_const(0))),pt.if(pt.i32_eqz(pt.call(_+"_inGroupAffine",pt.i32_const(vt))),pt.ret(pt.i32_const(0)))),H.addCode(pt.call(S+"_millerLoop",pt.i32_const(Ct),pt.i32_const(vt),bt)),H.addCode(pt.call(v+"_mul",Lt,bt,Lt));H.addCode(pt.call(S+"_finalExponentiation",Lt,Lt)),H.addCode(pt.call(v+"_eq",Lt,pt.getLocal("c")))}function Ot(){const O=g.addFunction(S+"_pairing");O.addParam("p","i32"),O.addParam("q","i32"),O.addParam("r","i32");const H=O.getCodeBuilder(),pt=H.i32_const(g.alloc(j));O.addCode(H.call(S+"_prepareG1",H.getLocal("p"),H.i32_const(Ct))),O.addCode(H.call(S+"_prepareG2",H.getLocal("q"),H.i32_const(vt))),O.addCode(H.call(S+"_millerLoop",H.i32_const(Ct),H.i32_const(vt),pt)),O.addCode(H.call(S+"_finalExponentiation",pt,H.getLocal("r")))}function Rt(){const O=g.addFunction(_+"_inGroupAffine");O.addParam("p","i32"),O.setReturnType("i32");const H=O.getCodeBuilder(),pt=[a("2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279894"),a("2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279893")],Lt=a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),bt=[a("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530"),a("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530")],Bt=H.i32_const(g.alloc([...t.bigInt2BytesLE(B(pt[0]),C),...t.bigInt2BytesLE(B(pt[1]),C)])),At=H.i32_const(g.alloc(t.bigInt2BytesLE(B(Lt),C))),xt=H.i32_const(g.alloc([...t.bigInt2BytesLE(B(bt[0]),C),...t.bigInt2BytesLE(B(bt[1]),C)])),_t=H.i32_const(g.alloc(t.bigInt2BytesLE(Ut,8))),St=H.getLocal("p"),Gt=H.i32_add(H.getLocal("p"),H.i32_const(J)),Tt=H.i32_const(g.alloc(N)),zt=H.i32_const(g.alloc(J)),Xt=H.i32_const(g.alloc(J)),Kt=g.alloc(J*2),Yt=H.i32_const(Kt),re=H.i32_const(Kt),ie=H.i32_const(Kt),Vt=H.i32_const(Kt+N),ae=H.i32_const(Kt+J),te=H.i32_const(Kt+J),Le=H.i32_const(Kt+J+N),ke=g.alloc(J*3),We=H.i32_const(ke),vo=H.i32_const(ke),vi=H.i32_const(ke),Fi=H.i32_const(ke+N),Fo=H.i32_const(ke+J),Si=H.i32_const(ke+J),_i=H.i32_const(ke+J+N),So=H.i32_const(ke+J*2);O.addCode(H.if(H.call(_+"_isZeroAffine",H.getLocal("p")),H.ret(H.i32_const(1))),H.if(H.i32_eqz(H.call(_+"_inCurveAffine",H.getLocal("p"))),H.ret(H.i32_const(0))),H.call(I+"_mul",St,Bt,zt),H.call(I+"_mul",Gt,Bt,Xt),H.call(I+"_mul1",zt,At,re),H.call(I+"_neg",Xt,ae),H.call(I+"_neg",zt,vo),H.call(I+"_mul",Xt,xt,Fo),H.call(P+"_sub",ie,Vt,Tt),H.call(P+"_add",ie,Vt,Vt),H.call(P+"_copy",Tt,ie),H.call(P+"_sub",te,Le,Tt),H.call(P+"_add",te,Le,Le),H.call(P+"_copy",Tt,te),H.call(P+"_add",vi,Fi,Tt),H.call(P+"_sub",vi,Fi,Fi),H.call(P+"_copy",Tt,vi),H.call(P+"_sub",_i,Si,Tt),H.call(P+"_add",Si,_i,_i),H.call(P+"_copy",Tt,Si),H.call(I+"_one",So),H.call(_+"_timesScalar",We,_t,H.i32_const(8),We),H.call(_+"_addMixed",We,Yt,We),H.ret(H.call(_+"_eqMixed",We,H.getLocal("p"))));const ri=g.addFunction(_+"_inGroup");ri.addParam("pIn","i32"),ri.setReturnType("i32");const jn=ri.getCodeBuilder(),ji=jn.i32_const(g.alloc(J*2));ri.addCode(jn.call(_+"_toAffine",jn.getLocal("pIn"),ji),jn.ret(jn.call(_+"_inGroupAffine",ji)))}function ht(){const O=g.addFunction(nt+"_inGroupAffine");O.addParam("p","i32"),O.setReturnType("i32");const H=O.getCodeBuilder(),pt=a("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),Lt=a("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),bt=Ut.times(Ut).minus(a.one).divide(a(3)),Bt=H.i32_const(g.alloc(t.bigInt2BytesLE(B(pt),C))),At=H.i32_const(g.alloc(t.bigInt2BytesLE(B(Lt),C))),xt=H.i32_const(g.alloc(t.bigInt2BytesLE(bt,16))),_t=H.getLocal("p"),St=H.i32_add(H.getLocal("p"),H.i32_const(N)),Gt=g.alloc(N*3),Tt=H.i32_const(Gt),zt=H.i32_const(Gt),Xt=H.i32_const(Gt+N);H.i32_const(Gt+2*N);const Kt=g.alloc(N*2),Yt=H.i32_const(Kt),re=H.i32_const(Kt),ie=H.i32_const(Kt+N);O.addCode(H.if(H.call(nt+"_isZeroAffine",H.getLocal("p")),H.ret(H.i32_const(1))),H.if(H.i32_eqz(H.call(nt+"_inCurveAffine",H.getLocal("p"))),H.ret(H.i32_const(0))),H.call(P+"_mul",_t,Bt,zt),H.call(P+"_copy",St,Xt),H.call(P+"_mul",_t,At,re),H.call(P+"_copy",St,ie),H.call(nt+"_doubleAffine",Tt,Tt),H.call(nt+"_subMixed",Tt,H.getLocal("p"),Tt),H.call(nt+"_subMixed",Tt,Yt,Tt),H.call(nt+"_timesScalar",Tt,xt,H.i32_const(16),Tt),H.ret(H.call(nt+"_eqMixed",Tt,Yt)));const Vt=g.addFunction(nt+"_inGroup");Vt.addParam("pIn","i32"),Vt.setReturnType("i32");const ae=Vt.getCodeBuilder(),te=ae.i32_const(g.alloc(N*2));Vt.addCode(ae.call(nt+"_toAffine",ae.getLocal("pIn"),te),ae.ret(ae.call(nt+"_inGroupAffine",te)))}for(let O=0;O<10;O++)x(O),g.exportFunction(v+"_frobeniusMap"+O);ht(),Rt(),K(),it(),Qt(),U(),at(),ut(),mt();for(let O=1;O<=5;O++)kt(O),g.exportFunction(S+"_pairingEq"+O);Ot(),g.exportFunction(S+"_pairing"),g.exportFunction(S+"_prepareG1"),g.exportFunction(S+"_prepareG2"),g.exportFunction(S+"_millerLoop"),g.exportFunction(S+"_finalExponentiation"),g.exportFunction(S+"_finalExponentiationOld"),g.exportFunction(S+"__cyclotomicSquare"),g.exportFunction(S+"__cyclotomicExp_w0"),g.exportFunction(d+"_mul1"),g.exportFunction(d+"_mul01"),g.exportFunction(v+"_mul014"),g.exportFunction(nt+"_inGroupAffine"),g.exportFunction(nt+"_inGroup"),g.exportFunction(_+"_inGroupAffine"),g.exportFunction(_+"_inGroup")},Ec}var n2;function D8(){return n2||(n2=1,rs.buildBn128=P8(),rs.buildBls12381=O8()),rs}var q8=D8();function pl(a){if(typeof a=="bigint"||a.eq!==void 0)return a.toString(10);if(a instanceof Uint8Array)return gl(a,0);if(Array.isArray(a))return a.map(pl);if(typeof a=="object"){const t={};return Object.keys(a).forEach(n=>{t[n]=pl(a[n])}),t}else return a}function Ll(a){if(typeof a=="string"&&/^[0-9]+$/.test(a))return BigInt(a);if(typeof a=="string"&&/^0x[0-9a-fA-F]+$/.test(a))return BigInt(a);if(Array.isArray(a))return a.map(Ll);if(typeof a=="object"){if(a===null)return null;const t={};return Object.keys(a).forEach(n=>{t[n]=Ll(a[n])}),t}else return a}function T8(a){let t=BigInt(0),e=a.length,n=0;const i=new DataView(a.buffer,a.byteOffset,a.byteLength);for(;e>0;)e>=4?(e-=4,t+=BigInt(i.getUint32(e))<<BigInt(n*8),n+=4):e>=2?(e-=2,t+=BigInt(i.getUint16(e))<<BigInt(n*8),n+=2):(e-=1,t+=BigInt(i.getUint8(e))<<BigInt(n*8),n+=1);return t}function R8(a,t){let e=a;const n=new Uint8Array(t),i=new DataView(n.buffer);let o=t;for(;o>0;)o-4>=0?(o-=4,i.setUint32(o,Number(e&BigInt(4294967295))),e=e>>BigInt(32)):o-2>=0?(o-=2,i.setUint16(o,Number(e&BigInt(65535))),e=e>>BigInt(16)):(o-=1,i.setUint8(o,Number(e&BigInt(255))),e=e>>BigInt(8));if(e)throw new Error("Number does not fit in this length");return n}function H8(a){let t=BigInt(0),e=0;const n=new DataView(a.buffer,a.byteOffset,a.byteLength);for(;e<a.length;)e+4<=a.length?(t+=BigInt(n.getUint32(e,!0))<<BigInt(e*8),e+=4):e+4<=a.length?(t+=BigInt(n.getUint16(e,!0))<<BigInt(e*8),e+=2):(t+=BigInt(n.getUint8(e,!0))<<BigInt(e*8),e+=1);return t}function Q8(a,t){let e=a;typeof t>"u"&&(t=Math.floor((D0(a)-1)/8)+1,t==0&&(t=1));const n=new Uint8Array(t),i=new DataView(n.buffer);let o=0;for(;o<t;)o+4<=t?(i.setUint32(o,Number(e&BigInt(4294967295)),!0),o+=4,e=e>>BigInt(32)):o+2<=t?(i.setUint16(Number(o,e&BigInt(65535)),!0),o+=2,e=e>>BigInt(16)):(i.setUint8(Number(o,e&BigInt(255)),!0),o+=1,e=e>>BigInt(8));if(e)throw new Error("Number does not fit in this length");return n}function wl(a,t){if(typeof t=="bigint"||t.eq!==void 0)return t.toString(10);if(t instanceof Uint8Array)return a.toString(a.e(t));if(Array.isArray(t))return t.map(wl.bind(this,a));if(typeof t=="object"){const e={};return Object.keys(t).forEach(i=>{e[i]=wl(a,t[i])}),e}else return t}function ml(a,t){if(typeof t=="string"&&/^[0-9]+$/.test(t))return a.e(t);if(typeof t=="string"&&/^0x[0-9a-fA-F]+$/.test(t))return a.e(t);if(Array.isArray(t))return t.map(ml.bind(this,a));if(typeof t=="object"){if(t===null)return null;const e={};return Object.keys(t).forEach(i=>{e[i]=ml(a,t[i])}),e}else return t}const K8=Object.freeze(Object.defineProperty({__proto__:null,beBuff2int:T8,beInt2Buff:R8,leBuff2int:H8,leInt2Buff:Q8,stringifyBigInts:pl,stringifyFElements:wl,unstringifyBigInts:Ll,unstringifyFElements:ml},Symbol.toStringTag,{value:"Module"}));function bl(a){if(typeof a=="bigint"||a.eq!==void 0)return a.toString(10);if(Array.isArray(a))return a.map(bl);if(typeof a=="object"){const t={};return Object.keys(a).forEach(n=>{t[n]=bl(a[n])}),t}else return a}function yl(a){if(typeof a=="string"&&/^[0-9]+$/.test(a))return ne(a);if(typeof a=="string"&&/^0x[0-9a-fA-F]+$/.test(a))return ne(a);if(Array.isArray(a))return a.map(yl);if(typeof a=="object"){const t={};return Object.keys(a).forEach(n=>{t[n]=yl(a[n])}),t}else return a}function N8(a){let t=ne.zero;for(let e=0;e<a.length;e++){const n=ne(a[a.length-e-1]);t=t.add(n.shiftLeft(e*8))}return t}function z8(a,t){let e=a,n=t-1;const i=new Uint8Array(t);for(;e.gt(ne.zero)&&n>=0;){let o=Number(e.and(ne("255")));i[n]=o,n--,e=e.shiftRight(8)}if(!e.eq(ne.zero))throw new Error("Number does not fit in this length");return i}function J8(a){let t=ne.zero;for(let e=0;e<a.length;e++){const n=ne(a[e]);t=t.add(n.shiftLeft(e*8))}return t}function Y8(a,t){let e=a,n=0;const i=new Uint8Array(t);for(;e.gt(ne.zero)&&n<i.length;){let o=Number(e.and(ne(255)));i[n]=o,n++,e=e.shiftRight(8)}if(!e.eq(ne.zero))throw new Error("Number does not fit in this length");return i}const j8=Object.freeze(Object.defineProperty({__proto__:null,beBuff2int:N8,beInt2Buff:z8,leBuff2int:J8,leInt2Buff:Y8,stringifyBigInts:bl,unstringifyBigInts:yl},Symbol.toStringTag,{value:"Module"}));let Kn={};const V8=typeof BigInt=="function";V8?Object.assign(Kn,K8):Object.assign(Kn,j8);const oa=[];for(let a=0;a<256;a++)oa[a]=W8(a,8);function W8(a,t){let e=0,n=a;for(let i=0;i<t;i++)e<<=1,e=e|n&1,n>>=1;return e}Kn.bitReverse=function(t,e){return(oa[t>>>24]|oa[t>>>16&255]<<8|oa[t>>>8&255]<<16|oa[t&255]<<24)>>>32-e};Kn.log2=function(t){return((t&4294901760)!==0?(t&=4294901760,16):0)|((t&4278255360)!==0?(t&=4278255360,8):0)|((t&4042322160)!==0?(t&=4042322160,4):0)|((t&3435973836)!==0?(t&=3435973836,2):0)|(t&2863311530)!==0};Kn.buffReverseBits=function(t,e){const n=t.byteLength/e,i=Kn.log2(n);if(n!=1<<i)throw new Error("Invalid number of pointers");for(let o=0;o<n;o++){const s=Kn.bitReverse(o,i);if(o>s){const r=t.slice(o*e,(o+1)*e);t.set(t.slice(s*e,(s+1)*e),o*e),t.set(r,s*e)}}};Kn.array2buffer=function(a,t){const e=new Uint8Array(t*a.length);for(let n=0;n<a.length;n++)e.set(a[n],n*t);return e};Kn.buffer2array=function(a,t){const e=a.byteLength/t,n=new Array(e);for(let i=0;i<e;i++)n[i]=a.slice(i*t,i*t+t);return n};let{bitReverse:Z8,log2:An,buffReverseBits:j0,stringifyBigInts:X8,unstringifyBigInts:$8,beBuff2int:tI,beInt2Buff:eI,leBuff2int:nI,leInt2Buff:V0,array2buffer:cu,buffer2array:Ms,stringifyFElements:iI,unstringifyFElements:oI}=Kn;const aI=Object.freeze(Object.defineProperty({__proto__:null,array2buffer:cu,beBuff2int:tI,beInt2Buff:eI,bitReverse:Z8,buffReverseBits:j0,buffer2array:Ms,leBuff2int:nI,leInt2Buff:V0,log2:An,stringifyBigInts:X8,stringifyFElements:iI,unstringifyBigInts:$8,unstringifyFElements:oI},Symbol.toStringTag,{value:"Module"})),Xe=1<<30;class Ue{constructor(t){this.buffers=[],this.byteLength=t;for(let e=0;e<t;e+=Xe){const n=Math.min(t-e,Xe);this.buffers.push(new Uint8Array(n))}}slice(t,e){e===void 0&&(e=this.byteLength),t===void 0&&(t=0);const n=e-t,i=Math.floor(t/Xe),o=Math.floor((t+n-1)/Xe);if(i==o||n==0)return this.buffers[i].slice(t%Xe,t%Xe+n);let s,r=i,u=t%Xe,l=n;for(;l>0;){const c=u+l>Xe?Xe-u:l,f=new Uint8Array(this.buffers[r].buffer,this.buffers[r].byteOffset+u,c);if(c==n)return f.slice();s||(n<=Xe?s=new Uint8Array(n):s=new Ue(n)),s.set(f,n-l),l=l-c,r++,u=0}return s}set(t,e){e===void 0&&(e=0);const n=t.byteLength;if(n==0)return;const i=Math.floor(e/Xe),o=Math.floor((e+n-1)/Xe);if(i==o)return t instanceof Ue&&t.buffers.length==1?this.buffers[i].set(t.buffers[0],e%Xe):this.buffers[i].set(t,e%Xe);let s=i,r=e%Xe,u=n;for(;u>0;){const l=r+u>Xe?Xe-r:u,c=t.slice(n-u,n-u+l);new Uint8Array(this.buffers[s].buffer,this.buffers[s].byteOffset+r,l).set(c),u=u-l,s++,r=0}}}function Li(a,t,e,n){return async function(o){const s=Math.floor(o.byteLength/e);if(s*e!==o.byteLength)throw new Error("Invalid buffer size");const r=Math.floor(s/a.concurrency),u=[];for(let g=0;g<a.concurrency;g++){let L;if(g<a.concurrency-1?L=r:L=s-g*r,L==0)continue;const k=[{cmd:"ALLOCSET",var:0,buff:o.slice(g*r*e,g*r*e+L*e)},{cmd:"ALLOC",var:1,len:n*L},{cmd:"CALL",fnName:t,params:[{var:0},{val:L},{var:1}]},{cmd:"GET",out:0,var:1,len:n*L}];u.push(a.queueAction(k))}const l=await Promise.all(u);let c;o instanceof Ue?c=new Ue(s*n):c=new Uint8Array(s*n);let f=0;for(let g=0;g<l.length;g++)c.set(l[g][0],f),f+=l[g][0].byteLength;return c}}class i2{constructor(t,e,n,i){if(this.tm=t,this.prefix=e,this.p=i,this.n8=n,this.type="F1",this.m=1,this.half=oc(i,Wi),this.bitLength=D0(i),this.mask=ac(Gf(Wi,this.bitLength),Wi),this.pOp1=t.alloc(n),this.pOp2=t.alloc(n),this.pOp3=t.alloc(n),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=this.tm.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.n64=Math.floor(n/8),this.n32=Math.floor(n/4),this.n64*8!=this.n8)throw new Error("n8 must be a multiple of 8");this.half=oc(this.p,Wi),this.nqr=this.two;let o=this.exp(this.nqr,this.half);for(;!this.eq(o,this.negone);)this.nqr=this.add(this.nqr,this.one),o=this.exp(this.nqr,this.half);this.shift=this.mul(this.nqr,this.nqr),this.shiftInv=this.inv(this.shift),this.s=0;let s=ac(this.p,Wi);for(;!I8(s);)this.s=this.s+1,s=oc(s,Wi);this.w=[],this.w[this.s]=this.exp(this.nqr,s);for(let r=this.s-1;r>=0;r--)this.w[r]=this.square(this.w[r+1]);if(!this.eq(this.w[0],this.one))throw new Error("Error calculating roots of unity");this.batchToMontgomery=Li(t,e+"_batchToMontgomery",this.n8,this.n8),this.batchFromMontgomery=Li(t,e+"_batchFromMontgomery",this.n8,this.n8)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){return this.op2("_add",t,e)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,e){return e instanceof Uint8Array||(e=ma(bn(e))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}isNegative(t){return this.op1Bool("_isNegative",t)}e(t,e){if(t instanceof Uint8Array)return t;let n=bn(t,e);A8(n)?(n=E8(n),Of(n,this.p)&&(n=Pf(n,this.p)),n=ac(this.p,n)):Of(n,this.p)&&(n=Pf(n,this.p));const i=V0(n,this.n8);return this.toMontgomery(i)}toString(t,e){const n=this.fromMontgomery(t),i=gl(n,0);return b8(i,e)}fromRng(t){let e;const n=new Uint8Array(this.n8);do{e=y8;for(let i=0;i<this.n64;i++)e=q0(e,Gf(t.nextU64(),64*i));e=v8(e,this.mask)}while(B8(e,this.p));return Uf(n,0,e,this.n8),n}random(){return this.fromRng(ou())}toObject(t){const e=this.fromMontgomery(t);return gl(e,0)}fromObject(t){const e=new Uint8Array(this.n8);return Uf(e,0,t,this.n8),this.toMontgomery(e)}toRprLE(t,e,n){t.set(this.fromMontgomery(n),e)}toRprBE(t,e,n){const i=this.fromMontgomery(n);for(let o=0;o<this.n8/2;o++){const s=i[o];i[o]=i[this.n8-1-o],i[this.n8-1-o]=s}t.set(i,e)}fromRprLE(t,e){e=e||0;const n=t.slice(e,e+this.n8);return this.toMontgomery(n)}async batchInverse(t){let e=!1;const n=this.n8,i=this.n8;Array.isArray(t)?(t=cu(t,n),e=!0):t=t.slice(0,t.byteLength);const o=Math.floor(t.byteLength/n);if(o*n!==t.byteLength)throw new Error("Invalid buffer size");const s=Math.floor(o/this.tm.concurrency),r=[];for(let f=0;f<this.tm.concurrency;f++){let g;if(f<this.tm.concurrency-1?g=s:g=o-f*s,g==0)continue;const S=[{cmd:"ALLOCSET",var:0,buff:t.slice(f*s*n,f*s*n+g*n)},{cmd:"ALLOC",var:1,len:i*g},{cmd:"CALL",fnName:this.prefix+"_batchInverse",params:[{var:0},{val:n},{val:g},{var:1},{val:i}]},{cmd:"GET",out:0,var:1,len:i*g}];r.push(this.tm.queueAction(S))}const u=await Promise.all(r);let l;t instanceof Ue?l=new Ue(o*i):l=new Uint8Array(o*i);let c=0;for(let f=0;f<u.length;f++)l.set(u[f][0],c),c+=u[f][0].byteLength;return e?Ms(l,i):l}}class o2{constructor(t,e,n){this.tm=t,this.prefix=e,this.F=n,this.type="F2",this.m=n.m*2,this.n8=this.F.n8*2,this.n32=this.F.n32*2,this.n64=this.F.n64*2,this.pOp1=t.alloc(n.n8*2),this.pOp2=t.alloc(n.n8*2),this.pOp3=t.alloc(n.n8*2),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){return this.op2("_add",t,e)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}mul1(t,e){return this.op2("_mul1",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,e){return e instanceof Uint8Array||(e=ma(bn(e))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}e(t,e){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&t.length==2){const n=this.F.e(t[0],e),i=this.F.e(t[1],e),o=new Uint8Array(this.F.n8*2);return o.set(n),o.set(i,this.F.n8*2),o}else throw new Error("invalid F2")}toString(t,e){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8),e);return`[${n}, ${i}]`}fromRng(t){const e=this.F.fromRng(t),n=this.F.fromRng(t),i=new Uint8Array(this.F.n8*2);return i.set(e),i.set(n,this.F.n8),i}random(){return this.fromRng(ou())}toObject(t){const e=this.F.toObject(t.slice(0,this.F.n8)),n=this.F.toObject(t.slice(this.F.n8,this.F.n8*2));return[e,n]}fromObject(t){const e=new Uint8Array(this.F.n8*2),n=this.F.fromObject(t[0]),i=this.F.fromObject(t[1]);return e.set(n),e.set(i,this.F.n8),e}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8)}}class sI{constructor(t,e,n){this.tm=t,this.prefix=e,this.F=n,this.type="F3",this.m=n.m*3,this.n8=this.F.n8*3,this.n32=this.F.n32*3,this.n64=this.F.n64*3,this.pOp1=t.alloc(n.n8*3),this.pOp2=t.alloc(n.n8*3),this.pOp3=t.alloc(n.n8*3),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}add(t,e){return this.op2("_add",t,e)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,e){return e instanceof Uint8Array||(e=ma(bn(e))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.getBuff(this.pOp3,this.n8)}e(t,e){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&t.length==3){const n=this.F.e(t[0],e),i=this.F.e(t[1],e),o=this.F.e(t[2],e),s=new Uint8Array(this.F.n8*3);return s.set(n),s.set(i,this.F.n8),s.set(o,this.F.n8*2),s}else throw new Error("invalid F3")}toString(t,e){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8,this.F.n8*2),e),o=this.F.toString(t.slice(this.F.n8*2),e);return`[${n}, ${i}, ${o}]`}fromRng(t){const e=this.F.fromRng(t),n=this.F.fromRng(t),i=this.F.fromRng(t),o=new Uint8Array(this.F.n8*3);return o.set(e),o.set(n,this.F.n8),o.set(i,this.F.n8*2),o}random(){return this.fromRng(ou())}toObject(t){const e=this.F.toObject(t.slice(0,this.F.n8)),n=this.F.toObject(t.slice(this.F.n8,this.F.n8*2)),i=this.F.toObject(t.slice(this.F.n8*2,this.F.n8*3));return[e,n,i]}fromObject(t){const e=new Uint8Array(this.F.n8*3),n=this.F.fromObject(t[0]),i=this.F.fromObject(t[1]),o=this.F.fromObject(t[2]);return e.set(n),e.set(i,this.F.n8),e.set(o,this.F.n8*2),e}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8,this.F.n8*2)}c3(t){return t.slice(this.F.n8*2)}}class a2{constructor(t,e,n,i,o,s){this.tm=t,this.prefix=e,this.F=n,this.pOp1=t.alloc(n.n8*3),this.pOp2=t.alloc(n.n8*3),this.pOp3=t.alloc(n.n8*3),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,n.n8*3),this.tm.instance.exports[e+"_zeroAffine"](this.pOp1),this.zeroAffine=this.tm.getBuff(this.pOp1,n.n8*2),this.one=this.tm.getBuff(i,n.n8*3),this.g=this.one,this.oneAffine=this.tm.getBuff(i,n.n8*2),this.gAffine=this.oneAffine,this.b=this.tm.getBuff(o,n.n8),s&&(this.cofactor=ma(s)),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.batchLEMtoC=Li(t,e+"_batchLEMtoC",n.n8*2,n.n8),this.batchLEMtoU=Li(t,e+"_batchLEMtoU",n.n8*2,n.n8*2),this.batchCtoLEM=Li(t,e+"_batchCtoLEM",n.n8,n.n8*2),this.batchUtoLEM=Li(t,e+"_batchUtoLEM",n.n8*2,n.n8*2),this.batchToJacobian=Li(t,e+"_batchToJacobian",n.n8*2,n.n8*3),this.batchToAffine=Li(t,e+"_batchToAffine",n.n8*3,n.n8*2)}op2(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}op2bool(t,e,n){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,n),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}op1Affine(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*2)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){if(t.byteLength==this.F.n8*3){if(e.byteLength==this.F.n8*3)return this.op2("_add",t,e);if(e.byteLength==this.F.n8*2)return this.op2("_addMixed",t,e);throw new Error("invalid point size")}else if(t.byteLength==this.F.n8*2){if(e.byteLength==this.F.n8*3)return this.op2("_addMixed",e,t);if(e.byteLength==this.F.n8*2)return this.op2("_addAffine",t,e);throw new Error("invalid point size")}else throw new Error("invalid point size")}sub(t,e){if(t.byteLength==this.F.n8*3){if(e.byteLength==this.F.n8*3)return this.op2("_sub",t,e);if(e.byteLength==this.F.n8*2)return this.op2("_subMixed",t,e);throw new Error("invalid point size")}else if(t.byteLength==this.F.n8*2){if(e.byteLength==this.F.n8*3)return this.op2("_subMixed",e,t);if(e.byteLength==this.F.n8*2)return this.op2("_subAffine",t,e);throw new Error("invalid point size")}else throw new Error("invalid point size")}neg(t){if(t.byteLength==this.F.n8*3)return this.op1("_neg",t);if(t.byteLength==this.F.n8*2)return this.op1Affine("_negAffine",t);throw new Error("invalid point size")}double(t){if(t.byteLength==this.F.n8*3)return this.op1("_double",t);if(t.byteLength==this.F.n8*2)return this.op1("_doubleAffine",t);throw new Error("invalid point size")}isZero(t){if(t.byteLength==this.F.n8*3)return this.op1Bool("_isZero",t);if(t.byteLength==this.F.n8*2)return this.op1Bool("_isZeroAffine",t);throw new Error("invalid point size")}timesScalar(t,e){e instanceof Uint8Array||(e=ma(bn(e)));let n;if(t.byteLength==this.F.n8*3)n=this.prefix+"_timesScalar";else if(t.byteLength==this.F.n8*2)n=this.prefix+"_timesScalarAffine";else throw new Error("invalid point size");return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[n](this.pOp1,this.pOp2,e.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}timesFr(t,e){let n;if(t.byteLength==this.F.n8*3)n=this.prefix+"_timesFr";else if(t.byteLength==this.F.n8*2)n=this.prefix+"_timesFrAffine";else throw new Error("invalid point size");return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[n](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.F.n8*3)}eq(t,e){if(t.byteLength==this.F.n8*3){if(e.byteLength==this.F.n8*3)return this.op2bool("_eq",t,e);if(e.byteLength==this.F.n8*2)return this.op2bool("_eqMixed",t,e);throw new Error("invalid point size")}else if(t.byteLength==this.F.n8*2){if(e.byteLength==this.F.n8*3)return this.op2bool("_eqMixed",e,t);if(e.byteLength==this.F.n8*2)return this.op2bool("_eqAffine",t,e);throw new Error("invalid point size")}else throw new Error("invalid point size")}toAffine(t){if(t.byteLength==this.F.n8*3)return this.op1Affine("_toAffine",t);if(t.byteLength==this.F.n8*2)return t;throw new Error("invalid point size")}toJacobian(t){if(t.byteLength==this.F.n8*3)return t;if(t.byteLength==this.F.n8*2)return this.op1("_toJacobian",t);throw new Error("invalid point size")}toRprUncompressed(t,e,n){if(this.tm.setBuff(this.pOp1,n),n.byteLength==this.F.n8*3)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(n.byteLength!=this.F.n8*2)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoU"](this.pOp1,this.pOp1);const i=this.tm.getBuff(this.pOp1,this.F.n8*2);t.set(i,e)}fromRprUncompressed(t,e){const n=t.slice(e,e+this.F.n8*2);return this.tm.setBuff(this.pOp1,n),this.tm.instance.exports[this.prefix+"_UtoLEM"](this.pOp1,this.pOp1),this.tm.getBuff(this.pOp1,this.F.n8*2)}toRprCompressed(t,e,n){if(this.tm.setBuff(this.pOp1,n),n.byteLength==this.F.n8*3)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(n.byteLength!=this.F.n8*2)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoC"](this.pOp1,this.pOp1);const i=this.tm.getBuff(this.pOp1,this.F.n8);t.set(i,e)}fromRprCompressed(t,e){const n=t.slice(e,e+this.F.n8);return this.tm.setBuff(this.pOp1,n),this.tm.instance.exports[this.prefix+"_CtoLEM"](this.pOp1,this.pOp2),this.tm.getBuff(this.pOp2,this.F.n8*2)}toUncompressed(t){const e=new Uint8Array(this.F.n8*2);return this.toRprUncompressed(e,0,t),e}toRprLEM(t,e,n){if(n.byteLength==this.F.n8*2){t.set(n,e);return}else if(n.byteLength==this.F.n8*3){this.tm.setBuff(this.pOp1,n),this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);const i=this.tm.getBuff(this.pOp1,this.F.n8*2);t.set(i,e)}else throw new Error("invalid point size")}fromRprLEM(t,e){return e=e||0,t.slice(e,e+this.F.n8*2)}toString(t,e){if(t.byteLength==this.F.n8*3){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8,this.F.n8*2),e),o=this.F.toString(t.slice(this.F.n8*2),e);return`[ ${n}, ${i}, ${o} ]`}else if(t.byteLength==this.F.n8*2){const n=this.F.toString(t.slice(0,this.F.n8),e),i=this.F.toString(t.slice(this.F.n8),e);return`[ ${n}, ${i} ]`}else throw new Error("invalid point size")}isValid(t){if(this.isZero(t))return!0;const e=this.F,n=this.toAffine(t),i=n.slice(0,this.F.n8),o=n.slice(this.F.n8,this.F.n8*2),s=e.add(e.mul(e.square(i),i),this.b),r=e.square(o);return e.eq(s,r)}fromRng(t){const e=this.F;let n=[],i,o;do n[0]=e.fromRng(t),i=t.nextBool(),o=e.add(e.mul(e.square(n[0]),n[0]),this.b);while(!e.isSquare(o));n[1]=e.sqrt(o);const s=e.isNegative(n[1]);i^s&&(n[1]=e.neg(n[1]));let r=new Uint8Array(this.F.n8*2);return r.set(n[0]),r.set(n[1],this.F.n8),this.cofactor&&(r=this.timesScalar(r,this.cofactor)),r}toObject(t){if(this.isZero(t))return[this.F.toObject(this.F.zero),this.F.toObject(this.F.one),this.F.toObject(this.F.zero)];const e=this.F.toObject(t.slice(0,this.F.n8)),n=this.F.toObject(t.slice(this.F.n8,this.F.n8*2));let i;return t.byteLength==this.F.n8*3?i=this.F.toObject(t.slice(this.F.n8*2,this.F.n8*3)):i=this.F.toObject(this.F.one),[e,n,i]}fromObject(t){const e=this.F.fromObject(t[0]),n=this.F.fromObject(t[1]);let i;if(t.length==3?i=this.F.fromObject(t[2]):i=this.F.one,this.F.isZero(i,this.F.one))return this.zeroAffine;if(this.F.eq(i,this.F.one)){const o=new Uint8Array(this.F.n8*2);return o.set(e),o.set(n,this.F.n8),o}else{const o=new Uint8Array(this.F.n8*3);return o.set(e),o.set(n,this.F.n8),o.set(i,this.F.n8*2),o}}e(t){return t instanceof Uint8Array?t:this.fromObject(t)}x(t){return this.toAffine(t).slice(0,this.F.n8)}y(t){return this.toAffine(t).slice(this.F.n8)}}function W0(a){let e,n;a&&(a.onmessage=function(c){let f;if(c.data?f=c.data:f=c,f[0].cmd=="INIT")i(f[0]).then(function(){a.postMessage(f.result)});else if(f[0].cmd=="TERMINATE")a.close();else{const g=l(f);a.postMessage(g)}});async function i(c){const f=new Uint8Array(c.code),g=await WebAssembly.compile(f);n=new WebAssembly.Memory({initial:c.init,maximum:32767}),e=await WebAssembly.instantiate(g,{env:{memory:n}})}function o(c){const f=new Uint32Array(n.buffer,0,1);for(;f[0]&3;)f[0]++;const g=f[0];if(f[0]+=c,f[0]+c>n.buffer.byteLength){const L=n.buffer.byteLength/65536;let S=Math.floor((f[0]+c)/65536)+1;S>32767&&(S=32767),n.grow(S-L)}return g}function s(c){const f=o(c.byteLength);return u(f,c),f}function r(c,f){const g=new Uint8Array(n.buffer);return new Uint8Array(g.buffer,g.byteOffset+c,f)}function u(c,f){new Uint8Array(n.buffer).set(new Uint8Array(f),c)}function l(c){if(c[0].cmd=="INIT")return i(c[0]);const f={vars:[],out:[]},L=new Uint32Array(n.buffer,0,1)[0];for(let k=0;k<c.length;k++)switch(c[k].cmd){case"ALLOCSET":f.vars[c[k].var]=s(c[k].buff);break;case"ALLOC":f.vars[c[k].var]=o(c[k].len);break;case"SET":u(f.vars[c[k].var],c[k].buff);break;case"CALL":{const E=[];for(let G=0;G<c[k].params.length;G++){const C=c[k].params[G];typeof C.var<"u"?E.push(f.vars[C.var]+(C.offset||0)):typeof C.val<"u"&&E.push(C.val)}e.exports[c[k].fnName](...E);break}case"GET":f.out[c[k].out]=r(f.vars[c[k].var],c[k].len).slice();break;default:throw new Error("Invalid cmd")}const S=new Uint32Array(n.buffer,0,1);return S[0]=L,f.out}return l}const rI=typeof Worker<"u"?Worker:void 0,Cc=25;class s2{constructor(){this.promise=new Promise((t,e)=>{this.reject=e,this.resolve=t})}}function cI(a){return new Promise(t=>setTimeout(t,a))}function lI(a){return globalThis.btoa(a)}const uI=lI("("+W0.toString()+")(self)"),dI="data:application/javascript;base64,"+uI;async function fI(a,t){const e=new hI;e.memory=new WebAssembly.Memory({initial:Cc}),e.u8=new Uint8Array(e.memory.buffer),e.u32=new Uint32Array(e.memory.buffer);const n=await WebAssembly.compile(a.code);if(e.instance=await WebAssembly.instantiate(n,{env:{memory:e.memory}}),e.singleThread=t,e.initalPFree=e.u32[0],e.pq=a.pq,e.pr=a.pr,e.pG1gen=a.pG1gen,e.pG1zero=a.pG1zero,e.pG2gen=a.pG2gen,e.pG2zero=a.pG2zero,e.pOneT=a.pOneT,t)e.code=a.code,e.taskManager=W0(),await e.taskManager([{cmd:"INIT",init:Cc,code:e.code.slice()}]),e.concurrency=1;else{e.workers=[],e.pendingDeferreds=[],e.working=[];let o;typeof navigator=="object"&&navigator.hardwareConcurrency?o=navigator.hardwareConcurrency:o=0,o==0&&(o=2),o>64&&(o=64),e.concurrency=o;for(let r=0;r<o;r++)e.workers[r]=new rI(dI),e.workers[r].addEventListener("message",i(r)),e.working[r]=!1;const s=[];for(let r=0;r<e.workers.length;r++){const u=a.code.slice();s.push(e.postAction(r,[{cmd:"INIT",init:Cc,code:u}],[u.buffer]))}await Promise.all(s)}return e;function i(o){return function(s){let r;s&&s.data?r=s.data:r=s,e.working[o]=!1,e.pendingDeferreds[o].resolve(r),e.processWorks()}}}class hI{constructor(){this.actionQueue=[],this.oldPFree=0}startSyncOp(){if(this.oldPFree!=0)throw new Error("Sync operation in progress");this.oldPFree=this.u32[0]}endSyncOp(){if(this.oldPFree==0)throw new Error("No sync operation in progress");this.u32[0]=this.oldPFree,this.oldPFree=0}postAction(t,e,n,i){if(this.working[t])throw new Error("Posting a job t a working worker");return this.working[t]=!0,this.pendingDeferreds[t]=i||new s2,this.workers[t].postMessage(e,n),this.pendingDeferreds[t].promise}processWorks(){for(let t=0;t<this.workers.length&&this.actionQueue.length>0;t++)if(this.working[t]==!1){const e=this.actionQueue.shift();this.postAction(t,e.data,e.transfers,e.deferred)}}queueAction(t,e){const n=new s2;if(this.singleThread){const i=this.taskManager(t);n.resolve(i)}else this.actionQueue.push({data:t,transfers:e,deferred:n}),this.processWorks();return n.promise}resetMemory(){this.u32[0]=this.initalPFree}allocBuff(t){const e=this.alloc(t.byteLength);return this.setBuff(e,t),e}getBuff(t,e){return this.u8.slice(t,t+e)}setBuff(t,e){this.u8.set(new Uint8Array(e),t)}alloc(t){for(;this.u32[0]&3;)this.u32[0]++;const e=this.u32[0];return this.u32[0]+=t,e}async terminate(){for(let t=0;t<this.workers.length;t++)this.workers[t].postMessage([{cmd:"TERMINATE"}]);await cI(200)}}function Bc(a,t){const e=a[t],n=a.Fr,i=a.tm;a[t].batchApplyKey=async function(o,s,r,u,l){u=u||"affine",l=l||"affine";let c,f,g,L,S;if(t=="G1")u=="jacobian"?(g=e.F.n8*3,c="g1m_batchApplyKey"):(g=e.F.n8*2,c="g1m_batchApplyKeyMixed"),L=e.F.n8*3,l=="jacobian"?S=e.F.n8*3:(f="g1m_batchToAffine",S=e.F.n8*2);else if(t=="G2")u=="jacobian"?(g=e.F.n8*3,c="g2m_batchApplyKey"):(g=e.F.n8*2,c="g2m_batchApplyKeyMixed"),L=e.F.n8*3,l=="jacobian"?S=e.F.n8*3:(f="g2m_batchToAffine",S=e.F.n8*2);else if(t=="Fr")c="frm_batchApplyKey",g=e.n8,L=e.n8,S=e.n8;else throw new Error("Invalid group: "+t);const k=Math.floor(o.byteLength/g),E=Math.floor(k/i.concurrency),G=[];r=n.e(r);let C=n.e(s);for(let R=0;R<i.concurrency;R++){let b;if(R<i.concurrency-1?b=E:b=k-R*E,b==0)continue;const w=[];w.push({cmd:"ALLOCSET",var:0,buff:o.slice(R*E*g,R*E*g+b*g)}),w.push({cmd:"ALLOCSET",var:1,buff:C}),w.push({cmd:"ALLOCSET",var:2,buff:r}),w.push({cmd:"ALLOC",var:3,len:b*Math.max(L,S)}),w.push({cmd:"CALL",fnName:c,params:[{var:0},{val:b},{var:1},{var:2},{var:3}]}),f&&w.push({cmd:"CALL",fnName:f,params:[{var:3},{val:b},{var:3}]}),w.push({cmd:"GET",out:0,var:3,len:b*S}),G.push(i.queueAction(w)),C=n.mul(C,n.exp(r,b))}const N=await Promise.all(G);let J;o instanceof Ue?J=new Ue(k*S):J=new Uint8Array(k*S);let j=0;for(let R=0;R<N.length;R++)J.set(N[R][0],j),j+=N[R][0].byteLength;return J}}function gI(a){const t=a.tm;a.pairing=function(n,i){t.startSyncOp();const o=t.allocBuff(a.G1.toJacobian(n)),s=t.allocBuff(a.G2.toJacobian(i)),r=t.alloc(a.Gt.n8);t.instance.exports[a.name+"_pairing"](o,s,r);const u=t.getBuff(r,a.Gt.n8);return t.endSyncOp(),u},a.pairingEq=async function(){let n,i;arguments.length%2==1?(n=arguments[arguments.length-1],i=(arguments.length-1)/2):(n=a.Gt.one,i=arguments.length/2);const o=[];for(let c=0;c<i;c++){const f=[],g=a.G1.toJacobian(arguments[c*2]);f.push({cmd:"ALLOCSET",var:0,buff:g}),f.push({cmd:"ALLOC",var:1,len:a.prePSize});const L=a.G2.toJacobian(arguments[c*2+1]);f.push({cmd:"ALLOCSET",var:2,buff:L}),f.push({cmd:"ALLOC",var:3,len:a.preQSize}),f.push({cmd:"ALLOC",var:4,len:a.Gt.n8}),f.push({cmd:"CALL",fnName:a.name+"_prepareG1",params:[{var:0},{var:1}]}),f.push({cmd:"CALL",fnName:a.name+"_prepareG2",params:[{var:2},{var:3}]}),f.push({cmd:"CALL",fnName:a.name+"_millerLoop",params:[{var:1},{var:3},{var:4}]}),f.push({cmd:"GET",out:0,var:4,len:a.Gt.n8}),o.push(t.queueAction(f))}const s=await Promise.all(o);t.startSyncOp();const r=t.alloc(a.Gt.n8);t.instance.exports.ftm_one(r);for(let c=0;c<s.length;c++){const f=t.allocBuff(s[c][0]);t.instance.exports.ftm_mul(r,f,r)}t.instance.exports[a.name+"_finalExponentiation"](r,r);const u=t.allocBuff(n),l=!!t.instance.exports.ftm_eq(r,u);return t.endSyncOp(),l},a.prepareG1=function(e){this.tm.startSyncOp();const n=this.tm.allocBuff(e),i=this.tm.alloc(this.prePSize);this.tm.instance.exports[this.name+"_prepareG1"](n,i);const o=this.tm.getBuff(i,this.prePSize);return this.tm.endSyncOp(),o},a.prepareG2=function(e){this.tm.startSyncOp();const n=this.tm.allocBuff(e),i=this.tm.alloc(this.preQSize);this.tm.instance.exports[this.name+"_prepareG2"](n,i);const o=this.tm.getBuff(i,this.preQSize);return this.tm.endSyncOp(),o},a.millerLoop=function(e,n){this.tm.startSyncOp();const i=this.tm.allocBuff(e),o=this.tm.allocBuff(n),s=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_millerLoop"](i,o,s);const r=this.tm.getBuff(s,this.Gt.n8);return this.tm.endSyncOp(),r},a.finalExponentiation=function(e){this.tm.startSyncOp();const n=this.tm.allocBuff(e),i=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_finalExponentiation"](n,i);const o=this.tm.getBuff(i,this.Gt.n8);return this.tm.endSyncOp(),o}}const r2=[1,1,1,1,2,3,4,5,6,7,7,8,9,10,11,12,13,13,14,15,16,16,17,17,17,17,17,17,17,17,17,17];function c2(a,t){const e=a[t],n=e.tm;async function i(s,r,u,l,c){if(!(s instanceof Uint8Array))throw l&&l.error(`${c} _multiExpChunk buffBases is not Uint8Array`),new Error(`${c} _multiExpChunk buffBases is not Uint8Array`);if(!(r instanceof Uint8Array))throw l&&l.error(`${c} _multiExpChunk buffScalars is not Uint8Array`),new Error(`${c} _multiExpChunk buffScalars is not Uint8Array`);u=u||"affine";let f,g;if(t=="G1")u=="affine"?(g="g1m_multiexpAffine_chunk",f=e.F.n8*2):(g="g1m_multiexp_chunk",f=e.F.n8*3);else if(t=="G2")u=="affine"?(g="g2m_multiexpAffine_chunk",f=e.F.n8*2):(g="g2m_multiexp_chunk",f=e.F.n8*3);else throw new Error("Invalid group");const L=Math.floor(s.byteLength/f);if(L==0)return e.zero;const S=Math.floor(r.byteLength/L);if(S*L!=r.byteLength)throw new Error("Scalar size does not match");const k=r2[An(L)],E=Math.floor((S*8-1)/k)+1,G=[];for(let J=0;J<E;J++){const j=[{cmd:"ALLOCSET",var:0,buff:s},{cmd:"ALLOCSET",var:1,buff:r},{cmd:"ALLOC",var:2,len:e.F.n8*3},{cmd:"CALL",fnName:g,params:[{var:0},{var:1},{val:S},{val:L},{val:J*k},{val:Math.min(S*8-J*k,k)},{var:2}]},{cmd:"GET",out:0,var:2,len:e.F.n8*3}];G.push(e.tm.queueAction(j))}const C=await Promise.all(G);let N=e.zero;for(let J=C.length-1;J>=0;J--){if(!e.isZero(N))for(let j=0;j<k;j++)N=e.double(N);N=e.add(N,C[J][0])}return N}async function o(s,r,u,l,c){let L;if(t=="G1")u=="affine"?L=e.F.n8*2:L=e.F.n8*3;else if(t=="G2")u=="affine"?L=e.F.n8*2:L=e.F.n8*3;else throw new Error("Invalid group");const S=Math.floor(s.byteLength/L),k=Math.floor(r.byteLength/S);if(k*S!=r.byteLength)throw new Error("Scalar size does not match");const E=r2[An(S)],G=Math.floor((k*8-1)/E)+1;let C;C=Math.floor(S/(n.concurrency/G)),C>4194304&&(C=4194304),C<1024&&(C=1024);const N=[];for(let R=0;R<S;R+=C){l&&l.debug(`Multiexp start: ${c}: ${R}/${S}`);const b=Math.min(S-R,C),w=s.slice(R*L,(R+b)*L),Z=r.slice(R*k,(R+b)*k);N.push(i(w,Z,u,l,c).then(P=>(l&&l.debug(`Multiexp end: ${c}: ${R}/${S}`),P)))}const J=await Promise.all(N);let j=e.zero;for(let R=J.length-1;R>=0;R--)j=e.add(j,J[R]);return j}e.multiExp=async function(r,u,l,c){return await o(r,u,"jacobian",l,c)},e.multiExpAffine=async function(r,u,l,c){return await o(r,u,"affine",l,c)}}function vc(a,t){const e=a[t],n=a.Fr,i=e.tm;async function o(l,c,f,g,L,S){f=f||"affine",g=g||"affine";const k=14;let E,G,C,N,J,j,R,b;t=="G1"?(f=="affine"?(E=e.F.n8*2,N="g1m_batchToJacobian"):E=e.F.n8*3,G=e.F.n8*3,c&&(b="g1m_fftFinal"),R="g1m_fftJoin",j="g1m_fftMix",g=="affine"?(C=e.F.n8*2,J="g1m_batchToAffine"):C=e.F.n8*3):t=="G2"?(f=="affine"?(E=e.F.n8*2,N="g2m_batchToJacobian"):E=e.F.n8*3,G=e.F.n8*3,c&&(b="g2m_fftFinal"),R="g2m_fftJoin",j="g2m_fftMix",g=="affine"?(C=e.F.n8*2,J="g2m_batchToAffine"):C=e.F.n8*3):t=="Fr"&&(E=e.n8,G=e.n8,C=e.n8,c&&(b="frm_fftFinal"),j="frm_fftMix",R="frm_fftJoin");let w=!1;Array.isArray(l)?(l=cu(l,E),w=!0):l=l.slice(0,l.byteLength);const Z=l.byteLength/E,P=An(Z);if(1<<P!=Z)throw new Error("fft must be multiple of 2");if(P==n.s+1){let Y;return c?Y=await r(l,f,g,L,S):Y=await s(l,f,g,L,S),w?Ms(Y,C):Y}let V;c&&(V=n.inv(n.e(Z)));let nt;j0(l,E);let I,y=Math.min(1<<k,Z),_=Z/y;for(;_<i.concurrency&&y>=16;)_*=2,y/=2;const T=An(y),B=[];for(let Y=0;Y<_;Y++){L&&L.debug(`${S}: fft ${P} mix start: ${Y}/${_}`);const tt=[];tt.push({cmd:"ALLOC",var:0,len:G*y});const $=l.slice(y*Y*E,y*(Y+1)*E);tt.push({cmd:"SET",var:0,buff:$}),N&&tt.push({cmd:"CALL",fnName:N,params:[{var:0},{val:y},{var:0}]});for(let X=1;X<=T;X++)tt.push({cmd:"CALL",fnName:j,params:[{var:0},{val:y},{val:X}]});T==P?(b&&(tt.push({cmd:"ALLOCSET",var:1,buff:V}),tt.push({cmd:"CALL",fnName:b,params:[{var:0},{val:y},{var:1}]})),J&&tt.push({cmd:"CALL",fnName:J,params:[{var:0},{val:y},{var:0}]}),tt.push({cmd:"GET",out:0,var:0,len:y*C})):tt.push({cmd:"GET",out:0,var:0,len:G*y}),B.push(i.queueAction(tt).then(X=>(L&&L.debug(`${S}: fft ${P} mix end: ${Y}/${_}`),X)))}I=await Promise.all(B);for(let Y=0;Y<_;Y++)I[Y]=I[Y][0];for(let Y=T+1;Y<=P;Y++){L&&L.debug(`${S}: fft  ${P}  join: ${Y}/${P}`);const tt=1<<P-Y,$=_/tt,X=[];for(let M=0;M<tt;M++)for(let W=0;W<$/2;W++){const A=n.exp(n.w[Y],W*y),h=n.w[Y],Q=M*$+W,p=M*$+W+$/2,d=[];d.push({cmd:"ALLOCSET",var:0,buff:I[Q]}),d.push({cmd:"ALLOCSET",var:1,buff:I[p]}),d.push({cmd:"ALLOCSET",var:2,buff:A}),d.push({cmd:"ALLOCSET",var:3,buff:h}),d.push({cmd:"CALL",fnName:R,params:[{var:0},{var:1},{val:y},{var:2},{var:3}]}),Y==P?(b&&(d.push({cmd:"ALLOCSET",var:4,buff:V}),d.push({cmd:"CALL",fnName:b,params:[{var:0},{val:y},{var:4}]}),d.push({cmd:"CALL",fnName:b,params:[{var:1},{val:y},{var:4}]})),J&&(d.push({cmd:"CALL",fnName:J,params:[{var:0},{val:y},{var:0}]}),d.push({cmd:"CALL",fnName:J,params:[{var:1},{val:y},{var:1}]})),d.push({cmd:"GET",out:0,var:0,len:y*C}),d.push({cmd:"GET",out:1,var:1,len:y*C})):(d.push({cmd:"GET",out:0,var:0,len:y*G}),d.push({cmd:"GET",out:1,var:1,len:y*G})),X.push(i.queueAction(d).then(m=>(L&&L.debug(`${S}: fft ${P} join  ${Y}/${P}  ${M+1}/${tt} ${W}/${$/2}`),m)))}const F=await Promise.all(X);for(let M=0;M<tt;M++)for(let W=0;W<$/2;W++){const A=M*$+W,h=M*$+W+$/2,Q=F.shift();I[A]=Q[0],I[h]=Q[1]}}if(l instanceof Ue?nt=new Ue(Z*C):nt=new Uint8Array(Z*C),c){nt.set(I[0].slice((y-1)*C));let Y=C;for(let tt=_-1;tt>0;tt--)nt.set(I[tt],Y),Y+=y*C,delete I[tt];nt.set(I[0].slice(0,(y-1)*C),Y),delete I[0]}else for(let Y=0;Y<_;Y++)nt.set(I[Y],y*C*Y),delete I[Y];return w?Ms(nt,C):nt}async function s(l,c,f,g,L){let S,k;S=l.slice(0,l.byteLength/2),k=l.slice(l.byteLength/2,l.byteLength);const E=[];[S,k]=await u(S,k,"fftJoinExt",n.one,n.shift,c,"jacobian",g,L),E.push(o(S,!1,"jacobian",f,g,L)),E.push(o(k,!1,"jacobian",f,g,L));const G=await Promise.all(E);let C;return G[0].byteLength>1<<28?C=new Ue(G[0].byteLength*2):C=new Uint8Array(G[0].byteLength*2),C.set(G[0]),C.set(G[1],G[0].byteLength),C}async function r(l,c,f,g,L){let S,k;S=l.slice(0,l.byteLength/2),k=l.slice(l.byteLength/2,l.byteLength);const E=[];E.push(o(S,!0,c,"jacobian",g,L)),E.push(o(k,!0,c,"jacobian",g,L)),[S,k]=await Promise.all(E);const G=await u(S,k,"fftJoinExtInv",n.one,n.shiftInv,"jacobian",f,g,L);let C;return G[0].byteLength>1<<28?C=new Ue(G[0].byteLength*2):C=new Uint8Array(G[0].byteLength*2),C.set(G[0]),C.set(G[1],G[0].byteLength),C}async function u(l,c,f,g,L,S,k,E,G){let J,j,R,b,w,Z;if(t=="G1")S=="affine"?(w=e.F.n8*2,j="g1m_batchToJacobian"):w=e.F.n8*3,Z=e.F.n8*3,J="g1m_"+f,k=="affine"?(R="g1m_batchToAffine",b=e.F.n8*2):b=e.F.n8*3;else if(t=="G2")S=="affine"?(w=e.F.n8*2,j="g2m_batchToJacobian"):w=e.F.n8*3,J="g2m_"+f,Z=e.F.n8*3,k=="affine"?(R="g2m_batchToAffine",b=e.F.n8*2):b=e.F.n8*3;else if(t=="Fr")w=n.n8,b=n.n8,Z=n.n8,J="frm_"+f;else throw new Error("Invalid group");if(l.byteLength!=c.byteLength)throw new Error("Invalid buffer size");const P=Math.floor(l.byteLength/w);if(P!=1<<An(P))throw new Error("Invalid number of points");let V=Math.floor(P/i.concurrency);V<16&&(V=16),V>65536&&(V=65536);const nt=[];for(let B=0;B<P;B+=V){E&&E.debug(`${G}: fftJoinExt Start: ${B}/${P}`);const Y=Math.min(P-B,V),tt=n.mul(g,n.exp(L,B)),$=[],X=l.slice(B*w,(B+Y)*w),F=c.slice(B*w,(B+Y)*w);$.push({cmd:"ALLOC",var:0,len:Z*Y}),$.push({cmd:"SET",var:0,buff:X}),$.push({cmd:"ALLOC",var:1,len:Z*Y}),$.push({cmd:"SET",var:1,buff:F}),$.push({cmd:"ALLOCSET",var:2,buff:tt}),$.push({cmd:"ALLOCSET",var:3,buff:L}),j&&($.push({cmd:"CALL",fnName:j,params:[{var:0},{val:Y},{var:0}]}),$.push({cmd:"CALL",fnName:j,params:[{var:1},{val:Y},{var:1}]})),$.push({cmd:"CALL",fnName:J,params:[{var:0},{var:1},{val:Y},{var:2},{var:3},{val:n.s}]}),R&&($.push({cmd:"CALL",fnName:R,params:[{var:0},{val:Y},{var:0}]}),$.push({cmd:"CALL",fnName:R,params:[{var:1},{val:Y},{var:1}]})),$.push({cmd:"GET",out:0,var:0,len:Y*b}),$.push({cmd:"GET",out:1,var:1,len:Y*b}),nt.push(i.queueAction($).then(M=>(E&&E.debug(`${G}: fftJoinExt End: ${B}/${P}`),M)))}const I=await Promise.all(nt);let y,_;P*b>1<<28?(y=new Ue(P*b),_=new Ue(P*b)):(y=new Uint8Array(P*b),_=new Uint8Array(P*b));let T=0;for(let B=0;B<I.length;B++)y.set(I[B][0],T),_.set(I[B][1],T),T+=I[B][0].byteLength;return[y,_]}e.fft=async function(l,c,f,g,L){return await o(l,!1,c,f,g,L)},e.ifft=async function(l,c,f,g,L){return await o(l,!0,c,f,g,L)},e.lagrangeEvaluations=async function(l,c,f,g,L){c=c||"affine",f=f||"affine";let S;if(t=="G1")c=="affine"?S=e.F.n8*2:S=e.F.n8*3;else if(t=="G2")c=="affine"?S=e.F.n8*2:S=e.F.n8*3;else if(t=="Fr")S=n.n8;else throw new Error("Invalid group");const k=l.byteLength/S,E=An(k);if(2**E*S!=l.byteLength)throw g&&g.error("lagrangeEvaluations iinvalid input size"),new Error("lagrangeEvaluations invalid Input size");if(E<=n.s)return await e.ifft(l,c,f,g,L);if(E>n.s+1)throw g&&g.error("lagrangeEvaluations input too big"),new Error("lagrangeEvaluations input too big");let G=l.slice(0,l.byteLength/2),C=l.slice(l.byteLength/2,l.byteLength);const N=n.exp(n.shift,k/2),J=n.inv(n.sub(n.one,N));[G,C]=await u(G,C,"prepareLagrangeEvaluation",J,n.shiftInv,c,"jacobian",g,L+" prep");const j=[];j.push(o(G,!0,"jacobian",f,g,L+" t0")),j.push(o(C,!0,"jacobian",f,g,L+" t1")),[G,C]=await Promise.all(j);let R;return G.byteLength>1<<28?R=new Ue(G.byteLength*2):R=new Uint8Array(G.byteLength*2),R.set(G),R.set(C,G.byteLength),R},e.fftMix=async function(c){const f=e.F.n8*3;let g,L;if(t=="G1")g="g1m_fftMix",L="g1m_fftJoin";else if(t=="G2")g="g2m_fftMix",L="g2m_fftJoin";else if(t=="Fr")g="frm_fftMix",L="frm_fftJoin";else throw new Error("Invalid group");const S=Math.floor(c.byteLength/f),k=An(S);let E=1<<An(i.concurrency);S<=E*2&&(E=1);const G=S/E,C=An(G),N=[];for(let w=0;w<E;w++){const Z=[],P=c.slice(w*G*f,(w+1)*G*f);Z.push({cmd:"ALLOCSET",var:0,buff:P});for(let V=1;V<=C;V++)Z.push({cmd:"CALL",fnName:g,params:[{var:0},{val:G},{val:V}]});Z.push({cmd:"GET",out:0,var:0,len:G*f}),N.push(i.queueAction(Z))}const J=await Promise.all(N),j=[];for(let w=0;w<J.length;w++)j[w]=J[w][0];for(let w=C+1;w<=k;w++){const Z=1<<k-w,P=E/Z,V=[];for(let I=0;I<Z;I++)for(let y=0;y<P/2;y++){const _=n.exp(n.w[w],y*G),T=n.w[w],B=I*P+y,Y=I*P+y+P/2,tt=[];tt.push({cmd:"ALLOCSET",var:0,buff:j[B]}),tt.push({cmd:"ALLOCSET",var:1,buff:j[Y]}),tt.push({cmd:"ALLOCSET",var:2,buff:_}),tt.push({cmd:"ALLOCSET",var:3,buff:T}),tt.push({cmd:"CALL",fnName:L,params:[{var:0},{var:1},{val:G},{var:2},{var:3}]}),tt.push({cmd:"GET",out:0,var:0,len:G*f}),tt.push({cmd:"GET",out:1,var:1,len:G*f}),V.push(i.queueAction(tt))}const nt=await Promise.all(V);for(let I=0;I<Z;I++)for(let y=0;y<P/2;y++){const _=I*P+y,T=I*P+y+P/2,B=nt.shift();j[_]=B[0],j[T]=B[1]}}let R;c instanceof Ue?R=new Ue(S*f):R=new Uint8Array(S*f);let b=0;for(let w=0;w<E;w++)R.set(j[w],b),b+=j[w].byteLength;return R},e.fftJoin=async function(c,f,g,L){const S=e.F.n8*3;let k;if(t=="G1")k="g1m_fftJoin";else if(t=="G2")k="g2m_fftJoin";else if(t=="Fr")k="frm_fftJoin";else throw new Error("Invalid group");if(c.byteLength!=f.byteLength)throw new Error("Invalid buffer size");const E=Math.floor(c.byteLength/S);if(E!=1<<An(E))throw new Error("Invalid number of points");let G=1<<An(i.concurrency);E<=G*2&&(G=1);const C=E/G,N=[];for(let w=0;w<G;w++){const Z=[],P=n.mul(g,n.exp(L,w*C)),V=c.slice(w*C*S,(w+1)*C*S),nt=f.slice(w*C*S,(w+1)*C*S);Z.push({cmd:"ALLOCSET",var:0,buff:V}),Z.push({cmd:"ALLOCSET",var:1,buff:nt}),Z.push({cmd:"ALLOCSET",var:2,buff:P}),Z.push({cmd:"ALLOCSET",var:3,buff:L}),Z.push({cmd:"CALL",fnName:k,params:[{var:0},{var:1},{val:C},{var:2},{var:3}]}),Z.push({cmd:"GET",out:0,var:0,len:C*S}),Z.push({cmd:"GET",out:1,var:1,len:C*S}),N.push(i.queueAction(Z))}const J=await Promise.all(N);let j,R;c instanceof Ue?(j=new Ue(E*S),R=new Ue(E*S)):(j=new Uint8Array(E*S),R=new Uint8Array(E*S));let b=0;for(let w=0;w<J.length;w++)j.set(J[w][0],b),R.set(J[w][1],b),b+=J[w][0].byteLength;return[j,R]},e.fftFinal=async function(c,f){const g=e.F.n8*3,L=e.F.n8*2;let S,k;if(t=="G1")S="g1m_fftFinal",k="g1m_batchToAffine";else if(t=="G2")S="g2m_fftFinal",k="g2m_batchToAffine";else throw new Error("Invalid group");const E=Math.floor(c.byteLength/g);if(E!=1<<An(E))throw new Error("Invalid number of points");const G=Math.floor(E/i.concurrency),C=[];for(let R=0;R<i.concurrency;R++){let b;if(R<i.concurrency-1?b=G:b=E-R*G,b==0)continue;const w=[],Z=c.slice(R*G*g,(R*G+b)*g);w.push({cmd:"ALLOCSET",var:0,buff:Z}),w.push({cmd:"ALLOCSET",var:1,buff:f}),w.push({cmd:"CALL",fnName:S,params:[{var:0},{val:b},{var:1}]}),w.push({cmd:"CALL",fnName:k,params:[{var:0},{val:b},{var:0}]}),w.push({cmd:"GET",out:0,var:0,len:b*L}),C.push(i.queueAction(w))}const N=await Promise.all(C);let J;c instanceof Ue?J=new Ue(E*L):J=new Uint8Array(E*L);let j=0;for(let R=N.length-1;R>=0;R--)J.set(N[R][0],j),j+=N[R][0].byteLength;return J}}async function pI(a){const t=await fI(a.wasm,a.singleThread),e={};return e.q=bn(a.wasm.q),e.r=bn(a.wasm.r),e.name=a.name,e.tm=t,e.prePSize=a.wasm.prePSize,e.preQSize=a.wasm.preQSize,e.Fr=new i2(t,"frm",a.n8r,a.r),e.F1=new i2(t,"f1m",a.n8q,a.q),e.F2=new o2(t,"f2m",e.F1),e.G1=new a2(t,"g1m",e.F1,a.wasm.pG1gen,a.wasm.pG1b,a.cofactorG1),e.G2=new a2(t,"g2m",e.F2,a.wasm.pG2gen,a.wasm.pG2b,a.cofactorG2),e.F6=new sI(t,"f6m",e.F2),e.F12=new o2(t,"ftm",e.F6),e.Gt=e.F12,Bc(e,"G1"),Bc(e,"G2"),Bc(e,"Fr"),c2(e,"G1"),c2(e,"G2"),vc(e,"G1"),vc(e,"G2"),vc(e,"Fr"),gI(e),e.array2buffer=function(n,i){const o=new Uint8Array(i*n.length);for(let s=0;s<n.length;s++)o.set(n[s],s*i);return o},e.buffer2array=function(n,i){const o=n.byteLength/i,s=new Array(o);for(let r=0;r<o;r++)s[r]=n.slice(r*i,r*i+i);return s},e}var ea={},vn={},l2;function Bo(){if(l2)return vn;l2=1;const a=Yn();function t(S){let k;return typeof S=="string"&&S.slice(0,2).toLowerCase()=="0x"?k=a(S.slice(2),16):k=a(S),k}function e(S){const k=[],E=t(S);return k.push(E.and(255).toJSNumber()),k.push(E.shiftRight(8).and(255).toJSNumber()),k.push(E.shiftRight(16).and(255).toJSNumber()),k.push(E.shiftRight(24).and(255).toJSNumber()),k}function n(S){const k=[],E=t(S);return k.push(E.and(255).toJSNumber()),k.push(E.shiftRight(8).and(255).toJSNumber()),k.push(E.shiftRight(16).and(255).toJSNumber()),k.push(E.shiftRight(24).and(255).toJSNumber()),k.push(E.shiftRight(32).and(255).toJSNumber()),k.push(E.shiftRight(40).and(255).toJSNumber()),k.push(E.shiftRight(48).and(255).toJSNumber()),k.push(E.shiftRight(56).and(255).toJSNumber()),k}function i(S){for(var k=[],E=0;E<S.length;E++){var G=S.charCodeAt(E);G<128?k.push(G):G<2048?k.push(192|G>>6,128|G&63):G<55296||G>=57344?k.push(224|G>>12,128|G>>6&63,128|G&63):(E++,G=65536+((G&1023)<<10|S.charCodeAt(E)&1023),k.push(240|G>>18,128|G>>12&63,128|G>>6&63,128|G&63))}return k}function o(S){const k=i(S);return[...c(k.length),...k]}function s(S){const k=[];let E=t(S);if(E.isNegative())throw new Error("Number cannot be negative");for(;!E.isZero();)k.push(E.and(127).toJSNumber()),E=E.shiftRight(7);k.length==0&&k.push(0);for(let G=0;G<k.length-1;G++)k[G]=k[G]|128;return k}function r(S){let k,E;const G=S.bitLength().toJSNumber();S<0?(E=!0,k=a.one.shiftLeft(G).add(S)):(E=!1,k=t(S));const C=7-G%7,N=a.one.shiftLeft(C).minus(1).shiftLeft(G),J=(1<<7-C)-1|128,j=s(k.add(N));return E||(j[j.length-1]=j[j.length-1]&J),j}function u(S){let k=t(S);if(k.greater(a("FFFFFFFF",16)))throw new Error("Number too big");if(k.greater(a("7FFFFFFF",16))&&(k=k.minus(a("100000000",16))),k.lesser(a("-80000000",16)))throw new Error("Number too small");return r(k)}function l(S){let k=t(S);if(k.greater(a("FFFFFFFFFFFFFFFF",16)))throw new Error("Number too big");if(k.greater(a("7FFFFFFFFFFFFFFF",16))&&(k=k.minus(a("10000000000000000",16))),k.lesser(a("-8000000000000000",16)))throw new Error("Number too small");return r(k)}function c(S){let k=t(S);if(k.greater(a("FFFFFFFF",16)))throw new Error("Number too big");return s(k)}function f(S){let k=t(S);if(k.greater(a("FFFFFFFFFFFFFFFF",16)))throw new Error("Number too big");return s(k)}function g(S){return Array.from(S,function(k){return("0"+(k&255).toString(16)).slice(-2)}).join("")}function L(S){if(typeof S=="string"){let k=S.split(`
`);for(let E=0;E<k.length;E++)k[E]&&(k[E]="    "+k[E]);return k.join(`
`)}else if(Array.isArray(S)){for(let k=0;k<S.length;k++)S[k]=L(S[k]);return S}}return vn.toNumber=t,vn.u32=e,vn.u64=n,vn.varuint32=c,vn.varuint64=f,vn.varint32=u,vn.varint64=l,vn.string=o,vn.toHexString=g,vn.ident=L,vn}var Fc,u2;function LI(){if(u2)return Fc;u2=1;const a=Bo();class t{constructor(n){this.func=n,this.functionName=n.functionName,this.module=n.module}setLocal(n,i){const o=this.func.localIdxByName[n];if(o===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${n} `);return[...i,33,...a.varuint32(o)]}teeLocal(n,i){const o=this.func.localIdxByName[n];if(o===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${n} `);return[...i,34,...a.varuint32(o)]}getLocal(n){const i=this.func.localIdxByName[n];if(i===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${n} `);return[32,...a.varuint32(i)]}i64_load8_s(n,i,o){const s=i||0,r=o===void 0?0:o;return[...n,48,r,...a.varuint32(s)]}i64_load8_u(n,i,o){const s=i||0,r=o===void 0?0:o;return[...n,49,r,...a.varuint32(s)]}i64_load16_s(n,i,o){const s=i||0,r=o===void 0?1:o;return[...n,50,r,...a.varuint32(s)]}i64_load16_u(n,i,o){const s=i||0,r=o===void 0?1:o;return[...n,51,r,...a.varuint32(s)]}i64_load32_s(n,i,o){const s=i||0,r=o===void 0?2:o;return[...n,52,r,...a.varuint32(s)]}i64_load32_u(n,i,o){const s=i||0,r=o===void 0?2:o;return[...n,53,r,...a.varuint32(s)]}i64_load(n,i,o){const s=i||0,r=o===void 0?3:o;return[...n,41,r,...a.varuint32(s)]}i64_store(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=3,l=i):Array.isArray(o)?(r=i,u=3,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,55,u,...a.varuint32(r)]}i64_store32(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=2,l=i):Array.isArray(o)?(r=i,u=2,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,62,u,...a.varuint32(r)]}i64_store16(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=1,l=i):Array.isArray(o)?(r=i,u=1,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,61,u,...a.varuint32(r)]}i64_store8(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=0,l=i):Array.isArray(o)?(r=i,u=0,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,60,u,...a.varuint32(r)]}i32_load8_s(n,i,o){const s=i||0,r=o===void 0?0:o;return[...n,44,r,...a.varuint32(s)]}i32_load8_u(n,i,o){const s=i||0,r=o===void 0?0:o;return[...n,45,r,...a.varuint32(s)]}i32_load16_s(n,i,o){const s=i||0,r=o===void 0?1:o;return[...n,46,r,...a.varuint32(s)]}i32_load16_u(n,i,o){const s=i||0,r=o===void 0?1:o;return[...n,47,r,...a.varuint32(s)]}i32_load(n,i,o){const s=i||0,r=o===void 0?2:o;return[...n,40,r,...a.varuint32(s)]}i32_store(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=2,l=i):Array.isArray(o)?(r=i,u=2,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,54,u,...a.varuint32(r)]}i32_store16(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=1,l=i):Array.isArray(o)?(r=i,u=1,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,59,u,...a.varuint32(r)]}i32_store8(n,i,o,s){let r,u,l;return Array.isArray(i)?(r=0,u=0,l=i):Array.isArray(o)?(r=i,u=0,l=o):Array.isArray(s)&&(r=i,u=o,l=s),[...n,...l,58,u,...a.varuint32(r)]}call(n,...i){const o=this.module.functionIdxByName[n];if(o===void 0)throw new Error(`Function not defined: Function: ${n}`);return[...[].concat(...i),16,...a.varuint32(o)]}call_indirect(n,...i){return[...[].concat(...i),...n,17,0,0]}if(n,i,o){return o?[...n,4,64,...i,5,...o,11]:[...n,4,64,...i,11]}block(n){return[2,64,...n,11]}loop(...n){return[3,64,...[].concat(...n),11]}br_if(n,i){return[...i,13,...a.varuint32(n)]}br(n){return[12,...a.varuint32(n)]}ret(n){return[...n,15]}drop(n){return[...n,26]}i64_const(n){return[66,...a.varint64(n)]}i32_const(n){return[65,...a.varint32(n)]}i64_eqz(n){return[...n,80]}i64_eq(n,i){return[...n,...i,81]}i64_ne(n,i){return[...n,...i,82]}i64_lt_s(n,i){return[...n,...i,83]}i64_lt_u(n,i){return[...n,...i,84]}i64_gt_s(n,i){return[...n,...i,85]}i64_gt_u(n,i){return[...n,...i,86]}i64_le_s(n,i){return[...n,...i,87]}i64_le_u(n,i){return[...n,...i,88]}i64_ge_s(n,i){return[...n,...i,89]}i64_ge_u(n,i){return[...n,...i,90]}i64_add(n,i){return[...n,...i,124]}i64_sub(n,i){return[...n,...i,125]}i64_mul(n,i){return[...n,...i,126]}i64_div_s(n,i){return[...n,...i,127]}i64_div_u(n,i){return[...n,...i,128]}i64_rem_s(n,i){return[...n,...i,129]}i64_rem_u(n,i){return[...n,...i,130]}i64_and(n,i){return[...n,...i,131]}i64_or(n,i){return[...n,...i,132]}i64_xor(n,i){return[...n,...i,133]}i64_shl(n,i){return[...n,...i,134]}i64_shr_s(n,i){return[...n,...i,135]}i64_shr_u(n,i){return[...n,...i,136]}i64_extend_i32_s(n){return[...n,172]}i64_extend_i32_u(n){return[...n,173]}i64_clz(n){return[...n,121]}i64_ctz(n){return[...n,122]}i32_eqz(n){return[...n,69]}i32_eq(n,i){return[...n,...i,70]}i32_ne(n,i){return[...n,...i,71]}i32_lt_s(n,i){return[...n,...i,72]}i32_lt_u(n,i){return[...n,...i,73]}i32_gt_s(n,i){return[...n,...i,74]}i32_gt_u(n,i){return[...n,...i,75]}i32_le_s(n,i){return[...n,...i,76]}i32_le_u(n,i){return[...n,...i,77]}i32_ge_s(n,i){return[...n,...i,78]}i32_ge_u(n,i){return[...n,...i,79]}i32_add(n,i){return[...n,...i,106]}i32_sub(n,i){return[...n,...i,107]}i32_mul(n,i){return[...n,...i,108]}i32_div_s(n,i){return[...n,...i,109]}i32_div_u(n,i){return[...n,...i,110]}i32_rem_s(n,i){return[...n,...i,111]}i32_rem_u(n,i){return[...n,...i,112]}i32_and(n,i){return[...n,...i,113]}i32_or(n,i){return[...n,...i,114]}i32_xor(n,i){return[...n,...i,115]}i32_shl(n,i){return[...n,...i,116]}i32_shr_s(n,i){return[...n,...i,117]}i32_shr_u(n,i){return[...n,...i,118]}i32_rotl(n,i){return[...n,...i,119]}i32_rotr(n,i){return[...n,...i,120]}i32_wrap_i64(n){return[...n,167]}i32_clz(n){return[...n,103]}i32_ctz(n){return[...n,104]}unreachable(){return[0]}current_memory(){return[63,0]}comment(){return[]}}return Fc=t,Fc}var Sc,d2;function wI(){if(d2)return Sc;d2=1;const a=LI(),t=Bo(),e={i32:127,i64:126,f32:125,f64:124,anyfunc:112,func:96,emptyblock:64};class n{constructor(o,s,r,u,l){if(r=="import")this.fnType="import",this.moduleName=u,this.fieldName=l;else if(r=="internal")this.fnType="internal";else throw new Error("Invalid function fnType: "+r);this.module=o,this.fnName=s,this.params=[],this.locals=[],this.localIdxByName={},this.code=[],this.returnType=null,this.nextLocal=0}addParam(o,s){if(this.localIdxByName[o])throw new Error(`param already exists. Function: ${this.fnName}, Param: ${o} `);const r=this.nextLocal++;this.localIdxByName[o]=r,this.params.push({type:s})}addLocal(o,s,r){const u=r||1;if(this.localIdxByName[o])throw new Error(`local already exists. Function: ${this.fnName}, Param: ${o} `);const l=this.nextLocal++;this.localIdxByName[o]=l,this.locals.push({type:s,length:u})}setReturnType(o){if(this.returnType)throw new Error(`returnType already defined. Function: ${this.fnName}`);this.returnType=o}getSignature(){const o=[...t.varuint32(this.params.length),...this.params.map(r=>e[r.type])],s=this.returnType?[1,e[this.returnType]]:[0];return[96,...o,...s]}getBody(){const o=this.locals.map(r=>[...t.varuint32(r.length),e[r.type]]),s=[...t.varuint32(this.locals.length),...[].concat(...o),...this.code,11];return[...t.varuint32(s.length),...s]}addCode(...o){this.code.push(...[].concat(...o))}getCodeBuilder(){return new a(this)}}return Sc=n,Sc}var _c,f2;function Z0(){if(f2)return _c;f2=1;const a=wI(),t=Bo();class e{constructor(){this.functions=[],this.functionIdxByName={},this.nImportFunctions=0,this.nInternalFunctions=0,this.memory={pagesSize:1,moduleName:"env",fieldName:"memory"},this.free=8,this.datas=[],this.modules={},this.exports=[],this.functionsTable=[]}build(){return this._setSignatures(),new Uint8Array([...t.u32(1836278016),...t.u32(1),...this._buildType(),...this._buildImport(),...this._buildFunctionDeclarations(),...this._buildFunctionsTable(),...this._buildExports(),...this._buildElements(),...this._buildCode(),...this._buildData()])}addFunction(i){if(typeof this.functionIdxByName[i]<"u")throw new Error(`Function already defined: ${i}`);const o=this.functions.length;return this.functionIdxByName[i]=o,this.functions.push(new a(this,i,"internal")),this.nInternalFunctions++,this.functions[o]}addIimportFunction(i,o,s){if(typeof this.functionIdxByName[i]<"u")throw new Error(`Function already defined: ${i}`);if(this.functions.length>0&&this.functions[this.functions.length-1].type=="internal")throw new Error(`Import functions must be declared before internal: ${i}`);let r=s||i;const u=this.functions.length;return this.functionIdxByName[i]=u,this.functions.push(new a(this,i,"import",o,r)),this.nImportFunctions++,this.functions[u]}setMemory(i,o,s){this.memory={pagesSize:i,moduleName:o||"env",fieldName:s||"memory"}}exportFunction(i,o){const s=o||i;if(typeof this.functionIdxByName[i]>"u")throw new Error(`Function not defined: ${i}`);const r=this.functionIdxByName[i];s!=i&&(this.functionIdxByName[s]=r),this.exports.push({exportName:s,idx:r})}addFunctionToTable(i){const o=this.functionIdxByName[i];this.functionsTable.push(o)}addData(i,o){this.datas.push({offset:i,bytes:o})}alloc(i,o){let s,r;(Array.isArray(i)||ArrayBuffer.isView(i))&&typeof o>"u"?(s=i.length,r=i):(s=i,r=o),s=(s-1>>3)+1<<3;const u=this.free;return this.free+=s,r&&this.addData(u,r),u}allocString(i){const s=new globalThis.TextEncoder().encode(i);return this.alloc([...s,0])}_setSignatures(){this.signatures=[];const i={};if(this.functionsTable.length>0){const o=this.functions[this.functionsTable[0]].getSignature(),s="s_"+t.toHexString(o);i[s]=0,this.signatures.push(o)}for(let o=0;o<this.functions.length;o++){const s=this.functions[o].getSignature(),r="s_"+t.toHexString(s);typeof i[r]>"u"&&(i[r]=this.signatures.length,this.signatures.push(s)),this.functions[o].signatureIdx=i[r]}}_buildSection(i,o){return[i,...t.varuint32(o.length),...o]}_buildType(){return this._buildSection(1,[...t.varuint32(this.signatures.length),...[].concat(...this.signatures)])}_buildImport(){const i=[];i.push([...t.string(this.memory.moduleName),...t.string(this.memory.fieldName),2,0,...t.varuint32(this.memory.pagesSize)]);for(let o=0;o<this.nImportFunctions;o++)i.push([...t.string(this.functions[o].moduleName),...t.string(this.functions[o].fieldName),0,...t.varuint32(this.functions[o].signatureIdx)]);return this._buildSection(2,t.varuint32(i.length).concat(...i))}_buildFunctionDeclarations(){const i=[];for(let o=this.nImportFunctions;o<this.nImportFunctions+this.nInternalFunctions;o++)i.push(...t.varuint32(this.functions[o].signatureIdx));return this._buildSection(3,[...t.varuint32(i.length),...i])}_buildFunctionsTable(){return this.functionsTable.length==0?[]:this._buildSection(4,[...t.varuint32(1),112,0,...t.varuint32(this.functionsTable.length)])}_buildElements(){if(this.functionsTable.length==0)return[];const i=[];for(let o=0;o<this.functionsTable.length;o++)i.push(...t.varuint32(this.functionsTable[o]));return this._buildSection(9,[...t.varuint32(1),...t.varuint32(0),65,...t.varint32(0),11,...t.varuint32(this.functionsTable.length),...i])}_buildExports(){const i=[];for(let o=0;o<this.exports.length;o++)i.push([...t.string(this.exports[o].exportName),0,...t.varuint32(this.exports[o].idx)]);return this._buildSection(7,t.varuint32(i.length).concat(...i))}_buildCode(){const i=[];for(let o=this.nImportFunctions;o<this.nImportFunctions+this.nInternalFunctions;o++)i.push(this.functions[o].getBody());return this._buildSection(10,t.varuint32(i.length).concat(...i))}_buildData(){const i=[];i.push([0,65,0,11,4,...t.u32(this.free)]);for(let o=0;o<this.datas.length;o++)i.push([0,65,...t.varint32(this.datas[o].offset),11,...t.varuint32(this.datas[o].bytes.length),...this.datas[o].bytes]);return this._buildSection(11,t.varuint32(i.length).concat(...i))}}return _c=e,_c}var xc,h2;function mI(){if(h2)return xc;h2=1;const a=Bo();class t{constructor(n){this.func=n,this.functionName=n.functionName,this.module=n.module}setLocal(n,i){if(this.func.localIdxByName[n]===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${n} `);return[i,`set_local $${n}`]}teeLocal(n,i){if(this.func.localIdxByName[n]===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${n} `);return[i,`tee_local $${n}`]}getLocal(n){if(this.func.localIdxByName[n]===void 0)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${n} `);return`get_local $${n}`}genLoad(n,i,o,s,r){let u=n;const l=s||0;l>0&&(u+=` offset=${l}`);const c=r===void 0?i:r;return c!=i&&(u+=` align=${1<<c}`),[o,u]}genStore(n,i,o,s,r,u){let l,c,f;typeof r>"u"?(l=0,c=i,f=s):typeof u>"u"?(l=s,c=i,f=r):(l=s,c=r,f=u);let g=n;return l>0&&(g+=` offset=${l}`),c!=i&&(g+=` align=${1<<c}`),[o,f,g]}i64_load8_s(n,i,o){return this.genLoad("i64.load8_s",0,n,i,o)}i64_load8_u(n,i,o){return this.genLoad("i64.load8_u",0,n,i,o)}i64_load16_s(n,i,o){return this.genLoad("i64.load16_s",1,n,i,o)}i64_load16_u(n,i,o){return this.genLoad("i64.load16_u",1,n,i,o)}i64_load32_s(n,i,o){return this.genLoad("i64.load32_s",2,n,i,o)}i64_load32_u(n,i,o){return this.genLoad("i64.load32_u",2,n,i,o)}i64_load(n,i,o){return this.genLoad("i64.load",3,n,i,o)}i64_store(n,i,o,s){return this.genStore("i64.store",3,n,i,o,s)}i64_store32(n,i,o,s){return this.genStore("i64.store32",2,n,i,o,s)}i64_store16(n,i,o,s){return this.genStore("i64.store16",1,n,i,o,s)}i64_store8(n,i,o,s){return this.genStore("i64.store8",0,n,i,o,s)}i32_load8_s(n,i,o){return this.genLoad("i32.load8_s",0,n,i,o)}i32_load8_u(n,i,o){return this.genLoad("i32.load8_u",0,n,i,o)}i32_load16_s(n,i,o){return this.genLoad("i32.load16_s",1,n,i,o)}i32_load16_u(n,i,o){return this.genLoad("i32.load16_u",1,n,i,o)}i32_load(n,i,o){return this.genLoad("i32.load",2,n,i,o)}i32_store(n,i,o,s){return this.genStore("i32.store",2,n,i,o,s)}i32_store16(n,i,o,s){return this.genStore("i32.store16",1,n,i,o,s)}i32_store8(n,i,o,s){return this.genStore("i32.store8",0,n,i,o,s)}call(n,...i){if(this.module.functionIdxByName[n]===void 0)throw new Error(`Function not defined: Function: ${n}`);return[i,`call $${n}`]}call_indirect(n,...i){return[i,n,"call_indirect (type 0)"]}if(n,i,o){return o?[n,"if",a.ident(i),"else",a.ident(o),"end"]:[n,"if",a.ident(i),"end"]}block(n){return["block",a.ident(n),"end"]}loop(...n){return["loop",a.ident(n),"end"]}br_if(n,i){return[i,`br_if ${n}`]}br(n){return`br ${n}`}ret(n){return[n,"return"]}drop(n){return[n,"drop"]}i64_const(n){return`i64.const ${n}`}i32_const(n){return`i32.const ${n}`}i64_eqz(n){return[n,"i64.eqz"]}i64_eq(n,i){return[n,i,"i64.eq"]}i64_ne(n,i){return[n,i,"i64.ne"]}i64_lt_s(n,i){return[n,i,"i64.lt_s"]}i64_lt_u(n,i){return[n,i,"i64.lt_u"]}i64_gt_s(n,i){return[n,i,"i64.gt_s"]}i64_gt_u(n,i){return[n,i,"i64.gt_u"]}i64_le_s(n,i){return[n,i,"i64.le_s"]}i64_le_u(n,i){return[n,i,"i64.le_u"]}i64_ge_s(n,i){return[n,i,"i64.ge_s"]}i64_ge_u(n,i){return[n,i,"i64.ge_u"]}i64_add(n,i){return[n,i,"i64.add"]}i64_sub(n,i){return[n,i,"i64.sub"]}i64_mul(n,i){return[n,i,"i64.mul"]}i64_div_s(n,i){return[n,i,"i64.div_s"]}i64_div_u(n,i){return[n,i,"i64.div_u"]}i64_rem_s(n,i){return[n,i,"i64.rem_s"]}i64_rem_u(n,i){return[n,i,"i64.rem_u"]}i64_and(n,i){return[n,i,"i64.and"]}i64_or(n,i){return[n,i,"i64.or"]}i64_xor(n,i){return[n,i,"i64.xor"]}i64_shl(n,i){return[n,i,"i64.shl"]}i64_shr_s(n,i){return[n,i,"i64.shr_s"]}i64_shr_u(n,i){return[n,i,"i64.shr_u"]}i64_extend_i32_s(n){return[n,"i64.extend_s/i32"]}i64_extend_i32_u(n){return[n,"i64.extend_u/i32"]}i32_eqz(n){return[n,"i32.eqz"]}i32_eq(n,i){return[n,i,"i32.eq"]}i32_ne(n,i){return[n,i,"i32.ne"]}i32_lt_s(n,i){return[n,i,"i32.lt_s"]}i32_lt_u(n,i){return[n,i,"i32.lt_u"]}i32_gt_s(n,i){return[n,i,"i32.gt_s"]}i32_gt_u(n,i){return[n,i,"i32.gt_u"]}i32_le_s(n,i){return[n,i,"i32.le_s"]}i32_le_u(n,i){return[n,i,"i32.le_u"]}i32_ge_s(n,i){return[n,i,"i32.ge_s"]}i32_ge_u(n,i){return[n,i,"i32.ge_u"]}i32_add(n,i){return[n,i,"i32.add"]}i32_sub(n,i){return[n,i,"i32.sub"]}i32_mul(n,i){return[n,i,"i32.mul"]}i32_div_s(n,i){return[n,i,"i32.div_s"]}i32_div_u(n,i){return[n,i,"i32.div_u"]}i32_rem_s(n,i){return[n,i,"i32.rem_s"]}i32_rem_u(n,i){return[n,i,"i32.rem_u"]}i32_and(n,i){return[n,i,"i32.and"]}i32_or(n,i){return[n,i,"i32.or"]}i32_xor(n,i){return[n,i,"i32.xor"]}i32_shl(n,i){return[n,i,"i32.shl"]}i32_shr_s(n,i){return[n,i,"i32.shr_s"]}i32_shr_u(n,i){return[n,i,"i32.shr_u"]}i32_rotl(n,i){return[n,i,"i32.rotl"]}i32_rotr(n,i){return[n,i,"i32.rotr"]}i32_wrap_i64(n){return[n,"i32.wrap/i64"]}ureachable(){return"unreachable"}current_memory(){return"current_memory"}comment(n){return";; "+n}}return xc=t,xc}var Mc,g2;function bI(){if(g2)return Mc;g2=1;const a=mI(),t=Bo();class e{constructor(i,o,s,r,u){if(s=="import")this.fnType="import",this.moduleName=r,this.fieldName=u;else if(s=="internal")this.fnType="internal",this.comment=r;else throw new Error("Invalid function fnType: "+s);this.module=i,this.fnName=o,this.params=[],this.locals=[],this.localIdxByName={},this.code=[],this.returnType=null,this.nextLocal=0}addParam(i,o){if(this.localIdxByName[i])throw new Error(`param already exists. Function: ${this.fnName}, Param: ${i} `);const s=this.nextLocal++;this.localIdxByName[i]=s,this.params.push({type:o,name:i})}addLocal(i,o,s){if(typeof s<"u"&&s!=1)throw new Error("Locals greater than 1 not implemented");if(this.localIdxByName[i])throw new Error(`local already exists. Function: ${this.fnName}, Param: ${i} `);const r=this.nextLocal++;this.localIdxByName[i]=r,this.locals.push({type:o,name:i})}setReturnType(i){if(this.returnType)throw new Error(`returnType already defined. Function: ${this.fnName}`);this.returnType=i}getSignature(){let i="";for(let s=0;s<this.params.length;s++)s==0&&(i+=" (param"),i+=" "+this.params[s].type;i!=""&&(i+=")");let o="";return this.returnType&&(o+=` (result ${this.returnType})`),`(type $${this.getSignatureName()} (func ${i}${o}))`}getSignatureName(){let i="_sig_";for(let o=0;o<this.params.length;o++)i+=this.params[o].type;return this.returnType&&(i+="r"+this.returnType),i}getBody(){const i=[];for(let s=0;s<this.params.length;s++)i.push(` (param $${this.params[s].name} ${this.params[s].type})`);this.returnType&&i.push(`(result ${this.returnType})`);for(let s=0;s<this.locals.length;s++)i.push(` (local $${this.locals[s].name} ${this.locals[s].type})`);i.push(this.code);let o;if(this.comment){o=this.comment.split(`
`);for(let s=0;s<o.length;s++)o[s]=";; "+o[s]}else o=[];return[...o,`(func $${this.fnName} (type $${this.getSignatureName()})`,t.ident(i),")"]}addCode(...i){this.code.push(i)}getCodeBuilder(){return new a(this)}}return Mc=e,Mc}var kc,p2;function yI(){if(p2)return kc;p2=1;const a=bI(),t=Bo();class e{constructor(){this.functions=[],this.functionIdxByName={},this.nImportFunctions=0,this.nInternalFunctions=0,this.memory={pagesSize:1,moduleName:"env",fieldName:"memory"},this.free=8,this.datas=[],this.modules={},this.exports=[],this.functionsTable=[]}build(){const i=[];return this._setSignatures(),i.push(this._buildType()),i.push(this._buildImport()),this.functionsTable.length>0&&i.push(this._buildFunctionsTable()),this.exports.length>0&&i.push(this._buildExports()),this.functionsTable.length>0&&i.push(this._buildElements()),this.nInternalFunctions>0&&i.push(this._buildFunctions()),i.push(this._buildData()),["(module",t.ident(i),")"]}addFunction(i,o){if(typeof this.functionIdxByName[i]<"u")throw new Error(`Function already defined: ${i}`);const s=this.functions.length;return this.functionIdxByName[i]=s,this.functions.push(new a(this,i,"internal",o)),this.nInternalFunctions++,this.functions[s]}addIimportFunction(i,o,s){if(typeof this.functionIdxByName[i]<"u")throw new Error(`Function already defined: ${i}`);if(this.functions.length>0&&this.functions[this.functions.length-1].type=="internal")throw new Error(`Import functions must be declared before internal: ${i}`);let r=s||i;const u=this.functions.length;return this.functionIdxByName[i]=u,this.functions.push(new a(this,i,"import",o,r)),this.nImportFunctions++,this.functions[u]}setMemory(i,o,s){this.memory={pagesSize:i,moduleName:o||"env",fieldName:s||"memory"}}exportFunction(i,o){const s=o||i;if(typeof this.functionIdxByName[i]>"u")throw new Error(`Function not defined: ${i}`);const r=this.functionIdxByName[i];s!=i&&(this.functionIdxByName[s]=r),this.exports.push({exportName:s,idx:r})}addFunctionToTable(i){const o=this.functionIdxByName[i];this.functionsTable.push(o)}addData(i,o){this.datas.push({offset:i,bytes:o})}alloc(i,o){let s,r;(Array.isArray(i)||ArrayBuffer.isView(i))&&typeof o>"u"?(s=i.length,r=i):(s=i,r=o),s=(s-1>>3)+1<<3;const u=this.free;return this.free+=s,r&&this.addData(u,r),u}allocString(i){const s=new TextEncoder().encode(i);return this.alloc([...s,0])}_setSignatures(){this.signatures=[];const i={};if(this.functionsTable.length>0){const o=this.functions[this.functionsTable[0]].getSignature(),s=this.functions[this.functionsTable[0]].getSignatureName();i[s]=0,this.signatures.push(o)}for(let o=0;o<this.functions.length;o++){const s=this.functions[o].getSignature(),r=this.functions[o].getSignatureName();typeof i[r]>"u"&&(i[r]=this.signatures.length,this.signatures.push(s)),this.functions[o].signatureIdx=i[r],this.functions[o].signatureName=r}}_buildType(){return this.signatures}_buildImport(){const i=[];i.push(`(import "${this.memory.moduleName}" "${this.memory.fieldName}" (memory ${this.memory.pagesSize}))`);for(let o=0;o<this.nImportFunctions;o++)i.push(`(import "${this.functions[o].moduleName}" "${this.functions[o].fieldName}" (func $${this.functions[o].fnName} (type $${this.functions[o].getSignatureName()})))`);return i}_buildFunctionsTable(){return`(table ${this.functionsTable.length} anyfunc)`}_buildElements(){let i="";for(let o=0;o<this.functionsTable.length;o++)i+=" $"+this.functions[this.functionsTable[o]].fnName;return`(elem (i32.const 0) ${i})`}_buildExports(){const i=[];for(let o=0;o<this.exports.length;o++)i.push(`(export "${this.exports[o].exportName}" (func $${this.functions[this.exports[o].idx].fnName}))`);return i}_buildFunctions(){const i=[];for(let o=this.nImportFunctions;o<this.nImportFunctions+this.nInternalFunctions;o++)i.push(this.functions[o].getBody());return i}_buildData(){const i=[],o=Buffer.alloc(4);o.writeUInt32LE(this.free,0),i.push(`(data (i32.const 0) ${s(o)})`);for(let r=0;r<this.datas.length;r++)i.push(`(data (i32.const ${this.datas[r].offset}) ${s(this.datas[r].bytes)})`);return i;function s(r){let u='"';for(let l=0;l<r.length;l++)if(r[l]<32||r[l]>126||r[l]==34||r[l]==92){let c=r[l].toString(16);for(;c.length<2;)c="0"+c;u+="\\"+c}else u+=String.fromCharCode(r[l]);return u+='"',u}}}return kc=e,kc}var Uc,L2;function AI(){if(L2)return Uc;L2=1;const a=Yn(),t=Z0();async function e(i,o,s){const r=new n;r.defBytes=o,r.bitsPerBytes=s||32,r.memory=new WebAssembly.Memory({initial:2e4}),r.i32=new Uint32Array(r.memory.buffer),r.i8=new Uint8Array(r.memory.buffer);const u=new t;u.addIimportFunction("debug_log32","debug","log32").addParam("x","i32");const c=u.addIimportFunction("debug_log64","debug","log64");c.addParam("x","i32"),c.addParam("y","i32"),L(u),S(u),i(u,r);const f=u.build(),g=await WebAssembly.compile(f);return r.log=console.log,r.instance=await WebAssembly.instantiate(g,{env:{memory:r.memory},debug:{log32:function(k){k<0&&(k=4294967296+k);let E=k.toString(16);for(;E.length<8;)E="0"+E;r.log(E+": "+k.toString())},log64:function(k,E){k<0&&(k=4294967296+k),E<0&&(E=4294967296+E);const G=a(k)+a(E).shiftLeft(32);let C=G.toString(16);for(;C.length<16;)C="0"+C;r.log(C+": "+G.toString())}}}),Object.assign(r,r.instance.exports),Object.assign(r,u.modules),r;function L(k){const E=k.addFunction("log32");E.addParam("x","i32");const G=E.getCodeBuilder();E.addCode(G.call("debug_log32",G.getLocal("x")))}function S(k){const E=k.addFunction("log64");E.addParam("x","i64");const G=E.getCodeBuilder();E.addCode(G.call("debug_log64",G.i32_wrap_i64(G.getLocal("x")),G.i32_wrap_i64(G.i64_shr_u(G.getLocal("x"),G.i64_const(32)))))}}class n{constructor(){}alloc(o){typeof o>"u"&&(o=this.defBytes),o=(o-1>>3)+1<<3;const s=this.i32[0];return this.i32[0]+=o,s}set(o,s,r){Array.isArray(s)||(s=[s]),typeof r>"u"&&(r=this.defBytes);const u=Math.floor((r-1)/4)+1;let l=o;const c=a.one.shiftLeft(this.bitsPerBytes);for(let f=0;f<s.length;f++){let g=a(s[f]);for(let L=0;L<u;L++){const S=g.divmod(c);this.i32[l>>2]=S.remainder.toJSNumber(),g=S.quotient,l+=4}if(!g.isZero())throw new Error("Expected v to be 0")}return o}get(o,s,r){typeof r>"u"&&(typeof s>"u"?(s=1,r=this.defBytes):(s=r,r=this.defBytes));const u=Math.floor((r-1)/4)+1,l=a.one.shiftLeft(this.bitsPerBytes),c=[];for(let f=0;f<s;f++){let g=a.zero;for(let L=u-1;L>=0;L--){g=g.times(l);let S=this.i32[(o>>2)+L];this.bitsPerBytes<32&&S&2147483648&&(S=S-4294967296),g=g.add(S)}c.push(g),o+=u*4}return c.length==1?c[0]:c}}return Uc=e,Uc}var w2;function II(){return w2||(w2=1,ea.ModuleBuilder=Z0(),ea.ModuleBuilderWat=yI(),ea.buildProtoboard=AI()),ea}var EI=II();globalThis.curve_bn128=null;async function CI(a,t){const e=new EI.ModuleBuilder;e.setMemory(25),q8.buildBn128(e);const n={};if(n.code=e.build(),n.pq=e.modules.f1m.pq,n.pr=e.modules.frm.pq,n.pG1gen=e.modules.bn128.pG1gen,n.pG1zero=e.modules.bn128.pG1zero,n.pG1b=e.modules.bn128.pG1b,n.pG2gen=e.modules.bn128.pG2gen,n.pG2zero=e.modules.bn128.pG2zero,n.pG2b=e.modules.bn128.pG2b,n.pOneT=e.modules.bn128.pOneT,n.prePSize=e.modules.bn128.prePSize,n.preQSize=e.modules.bn128.preQSize,n.n8q=32,n.n8r=32,n.q=e.modules.bn128.q,n.r=e.modules.bn128.r,globalThis.curve_bn128)return globalThis.curve_bn128;const i={name:"bn128",wasm:n,q:bn("21888242871839275222246405745257275088696311157297823662689037894645226208583"),r:bn("21888242871839275222246405745257275088548364400416034343698204186575808495617"),n8q:32,n8r:32,cofactorG2:bn("30644e72e131a029b85045b68181585e06ceecda572a2489345f2299c0f9fa8d",16),singleThread:!1},o=await pI(i);return o.terminate=async function(){i.singleThread||(globalThis.curve_bn128=null,await this.tm.terminate())},globalThis.curve_bn128=o,o}globalThis.curve_bls12381=null;bn("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16);bn("21888242871839275222246405745257275088548364400416034343698204186575808495617");bn("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16);bn("21888242871839275222246405745257275088696311157297823662689037894645226208583");const BI=aI,{groth16:m2}=$A,{unstringifyBigInts:b2}=BI;globalThis.Buffer=jt.Buffer;window.global=window;let Gc=null;const vI=256,yn=new Ca("https://api.devnet.solana.com","confirmed"),Pn=new se("EKadvTET2vdCkurkYFu69v2iXdsAwHs3rQPj8XL5AUin"),X0=jt.Buffer.from("pool_merkle"),Pc=document.getElementById("logs");function Oe(a){Pc.value+=a+`
`,Pc.scrollTop=Pc.scrollHeight}function FI(a){const t=a.toString(16).padStart(64,"0"),e=jt.Buffer.from(t,"hex");return console.log("Hash bigint",a.toString()),console.log("Hash buffer:",Array.from(e)),e}function SI(a){let t=1;for(;t<a;)t*=2;return t}function y2(a,t){let e=a.G1.fromObject(t),n=new Uint8Array(64);return a.G1.toRprUncompressed(n,0,e),jt.Buffer.from(n)}function _I(a,t){let e=a.G2.fromObject(t),n=new Uint8Array(128);return a.G2.toRprUncompressed(n,0,e),jt.Buffer.from(n)}function xI(a){const t=SI(a.length);console.log("Padding to ",t," leaves...");let e=a.length;for(;e<t;)a.push(BigInt(0)),e++;return console.log("Padded leaves length:",a.length),a}function A2(a){const t=[];t[0]=a.slice();let e=0;for(;t[e].length>1;){const o=t[e],s=[];for(let r=0;r<o.length;r+=2){const u=o[r],l=o[r+1],c=Is.poseidon2([u,l]);s.push(c)}t.push(s),e++}let n=t.length;const i=t[n-1][0];return console.log("Root hash from generated tree: ",i),console.log("Root hash as byte array",kI(i)),t}function MI(a,t){const e=[];let n=t;console.log("Merkle proof process started");for(let i=0;i<a.length-1;i++){const s=n%2===1?n-1:n+1;s<a[i].length?e.push(a[i][s]):console.warn(`Sibling index ${s} out of bounds at level ${i}`),n=Math.floor(n/2)}return e}async function $0(a,t){const e=jt.Buffer.from(a,"utf8"),n=jt.Buffer.from(t,"utf8"),i=BigInt("0x"+e.toString("hex")),o=BigInt("0x"+n.toString("hex")),s=Is.poseidon2([i,o]);return FI(s)}function kI(a,t=32){let e=a.toString(16);e.length%2!==0&&(e="0"+e);let n=jt.Buffer.from(e,"hex");if(n.length<t){const i=jt.Buffer.alloc(t);n.copy(i,t-n.length),n=i}return Array.from(n)}const tg="batchedLeaves",eg="generatedProof";function ng(a,t){const e=JSON.stringify(t,(n,i)=>typeof i=="bigint"?i.toString():i);sessionStorage.setItem(a,e)}function ig(a){const t=sessionStorage.getItem(a);return t?JSON.parse(t,(e,n)=>/^[0-9]+n?$/.test(n)?BigInt(n):n):null}async function Al(a,t){const e=await yn.getAccountInfo(a);if(!e)return console.log("Pool doesn't exist!"),null;const n=jt.Buffer.from(e.data),i=jt.Buffer.from(n.slice(40,552)),o=n.slice(592,600),s=jt.Buffer.alloc(8);for(let c=0;c<8;c++)s[c]=o[7-c];if(jt.Buffer.isBuffer(t)||(console.error("Leaf is not a Buffer. Converting..."),t=jt.Buffer.from(t)),t.length!==32)return console.error("Error: Leaf must be exactly 32 bytes!"),null;const r=jt.Buffer.alloc(32,0);let u=-1;for(let c=0;c<16;c++){const f=c*32;if(i.slice(f,f+32).equals(r)){u=f;break}}u!==-1?(console.log(`✅ Found empty slot at index ${u/32}, updating...`),t.copy(i,u)):console.log("❌ No empty slot found, all leaves are full.");const l=jt.Buffer.concat([s,i]);return[u/32,l]}async function UI(){try{const t=(await yn.getProgramAccounts(Pn)).map(({pubkey:n,account:i})=>{const o=i.data;if(o.length<592)return console.warn(`Account ${n.toBase58()} data is too short, skipping`),null;const s=o.slice(40,552);let r=-1;for(let L=0;L<16;L++)if(s.slice(L*32,(L+1)*32).every(k=>k===0)){r=L;break}r===-1&&(r=0);const u=o.slice(552,560).reverse(),l=Number(BigInt("0x"+jt.Buffer.from(u).toString("hex"))),c=o.slice(592,600).reverse(),f=Number(BigInt("0x"+jt.Buffer.from(c).toString("hex"))),g=f*16+r;return{address:n.toBase58(),identifier:l,batchNumber:f,firstEmptyIndex:r,totalLeaves:g}}).filter(n=>n!==null),e=document.getElementById("poolList");if(t.length===0){e.innerHTML="<p>No pools found.</p>";return}e.innerHTML=t.map(n=>`
        <div class="pool-item">
          <strong>Pool Address:</strong> ${n.address}<br/>
          <strong>Pool identifier:</strong> ${n.identifier}<br/>
          <strong>Batch Number:</strong> ${n.batchNumber}<br/>
          <strong>First Free Leaf Index:</strong> ${n.firstEmptyIndex}<br/>
          <strong>Total Leaves:</strong> ${n.totalLeaves}
        </div>
      `).join("")}catch(a){console.error("Error fetching pools:",a),document.getElementById("poolList").innerHTML="<p>Error fetching pool data.</p>"}}async function GI(){try{if(!window.solana||!window.solana.isPhantom){alert("Phantom wallet not found! Please install it.");return}Gc=(await window.solana.connect()).publicKey,document.getElementById("walletInfo").textContent="Connected: "+Gc.toBase58(),Oe("Phantom connected: "+Gc.toBase58())}catch(a){console.error(a),Oe("Error connecting Phantom: "+a.message)}}async function PI(a){try{if(!window.solana||!window.solana.isConnected)throw new Error("Please connect your Solana wallet first!");const t=window.solana,e=t.publicKey,n=jt.Buffer.from("pool_merkle"),i=jt.Buffer.alloc(8);i.writeBigUInt64LE(BigInt(a),0);const[o]=se.findProgramAddressSync([n,i],Pn);if(await yn.getAccountInfo(o)){Oe("Pool already intialized. MAybe try another identifier ?");return}console.log("Initializing mixer pool...");const r=jt.Buffer.from([95,180,10,172,84,174,232,40]),u=jt.Buffer.alloc(8);u.writeBigUInt64LE(BigInt(a)),console.log("discriminator: ",r," identifier: ",u);const l=jt.Buffer.concat([r,u]);console.log("Instruction data",l);const c=new Je({keys:[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!0,isWritable:!1},{pubkey:yi.programId,isSigner:!1,isWritable:!1}],programId:Pn,data:l}),{blockhash:f}=await yn.getLatestBlockhash(),g=new En().add(c);g.recentBlockhash=f,g.feePayer=e;let L=await t.signTransaction(g);const S=await yn.sendRawTransaction(L.serialize());return console.log("Pool initialized! Transaction:",S),Oe(`Pool intialized: ${S}`),Oe(`Pool address: ${o.toBase58()}`),S}catch(t){Oe("Error initializing pool"),console.error("Error initializing pool:",t)}}async function OI(a,t,e){try{if(!window.solana||!window.solana.isConnected)throw new Error("Please connect your Solana wallet first!");const n=window.solana,i=n.publicKey;console.log("Generating commitment for deposit...");const o=jt.Buffer.from("pool_merkle");let s;if(a.length>32)s=new se(a);else{const C=jt.Buffer.alloc(8);C.writeBigUInt64LE(BigInt(a),0),[s]=se.findProgramAddressSync([o,C],Pn)}const r=await $0(t,e);console.log("Constructing transaction...");const u=jt.Buffer.from([242,35,198,137,82,225,242,182]),[l,c]=await Al(s,r),f=jt.Buffer.concat([u,r,c]),g=new Je({keys:[{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!0,isWritable:!1},{pubkey:yi.programId,isSigner:!1,isWritable:!1}],programId:Pn,data:f}),L=Ns.setComputeUnitLimit({units:5e5}),{blockhash:S}=await yn.getLatestBlockhash(),k=new En().add(L).add(g);k.recentBlockhash=S,k.feePayer=i;let E=await n.signTransaction(k);const G=await yn.sendRawTransaction(E.serialize());return console.log("Deposit successful! ✅ Transaction:",G),Oe(`Deposit successful: ${G}`),G}catch(n){Oe("Error during deposit."),console.error("Error during deposit:",n)}}async function DI(a,t,e,n){try{if(!window.solana||!window.solana.isConnected)throw new Error("Please connect your Solana wallet first!");const i=window.solana,o=i.publicKey;console.log(`Starting ${n} deposit transactions...`);const s=jt.Buffer.from("pool_merkle");let r;if(a.length>32)r=new se(a);else{const l=jt.Buffer.alloc(8);l.writeBigUInt64LE(BigInt(a),0),[r]=se.findProgramAddressSync([s,l],Pn)}let u=-1;for(let l=1;l<=n;l++){console.log(`Deposit iteration ${l}...`);const c=`${t+l.toString()}`,f=`${e+l.toString()}`,g=await $0(c,f);console.log("Constructing deposit transaction..."),Oe(`Deposit ${l} : secret: ${c} nullifier: ${f}`);const L=jt.Buffer.from([242,35,198,137,82,225,242,182]);let[S,k]=await Al(r,g);for(;u==S;)await new Promise(b=>setTimeout(b,1e3)),console.log("Pool hasn't been updated yet, waiting 1 second"),[S,k]=await Al(r,g);u=S;const E=jt.Buffer.concat([L,g,k]),G=new Je({keys:[{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!0,isWritable:!1},{pubkey:yi.programId,isSigner:!1,isWritable:!1}],programId:Pn,data:E}),C=Ns.setComputeUnitLimit({units:5e5}),{blockhash:N}=await yn.getLatestBlockhash(),J=new En().add(C).add(G);J.recentBlockhash=N,J.feePayer=o;let j=await i.signTransaction(J);const R=await yn.sendRawTransaction(j.serialize());console.log(`Deposit iteration ${l} successful! ✅ TX: ${R}`),Oe(`Deposit ${l} successful: ${R}`)}}catch(i){Oe("Error during multiple deposits."),console.error("Error during depositMultiple:",i)}}const qI=new Ca("https://rpc.ankr.com/solana_devnet","confirmed");new Ca("https://solana-devnet.drpc.org/","confirmed");new Ca("https://endpoints.omniatech.io/v1/sol/devnet/public","confirmed");async function TI(a){const t=await yn.getSignaturesForAddress(a,{limit:1e3});let e=[],n=document.getElementById("customRpcInput").value.trim();n?e=[new Ca(n,"confirmed")]:e=[yn,qI];const i=[];Oe("Starting the parsing, this can take some time, especially without a custom RPC devnet URL...");const o=Math.min(t.length,1e4);for(let s=0;s<o;s++){const r=t[s],u=e[s%e.length];await new Promise(l=>setTimeout(l,200));try{const l=await u.getTransaction(r.signature,{commitment:"confirmed",maxSupportedTransactionVersion:0});if(!l||!l.transaction){console.log("Failed to fetch transaction:",r.signature);continue}let c=l.transaction.message.instructions,f=l.transaction.message.instructions[1].data,g=xL.decode(f);const L=g.length;if(L==560&&L==560){const S=g.slice(L-32,L);if(Mr(S)!=0){const E=Mr(g.slice(40,48));console.log("Full batch found! n: ",E),Oe(`New batch found: ${E}`);const G=[],C=g.slice(48,560);for(let N=0;N<16;N++){const J=C.slice(N*32,(N+1)*32),j=Mr(J);G.push(j)}if(i.push({batchId:E,leaves:G,txSignature:r.signature}),E==0){Oe("Found 0th batch, stopping the parsing"),console.log("Found 0th batch, stopping the parse"),s=999999;break}}}}catch(l){console.error(`Error fetching transaction ${r.signature}:`,l);continue}}return i.sort((s,r)=>s.batchId<r.batchId?-1:s.batchId>r.batchId?1:0),ng(tg,i),i}async function RI(a,t,e){try{const n=jt.Buffer.from(t,"utf8"),i=jt.Buffer.from(e,"utf8"),s=jt.Buffer.concat([n,i]).toString("hex"),r=BigInt("0x"+n.toString("hex")),u=BigInt("0x"+i.toString("hex")),c=BigInt("0x"+s),f=Is.poseidon1([u]);console.log("Preimage secret+nullifier bigint",c.toString());const g=Is.poseidon2([r,u]);let L,S;if(a.length>32)L=new se(a);else{const F=(()=>{const M=jt.Buffer.alloc(8);return M.writeBigUInt64LE(BigInt(a),0),M})();[L,S]=se.findProgramAddressSync([X0,F],Pn)}const k=await ig(tg);let E=null;k?E=k:E=await TI(L);const G=E.map(F=>F.leaves);let C=xI(G.flat());const N=await yn.getAccountInfo(L);if(!N)throw new Error("Failed to fetch account data for this pool PDA.");const j=N.data.slice(560,592),R=BigInt("0x"+j.toString("hex"));console.log("On chain whole tree root as bigint: ",R),console.log("Should match the tree generated offchain: ");const b=A2(C),w=b[b.length-1][0];let Z=C.slice();for(let F=Z.length;F<vI;F++)Z.push(BigInt(0));console.log("Extended tree size to: ",Z.length);const P=A2(Z),V=P[P.length-1][0];console.log("generated extended tree root");const nt=Z.findIndex(F=>F===g);if(nt===-1)throw new Error("Leaf not found in the Merkle tree.");console.log("Leaf index is : ",nt);const I=MI(P,nt);console.log("Proof path length: ",I.length);const y={key:nt,secret:r,nullifier:u,nullifierHash:f,root:V,siblings:I.reverse()},_="./mixer_js/mixer.wasm",T="circuit_final.zkey",B="verification_key.json",{proof:Y,publicSignals:tt}=await m2.fullProve(y,_,T),$=await HI("verification_key.json");if(console.log("Verification key: ",$),!await m2.verify($,tt,Y))throw new Error("Proof verification failed! The vkey does not match the proof.");return ng(eg,{proof:Y,publicSignals:tt}),console.log("Proof saved to session storage"),{proof:Y,publicSignals:tt,verificationKey:$}}catch(n){throw Oe("Error generating proof"),console.error("Error generating proof:",n),n}}async function HI(a){try{const t=await fetch(a);if(!t.ok)throw new Error("Failed to fetch verification key.");return await t.json()}catch(t){throw console.error("Error loading verification key:",t),t}}function I2(a){const t=a.toString(16).padStart(64,"0");return jt.Buffer.from(t,"hex")}async function QI(){try{if(!window.solana||!window.solana.isConnected)throw new Error("Please connect your Solana wallet first!");console.log("Building transaction to verify Groth16 proof...");let a=await ig(eg);if(!a){console.error("No proof stored. Generate proof before withdrawing."),alert("No proof available! Please generate the proof first.");return}let{proof:t,publicSignals:e}=a;console.log("Using proof:",t),console.log("Using publicSignals:",e);const n=await CI(),i=b2(t);e=b2(e);let o=y2(n,i.pi_a),s=_I(n,i.pi_b),r=y2(n,i.pi_c);const u=I2(BigInt(e[0])),l=I2(BigInt(e[1])),c=jt.Buffer.from([183,18,70,156,148,109,161,34]),f=jt.Buffer.concat([c,o,s,r,u,l]),g=document.getElementById("batchIdentifier").value.trim();if(!g){alert("Please enter a pool identifier.");return}let L;if(g.length>32)L=new se(g);else{const j=jt.Buffer.alloc(8);j.writeBigUInt64LE(BigInt(g)),[L]=se.findProgramAddressSync([X0,j],Pn)}const[S]=se.findProgramAddressSync([u],Pn),k=new Je({keys:[{pubkey:L,isSigner:!1,isWritable:!0},{pubkey:S,isSigner:!1,isWritable:!0},{pubkey:window.solana.publicKey,isSigner:!0,isWritable:!1},{pubkey:yi.programId,isSigner:!1,isWritable:!1}],programId:Pn,data:f}),E=Ns.setComputeUnitLimit({units:1e6}),{blockhash:G}=await yn.getLatestBlockhash(),C=new En().add(E).add(k);C.recentBlockhash=G,C.feePayer=window.solana.publicKey;let N=await window.solana.signTransaction(C);const J=await yn.sendRawTransaction(N.serialize());console.log("Withdrawal proof sent. Transaction:",J),Oe(`Withdrawal succesful: TX: ${J}`),alert(`Withdrawal successful! TX: ${J}`)}catch(a){console.error("Error during withdrawal:",a),alert("Error during withdrawal. Check console for details.")}}document.getElementById("connectWalletBtn").addEventListener("click",GI);document.getElementById("initPoolBtn").addEventListener("click",async()=>{const a=document.getElementById("initPoolIdentifier").value.trim();if(!a)return alert("Please enter a pool identifier.");await PI(a)});document.getElementById("depositBtn").addEventListener("click",async()=>{const a=document.getElementById("depositPoolIdentifier").value.trim(),t=document.getElementById("depositSecret").value.trim(),e=document.getElementById("depositNullifier").value.trim();if(!a||!t||!e)return alert("Please fill out all deposit fields.");await OI(a,t,e)});document.getElementById("multiDepositBtn").addEventListener("click",async()=>{const a=document.getElementById("multiPoolIdentifier").value.trim(),t=document.getElementById("depositMultipleSecret").value.trim(),e=document.getElementById("depositMultipleNullifier").value.trim(),n=parseInt(document.getElementById("multiDepositCount").value);if(!a||!n||n<1)return alert("Please enter a valid pool identifier and number of deposits.");await DI(a,t,e,n)});document.getElementById("generateProofBtn").addEventListener("click",async()=>{const a=document.getElementById("batchIdentifier").value.trim(),t=document.getElementById("batchSecret").value.trim(),e=document.getElementById("batchNullifier").value.trim();if(!a||!t||!e)return alert("Please fill out all proof fields.");try{const{proof:n,publicSignals:i,verificationKey:o}=await RI(a,t,e);Oe(`Generated proof: ${JSON.stringify(n)}`),Oe(`Public signals: ${JSON.stringify(i)}`),Oe("Proof generation successful!")}catch(n){Oe("Error generating proof: "+n.message),console.error("Error generating proof:",n)}});document.getElementById("withdrawBtn").addEventListener("click",async()=>{await QI()});document.getElementById("autofillDepositBtn").addEventListener("click",()=>{const a=()=>{const n=new Uint8Array(8);return window.crypto.getRandomValues(n),Array.from(n).map(i=>i.toString(16).padStart(2,"0")).join("")},t=a(),e=a();document.getElementById("depositSecret").value=t,document.getElementById("depositNullifier").value=e,Oe("Autofill: Secret and Nullifier have been generated.")});document.getElementById("autofillMultipleDepositBtn").addEventListener("click",()=>{const a=()=>{const n=new Uint8Array(8);return window.crypto.getRandomValues(n),Array.from(n).map(i=>i.toString(16).padStart(2,"0")).join("")},t=a(),e=a();document.getElementById("depositMultipleSecret").value=t,document.getElementById("depositMultipleNullifier").value=e,Oe("Autofill: Secret and Nullifier have been generated.")});document.getElementById("copyDepositInfoBtn").addEventListener("click",()=>{const a=document.getElementById("depositPoolIdentifier").value.trim(),t=document.getElementById("depositSecret").value.trim(),e=document.getElementById("depositNullifier").value.trim();if(!a||!t||!e){alert("Please ensure Pool Identifier, Secret, and Nullifier are filled.");return}const n=`Pool identifier: ${a}
Secret: ${t}
Nullifier: ${e}`;navigator.clipboard.writeText(n).then(()=>{Oe("Deposit info copied to clipboard.")}).catch(i=>{console.error("Error copying deposit info:",i),alert("Failed to copy deposit info.")})});document.getElementById("fetchPoolsBtn").addEventListener("click",UI);function KI(){document.getElementById("logs").value=""}document.getElementById("clearLogsBtn").addEventListener("click",KI);document.getElementById("clearStorageBtn").addEventListener("click",()=>{sessionStorage.clear(),alert("Session storage cleared! Leaves will be reloaded on the next proof generation.")});
